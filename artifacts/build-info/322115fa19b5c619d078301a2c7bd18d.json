{"id":"322115fa19b5c619d078301a2c7bd18d","_format":"hh-sol-build-info-1","solcVersion":"0.8.12","solcLongVersion":"0.8.12+commit.f00d7308","input":{"language":"Solidity","sources":{"@erc725/smart-contracts/contracts/constants.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\n// ERC165 INTERFACE IDs\nbytes4 constant _INTERFACEID_ERC725X = 0x7545acac;\nbytes4 constant _INTERFACEID_ERC725Y = 0x629aa694;\n\n// ERC725X OPERATION TYPES\nuint256 constant OPERATION_0_CALL = 0;\nuint256 constant OPERATION_1_CREATE = 1;\nuint256 constant OPERATION_2_CREATE2 = 2;\nuint256 constant OPERATION_3_STATICCALL = 3;\nuint256 constant OPERATION_4_DELEGATECALL = 4;\n"},"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n// errors\nimport {\n    OwnableCannotSetZeroAddressAsOwner,\n    OwnableCallerNotTheOwner\n} from \"../errors.sol\";\n\n/**\n * @title OwnableUnset\n * @dev modified version of OpenZeppelin implementation, where:\n * - _setOwner(address) function is internal, so this function can be used in constructor\n * of contracts implementation (instead of using transferOwnership(address)\n * - the contract does not inherit from Context contract\n */\nabstract contract OwnableUnset {\n    address private _owner;\n\n    event OwnershipTransferred(\n        address indexed previousOwner,\n        address indexed newOwner\n    );\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _setOwner(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableCannotSetZeroAddressAsOwner();\n        }\n        _setOwner(newOwner);\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != msg.sender) {\n            revert OwnableCallerNotTheOwner(msg.sender);\n        }\n    }\n\n    /**\n     * @dev Changes the owner if `newOwner` and oldOwner are different\n     * This pattern is useful in inheritance.\n     */\n    function _setOwner(address newOwner) internal virtual {\n        if (newOwner != owner()) {\n            emit OwnershipTransferred(_owner, newOwner);\n            _owner = newOwner;\n        }\n    }\n}\n"},"@erc725/smart-contracts/contracts/ERC725Y.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// modules\nimport {OwnableUnset} from \"./custom/OwnableUnset.sol\";\nimport {ERC725YCore} from \"./ERC725YCore.sol\";\n\n// errors\nimport {OwnableCannotSetZeroAddressAsOwner} from \"./errors.sol\";\n\n/**\n * @title Deployable implementation with `constructor` of ERC725Y, a generic data key/value store.\n * @author Fabian Vogelsteller <fabian@lukso.network>\n * @dev ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time.\n * It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage.\n */\ncontract ERC725Y is ERC725YCore {\n    /**\n     * @notice Deploying an ERC725Y smart contract and setting address `initialOwner` as the contract owner.\n     * @dev Deploy a new ERC725Y contract with the provided `initialOwner` as the contract {owner}.\n     * @param initialOwner the owner of the contract.\n     *\n     * @custom:requirements\n     * - `initialOwner` CANNOT be the zero address.\n     */\n    constructor(address initialOwner) payable {\n        if (initialOwner == address(0)) {\n            revert OwnableCannotSetZeroAddressAsOwner();\n        }\n        OwnableUnset._setOwner(initialOwner);\n    }\n}\n"},"@erc725/smart-contracts/contracts/ERC725YCore.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// interfaces\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {IERC725Y} from \"./interfaces/IERC725Y.sol\";\n\n// modules\nimport {ERC165} from \"@openzeppelin/contracts/utils/introspection/ERC165.sol\";\nimport {OwnableUnset} from \"./custom/OwnableUnset.sol\";\n\n// constants\nimport {_INTERFACEID_ERC725Y} from \"./constants.sol\";\n\nimport {\n    ERC725Y_MsgValueDisallowed,\n    ERC725Y_DataKeysValuesLengthMismatch,\n    ERC725Y_DataKeysValuesEmptyArray\n} from \"./errors.sol\";\n\n/**\n * @title Core implementation of ERC725Y sub-standard, a general data key/value store.\n * @author Fabian Vogelsteller <fabian@lukso.network>\n * @dev ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time.\n * It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage.\n */\nabstract contract ERC725YCore is OwnableUnset, ERC165, IERC725Y {\n    /**\n     * @dev Map `bytes32` data keys to their `bytes` data values.\n     */\n    mapping(bytes32 => bytes) internal _store;\n\n    /**\n     * @inheritdoc IERC725Y\n     */\n    function getData(\n        bytes32 dataKey\n    ) public view virtual override returns (bytes memory dataValue) {\n        dataValue = _getData(dataKey);\n    }\n\n    /**\n     * @inheritdoc IERC725Y\n     */\n    function getDataBatch(\n        bytes32[] memory dataKeys\n    ) public view virtual override returns (bytes[] memory dataValues) {\n        dataValues = new bytes[](dataKeys.length);\n\n        for (uint256 i = 0; i < dataKeys.length; ) {\n            dataValues[i] = _getData(dataKeys[i]);\n\n            // Increment the iterator in unchecked block to save gas\n            unchecked {\n                ++i;\n            }\n        }\n\n        return dataValues;\n    }\n\n    /**\n     * @inheritdoc IERC725Y\n     * @custom:requirements\n     * - SHOULD only be callable by the {owner}.\n     *\n     * @custom:warning\n     * **Note for developers:** despite the fact that this function is set as `payable`, if the function is not intended to receive value\n     * (= native tokens), **an additional check should be implemented to ensure that `msg.value` sent was equal to 0**.\n     *\n     * @custom:events {DataChanged} event.\n     */\n    function setData(\n        bytes32 dataKey,\n        bytes memory dataValue\n    ) public payable virtual override onlyOwner {\n        if (msg.value != 0) revert ERC725Y_MsgValueDisallowed();\n        _setData(dataKey, dataValue);\n    }\n\n    /**\n     * @inheritdoc IERC725Y\n     * @custom:requirements\n     * - SHOULD only be callable by the {owner} of the contract.\n     *\n     * @custom:warning\n     * **Note for developers:** despite the fact that this function is set as `payable`, if the function is not intended to receive value\n     * (= native tokens), **an additional check should be implemented to ensure that `msg.value` sent was equal to 0**.\n     *\n     * @custom:events {DataChanged} event **for each data key/value pair set**.\n     */\n    function setDataBatch(\n        bytes32[] memory dataKeys,\n        bytes[] memory dataValues\n    ) public payable virtual override onlyOwner {\n        /// @dev do not allow to send value by default when setting data in ERC725Y\n        if (msg.value != 0) revert ERC725Y_MsgValueDisallowed();\n\n        if (dataKeys.length != dataValues.length) {\n            revert ERC725Y_DataKeysValuesLengthMismatch();\n        }\n\n        if (dataKeys.length == 0) {\n            revert ERC725Y_DataKeysValuesEmptyArray();\n        }\n\n        for (uint256 i = 0; i < dataKeys.length; ) {\n            _setData(dataKeys[i], dataValues[i]);\n\n            // Increment the iterator in unchecked block to save gas\n            unchecked {\n                ++i;\n            }\n        }\n    }\n\n    /**\n     * @dev Read the value stored under a specific `dataKey` inside the underlying ERC725Y storage,\n     *  represented as a mapping of `bytes32` data keys mapped to their `bytes` data values.\n     *\n     * ```solidity\n     * mapping(bytes32 => bytes) _store\n     * ```\n     *\n     * @param dataKey A bytes32 data key to read the associated `bytes` value from the store.\n     * @return dataValue The `bytes` value associated with the given `dataKey` in the ERC725Y storage.\n     */\n    function _getData(\n        bytes32 dataKey\n    ) internal view virtual returns (bytes memory dataValue) {\n        return _store[dataKey];\n    }\n\n    /**\n     * @dev Write a `dataValue` to the underlying ERC725Y storage, represented as a mapping of\n     * `bytes32` data keys mapped to their `bytes` data values.\n     *\n     * ```solidity\n     * mapping(bytes32 => bytes) _store\n     * ```\n     *\n     * @param dataKey A bytes32 data key to write the associated `bytes` value to the store.\n     * @param dataValue The `bytes` value to associate with the given `dataKey` in the ERC725Y storage.\n     *\n     * @custom:events {DataChanged} event emitted after a successful `setData` call.\n     */\n    function _setData(\n        bytes32 dataKey,\n        bytes memory dataValue\n    ) internal virtual {\n        _store[dataKey] = dataValue;\n        emit DataChanged(dataKey, dataValue);\n    }\n\n    /**\n     * @inheritdoc ERC165\n     */\n    function supportsInterface(\n        bytes4 interfaceId\n    ) public view virtual override(IERC165, ERC165) returns (bool) {\n        return\n            interfaceId == _INTERFACEID_ERC725Y ||\n            super.supportsInterface(interfaceId);\n    }\n}\n"},"@erc725/smart-contracts/contracts/errors.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n/**\n * @dev Reverts when trying to set `address(0)` as the contract owner when deploying the contract,\n * initializing it or transferring ownership of the contract.\n */\nerror OwnableCannotSetZeroAddressAsOwner();\n\n/**\n * @dev Reverts when only the owner is allowed to call the function.\n * @param callerAddress The address that tried to make the call.\n */\nerror OwnableCallerNotTheOwner(address callerAddress);\n\n/**\n * @dev Reverts when trying to send more native tokens `value` than available in current `balance`.\n * @param balance The balance of native tokens of the ERC725X smart contract.\n * @param value The amount of native tokens sent via `ERC725X.execute(...)`/`ERC725X.executeBatch(...)` that is greater than the contract's `balance`.\n */\nerror ERC725X_InsufficientBalance(uint256 balance, uint256 value);\n\n/**\n * @dev Reverts when the `operationTypeProvided` is none of the default operation types available.\n * (CALL = 0; CREATE = 1; CREATE2 = 2; STATICCALL = 3; DELEGATECALL = 4)\n * @param operationTypeProvided The unrecognised operation type number provided to `ERC725X.execute(...)`/`ERC725X.executeBatch(...)`.\n */\nerror ERC725X_UnknownOperationType(uint256 operationTypeProvided);\n\n/**\n * @dev Reverts when trying to send native tokens (`value` / `values[]` parameter of {execute} or {executeBatch} functions) while making a `staticcall` (`operationType == 3`).\n * Sending native tokens via `staticcall` is not allowed because it is a state changing operation.\n */\nerror ERC725X_MsgValueDisallowedInStaticCall();\n\n/**\n * @dev Reverts when trying to send native tokens (`value` / `values[]` parameter of {execute} or {executeBatch} functions) while making a `delegatecall` (`operationType == 4`).\n * Sending native tokens via `staticcall` is not allowed because `msg.value` is persisting.\n */\nerror ERC725X_MsgValueDisallowedInDelegateCall();\n\n/**\n * @dev Reverts when passing a `to` address that is not `address(0)` (= address zero) while deploying a contract via {execute} or {executeBatch} functions.\n * This error can occur using either operation type 1 (`CREATE`) or 2 (`CREATE2`).\n */\nerror ERC725X_CreateOperationsRequireEmptyRecipientAddress();\n\n/**\n * @dev Reverts when contract deployment failed via {execute} or {executeBatch} functions,\n * This error can occur using either operation type 1 (`CREATE`) or 2 (`CREATE2`).\n */\nerror ERC725X_ContractDeploymentFailed();\n\n/**\n * @dev Reverts when no contract bytecode was provided as parameter when trying to deploy a contract via {execute} or {executeBatch}.\n * This error can occur using either operation type 1 (`CREATE`) or 2 (`CREATE2`).\n */\nerror ERC725X_NoContractBytecodeProvided();\n\n/**\n * @dev Reverts when there is not the same number of elements in the `operationTypes`, `targets` addresses, `values`, and `datas`\n * array parameters provided when calling the {executeBatch} function.\n */\nerror ERC725X_ExecuteParametersLengthMismatch();\n\n/**\n * @dev Reverts when one of the array parameter provided to the {executeBatch} function is an empty array.\n */\nerror ERC725X_ExecuteParametersEmptyArray();\n\n/**\n * @dev Reverts when there is not the same number of elements in the `datakeys` and `dataValues`\n * array parameters provided when calling the {setDataBatch} function.\n */\nerror ERC725Y_DataKeysValuesLengthMismatch();\n\n/**\n * @dev Reverts when one of the array parameter provided to {setDataBatch} function is an empty array.\n */\nerror ERC725Y_DataKeysValuesEmptyArray();\n\n/**\n * @dev Reverts when sending value to the {setData} or {setDataBatch} function.\n */\nerror ERC725Y_MsgValueDisallowed();\n"},"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol":{"content":"// SPDX-License-Identifier: CC0-1.0\npragma solidity ^0.8.0;\n\n// interfaces\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\n\n/**\n * @title The interface for ERC725Y sub-standard, a generic data key/value store.\n * @dev ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time.\n * It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage.\n */\ninterface IERC725Y is IERC165 {\n    /**\n     * @notice The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\n     * @dev Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\n     * @param dataKey The data key for which a bytes value is set.\n     * @param dataValue The value to set for the given data key.\n     */\n    event DataChanged(bytes32 indexed dataKey, bytes dataValue);\n\n    /**\n     * @notice Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\n     * @dev Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\n     * @param dataKey The data key for which to retrieve the value.\n     * @return dataValue The bytes value stored under the specified data key.\n     */\n    function getData(\n        bytes32 dataKey\n    ) external view returns (bytes memory dataValue);\n\n    /**\n     * @notice Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\n     * @dev Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\n     * @param dataKeys The array of keys which values to retrieve\n     * @return dataValues The array of data stored at multiple keys\n     */\n    function getDataBatch(\n        bytes32[] memory dataKeys\n    ) external view returns (bytes[] memory dataValues);\n\n    /**\n     * @notice Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\n     *\n     * @dev Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`.\n     * The function is marked as payable to enable flexibility on child contracts. For instance to implement\n     * a fee mechanism for setting specific data.\n     *\n     * @param dataKey The data key for which to set a new value.\n     * @param dataValue The new bytes value to set.\n     */\n    function setData(bytes32 dataKey, bytes memory dataValue) external payable;\n\n    /**\n     * @notice Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\n     *\n     * @dev Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\n     *\n     * @param dataKeys An array of data keys to set bytes values for.\n     * @param dataValues An array of bytes values to set for each `dataKeys`.\n     */\n    function setDataBatch(\n        bytes32[] memory dataKeys,\n        bytes[] memory dataValues\n    ) external payable;\n}\n"},"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Constants.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// --- ERC165 interface ids\n\n// bytes4(keccack256(\"LSP17Extendable\"))\nbytes4 constant _INTERFACEID_LSP17_EXTENDABLE = 0xa918fa6b;\n\n// bytes4(keccack256(\"LSP17Extension\"))\nbytes4 constant _INTERFACEID_LSP17_EXTENSION = 0xcee78b40;\n\n// --- ERC725Y Data Keys\n\n// Extension Handler Prefix\n\n// bytes10(keccak256('LSP17Extension'))\nbytes10 constant _LSP17_EXTENSION_PREFIX = 0xcee78b4094da86011096;\n"},"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Errors.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n/**\n * @dev reverts when there is no extension for the function selector being called with\n */\nerror NoExtensionFoundForFunctionSelector(bytes4 functionSelector);\n\n/**\n * @dev reverts when the contract is called with a function selector not valid (less than 4 bytes of data)\n */\nerror InvalidFunctionSelector(bytes data);\n\n/**\n * @dev reverts when the bytes retrieved from the LSP17 data key is not a valid address (not 20 bytes)\n */\nerror InvalidExtensionAddress(bytes storedData);\n"},"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Extendable.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// modules\nimport {ERC165} from \"@openzeppelin/contracts/utils/introspection/ERC165.sol\";\nimport {\n    ERC165Checker\n} from \"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\";\n\n// constants\nimport {_INTERFACEID_LSP17_EXTENDABLE} from \"./LSP17Constants.sol\";\n\n// errors\nimport {NoExtensionFoundForFunctionSelector} from \"./LSP17Errors.sol\";\n\n/**\n * @title Module to add more functionalities to a contract using extensions.\n *\n * @dev Implementation of the `fallback(...)` logic according to LSP17 - Contract Extension standard.\n * This module can be inherited to extend the functionality of the parent contract when\n * calling a function that doesn't exist on the parent contract via forwarding the call\n * to an extension mapped to the function selector being called, set originally by the parent contract\n */\nabstract contract LSP17Extendable is ERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(\n        bytes4 interfaceId\n    ) public view virtual override returns (bool) {\n        return\n            interfaceId == _INTERFACEID_LSP17_EXTENDABLE ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns whether the interfaceId being checked is supported in the extension of the\n     * {supportsInterface} selector.\n     *\n     * To be used by extendable contracts wishing to extend the ERC165 interfaceIds originally\n     * supported by reading whether the interfaceId queried is supported in the `supportsInterface`\n     * extension if the extension is set, if not it returns false.\n     */\n    function _supportsInterfaceInERC165Extension(\n        bytes4 interfaceId\n    ) internal view virtual returns (bool) {\n        (address erc165Extension, ) = _getExtensionAndForwardValue(\n            ERC165.supportsInterface.selector\n        );\n        if (erc165Extension == address(0)) return false;\n\n        return\n            ERC165Checker.supportsERC165InterfaceUnchecked(\n                erc165Extension,\n                interfaceId\n            );\n    }\n\n    /**\n     * @dev Returns the extension mapped to a specific function selector\n     * If no extension was found, return the address(0)\n     * To be overrided.\n     * Up to the implementor contract to return an extension based on a function selector\n     */\n    function _getExtensionAndForwardValue(\n        bytes4 functionSelector\n    ) internal view virtual returns (address, bool);\n\n    /**\n     * @dev Forwards the call to an extension mapped to a function selector.\n     *\n     * Calls {_getExtensionAndForwardValue} to get the address of the extension mapped to the function selector being\n     * called on the account. If there is no extension, the `address(0)` will be returned.\n     * Forwards the value if the extension is payable.\n     *\n     * Reverts if there is no extension for the function being called.\n     *\n     * If there is an extension for the function selector being called, it calls the extension with the\n     * `CALL` opcode, passing the `msg.data` appended with the 20 bytes of the {msg.sender} and 32 bytes of the `msg.value`.\n     *\n     * @custom:hint This function does not forward to the extension contract the `msg.value` received by the contract that inherits `LSP17Extendable`.\n     * If you would like to forward the `msg.value` to the extension contract, you can override the code of this internal function as follow:\n     *\n     * ```solidity\n     * (bool success, bytes memory result) = extension.call{value: msg.value}(\n     *     abi.encodePacked(callData, msg.sender, msg.value)\n     * );\n     * ```\n     */\n    function _fallbackLSP17Extendable(\n        bytes calldata callData\n    ) internal virtual returns (bytes memory) {\n        // If there is a function selector\n        (\n            address extension,\n            bool shouldForwardValue\n        ) = _getExtensionAndForwardValue(msg.sig);\n\n        // if no extension was found, revert\n        if (extension == address(0))\n            revert NoExtensionFoundForFunctionSelector(msg.sig);\n\n        (bool success, bytes memory result) = extension.call{\n            value: shouldForwardValue ? msg.value : 0\n        }(abi.encodePacked(callData, msg.sender, msg.value));\n\n        if (success) {\n            return result;\n        } else {\n            // `mload(result)` -> offset in memory where `result.length` is located\n            // `add(result, 32)` -> offset in memory where `result` data starts\n            // solhint-disable no-inline-assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let resultdata_size := mload(result)\n                revert(add(result, 32), resultdata_size)\n            }\n        }\n    }\n}\n"},"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/ILSP1UniversalReceiver.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n/**\n * @title Interface of the LSP1 - Universal Receiver standard, an entry function for a contract to receive arbitrary information.\n * @dev LSP1UniversalReceiver allows to receive arbitrary messages and to be informed when assets are sent or received.\n */\ninterface ILSP1UniversalReceiver {\n    /**\n     * @dev Emitted when the {universalReceiver} function was called with a specific `typeId` and some `receivedData`\n     * @notice Address `from` called the `universalReceiver(...)` function while sending `value` LYX. Notification type (typeId): `typeId` - Data received: `receivedData`.\n     *\n     * @param from The address of the EOA or smart contract that called the {universalReceiver(...)} function.\n     * @param value The amount sent to the {universalReceiver(...)} function.\n     * @param typeId A `bytes32` unique identifier (= _\"hook\"_)that describe the type of notification, information or transaction received by the contract. Can be related to a specific standard or a hook.\n     * @param receivedData Any arbitrary data that was sent to the {universalReceiver(...)} function.\n     * @param returnedValue The value returned by the {universalReceiver(...)} function.\n     */\n    event UniversalReceiver(\n        address indexed from,\n        uint256 indexed value,\n        bytes32 indexed typeId,\n        bytes receivedData,\n        bytes returnedValue\n    );\n\n    /**\n     * @dev Generic function that can be used to notify the contract about specific incoming transactions or events like asset transfers, vault transfers, etc. Allows for custom on-chain and off-chain reactions based on the `typeId` and `data`.\n     * @notice Reacted on received notification with `typeId` & `data`.\n     *\n     * @param typeId The hash of a specific standard or a hook.\n     * @param data The arbitrary data received with the call.\n     *\n     * @custom:events {UniversalReceiver} event.\n     */\n    function universalReceiver(\n        bytes32 typeId,\n        bytes calldata data\n    ) external payable returns (bytes memory);\n}\n"},"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/LSP1Constants.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// --- ERC165 interface ids\nbytes4 constant _INTERFACEID_LSP1 = 0x6bb56a14;\nbytes4 constant _INTERFACEID_LSP1_DELEGATE = 0xa245bbda;\n\n// --- ERC725Y Data Keys\n\n// bytes10(keccak256('LSP1UniversalReceiverDelegate'))\nbytes10 constant _LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX = 0x0cfc51aec37c55a4d0b1;\n\n// keccak256('LSP1UniversalReceiverDelegate')\nbytes32 constant _LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY = 0x0cfc51aec37c55a4d0b1a65c6255c4bf2fbdf6277f3cc0730c45b828b6db8b47;\n"},"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/LSP1Utils.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// libraries\nimport {\n    ERC165Checker\n} from \"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\";\nimport {LSP2Utils} from \"../LSP2ERC725YJSONSchema/LSP2Utils.sol\";\n\n// constants\nimport {ILSP1UniversalReceiver as ILSP1} from \"./ILSP1UniversalReceiver.sol\";\n\n// constants\nimport {\n    _INTERFACEID_LSP1,\n    _LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY,\n    _LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX\n} from \"../LSP1UniversalReceiver/LSP1Constants.sol\";\n\n/**\n * @title LSP1 Utility library.\n * @author Jean Cavallera <CJ42>, Yamen Merhi <YamenMerhi>, Daniel Afteni <B00ste>\n * @dev LSP1Utils is a library of utility functions that can be used to notify the `universalReceiver` function of a contract\n * that implements LSP1 and retrieve informations related to LSP1 `typeId`.\n * Based on LSP1 Universal Receiver standard.\n */\nlibrary LSP1Utils {\n    using ERC165Checker for address;\n\n    /**\n     * @dev Notify a contract at `lsp1Implementation` address by calling its `universalReceiver` function if this contract\n     * supports the LSP1 interface.\n     *\n     * @param lsp1Implementation The address of the contract to notify.\n     * @param typeId A `bytes32` typeId.\n     * @param data Any optional data to send to the `universalReceiver` function to the `lsp1Implementation` address.\n     */\n    function notifyUniversalReceiver(\n        address lsp1Implementation,\n        bytes32 typeId,\n        bytes memory data\n    ) internal {\n        if (\n            lsp1Implementation.supportsERC165InterfaceUnchecked(\n                _INTERFACEID_LSP1\n            )\n        ) {\n            ILSP1(lsp1Implementation).universalReceiver(typeId, data);\n        }\n    }\n\n    /**\n     * @notice Retrieving the value stored under the ERC725Y data key `LSP1UniversalReceiverDelegate`.\n     *\n     * @dev Query internally the ERC725Y storage of a `ERC725Y` smart contract to retrieve\n     * the value set under the `LSP1UniversalReceiverDelegate` data key.\n     *\n     * @param erc725YStorage A reference to the ERC725Y storage mapping of the contract.\n     * @return The bytes value stored under the `LSP1UniversalReceiverDelegate` data key.\n     */\n    function getLSP1DelegateValue(\n        mapping(bytes32 => bytes) storage erc725YStorage\n    ) internal view returns (bytes memory) {\n        return erc725YStorage[_LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY];\n    }\n\n    /**\n     * @notice Retrieving the value stored under the ERC725Y data key `LSP1UniversalReceiverDelegate:<type-id>` for a specific `typeId`.\n     *\n     * @dev Query internally the ERC725Y storage of a `ERC725Y` smart contract to retrieve\n     * the value set under the `LSP1UniversalReceiverDelegate:<bytes32>` data key for a specific LSP1 `typeId`.\n     *\n     * @param erc725YStorage A reference to the ERC725Y storage mapping of the contract.\n     * @param typeId A bytes32 LSP1 `typeId`;\n     * @return The bytes value stored under the `LSP1UniversalReceiverDelegate:<bytes32>` data key.\n     */\n    function getLSP1DelegateValueForTypeId(\n        mapping(bytes32 => bytes) storage erc725YStorage,\n        bytes32 typeId\n    ) internal view returns (bytes memory) {\n        bytes32 lsp1TypeIdDataKey = LSP2Utils.generateMappingKey(\n            _LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX,\n            bytes20(typeId)\n        );\n        return erc725YStorage[lsp1TypeIdDataKey];\n    }\n}\n"},"@lukso/lsp-smart-contracts/contracts/LSP2ERC725YJSONSchema/LSP2Utils.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// interfaces\nimport {\n    IERC725Y\n} from \"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\";\n\n/**\n * @title LSP2 Utility library.\n * @author Jean Cavallera <CJ42>, Yamen Merhi <YamenMerhi>, Daniel Afteni <B00ste>\n * @dev LSP2Utils is a library of utility functions that can be used to encode data key of different key type\n * defined on the LSP2 standard.\n * Based on LSP2 ERC725Y JSON Schema standard.\n */\nlibrary LSP2Utils {\n    /**\n     * @dev Generates a data key of keyType Singleton by hashing the string `keyName`. As:\n     *\n     * ```\n     * keccak256(\"keyName\")\n     * ```\n     *\n     * @param keyName The string to hash to generate a Singleton data key.\n     *\n     * @return The generated `bytes32` data key of key type Singleton.\n     */\n    function generateSingletonKey(\n        string memory keyName\n    ) internal pure returns (bytes32) {\n        return keccak256(bytes(keyName));\n    }\n\n    /**\n     * @dev Generates a data key of keyType Array by hashing `arrayKeyName`. As:\n     *\n     * ```\n     * keccak256(\"arrayKeyName[]\")\n     * ```\n     *\n     * @param arrayKeyName The string that will be used to generate a data key of key type Array.\n     *\n     * @return The generated `bytes32` data key of key type Array.\n     *\n     * @custom:requirements\n     * - The `keyName` must include at the end of the string the square brackets `\"[]\"`.\n     */\n    function generateArrayKey(\n        string memory arrayKeyName\n    ) internal pure returns (bytes32) {\n        bytes memory dataKey = bytes(arrayKeyName);\n        require(dataKey.length >= 2, \"MUST be longer than 2 characters\");\n        require(\n            dataKey[dataKey.length - 2] == 0x5b && // \"[\" in utf8 encoded\n                dataKey[dataKey.length - 1] == 0x5d, // \"]\" in utf8\n            \"Missing empty square brackets '[]' at the end of the key name\"\n        );\n\n        return keccak256(dataKey);\n    }\n\n    /**\n     * @dev Generates an Array data key at a specific `index` by concatenating together the first 16 bytes of `arrayKey`\n     * with the 16 bytes of `index`. As:\n     *\n     * ```\n     * arrayKey[index]\n     * ```\n     *\n     * @param arrayKey The Array data key from which to generate the Array data key at a specific `index`.\n     * @param index The index number in the `arrayKey`.\n     *\n     * @return The generated `bytes32` data key of key type Array at a specific `index`.\n     */\n    function generateArrayElementKeyAtIndex(\n        bytes32 arrayKey,\n        uint128 index\n    ) internal pure returns (bytes32) {\n        bytes memory elementInArray = bytes.concat(\n            bytes16(arrayKey),\n            bytes16(index)\n        );\n        return bytes32(elementInArray);\n    }\n\n    /**\n     * @dev Generates a data key of key type Mapping that map `firstWord` to `lastWord`. This is done by hashing two strings words `firstWord` and `lastWord`. As:\n     *\n     * ```\n     * bytes10(firstWordHash):0000:bytes20(lastWordHash)\n     * ```\n     *\n     * @param firstWord The word to retrieve the first 10 bytes of its hash.\n     * @param lastWord The word to retrieve the first 10 bytes of its hash.\n     *\n     * @return The generated `bytes32` data key of key type Mapping that map `firstWord` to a specific `lastWord`.\n     */\n    function generateMappingKey(\n        string memory firstWord,\n        string memory lastWord\n    ) internal pure returns (bytes32) {\n        bytes32 firstWordHash = keccak256(bytes(firstWord));\n        bytes32 lastWordHash = keccak256(bytes(lastWord));\n\n        bytes memory temporaryBytes = bytes.concat(\n            bytes10(firstWordHash),\n            bytes2(0),\n            bytes20(lastWordHash)\n        );\n\n        return bytes32(temporaryBytes);\n    }\n\n    /**\n     * @dev Generates a data key of key type Mapping that map `firstWord` to an address `addr`.\n     * This is done by hashing the string word `firstWord` and concatenating its first 10 bytes with `addr`. As:\n     *\n     * ```\n     * bytes10(firstWordHash):0000:<address>\n     * ```\n     *\n     * @param firstWord The word to retrieve the first 10 bytes of its hash.\n     * @param addr An address to map `firstWord` to.\n     *\n     * @return The generated `bytes32` data key of key type Mapping that map `firstWord` to a specific address `addr`.\n     */\n    function generateMappingKey(\n        string memory firstWord,\n        address addr\n    ) internal pure returns (bytes32) {\n        bytes32 firstWordHash = keccak256(bytes(firstWord));\n\n        bytes memory temporaryBytes = bytes.concat(\n            bytes10(firstWordHash),\n            bytes2(0),\n            bytes20(addr)\n        );\n\n        return bytes32(temporaryBytes);\n    }\n\n    /**\n     * @dev Generate a data key of key type Mapping that map a 10 bytes `keyPrefix` to a `bytes20Value`. As:\n     *\n     * ```\n     * keyPrefix:bytes20Value\n     * ```\n     *\n     * @param keyPrefix The first part of the data key of key type Mapping.\n     * @param bytes20Value The second part of the data key of key type Mapping.\n     *\n     * @return The generated `bytes32` data key of key type Mapping that map a `keyPrefix` to a specific `bytes20Value`.\n     */\n    function generateMappingKey(\n        bytes10 keyPrefix,\n        bytes20 bytes20Value\n    ) internal pure returns (bytes32) {\n        bytes memory generatedKey = bytes.concat(\n            keyPrefix,\n            bytes2(0),\n            bytes20Value\n        );\n        return bytes32(generatedKey);\n    }\n\n    /**\n     * @dev Generate a data key of key type MappingWithGrouping by using two strings `firstWord`\n     * mapped to a `secondWord` mapped itself to a specific address `addr`. As:\n     *\n     * ```\n     * bytes6(keccak256(\"firstWord\")):bytes4(keccak256(\"secondWord\")):0000:<address>\n     * ```\n     *\n     * @param firstWord The word to retrieve the first 6 bytes of its hash.\n     * @param secondWord The word to retrieve the first 4 bytes of its hash.\n     * @param addr The address that makes the last part of the MappingWithGrouping.\n     *\n     * @return The generated `bytes32` data key of key type MappingWithGrouping that map a `firstWord` to a `secondWord` to a specific address `addr`.\n     */\n    function generateMappingWithGroupingKey(\n        string memory firstWord,\n        string memory secondWord,\n        address addr\n    ) internal pure returns (bytes32) {\n        bytes32 firstWordHash = keccak256(bytes(firstWord));\n        bytes32 secondWordHash = keccak256(bytes(secondWord));\n\n        bytes memory temporaryBytes = bytes.concat(\n            bytes6(firstWordHash),\n            bytes4(secondWordHash),\n            bytes2(0),\n            bytes20(addr)\n        );\n\n        return bytes32(temporaryBytes);\n    }\n\n    /**\n     * @dev Generate a data key of key type MappingWithGrouping that map a `keyPrefix` to an other `mapPrefix` to a specific `subMapKey`. As:\n     *\n     * ```\n     * keyPrefix:mapPrefix:0000:subMapKey\n     * ```\n     *\n     * @param keyPrefix The first part (6 bytes) of the data key of keyType MappingWithGrouping.\n     * @param mapPrefix The second part (4 bytes) of the data key of keyType MappingWithGrouping.\n     * @param subMapKey The last part (bytes20) of the data key of keyType MappingWithGrouping.\n     *\n     * @return The generated `bytes32` data key of key type MappingWithGrouping that map a `keyPrefix` to a `mapPrefix` to a specific `subMapKey`.\n     */\n    function generateMappingWithGroupingKey(\n        bytes6 keyPrefix,\n        bytes4 mapPrefix,\n        bytes20 subMapKey\n    ) internal pure returns (bytes32) {\n        bytes memory generatedKey = bytes.concat(\n            keyPrefix,\n            mapPrefix,\n            bytes2(0),\n            subMapKey\n        );\n        return bytes32(generatedKey);\n    }\n\n    /**\n     * @dev Generate a data key of key type MappingWithGrouping that map a 10 bytes `keyPrefix` to a specific `bytes20Value`. As:\n     *\n     * @param keyPrefix The first part of the data key of keyType MappingWithGrouping.\n     * @param bytes20Value The last of the data key of keyType MappingWithGrouping.\n     *\n     * @return The generated `bytes32` data key of key type MappingWithGrouping that map a `keyPrefix`\n     * (containing the first and second mapped word) to a specific `bytes20Value`.\n     */\n    function generateMappingWithGroupingKey(\n        bytes10 keyPrefix,\n        bytes20 bytes20Value\n    ) internal pure returns (bytes32) {\n        bytes memory generatedKey = bytes.concat(\n            keyPrefix,\n            bytes2(0),\n            bytes20Value\n        );\n        return bytes32(generatedKey);\n    }\n\n    /**\n     * @dev Generate a JSONURL value content.\n     * @param hashFunction The function used to hash the JSON file.\n     * @param json Bytes value of the JSON file.\n     * @param url The URL where the JSON file is hosted.\n     */\n    function generateJSONURLValue(\n        string memory hashFunction,\n        string memory json,\n        string memory url\n    ) internal pure returns (bytes memory) {\n        bytes32 hashFunctionDigest = keccak256(bytes(hashFunction));\n        bytes32 jsonDigest = keccak256(bytes(json));\n\n        return abi.encodePacked(bytes4(hashFunctionDigest), jsonDigest, url);\n    }\n\n    /**\n     * @dev Generate a ASSETURL value content.\n     *\n     * @param hashFunction The function used to hash the JSON file.\n     * @param assetBytes Bytes value of the JSON file.\n     * @param url The URL where the JSON file is hosted.\n     *\n     * @return The encoded value as an `ASSETURL`.\n     */\n    function generateASSETURLValue(\n        string memory hashFunction,\n        string memory assetBytes,\n        string memory url\n    ) internal pure returns (bytes memory) {\n        bytes32 hashFunctionDigest = keccak256(bytes(hashFunction));\n        bytes32 jsonDigest = keccak256(bytes(assetBytes));\n\n        return abi.encodePacked(bytes4(hashFunctionDigest), jsonDigest, url);\n    }\n\n    /**\n     * @dev Verify if `data` is a valid array of value encoded as a `CompactBytesArray` according to the LSP2 `CompactBytesArray` valueType specification.\n     *\n     * @param compactBytesArray The bytes value to verify.\n     *\n     * @return `true` if the `data` is correctly encoded CompactBytesArray, `false` otherwise.\n     */\n    function isCompactBytesArray(\n        bytes memory compactBytesArray\n    ) internal pure returns (bool) {\n        /**\n         * Pointer will always land on these values:\n         *\n         * ↓↓↓↓\n         * 0003 a00000\n         * 0005 fff83a0011\n         * 0020 aa0000000000000000000000000000000000000000000000000000000000cafe\n         * 0012 bb000000000000000000000000000000beef\n         * 0019 cc00000000000000000000000000000000000000000000deed\n         * ↑↑↑↑\n         *\n         * The pointer can only land on the length of the following bytes value.\n         */\n        uint256 pointer = 0;\n\n        /**\n         * Check each length byte and make sure that when you reach the last length byte.\n         * Make sure that the last length describes exactly the last bytes value and you do not get out of bounds.\n         */\n        while (pointer < compactBytesArray.length) {\n            if (pointer + 1 >= compactBytesArray.length) return false;\n            uint256 elementLength = uint16(\n                bytes2(\n                    abi.encodePacked(\n                        compactBytesArray[pointer],\n                        compactBytesArray[pointer + 1]\n                    )\n                )\n            );\n            pointer += elementLength + 2;\n        }\n        if (pointer == compactBytesArray.length) return true;\n        return false;\n    }\n\n    /**\n     * @dev Validates if the bytes `arrayLength` are exactly 16 bytes long, and are of the exact size of an LSP2 Array length value\n     *\n     * @param arrayLength Plain bytes that should be validated.\n     *\n     * @return `true` if the value is 16 bytes long, `false` otherwise.\n     */\n    function isValidLSP2ArrayLengthValue(\n        bytes memory arrayLength\n    ) internal pure returns (bool) {\n        if (arrayLength.length == 16) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @dev Generates Data Key/Value pairs for removing the last element from an LSP2 Array and a mapping Data Key.\n     *\n     * @param arrayKey The Data Key of Key Type Array.\n     * @param newArrayLength The new Array Length for the `arrayKey`.\n     * @param removedElementIndexKey The Data Key of Key Type Array Index for the removed element.\n     * @param removedElementMapKey The Data Key of a mapping to be removed.\n     */\n    function removeLastElementFromArrayAndMap(\n        bytes32 arrayKey,\n        uint128 newArrayLength,\n        bytes32 removedElementIndexKey,\n        bytes32 removedElementMapKey\n    )\n        internal\n        pure\n        returns (bytes32[] memory dataKeys, bytes[] memory dataValues)\n    {\n        dataKeys = new bytes32[](3);\n        dataValues = new bytes[](3);\n\n        // store the number of received assets decremented by 1\n        dataKeys[0] = arrayKey;\n        dataValues[0] = abi.encodePacked(newArrayLength);\n\n        // remove the data value for the map key of the element\n        dataKeys[1] = removedElementMapKey;\n        dataValues[1] = \"\";\n\n        // remove the data value for the map key of the element\n        dataKeys[2] = removedElementIndexKey;\n        dataValues[2] = \"\";\n    }\n\n    /**\n     * @dev Generates Data Key/Value pairs for removing an element from an LSP2 Array and a mapping Data Key.\n     *\n     * @custom:info The function assumes that the Data Value stored under the mapping Data Key is of length 20 where the last 16 bytes are the index of the element in the array.\n     *\n     * @param erc725YContract The ERC725Y contract.\n     * @param arrayKey The Data Key of Key Type Array.\n     * @param newArrayLength The new Array Length for the `arrayKey`.\n     * @param removedElementIndexKey The Data Key of Key Type Array Index for the removed element.\n     * @param removedElementIndex the index of the removed element.\n     * @param removedElementMapKey The Data Key of a mapping to be removed.\n     */\n    function removeElementFromArrayAndMap(\n        IERC725Y erc725YContract,\n        bytes32 arrayKey,\n        uint128 newArrayLength,\n        bytes32 removedElementIndexKey,\n        uint128 removedElementIndex,\n        bytes32 removedElementMapKey\n    )\n        internal\n        view\n        returns (bytes32[] memory dataKeys, bytes[] memory dataValues)\n    {\n        dataKeys = new bytes32[](5);\n        dataValues = new bytes[](5);\n\n        // store the number of received assets decremented by 1\n        dataKeys[0] = arrayKey;\n        dataValues[0] = abi.encodePacked(newArrayLength);\n\n        // remove the data value for the map key of the element\n        dataKeys[1] = removedElementMapKey;\n        dataValues[1] = \"\";\n\n        // Generate the key of the last element in the array\n        bytes32 lastElementIndexKey = LSP2Utils.generateArrayElementKeyAtIndex(\n            arrayKey,\n            newArrayLength\n        );\n\n        // Get the data value from the key of the last element in the array\n        bytes20 lastElementIndexValue = bytes20(\n            erc725YContract.getData(lastElementIndexKey)\n        );\n\n        // Set data value of the last element instead of the element from the array that will be removed\n        dataKeys[2] = removedElementIndexKey;\n        dataValues[2] = bytes.concat(lastElementIndexValue);\n\n        // Remove the data value for the swapped array element\n        dataKeys[3] = lastElementIndexKey;\n        dataValues[3] = \"\";\n\n        // Generate mapping key for the swapped array element\n        bytes32 lastElementMapKey = LSP2Utils.generateMappingKey(\n            bytes10(removedElementMapKey),\n            lastElementIndexValue\n        );\n\n        // Generate the mapping value for the swapped array element\n        bytes memory lastElementMapValue = abi.encodePacked(\n            bytes4(erc725YContract.getData(lastElementMapKey)),\n            removedElementIndex\n        );\n\n        // Update the map value of the swapped array element to the new index\n        dataKeys[4] = lastElementMapKey;\n        dataValues[4] = lastElementMapValue;\n    }\n}\n"},"@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4Constants.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// Token types\nuint256 constant _LSP4_TOKEN_TYPE_TOKEN = 0;\nuint256 constant _LSP4_TOKEN_TYPE_NFT = 1;\nuint256 constant _LSP4_TOKEN_TYPE_COLLECTION = 2;\n\n// --- ERC725Y entries\n\n// bytes10(keccak256('SupportedStandards')) + bytes2(0) + bytes20(keccak256('LSP4DigitalAsset'))\nbytes32 constant _LSP4_SUPPORTED_STANDARDS_KEY = 0xeafec4d89fa9619884b60000a4d96624a38f7ac2d8d9a604ecf07c12c77e480c;\n\n// bytes4(keccak256('LSP4DigitalAsset'))\nbytes constant _LSP4_SUPPORTED_STANDARDS_VALUE = hex\"a4d96624\";\n\n// keccak256('LSP4TokenName')\nbytes32 constant _LSP4_TOKEN_NAME_KEY = 0xdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af1;\n\n// keccak256('LSP4TokenSymbol')\nbytes32 constant _LSP4_TOKEN_SYMBOL_KEY = 0x2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db932756;\n\n// keccak256('LSP4TokenType')\nbytes32 constant _LSP4_TOKEN_TYPE_KEY = 0xe0261fa95db2eb3b5439bd033cda66d56b96f92f243a8228fd87550ed7bdfdb3;\n\n// keccak256('LSP4Creators[]')\nbytes32 constant _LSP4_CREATORS_ARRAY_KEY = 0x114bd03b3a46d48759680d81ebb2b414fda7d030a7105a851867accf1c2352e7;\n\n// bytes10(keccak256('LSP4CreatorsMap'))\nbytes10 constant _LSP4_CREATORS_MAP_KEY_PREFIX = 0x6de85eaf5d982b4e5da0;\n\n// keccak256('LSP4Metadata')\nbytes32 constant _LSP4_METADATA_KEY = 0x9afb95cacc9f95858ec44aa8c3b685511002e30ae54415823f406128b85b238e;\n"},"@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadata.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// modules\nimport {ERC725Y} from \"@erc725/smart-contracts/contracts/ERC725Y.sol\";\nimport {ERC725YCore} from \"@erc725/smart-contracts/contracts/ERC725YCore.sol\";\nimport {LSP4DigitalAssetMetadataCore} from \"./LSP4DigitalAssetMetadataCore.sol\";\n\n// constants\nimport {\n    _LSP4_SUPPORTED_STANDARDS_KEY,\n    _LSP4_SUPPORTED_STANDARDS_VALUE,\n    _LSP4_TOKEN_NAME_KEY,\n    _LSP4_TOKEN_SYMBOL_KEY,\n    _LSP4_TOKEN_TYPE_KEY\n} from \"./LSP4Constants.sol\";\n\n/**\n * @title Implementation of a LSP4DigitalAssetMetadata contract that stores the **Token-Metadata** (`LSP4TokenName` and `LSP4TokenSymbol`) in its ERC725Y data store.\n * @author Matthew Stevens\n * @dev Standard Implementation of the LSP4 standard.\n */\nabstract contract LSP4DigitalAssetMetadata is\n    ERC725Y,\n    LSP4DigitalAssetMetadataCore\n{\n    /**\n     * @notice Deploying a digital asset `name_` with the `symbol_` symbol.\n     *\n     * @param name_ The name of the token.\n     * @param symbol_ The symbol of the token.\n     * @param initialOwner_ The owner of the token contract.\n     * @param lsp4TokenType_ The type of token this digital asset contract represents (`0` = Token, `1` = NFT, `2` = Collection).\n     */\n    constructor(\n        string memory name_,\n        string memory symbol_,\n        address initialOwner_,\n        uint256 lsp4TokenType_\n    ) ERC725Y(initialOwner_) {\n        // set data key SupportedStandards:LSP4DigitalAsset\n        ERC725YCore._setData(\n            _LSP4_SUPPORTED_STANDARDS_KEY,\n            _LSP4_SUPPORTED_STANDARDS_VALUE\n        );\n\n        ERC725YCore._setData(_LSP4_TOKEN_NAME_KEY, bytes(name_));\n        ERC725YCore._setData(_LSP4_TOKEN_SYMBOL_KEY, bytes(symbol_));\n        ERC725YCore._setData(_LSP4_TOKEN_TYPE_KEY, abi.encode(lsp4TokenType_));\n    }\n\n    /**\n     * @dev The ERC725Y data keys `LSP4TokenName` and `LSP4TokenSymbol` cannot be changed\n     * via this function once the digital asset contract has been deployed.\n     */\n    function _setData(\n        bytes32 dataKey,\n        bytes memory dataValue\n    ) internal virtual override(ERC725YCore, LSP4DigitalAssetMetadataCore) {\n        LSP4DigitalAssetMetadataCore._setData(dataKey, dataValue);\n    }\n}\n"},"@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadataCore.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// modules\nimport {ERC725YCore} from \"@erc725/smart-contracts/contracts/ERC725YCore.sol\";\n\n// constants\nimport {\n    _LSP4_TOKEN_NAME_KEY,\n    _LSP4_TOKEN_SYMBOL_KEY,\n    _LSP4_TOKEN_TYPE_KEY\n} from \"./LSP4Constants.sol\";\n\n// errors\nimport {\n    LSP4TokenNameNotEditable,\n    LSP4TokenSymbolNotEditable,\n    LSP4TokenTypeNotEditable\n} from \"./LSP4Errors.sol\";\n\n/**\n * @title Implementation of a LSP4DigitalAssetMetadata contract that stores the **Token-Metadata** (`LSP4TokenName` and `LSP4TokenSymbol`) in its ERC725Y data store.\n * @author Matthew Stevens\n * @dev Standard Implementation of the LSP4 standard.\n */\nabstract contract LSP4DigitalAssetMetadataCore is ERC725YCore {\n    /**\n     * @dev The ERC725Y data keys `LSP4TokenName` and `LSP4TokenSymbol` cannot be changed\n     * via this function once the digital asset contract has been deployed.\n     */\n    function _setData(\n        bytes32 dataKey,\n        bytes memory dataValue\n    ) internal virtual override {\n        if (dataKey == _LSP4_TOKEN_NAME_KEY) {\n            revert LSP4TokenNameNotEditable();\n        } else if (dataKey == _LSP4_TOKEN_SYMBOL_KEY) {\n            revert LSP4TokenSymbolNotEditable();\n        } else if (dataKey == _LSP4_TOKEN_TYPE_KEY) {\n            revert LSP4TokenTypeNotEditable();\n        } else {\n            _store[dataKey] = dataValue;\n\n            emit DataChanged(dataKey, dataValue);\n        }\n    }\n}\n"},"@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4Errors.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n/**\n * @dev Reverts when trying to edit the data key `LSP4TokenName` after the digital asset contract has been deployed / initialized.\n * The `LSP4TokenName` data key is located inside the ERC725Y data key-value store of the digital asset contract.\n * It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized.\n */\nerror LSP4TokenNameNotEditable();\n\n/**\n * @dev Reverts when trying to edit the data key `LSP4TokenSymbol` after the digital asset contract has been deployed / initialized.\n * The `LSP4TokenSymbol` data key is located inside the ERC725Y data key-value store of the digital asset contract.\n * It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized.\n */\nerror LSP4TokenSymbolNotEditable();\n\n/**\n * @dev Reverts when trying to edit the data key `LSP4TokenType` after the digital asset contract has been deployed / initialized.\n * The `LSP4TokenType` data key is located inside the ERC725Y data key-value store of the digital asset contract.\n * It can be set only once inside the constructor / initializer when the digital asset contract is being deployed / initialized.\n */\nerror LSP4TokenTypeNotEditable();\n"},"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/ILSP8IdentifiableDigitalAsset.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// interfaces\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {\n    IERC725Y\n} from \"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\";\n\n/**\n * @title Interface of the LSP8 - Identifiable Digital Asset standard, a non-fungible digital asset.\n */\ninterface ILSP8IdentifiableDigitalAsset is IERC165, IERC725Y {\n    // --- Events\n\n    /**\n     * @dev Emitted when `tokenId` token is transferred from the `from` to the `to` address.\n     * @param operator The address of operator that sent the `tokenId`\n     * @param from The previous owner of the `tokenId`\n     * @param to The new owner of `tokenId`\n     * @param tokenId The tokenId that was transferred\n     * @param force If the token transfer enforces the `to` recipient address to be a contract that implements the LSP1 standard or not.\n     * @param data Any additional data the caller included by the caller during the transfer, and sent in the hooks to the `from` and `to` addresses.\n     */\n    event Transfer(\n        address operator,\n        address indexed from,\n        address indexed to,\n        bytes32 indexed tokenId,\n        bool force,\n        bytes data\n    );\n\n    /**\n     * @dev Emitted when `tokenOwner` enables `operator` to transfer or burn the `tokenId`.\n     * @param operator The address authorized as an operator.\n     * @param tokenOwner The owner of the `tokenId`.\n     * @param tokenId The tokenId `operator` address has access on behalf of `tokenOwner`.\n     * @param operatorNotificationData The data to notify the operator about via LSP1.\n     */\n    event OperatorAuthorizationChanged(\n        address indexed operator,\n        address indexed tokenOwner,\n        bytes32 indexed tokenId,\n        bytes operatorNotificationData\n    );\n\n    /**\n     * @dev Emitted when `tokenOwner` disables `operator` to transfer or burn `tokenId` on its behalf.\n     * @param operator The address revoked from the operator array ({getOperatorsOf}).\n     * @param tokenOwner The owner of the `tokenId`.\n     * @param tokenId The tokenId `operator` is revoked from operating on.\n     * @param notified Bool indicating whether the operator has been notified or not\n     * @param operatorNotificationData The data to notify the operator about via LSP1.\n     */\n    event OperatorRevoked(\n        address indexed operator,\n        address indexed tokenOwner,\n        bytes32 indexed tokenId,\n        bool notified,\n        bytes operatorNotificationData\n    );\n\n    /**\n     * @dev Emitted when setting data for `tokenId`.\n     * @param tokenId The tokenId which data is set for.\n     * @param dataKey The data key for which a bytes value is set.\n     * @param dataValue The value to set for the given data key.\n     */\n    event TokenIdDataChanged(\n        bytes32 indexed tokenId,\n        bytes32 indexed dataKey,\n        bytes dataValue\n    );\n\n    // --- Token queries\n\n    /**\n     * @dev Returns the number of existing tokens that have been minted in this contract.\n     * @return The number of existing tokens.\n     */\n    function totalSupply() external view returns (uint256);\n\n    // --- Token owner queries\n\n    /**\n     * @dev Get the number of token IDs owned by `tokenOwner`.\n\n     * @param tokenOwner The address to query     *\n     * @return The total number of token IDs that `tokenOwner` owns.\n     */\n    function balanceOf(address tokenOwner) external view returns (uint256);\n\n    /**\n     * @dev Returns the list of `tokenIds` for the `tokenOwner` address.\n     *\n     * @param tokenId tokenOwner The address to query owned tokens\n     * @return The owner address of the given `tokenId`.\n     *\n     * @custom:requirements `tokenId` must exist.\n     * @custom:info if the `tokenId` is not owned by any address, the returned address will be `address(0)`\n     */\n    function tokenOwnerOf(bytes32 tokenId) external view returns (address);\n\n    /**\n     * @dev Returns the list of token IDs that the `tokenOwner` address owns.\n     * @param tokenOwner The address that we want to get the list of token IDs for.\n     * @return An array of `bytes32[] tokenIds` owned by `tokenOwner`.\n     */\n    function tokenIdsOf(\n        address tokenOwner\n    ) external view returns (bytes32[] memory);\n\n    // --- TokenId Metadata functionality\n\n    /**\n     * @notice Retrieves data for a specific `tokenId` and `dataKey`.\n     * @param tokenId The unique identifier for a token.\n     * @param dataKey The key for the data to retrieve.\n     * @return dataValues The data value associated with the given `tokenId` and `dataKey`.\n     */\n    function getDataForTokenId(\n        bytes32 tokenId,\n        bytes32 dataKey\n    ) external returns (bytes memory dataValues);\n\n    /**\n     * @notice Retrieves data in batch for multiple `tokenId` and `dataKey` pairs.\n     * @param tokenIds An array of token IDs.\n     * @param dataKeys An array of data keys corresponding to the token IDs.\n     * @return dataValues An array of data values for each pair of `tokenId` and `dataKey`.\n     */\n    function getDataBatchForTokenIds(\n        bytes32[] memory tokenIds,\n        bytes32[] memory dataKeys\n    ) external returns (bytes[] memory dataValues);\n\n    /**\n     * @notice Sets data for a specific `tokenId` and `dataKey`.\n     * @param tokenId The unique identifier for a token.\n     * @param dataKey The key for the data to set.\n     * @param dataValue The value to set for the given data key.\n     * @custom:events {TokenIdDataChanged} event.\n     */\n    function setDataForTokenId(\n        bytes32 tokenId,\n        bytes32 dataKey,\n        bytes memory dataValue\n    ) external;\n\n    /**\n     * @notice Sets data in batch for multiple `tokenId` and `dataKey` pairs.\n     * @param tokenIds An array of token IDs.\n     * @param dataKeys An array of data keys corresponding to the token IDs.\n     * @param dataValues An array of values to set for the given data keys.\n     * @custom:events {TokenIdDataChanged} event for each pair.\n     */\n    function setDataBatchForTokenIds(\n        bytes32[] memory tokenIds,\n        bytes32[] memory dataKeys,\n        bytes[] memory dataValues\n    ) external;\n\n    // --- Operator functionality\n\n    /**\n     * @dev Allow an `operator` address to transfer or burn a specific `tokenId` on behalf of its token owner. See {isOperatorFor}.\n     * Notify the operator based on the LSP1-UniversalReceiver standard\n     *\n     * @param operator The address to authorize as an operator.\n     * @param tokenId The token ID operator has access to.\n     * @param operatorNotificationData The data to notify the operator about via LSP1.\n     *\n     * @custom:requirements\n     * - `tokenId` must exist.\n     * - caller MUST be the {tokenOwnerOf} `tokenId`.\n     * - the owner of a `tokenId` cannot grant itself as an `operator` (`operator` cannot be the calling address).\n     * - `operator` cannot be the zero address.\n     *\n     * @custom:events {OperatorAuthorizationChanged} event.\n     */\n    function authorizeOperator(\n        address operator,\n        bytes32 tokenId,\n        bytes memory operatorNotificationData\n    ) external;\n\n    /**\n     * @dev Remove access of `operator` for a given `tokenId`, disallowing it to transfer `tokenId` on behalf of its owner.\n     * See also {isOperatorFor}.\n     *\n     * @param operator The address to revoke as an operator.\n     * @param tokenId The tokenId `operator` is revoked from operating on.\n     * @param notify Boolean indicating whether to notify the operator or not\n     * @param operatorNotificationData The data to notify the operator about via LSP1.\n     *\n     * @custom:requirements\n     * - `tokenId` must exist.\n     * - caller must be the {tokenOwnerOf} `tokenId`.\n     * - the owner of a `tokenId` cannot grant revoke itself as an `operator` (`operator` cannot be the calling address).\n     * - `operator` cannot be the zero address.\n     *\n     * @custom:events {OperatorRevoked} event with address of the operator being revoked for the caller (token owner)..\n     */\n    function revokeOperator(\n        address operator,\n        bytes32 tokenId,\n        bool notify,\n        bytes memory operatorNotificationData\n    ) external;\n\n    /**\n     * @dev Returns whether `operator` address is an operator for a given `tokenId`.\n     *\n     * @param operator The address to query operator status for.\n     * @param tokenId The token ID to check if `operator` is allowed to operate on.\n     *\n     * @return `true` if `operator` is an operator for `tokenId`, `false` otherwise.\n     *\n     * @custom:requirements\n     * - `tokenId` must exist.\n     * - caller must be the current {tokenOwnerOf} `tokenId`.\n     *\n     * @custom:info The tokenOwner is its own operator.\n     */\n    function isOperatorFor(\n        address operator,\n        bytes32 tokenId\n    ) external view returns (bool);\n\n    /**\n     * @dev Returns all `operator` addresses that are allowed to transfer or burn a specific `tokenId` on behalf of its owner.\n     *\n     * @param tokenId The token ID to get the operators for.\n     * @return An array of operators allowed to transfer or burn a specific `tokenId`.\n     *\n     * Requirements\n     * - `tokenId` must exist.\n     */\n    function getOperatorsOf(\n        bytes32 tokenId\n    ) external view returns (address[] memory);\n\n    // --- Transfer functionality\n\n    /**\n     * @dev Transfer a given `tokenId` token from the `from` address to the `to` address.\n     *\n     * If operators are set for a specific `tokenId`, all the operators are revoked after the tokenId have been transferred.\n     *\n     * The `force` parameter MUST be set to `true` when transferring tokens to Externally Owned Accounts (EOAs)\n     * or contracts that do not implement the LSP1 standard.\n     *\n     * @param from The address that owns the given `tokenId`.\n     * @param to The address that will receive the `tokenId`.\n     * @param tokenId The token ID to transfer.\n     * @param force When set to `true`, the `to` address CAN be any addres.\n     * When set to `false`, the `to` address MUST be a contract that supports the LSP1 UniversalReceiver standard.\n     * @param data Any additional data the caller wants included in the emitted event, and sent in the hooks of the `from` and `to` addresses.\n     *\n     * @custom:requirements\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` and `to` cannot be the same address (`from` cannot send the `tokenId` to itself).\n     * - `from` must own the given `tokenId`.\n     * - If the caller is not `from`, it must be an operator for the `tokenId`.\n     *\n     * @custom:events\n     * - {Transfer} event when the `tokenId` is successfully transferred.\n     *\n     * @custom:hint The `force` parameter **MUST be set to `true`** to transfer tokens to Externally Owned Accounts (EOAs)\n     * or contracts that do not implement the LSP1 Universal Receiver Standard. Otherwise the function will revert making the transfer fail.\n     *\n     * @custom:info if the `to` address is a contract that implements LSP1, it will always be notified via its `universalReceiver(...)` function, regardless if `force` is set to `true` or `false`.\n     *\n     * @custom:warning Be aware that when either the sender or the recipient can have logic that revert in their `universalReceiver(...)` function when being notified.\n     * This even if the `force` was set to `true`.\n     */\n    function transfer(\n        address from,\n        address to,\n        bytes32 tokenId,\n        bool force,\n        bytes memory data\n    ) external;\n\n    /**\n     * @dev Transfers multiple tokens at once based on the arrays of `from`, `to` and `tokenId`.\n     * If any transfer fails, the whole call will revert.\n     *\n     * @param from An array of sending addresses.\n     * @param to An array of recipient addresses.\n     * @param tokenId An array of token IDs to transfer.\n     * @param force When set to `true`, `to` may be any address.\n     * When set to `false`, `to` must be a contract that supports the LSP1 standard and not revert.\n     * @param data Any additional data the caller wants included in the emitted event, and sent in the hooks to the `from` and `to` addresses.\n     *\n     *\n     * @custom:requirements\n     * - The arrays of `from`, `to` and `tokenId` must have the same length.\n     * - no values in the `from` array can be the zero address.\n     * - no values in the `to` array can be the zero address.\n     * - `from` and `to` cannot be the same address at the same index on each arrays.\n     * - each `tokenId` must be owned by `from`.\n     * - If the caller is not `from`, it must be an operator of each `tokenId`.\n     *\n     * @custom:events\n     * - {Transfer} events on each successful token transfer.\n     */\n    function transferBatch(\n        address[] memory from,\n        address[] memory to,\n        bytes32[] memory tokenId,\n        bool[] memory force,\n        bytes[] memory data\n    ) external;\n\n    /**\n     * @notice Executing the following batch of abi-encoded function calls on the contract: `data`.\n     *\n     * @dev Allows a caller to batch different function calls in one call. Perform a `delegatecall` on self, to call different functions with preserving the context.\n     * @param data An array of ABI encoded function calls to be called on the contract.\n     * @return results An array of abi-encoded data returned by the functions executed.\n     */\n    function batchCalls(\n        bytes[] calldata data\n    ) external returns (bytes[] memory results);\n}\n"},"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8Constants.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// --- ERC165 interface ids\nbytes4 constant _INTERFACEID_LSP8 = 0x3a271706;\n\n// --- ERC725Y Data Keys\n\n// keccak256('LSP8TokenIdFormat')\nbytes32 constant _LSP8_TOKENID_FORMAT_KEY = 0xf675e9361af1c1664c1868cfa3eb97672d6b1a513aa5b81dec34c9ee330e818d;\n\n// keccak256('LSP8TokenMetadataBaseURI')\nbytes32 constant _LSP8_TOKEN_METADATA_BASE_URI = 0x1a7628600c3bac7101f53697f48df381ddc36b9015e7d7c9c5633d1252aa2843;\n\n// keccak256('LSP8ReferenceContract')\nbytes32 constant _LSP8_REFERENCE_CONTRACT = 0x708e7b881795f2e6b6c2752108c177ec89248458de3bf69d0d43480b3e5034e6;\n\n// --- Token Hooks\n\n// keccak256('LSP8Tokens_SenderNotification')\nbytes32 constant _TYPEID_LSP8_TOKENSSENDER = 0xb23eae7e6d1564b295b4c3e3be402d9a2f0776c57bdf365903496f6fa481ab00;\n\n// keccak256('LSP8Tokens_RecipientNotification')\nbytes32 constant _TYPEID_LSP8_TOKENSRECIPIENT = 0x0b084a55ebf70fd3c06fd755269dac2212c4d3f0f4d09079780bfa50c1b2984d;\n\n// keccak256('LSP8Tokens_OperatorNotification')\nbytes32 constant _TYPEID_LSP8_TOKENOPERATOR = 0x8a1c15a8799f71b547e08e2bcb2e85257e81b0a07eee2ce6712549eef1f00970;\n\n// --- Token IDs Format\n\nuint256 constant _LSP8_TOKENID_FORMAT_NUMBER = 0;\nuint256 constant _LSP8_TOKENID_FORMAT_STRING = 1;\nuint256 constant _LSP8_TOKENID_FORMAT_ADDRESS = 2;\nuint256 constant _LSP8_TOKENID_FORMAT_UNIQUE_ID = 3;\nuint256 constant _LSP8_TOKENID_FORMAT_HASH = 4;\n\nuint256 constant _LSP8_TOKENID_FORMAT_MIXED_DEFAULT_NUMBER = 100;\nuint256 constant _LSP8_TOKENID_FORMAT_MIXED_DEFAULT_STRING = 101;\nuint256 constant _LSP8_TOKENID_FORMAT_MIXED_DEFAULT_ADDRESS = 102;\nuint256 constant _LSP8_TOKENID_FORMAT_MIXED_DEFAULT_UNIQUE_ID = 103;\nuint256 constant _LSP8_TOKENID_FORMAT_MIXED_DEFAULT_HASH = 104;\n"},"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8Errors.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// --- Errors\n\n/**\n * @dev Reverts when `tokenId` has not been minted.\n */\nerror LSP8NonExistentTokenId(bytes32 tokenId);\n\n/**\n * @dev Reverts when `caller` is not the `tokenOwner` of the `tokenId`.\n */\nerror LSP8NotTokenOwner(address tokenOwner, bytes32 tokenId, address caller);\n\n/**\n * @dev Reverts when `caller` is not an allowed operator for `tokenId`.\n */\nerror LSP8NotTokenOperator(bytes32 tokenId, address caller);\n\n/**\n * @dev Reverts when `operator` is already authorized for the `tokenId`.\n */\nerror LSP8OperatorAlreadyAuthorized(address operator, bytes32 tokenId);\n\n/**\n * @dev Reverts when trying to set the zero address as an operator.\n */\nerror LSP8CannotUseAddressZeroAsOperator();\n\n/**\n * @dev Reverts when trying to send token to the zero address.\n */\nerror LSP8CannotSendToAddressZero();\n\n/**\n * @dev Reverts when specifying the same address for `from` and `to` in a token transfer.\n */\nerror LSP8CannotSendToSelf();\n\n/**\n * @dev Reverts when `operator` is not an operator for the `tokenId`.\n */\nerror LSP8NonExistingOperator(address operator, bytes32 tokenId);\n\n/**\n * @dev Reverts when `tokenId` has already been minted.\n */\nerror LSP8TokenIdAlreadyMinted(bytes32 tokenId);\n\n/**\n * @dev Reverts when the parameters used for `transferBatch` have different lengths.\n */\nerror LSP8InvalidTransferBatch();\n\n/**\n * @dev Reverts if the `tokenReceiver` does not implement LSP1\n * when minting or transferring tokens with `bool force` set as `false`.\n */\nerror LSP8NotifyTokenReceiverContractMissingLSP1Interface(\n    address tokenReceiver\n);\n\n/**\n * @dev Reverts if the `tokenReceiver` is an EOA\n * when minting or transferring tokens with `bool force` set as `false`.\n */\nerror LSP8NotifyTokenReceiverIsEOA(address tokenReceiver);\n\n/**\n * @dev Reverts when trying to authorize or revoke the token's owner as an operator.\n */\nerror LSP8TokenOwnerCannotBeOperator();\n\n/**\n * @dev Error occurs when sending native tokens to the LSP8 contract without sending any data.\n *\n * E.g. Sending value without passing a bytes4 function selector to call a LSP17 Extension.\n *\n * @notice LSP8 contract cannot receive native tokens.\n */\nerror LSP8TokenContractCannotHoldValue();\n\n/**\n * @dev Reverts when trying to edit the data key `LSP8TokenIdFormat` after the identifiable digital asset contract has been deployed.\n * The `LSP8TokenIdFormat` data key is located inside the ERC725Y Data key-value store of the identifiable digital asset contract.\n * It can be set only once inside the constructor/initializer when the identifiable digital asset contract is being deployed.\n */\nerror LSP8TokenIdFormatNotEditable();\n\n/**\n * @dev Reverts when the length of the token IDs data arrays is not equal\n */\nerror LSP8TokenIdsDataLengthMismatch();\n\n/**\n * @dev Reverts when empty arrays is passed to the function\n */\nerror LSP8TokenIdsDataEmptyArray();\n\n/**\n * @dev Reverts when a batch call failed.\n * @notice Batch call failed.\n */\nerror LSP8BatchCallFailed(uint256 callIndex);\n"},"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAsset.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.12;\n\n// interfaces\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\n\n// modules\nimport {ERC725YCore} from \"@erc725/smart-contracts/contracts/ERC725YCore.sol\";\nimport {\n    LSP8IdentifiableDigitalAssetCore\n} from \"./LSP8IdentifiableDigitalAssetCore.sol\";\nimport {\n    LSP4DigitalAssetMetadata\n} from \"../LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadata.sol\";\n\nimport {\n    LSP4DigitalAssetMetadataCore\n} from \"../LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadataCore.sol\";\n\nimport {LSP17Extendable} from \"../LSP17ContractExtension/LSP17Extendable.sol\";\n\n// libraries\nimport {LSP2Utils} from \"../LSP2ERC725YJSONSchema/LSP2Utils.sol\";\n\n// constants\nimport {_INTERFACEID_LSP8, _LSP8_TOKENID_FORMAT_KEY} from \"./LSP8Constants.sol\";\n\n// errors\nimport {\n    LSP8TokenContractCannotHoldValue,\n    LSP8TokenIdFormatNotEditable\n} from \"./LSP8Errors.sol\";\n\nimport {\n    _LSP17_EXTENSION_PREFIX\n} from \"../LSP17ContractExtension/LSP17Constants.sol\";\n\n// errors\n\nimport {\n    NoExtensionFoundForFunctionSelector,\n    InvalidFunctionSelector,\n    InvalidExtensionAddress\n} from \"../LSP17ContractExtension/LSP17Errors.sol\";\n\n/**\n * @title Implementation of a LSP8 Identifiable Digital Asset, a contract that represents a non-fungible token.\n * @author Matthew Stevens\n *\n * @dev Standard implementation contract of the LSP8 standard.\n *\n * Minting and transferring are done by providing a unique `tokenId`.\n * This implementation is agnostic to the way tokens are created.\n * A supply mechanism has to be added in a derived contract using {_mint}\n * For a generic mechanism, see {LSP7Mintable}.\n */\nabstract contract LSP8IdentifiableDigitalAsset is\n    LSP4DigitalAssetMetadata,\n    LSP8IdentifiableDigitalAssetCore,\n    LSP17Extendable\n{\n    /**\n     * @notice Deploying a LSP8IdentifiableDigitalAsset with name `name_`, symbol `symbol_`, owned by address `newOwner_`\n     * with tokenId format `lsp8TokenIdFormat_`.\n     *\n     * @dev Deploy a `LSP8IdentifiableDigitalAsset` contract and set the tokenId format inside the ERC725Y storage of the contract.\n     * This will also set the token `name_` and `symbol_` under the ERC725Y data keys `LSP4TokenName` and `LSP4TokenSymbol`.\n     *\n     * @param name_ The name of the token\n     * @param symbol_ The symbol of the token\n     * @param newOwner_ The owner of the the token-Metadata\n     * @param lsp4TokenType_ The type of token this digital asset contract represents (`0` = Token, `1` = NFT, `2` = Collection).\n     * @param lsp8TokenIdFormat_ The format of tokenIds (= NFTs) that this contract will create.\n     *\n     * @custom:warning Make sure the tokenId format provided on deployment is correct, as it can only be set once\n     * and cannot be changed in the ERC725Y storage after the contract has been deployed.\n     */\n    constructor(\n        string memory name_,\n        string memory symbol_,\n        address newOwner_,\n        uint256 lsp4TokenType_,\n        uint256 lsp8TokenIdFormat_\n    ) LSP4DigitalAssetMetadata(name_, symbol_, newOwner_, lsp4TokenType_) {\n        LSP4DigitalAssetMetadata._setData(\n            _LSP8_TOKENID_FORMAT_KEY,\n            abi.encode(lsp8TokenIdFormat_)\n        );\n    }\n\n    // fallback function\n\n    /**\n     * @notice The `fallback` function was called with the following amount of native tokens: `msg.value`; and the following calldata: `callData`.\n     *\n     * @dev Achieves the goal of [LSP-17-ContractExtension] standard by extending the contract to handle calls of functions that do not exist natively,\n     * forwarding the function call to the extension address mapped to the function being called.\n     *\n     * This function is executed when:\n     *    - Sending data of length less than 4 bytes to the contract.\n     *    - The first 4 bytes of the calldata do not match any publicly callable functions from the contract ABI.\n     *    - Receiving native tokens\n     *\n     * 1. If the data is equal or longer than 4 bytes, the [ERC-725Y] storage is queried with the following data key: [_LSP17_EXTENSION_PREFIX] + `bytes4(msg.sig)` (Check [LSP-2-ERC725YJSONSchema] for encoding the data key)\n     *\n     *   - If there is no address stored under the following data key, revert with {NoExtensionFoundForFunctionSelector(bytes4)}. The data key relative to `bytes4(0)` is an exception, where no reverts occurs if there is no extension address stored under. This exception is made to allow users to send random data (graffiti) to the account and to be able to react on it.\n     *\n     *   - If there is an address, forward the `msg.data` to the extension using the CALL opcode, appending 52 bytes (20 bytes of `msg.sender` and 32 bytes of `msg.value`). Return what the calls returns, or revert if the call failed.\n     *\n     * 2. If the data sent to this function is of length less than 4 bytes (not a function selector), revert.\n     */\n    // solhint-disable-next-line no-complex-fallback\n    fallback(\n        bytes calldata callData\n    ) external payable virtual returns (bytes memory) {\n        if (msg.data.length < 4) {\n            revert InvalidFunctionSelector(callData);\n        }\n        return _fallbackLSP17Extendable(callData);\n    }\n\n    /**\n     * @dev Reverts whenever someone tries to send native tokens to a LSP8 contract.\n     * @notice LSP8 contract cannot receive native tokens.\n     */\n    receive() external payable virtual {\n        // revert on empty calls with no value\n        if (msg.value == 0) {\n            revert InvalidFunctionSelector(hex\"00000000\");\n        }\n\n        revert LSP8TokenContractCannotHoldValue();\n    }\n\n    /**\n     * @dev Forwards the call with the received value to an extension mapped to a function selector.\n     *\n     * Calls {_getExtensionAndForwardValue} to get the address of the extension mapped to the function selector being\n     * called on the account. If there is no extension, the address(0) will be returned.\n     * We will always forward the value to the extension, as the LSP8 contract is not supposed to hold any native tokens.\n     *\n     * Reverts if there is no extension for the function being called.\n     *\n     * If there is an extension for the function selector being called, it calls the extension with the\n     * CALL opcode, passing the {msg.data} appended with the 20 bytes of the {msg.sender} and\n     * 32 bytes of the {msg.value}\n     *\n     * @custom:info The LSP8 Token contract should not hold any native tokens. Any native tokens received by the contract\n     * will be forwarded to the extension address mapped to the selector from `msg.sig`.\n     */\n    function _fallbackLSP17Extendable(\n        bytes calldata callData\n    ) internal virtual override returns (bytes memory) {\n        // If there is a function selector\n        (address extension, ) = _getExtensionAndForwardValue(msg.sig);\n\n        // if no extension was found, revert\n        if (extension == address(0))\n            revert NoExtensionFoundForFunctionSelector(msg.sig);\n\n        (bool success, bytes memory result) = extension.call{value: msg.value}(\n            abi.encodePacked(callData, msg.sender, msg.value)\n        );\n\n        if (success) {\n            return result;\n        } else {\n            // `mload(result)` -> offset in memory where `result.length` is located\n            // `add(result, 32)` -> offset in memory where `result` data starts\n            // solhint-disable no-inline-assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let resultdata_size := mload(result)\n                revert(add(result, 32), resultdata_size)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the extension address stored under the following data key:\n     * - {_LSP17_EXTENSION_PREFIX} + `<bytes4>` (Check [LSP2-ERC725YJSONSchema] for encoding the data key).\n     * - If no extension is stored, returns the address(0).\n     */\n    function _getExtensionAndForwardValue(\n        bytes4 functionSelector\n    ) internal view virtual override returns (address, bool) {\n        // Generate the data key relevant for the functionSelector being called\n        bytes32 mappedExtensionDataKey = LSP2Utils.generateMappingKey(\n            _LSP17_EXTENSION_PREFIX,\n            functionSelector\n        );\n\n        // Check if there is an extension stored under the generated data key\n        bytes memory extensionAddress = ERC725YCore._getData(\n            mappedExtensionDataKey\n        );\n        if (extensionAddress.length != 20 && extensionAddress.length != 0)\n            revert InvalidExtensionAddress(extensionAddress);\n\n        return (address(bytes20(extensionAddress)), true);\n    }\n\n    /**\n     * @inheritdoc IERC165\n     */\n    function supportsInterface(\n        bytes4 interfaceId\n    )\n        public\n        view\n        virtual\n        override(IERC165, ERC725YCore, LSP17Extendable)\n        returns (bool)\n    {\n        return\n            interfaceId == _INTERFACEID_LSP8 ||\n            super.supportsInterface(interfaceId) ||\n            LSP17Extendable._supportsInterfaceInERC165Extension(interfaceId);\n    }\n\n    /**\n     * @inheritdoc LSP4DigitalAssetMetadata\n     * @dev The ERC725Y data key `_LSP8_TOKENID_FORMAT_KEY` cannot be changed\n     * once the identifiable digital asset contract has been deployed.\n     */\n    function _setData(\n        bytes32 dataKey,\n        bytes memory dataValue\n    )\n        internal\n        virtual\n        override(LSP4DigitalAssetMetadata, LSP4DigitalAssetMetadataCore)\n    {\n        if (dataKey == _LSP8_TOKENID_FORMAT_KEY) {\n            revert LSP8TokenIdFormatNotEditable();\n        }\n        LSP4DigitalAssetMetadata._setData(dataKey, dataValue);\n    }\n}\n"},"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAssetCore.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.12;\n\n// interfaces\nimport {\n    ILSP1UniversalReceiver as ILSP1\n} from \"../LSP1UniversalReceiver/ILSP1UniversalReceiver.sol\";\nimport {\n    ILSP8IdentifiableDigitalAsset\n} from \"./ILSP8IdentifiableDigitalAsset.sol\";\n\n// modules\n\nimport {\n    LSP4DigitalAssetMetadataCore\n} from \"../LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadataCore.sol\";\n\n// libraries\nimport {\n    EnumerableSet\n} from \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\nimport {\n    ERC165Checker\n} from \"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\";\nimport {LSP1Utils} from \"../LSP1UniversalReceiver/LSP1Utils.sol\";\n\n// errors\nimport {\n    LSP8NonExistentTokenId,\n    LSP8NotTokenOwner,\n    LSP8CannotUseAddressZeroAsOperator,\n    LSP8TokenOwnerCannotBeOperator,\n    LSP8OperatorAlreadyAuthorized,\n    LSP8NotTokenOperator,\n    LSP8InvalidTransferBatch,\n    LSP8NonExistingOperator,\n    LSP8CannotSendToAddressZero,\n    LSP8TokenIdAlreadyMinted,\n    LSP8CannotSendToSelf,\n    LSP8NotifyTokenReceiverContractMissingLSP1Interface,\n    LSP8NotifyTokenReceiverIsEOA,\n    LSP8TokenIdsDataLengthMismatch,\n    LSP8TokenIdsDataEmptyArray,\n    LSP8BatchCallFailed\n} from \"./LSP8Errors.sol\";\n\n// constants\nimport {_INTERFACEID_LSP1} from \"../LSP1UniversalReceiver/LSP1Constants.sol\";\nimport {\n    _TYPEID_LSP8_TOKENOPERATOR,\n    _TYPEID_LSP8_TOKENSSENDER,\n    _TYPEID_LSP8_TOKENSRECIPIENT\n} from \"./LSP8Constants.sol\";\n\n/**\n * @title LSP8IdentifiableDigitalAsset contract\n * @author Matthew Stevens\n * @dev Core Implementation of a LSP8 compliant contract.\n */\nabstract contract LSP8IdentifiableDigitalAssetCore is\n    LSP4DigitalAssetMetadataCore,\n    ILSP8IdentifiableDigitalAsset\n{\n    using EnumerableSet for EnumerableSet.AddressSet;\n    using EnumerableSet for EnumerableSet.Bytes32Set;\n\n    // --- Storage\n\n    uint256 internal _existingTokens;\n\n    // Mapping from `tokenId` to `tokenOwner`\n    mapping(bytes32 => address) internal _tokenOwners;\n\n    // Mapping `tokenOwner` to owned tokenIds\n    mapping(address => EnumerableSet.Bytes32Set) internal _ownedTokens;\n\n    // Mapping a `tokenId` to its authorized operator addresses.\n    mapping(bytes32 => EnumerableSet.AddressSet) internal _operators;\n\n    mapping(address => EnumerableSet.Bytes32Set) internal _tokenIdsForOperator;\n\n    // --- Token queries\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _existingTokens;\n    }\n\n    // --- Token owner queries\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function balanceOf(\n        address tokenOwner\n    ) public view virtual override returns (uint256) {\n        return _ownedTokens[tokenOwner].length();\n    }\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function tokenOwnerOf(\n        bytes32 tokenId\n    ) public view virtual override returns (address) {\n        address tokenOwner = _tokenOwners[tokenId];\n\n        if (tokenOwner == address(0)) {\n            revert LSP8NonExistentTokenId(tokenId);\n        }\n\n        return tokenOwner;\n    }\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function tokenIdsOf(\n        address tokenOwner\n    ) public view virtual override returns (bytes32[] memory) {\n        return _ownedTokens[tokenOwner].values();\n    }\n\n    // --- TokenId Metadata functionality\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function getDataForTokenId(\n        bytes32 tokenId,\n        bytes32 dataKey\n    ) public view virtual override returns (bytes memory dataValue) {\n        return _getDataForTokenId(tokenId, dataKey);\n    }\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function getDataBatchForTokenIds(\n        bytes32[] memory tokenIds,\n        bytes32[] memory dataKeys\n    ) public view virtual override returns (bytes[] memory dataValues) {\n        dataValues = new bytes[](tokenIds.length);\n\n        for (uint256 i; i < tokenIds.length; ) {\n            dataValues[i] = _getDataForTokenId(tokenIds[i], dataKeys[i]);\n\n            // Increment the iterator in unchecked block to save gas\n            unchecked {\n                ++i;\n            }\n        }\n\n        return dataValues;\n    }\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function setDataForTokenId(\n        bytes32 tokenId,\n        bytes32 dataKey,\n        bytes memory dataValue\n    ) public virtual override onlyOwner {\n        _setDataForTokenId(tokenId, dataKey, dataValue);\n    }\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function setDataBatchForTokenIds(\n        bytes32[] memory tokenIds,\n        bytes32[] memory dataKeys,\n        bytes[] memory dataValues\n    ) public virtual override onlyOwner {\n        if (\n            tokenIds.length != dataKeys.length ||\n            dataKeys.length != dataValues.length\n        ) {\n            revert LSP8TokenIdsDataLengthMismatch();\n        }\n\n        if (tokenIds.length == 0) {\n            revert LSP8TokenIdsDataEmptyArray();\n        }\n\n        for (uint256 i; i < tokenIds.length; ) {\n            _setDataForTokenId(tokenIds[i], dataKeys[i], dataValues[i]);\n\n            // Increment the iterator in unchecked block to save gas\n            unchecked {\n                ++i;\n            }\n        }\n    }\n\n    // --- General functionality\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     *\n     * @custom:info It's not possible to send value along the functions call due to the use of `delegatecall`.\n     */\n    function batchCalls(\n        bytes[] calldata data\n    ) public virtual override returns (bytes[] memory results) {\n        results = new bytes[](data.length);\n        for (uint256 i; i < data.length; ) {\n            (bool success, bytes memory result) = address(this).delegatecall(\n                data[i]\n            );\n\n            if (!success) {\n                // Look for revert reason and bubble it up if present\n                if (result.length != 0) {\n                    // The easiest way to bubble the revert reason is using memory via assembly\n                    // solhint-disable no-inline-assembly\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        let returndata_size := mload(result)\n                        revert(add(32, result), returndata_size)\n                    }\n                } else {\n                    revert LSP8BatchCallFailed({callIndex: i});\n                }\n            }\n\n            results[i] = result;\n\n            unchecked {\n                ++i;\n            }\n        }\n    }\n\n    // --- Operator functionality\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function authorizeOperator(\n        address operator,\n        bytes32 tokenId,\n        bytes memory operatorNotificationData\n    ) public virtual override {\n        address tokenOwner = tokenOwnerOf(tokenId);\n\n        if (tokenOwner != msg.sender) {\n            revert LSP8NotTokenOwner(tokenOwner, tokenId, msg.sender);\n        }\n\n        if (operator == address(0)) {\n            revert LSP8CannotUseAddressZeroAsOperator();\n        }\n\n        if (tokenOwner == operator) {\n            revert LSP8TokenOwnerCannotBeOperator();\n        }\n\n        bool isAdded = _operators[tokenId].add(operator);\n        if (!isAdded) revert LSP8OperatorAlreadyAuthorized(operator, tokenId);\n\n        emit OperatorAuthorizationChanged(\n            operator,\n            tokenOwner,\n            tokenId,\n            operatorNotificationData\n        );\n\n        bytes memory lsp1Data = abi.encode(\n            msg.sender,\n            tokenId,\n            true, // authorized\n            operatorNotificationData\n        );\n\n        _notifyTokenOperator(operator, lsp1Data);\n    }\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function revokeOperator(\n        address operator,\n        bytes32 tokenId,\n        bool notify,\n        bytes memory operatorNotificationData\n    ) public virtual override {\n        address tokenOwner = tokenOwnerOf(tokenId);\n\n        if (tokenOwner != msg.sender) {\n            revert LSP8NotTokenOwner(tokenOwner, tokenId, msg.sender);\n        }\n\n        if (operator == address(0)) {\n            revert LSP8CannotUseAddressZeroAsOperator();\n        }\n\n        if (tokenOwner == operator) {\n            revert LSP8TokenOwnerCannotBeOperator();\n        }\n\n        _revokeOperator(\n            operator,\n            tokenOwner,\n            tokenId,\n            notify,\n            operatorNotificationData\n        );\n\n        if (notify) {\n            bytes memory lsp1Data = abi.encode(\n                msg.sender,\n                tokenId,\n                false, // unauthorized\n                operatorNotificationData\n            );\n\n            _notifyTokenOperator(operator, lsp1Data);\n        }\n    }\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function isOperatorFor(\n        address operator,\n        bytes32 tokenId\n    ) public view virtual override returns (bool) {\n        _existsOrError(tokenId);\n\n        return _isOperatorOrOwner(operator, tokenId);\n    }\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function getOperatorsOf(\n        bytes32 tokenId\n    ) public view virtual override returns (address[] memory) {\n        _existsOrError(tokenId);\n\n        return _operators[tokenId].values();\n    }\n\n    /**\n     * @dev verifies if the `caller` is operator or owner for the `tokenId`\n     * @return true if `caller` is either operator or owner\n     */\n    function _isOperatorOrOwner(\n        address caller,\n        bytes32 tokenId\n    ) internal view virtual returns (bool) {\n        return (caller == tokenOwnerOf(tokenId) ||\n            _operators[tokenId].contains(caller));\n    }\n\n    // --- Transfer functionality\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function transfer(\n        address from,\n        address to,\n        bytes32 tokenId,\n        bool force,\n        bytes memory data\n    ) public virtual override {\n        if (!_isOperatorOrOwner(msg.sender, tokenId)) {\n            revert LSP8NotTokenOperator(tokenId, msg.sender);\n        }\n\n        _transfer(from, to, tokenId, force, data);\n    }\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function transferBatch(\n        address[] memory from,\n        address[] memory to,\n        bytes32[] memory tokenId,\n        bool[] memory force,\n        bytes[] memory data\n    ) public virtual override {\n        uint256 fromLength = from.length;\n        if (\n            fromLength != to.length ||\n            fromLength != tokenId.length ||\n            fromLength != force.length ||\n            fromLength != data.length\n        ) {\n            revert LSP8InvalidTransferBatch();\n        }\n\n        for (uint256 i; i < fromLength; ) {\n            transfer(from[i], to[i], tokenId[i], force[i], data[i]);\n\n            unchecked {\n                ++i;\n            }\n        }\n    }\n\n    /**\n     * @dev removes `operator` from the list of operators for the `tokenId`\n     */\n    function _revokeOperator(\n        address operator,\n        address tokenOwner,\n        bytes32 tokenId,\n        bool notified,\n        bytes memory operatorNotificationData\n    ) internal virtual {\n        bool isRemoved = _operators[tokenId].remove(operator);\n        if (!isRemoved) revert LSP8NonExistingOperator(operator, tokenId);\n\n        emit OperatorRevoked(\n            operator,\n            tokenOwner,\n            tokenId,\n            notified,\n            operatorNotificationData\n        );\n    }\n\n    /**\n     * @dev revoke all the current operators for a specific `tokenId` token which belongs to `tokenOwner`.\n     *\n     * @param tokenOwner The address that is the owner of the `tokenId`.\n     * @param tokenId The token to remove the associated operators for.\n     */\n    function _clearOperators(\n        address tokenOwner,\n        bytes32 tokenId\n    ) internal virtual {\n        // here is a good example of why having multiple operators will be expensive.. we\n        // need to clear them on token transfer\n        //\n        // NOTE: this may cause a tx to fail if there is too many operators to clear, in which case\n        // the tokenOwner needs to call `revokeOperator` until there is less operators to clear and\n        // the desired `transfer` or `burn` call can succeed.\n        EnumerableSet.AddressSet storage operatorsForTokenId = _operators[\n            tokenId\n        ];\n\n        uint256 operatorListLength = operatorsForTokenId.length();\n        address operator;\n        for (uint256 i; i < operatorListLength; ) {\n            // we are emptying the list, always remove from index 0\n            operator = operatorsForTokenId.at(0);\n            _revokeOperator(operator, tokenOwner, tokenId, false, \"\");\n\n            unchecked {\n                ++i;\n            }\n        }\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens start existing when they are minted ({_mint}), and stop existing when they are burned ({_burn}).\n     */\n    function _exists(bytes32 tokenId) internal view virtual returns (bool) {\n        return _tokenOwners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev When `tokenId` does not exist then revert with an error.\n     */\n    function _existsOrError(bytes32 tokenId) internal view virtual {\n        if (!_exists(tokenId)) {\n            revert LSP8NonExistentTokenId(tokenId);\n        }\n    }\n\n    /**\n     * @dev Create `tokenId` by minting it and transfers it to `to`.\n     *\n     * @custom:info Any logic in the:\n     * - {_beforeTokenTransfer} function will run before updating the balances and ownership of `tokenId`s.\n     * - {_afterTokenTransfer} function will run after updating the balances and ownership of `tokenId`s, **but before notifying the recipient via LSP1**.\n     *\n     * @param to The address that will receive the minted `tokenId`.\n     * @param tokenId The token ID to create (= mint).\n     * @param force When set to `true`, `to` may be any address. When set to `false`, `to` must be a contract that supports the LSP1 standard.\n     * @param data Any additional data the caller wants included in the emitted event, and sent in the hook of the `to` address.\n     *\n     * @custom:requirements\n     * - `tokenId` must not exist and not have been already minted.\n     * - `to` cannot be the zero address.\n\n     * @custom:events {Transfer} event with `address(0)` as `from` address.\n     */\n    function _mint(\n        address to,\n        bytes32 tokenId,\n        bool force,\n        bytes memory data\n    ) internal virtual {\n        if (to == address(0)) {\n            revert LSP8CannotSendToAddressZero();\n        }\n\n        _beforeTokenTransfer(address(0), to, tokenId, data);\n\n        // Check that `tokenId` was not minted inside the `_beforeTokenTransfer` hook\n        if (_exists(tokenId)) {\n            revert LSP8TokenIdAlreadyMinted(tokenId);\n        }\n\n        // token being minted\n        ++_existingTokens;\n\n        _ownedTokens[to].add(tokenId);\n        _tokenOwners[tokenId] = to;\n\n        emit Transfer(msg.sender, address(0), to, tokenId, force, data);\n\n        _afterTokenTransfer(address(0), to, tokenId, data);\n\n        bytes memory lsp1Data = abi.encode(\n            msg.sender,\n            address(0),\n            to,\n            tokenId,\n            data\n        );\n        _notifyTokenReceiver(to, force, lsp1Data);\n    }\n\n    /**\n     * @dev Burn a specific `tokenId`, removing the `tokenId` from the {tokenIdsOf} the caller and decreasing its {balanceOf} by -1.\n     * This will also clear all the operators allowed to transfer the `tokenId`.\n     *\n     * The owner of the `tokenId` will be notified about the `tokenId` being transferred through its LSP1 {universalReceiver}\n     * function, if it is a contract that supports the LSP1 interface. Its {universalReceiver} function will receive\n     * all the parameters in the calldata packed encoded.\n     *\n     * @custom:info Any logic in the:\n     * - {_beforeTokenTransfer} function will run before updating the balances and ownership of `tokenId`s.\n     * - {_afterTokenTransfer} function will run after updating the balances and ownership of `tokenId`s, **but before notifying the sender via LSP1**.\n     *\n     * @param tokenId The token to burn.\n     * @param data Any additional data the caller wants included in the emitted event, and sent in the LSP1 hook on the token owner's address.\n     *\n     * @custom:hint In dApps, you can know which addresses are burning tokens by listening for the `Transfer` event and filter with the zero address as `to`.\n     *\n     * @custom:requirements\n     * - `tokenId` must exist.\n     *\n     * @custom:events {Transfer} event with `address(0)` as the `to` address.\n     */\n    function _burn(bytes32 tokenId, bytes memory data) internal virtual {\n        address tokenOwner = tokenOwnerOf(tokenId);\n\n        _beforeTokenTransfer(tokenOwner, address(0), tokenId, data);\n\n        // Re-fetch and update `tokenOwner` in case `tokenId`\n        // was transferred inside the `_beforeTokenTransfer` hook\n        tokenOwner = tokenOwnerOf(tokenId);\n\n        // token being burned\n        --_existingTokens;\n\n        _clearOperators(tokenOwner, tokenId);\n\n        _ownedTokens[tokenOwner].remove(tokenId);\n        delete _tokenOwners[tokenId];\n\n        emit Transfer(msg.sender, tokenOwner, address(0), tokenId, false, data);\n\n        _afterTokenTransfer(tokenOwner, address(0), tokenId, data);\n\n        bytes memory lsp1Data = abi.encode(\n            msg.sender,\n            tokenOwner,\n            address(0),\n            tokenId,\n            data\n        );\n\n        _notifyTokenSender(tokenOwner, lsp1Data);\n    }\n\n    /**\n     * @dev Change the owner of the `tokenId` from `from` to `to`.\n     *\n     * Both the sender and recipient will be notified of the `tokenId` being transferred through their LSP1 {universalReceiver}\n     * function, if they are contracts that support the LSP1 interface. Their `universalReceiver` function will receive\n     * all the parameters in the calldata packed encoded.\n     *\n     * @custom:info Any logic in the:\n     * - {_beforeTokenTransfer} function will run before updating the balances and ownership of `tokenId`s.\n     * - {_afterTokenTransfer} function will run after updating the balances and ownership of `tokenId`s, **but before notifying the sender/recipient via LSP1**.\n     *\n     * @param from The sender address.\n     * @param to The recipient address.\n     * @param tokenId The token to transfer.\n     * @param force When set to `true`, `to` may be any address. When set to `false`, `to` must be a contract that supports the LSP1 standard.\n     * @param data Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.\n     *\n     * @custom:requirements\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * @custom:events {Transfer} event.\n     *\n     * @custom:danger This internal function does not check if the sender is authorized or not to operate on the `tokenId`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        bytes32 tokenId,\n        bool force,\n        bytes memory data\n    ) internal virtual {\n        if (from == to) {\n            revert LSP8CannotSendToSelf();\n        }\n\n        address tokenOwner = tokenOwnerOf(tokenId);\n        if (tokenOwner != from) {\n            revert LSP8NotTokenOwner(tokenOwner, tokenId, from);\n        }\n\n        if (to == address(0)) {\n            revert LSP8CannotSendToAddressZero();\n        }\n\n        _beforeTokenTransfer(from, to, tokenId, data);\n\n        // Re-fetch and update `tokenOwner` in case `tokenId`\n        // was transferred inside the `_beforeTokenTransfer` hook\n        tokenOwner = tokenOwnerOf(tokenId);\n\n        _clearOperators(from, tokenId);\n\n        _ownedTokens[from].remove(tokenId);\n        _ownedTokens[to].add(tokenId);\n        _tokenOwners[tokenId] = to;\n\n        emit Transfer(msg.sender, from, to, tokenId, force, data);\n\n        _afterTokenTransfer(from, to, tokenId, data);\n\n        bytes memory lsp1Data = abi.encode(msg.sender, from, to, tokenId, data);\n\n        _notifyTokenSender(from, lsp1Data);\n        _notifyTokenReceiver(to, force, lsp1Data);\n    }\n\n    /**\n     * @dev Sets data for a specific `tokenId` and `dataKey` in the ERC725Y storage\n     * The ERC725Y data key is the hash of the `tokenId` and `dataKey` concatenated\n     * @param tokenId The unique identifier for a token.\n     * @param dataKey The key for the data to set.\n     * @param dataValue The value to set for the given data key.\n     * @custom:events {TokenIdDataChanged} event.\n     */\n    function _setDataForTokenId(\n        bytes32 tokenId,\n        bytes32 dataKey,\n        bytes memory dataValue\n    ) internal virtual {\n        _store[keccak256(bytes.concat(tokenId, dataKey))] = dataValue;\n        emit TokenIdDataChanged(tokenId, dataKey, dataValue);\n    }\n\n    /**\n     * @dev Retrieves data for a specific `tokenId` and `dataKey` from the ERC725Y storage\n     * The ERC725Y data key is the hash of the `tokenId` and `dataKey` concatenated\n     * @param tokenId The unique identifier for a token.\n     * @param dataKey The key for the data to retrieve.\n     * @return dataValues The data value associated with the given `tokenId` and `dataKey`.\n     */\n    function _getDataForTokenId(\n        bytes32 tokenId,\n        bytes32 dataKey\n    ) internal view virtual returns (bytes memory dataValues) {\n        return _store[keccak256(bytes.concat(tokenId, dataKey))];\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer, including minting and burning.\n     * Allows to run custom logic before updating balances and notifiying sender/recipient by overriding this function.\n     *\n     * @param from The sender address\n     * @param to The recipient address\n     * @param tokenId The tokenId to transfer\n     * @param data The data sent alongside the transfer\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        bytes32 tokenId,\n        bytes memory data // solhint-disable-next-line no-empty-blocks\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer, including minting and burning.\n     * Allows to run custom logic after updating balances, but **before notifiying sender/recipient via LSP1** by overriding this function.\n     *\n     * @param from The sender address\n     * @param to The recipient address\n     * @param tokenId The tokenId to transfer\n     * @param data The data sent alongside the transfer\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        bytes32 tokenId,\n        bytes memory data // solhint-disable-next-line no-empty-blocks\n    ) internal virtual {}\n\n    /**\n     * @dev Attempt to notify the operator `operator` about the `tokenId` being authorized.\n     * This is done by calling its {universalReceiver} function with the `_TYPEID_LSP8_TOKENOPERATOR` as typeId, if `operator` is a contract that supports the LSP1 interface.\n     * If `operator` is an EOA or a contract that does not support the LSP1 interface, nothing will happen and no notification will be sent.\n     \n     * @param operator The address to call the {universalReceiver} function on.                                                                                                                                                                                   \n     * @param lsp1Data the data to be sent to the `operator` address in the `universalReceiver` call.\n     */\n    function _notifyTokenOperator(\n        address operator,\n        bytes memory lsp1Data\n    ) internal virtual {\n        LSP1Utils.notifyUniversalReceiver(\n            operator,\n            _TYPEID_LSP8_TOKENOPERATOR,\n            lsp1Data\n        );\n    }\n\n    /**\n     * @dev Attempt to notify the token sender `from` about the `tokenId` being transferred.\n     * This is done by calling its {universalReceiver} function with the `_TYPEID_LSP8_TOKENSSENDER` as typeId, if `from` is a contract that supports the LSP1 interface.\n     * If `from` is an EOA or a contract that does not support the LSP1 interface, nothing will happen and no notification will be sent.\n     \n     * @param from The address to call the {universalReceiver} function on.                                                                                                                                                                                   \n     * @param lsp1Data the data to be sent to the `from` address in the `universalReceiver` call.\n     */\n    function _notifyTokenSender(\n        address from,\n        bytes memory lsp1Data\n    ) internal virtual {\n        LSP1Utils.notifyUniversalReceiver(\n            from,\n            _TYPEID_LSP8_TOKENSSENDER,\n            lsp1Data\n        );\n    }\n\n    /**\n     * @dev Attempt to notify the token receiver `to` about the `tokenId` being received.\n     * This is done by calling its {universalReceiver} function with the `_TYPEID_LSP8_TOKENSRECIPIENT` as typeId, if `to` is a contract that supports the LSP1 interface.\n     *\n     * If `to` is is an EOA or a contract that does not support the LSP1 interface, the behaviour will depend on the `force` boolean flag.\n     * - if `force` is set to `true`, nothing will happen and no notification will be sent.\n     * - if `force` is set to `false, the transaction will revert.\n     *\n     * @param to The address to call the {universalReceiver} function on.\n     * @param force A boolean that describe if transfer to a `to` address that does not support LSP1 is allowed or not.\n     * @param lsp1Data The data to be sent to the `to` address in the `universalReceiver(...)` call.\n     */\n    function _notifyTokenReceiver(\n        address to,\n        bool force,\n        bytes memory lsp1Data\n    ) internal virtual {\n        if (\n            ERC165Checker.supportsERC165InterfaceUnchecked(\n                to,\n                _INTERFACEID_LSP1\n            )\n        ) {\n            ILSP1(to).universalReceiver(_TYPEID_LSP8_TOKENSRECIPIENT, lsp1Data);\n        } else if (!force) {\n            if (to.code.length != 0) {\n                revert LSP8NotifyTokenReceiverContractMissingLSP1Interface(to);\n            } else {\n                revert LSP8NotifyTokenReceiverIsEOA(to);\n            }\n        }\n    }\n}\n"},"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/presets/ILSP8Mintable.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// interfaces\nimport {\n    ILSP8IdentifiableDigitalAsset\n} from \"../ILSP8IdentifiableDigitalAsset.sol\";\n\n/**\n * @dev LSP8 extension, mintable.\n */\ninterface ILSP8Mintable is ILSP8IdentifiableDigitalAsset {\n    /**\n     * @param to The address to mint tokens\n     * @param tokenId The tokenId to mint\n     * @param force When set to TRUE, to may be any address but\n     * when set to FALSE to must be a contract that supports LSP1 UniversalReceiver\n     * @param data Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.\n     * @dev Mints `amount` tokens and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function mint(\n        address to,\n        bytes32 tokenId,\n        bool force,\n        bytes memory data\n    ) external;\n}\n"},"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/presets/LSP8Mintable.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.12;\n\n// interfaces\nimport {ILSP8Mintable} from \"./ILSP8Mintable.sol\";\n\n// modules\nimport {\n    LSP8IdentifiableDigitalAsset\n} from \"../LSP8IdentifiableDigitalAsset.sol\";\n\n/**\n * @title LSP8IdentifiableDigitalAsset deployable preset contract with a public {mint} function callable only by the contract {owner}.\n */\ncontract LSP8Mintable is LSP8IdentifiableDigitalAsset, ILSP8Mintable {\n    /**\n     * @notice Deploying a `LSP8Mintable` token contract with: token name = `name_`, token symbol = `symbol_`, and\n     * address `newOwner_` as the token contract owner.\n     *\n     * @param name_ The name of the token.\n     * @param symbol_ The symbol of the token.\n     * @param newOwner_ The owner of the token contract.\n     * @param lsp4TokenType_ The type of token this digital asset contract represents (`0` = Token, `1` = NFT, `2` = Collection).\n     * @param lsp8TokenIdFormat_ The format of tokenIds (= NFTs) that this contract will create.\n     */\n    constructor(\n        string memory name_,\n        string memory symbol_,\n        address newOwner_,\n        uint256 lsp4TokenType_,\n        uint256 lsp8TokenIdFormat_\n    )\n        LSP8IdentifiableDigitalAsset(\n            name_,\n            symbol_,\n            newOwner_,\n            lsp4TokenType_,\n            lsp8TokenIdFormat_\n        )\n    {}\n\n    /**\n     * @notice Minting tokenId `tokenId` for address `to` with the additional data `data` (Note: allow non-LSP1 recipient is set to `force`).\n     *\n     * @dev Public {_mint} function only callable by the {owner}.\n     *\n     * @param to The address that will receive the minted `tokenId`.\n     * @param tokenId The tokenId to mint.\n     * @param force Set to `false` to ensure that you are minting for a recipient that implements LSP1, `false` otherwise for forcing the minting.\n     * @param data Any addition data to be sent alongside the minting.\n     */\n    function mint(\n        address to,\n        bytes32 tokenId,\n        bool force,\n        bytes memory data\n    ) public virtual override onlyOwner {\n        _mint(to, tokenId, force, data);\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/introspection/ERC165Checker.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Library used to query support of an interface declared via {IERC165}.\n *\n * Note that these functions return the actual result of the query: they do not\n * `revert` if an interface is not supported. It is up to the caller to decide\n * what to do in these cases.\n */\nlibrary ERC165Checker {\n    // As per the EIP-165 spec, no interface should ever match 0xffffffff\n    bytes4 private constant _INTERFACE_ID_INVALID = 0xffffffff;\n\n    /**\n     * @dev Returns true if `account` supports the {IERC165} interface.\n     */\n    function supportsERC165(address account) internal view returns (bool) {\n        // Any contract that implements ERC165 must explicitly indicate support of\n        // InterfaceId_ERC165 and explicitly indicate non-support of InterfaceId_Invalid\n        return\n            supportsERC165InterfaceUnchecked(account, type(IERC165).interfaceId) &&\n            !supportsERC165InterfaceUnchecked(account, _INTERFACE_ID_INVALID);\n    }\n\n    /**\n     * @dev Returns true if `account` supports the interface defined by\n     * `interfaceId`. Support for {IERC165} itself is queried automatically.\n     *\n     * See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(address account, bytes4 interfaceId) internal view returns (bool) {\n        // query support of both ERC165 as per the spec and support of _interfaceId\n        return supportsERC165(account) && supportsERC165InterfaceUnchecked(account, interfaceId);\n    }\n\n    /**\n     * @dev Returns a boolean array where each value corresponds to the\n     * interfaces passed in and whether they're supported or not. This allows\n     * you to batch check interfaces for a contract where your expectation\n     * is that some interfaces may not be supported.\n     *\n     * See {IERC165-supportsInterface}.\n     *\n     * _Available since v3.4._\n     */\n    function getSupportedInterfaces(\n        address account,\n        bytes4[] memory interfaceIds\n    ) internal view returns (bool[] memory) {\n        // an array of booleans corresponding to interfaceIds and whether they're supported or not\n        bool[] memory interfaceIdsSupported = new bool[](interfaceIds.length);\n\n        // query support of ERC165 itself\n        if (supportsERC165(account)) {\n            // query support of each interface in interfaceIds\n            for (uint256 i = 0; i < interfaceIds.length; i++) {\n                interfaceIdsSupported[i] = supportsERC165InterfaceUnchecked(account, interfaceIds[i]);\n            }\n        }\n\n        return interfaceIdsSupported;\n    }\n\n    /**\n     * @dev Returns true if `account` supports all the interfaces defined in\n     * `interfaceIds`. Support for {IERC165} itself is queried automatically.\n     *\n     * Batch-querying can lead to gas savings by skipping repeated checks for\n     * {IERC165} support.\n     *\n     * See {IERC165-supportsInterface}.\n     */\n    function supportsAllInterfaces(address account, bytes4[] memory interfaceIds) internal view returns (bool) {\n        // query support of ERC165 itself\n        if (!supportsERC165(account)) {\n            return false;\n        }\n\n        // query support of each interface in interfaceIds\n        for (uint256 i = 0; i < interfaceIds.length; i++) {\n            if (!supportsERC165InterfaceUnchecked(account, interfaceIds[i])) {\n                return false;\n            }\n        }\n\n        // all interfaces supported\n        return true;\n    }\n\n    /**\n     * @notice Query if a contract implements an interface, does not check ERC165 support\n     * @param account The address of the contract to query for support of an interface\n     * @param interfaceId The interface identifier, as specified in ERC-165\n     * @return true if the contract at account indicates support of the interface with\n     * identifier interfaceId, false otherwise\n     * @dev Assumes that account contains a contract that supports ERC165, otherwise\n     * the behavior of this method is undefined. This precondition can be checked\n     * with {supportsERC165}.\n     *\n     * Some precompiled contracts will falsely indicate support for a given interface, so caution\n     * should be exercised when using this function.\n     *\n     * Interface identification is specified in ERC-165.\n     */\n    function supportsERC165InterfaceUnchecked(address account, bytes4 interfaceId) internal view returns (bool) {\n        // prepare call\n        bytes memory encodedParams = abi.encodeWithSelector(IERC165.supportsInterface.selector, interfaceId);\n\n        // perform static call\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly {\n            success := staticcall(30000, account, add(encodedParams, 0x20), mload(encodedParams), 0x00, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0x00)\n        }\n\n        return success && returnSize >= 0x20 && returnValue > 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (lastIndex != toDeleteIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastValue;\n                // Update the index for the moved value\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"contracts/BasicLSP8.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.12;\n\n// modules\nimport {LSP8Mintable} from \"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/presets/LSP8Mintable.sol\";\n\ncontract BasicLSP8 is LSP8Mintable {\n    constructor(\n        string memory nftCollectionName,\n        string memory nftCollectionSymbol,\n        address contractOwner,\n        uint256 lsp4Type,\n        uint256 lsp8TokenIdFormat\n    )\n        LSP8Mintable(\n            nftCollectionName,\n            nftCollectionSymbol,\n            contractOwner,\n            lsp4Type,\n            lsp8TokenIdFormat\n        )\n    {}\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@erc725/smart-contracts/contracts/ERC725Y.sol":{"ast":{"absolutePath":"@erc725/smart-contracts/contracts/ERC725Y.sol","exportedSymbols":{"ERC725Y":[35],"ERC725YCore":[270],"OwnableCannotSetZeroAddressAsOwner":[407],"OwnableUnset":[402]},"id":36,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:0"},{"absolutePath":"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol","file":"./custom/OwnableUnset.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":36,"sourceUnit":403,"src":"75:55:0","symbolAliases":[{"foreign":{"id":2,"name":"OwnableUnset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"83:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_OwnableUnset_$402_$","typeString":"type(contract OwnableUnset)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@erc725/smart-contracts/contracts/ERC725YCore.sol","file":"./ERC725YCore.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":36,"sourceUnit":271,"src":"131:46:0","symbolAliases":[{"foreign":{"id":4,"name":"ERC725YCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"139:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC725YCore_$270_$","typeString":"type(contract ERC725YCore)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@erc725/smart-contracts/contracts/errors.sol","file":"./errors.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":36,"sourceUnit":455,"src":"189:64:0","symbolAliases":[{"foreign":{"id":6,"name":"OwnableCannotSetZeroAddressAsOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"197:34:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9,"name":"ERC725YCore","nodeType":"IdentifierPath","referencedDeclaration":270,"src":"669:11:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"669:11:0"}],"canonicalName":"ERC725Y","contractDependencies":[],"contractKind":"contract","documentation":{"id":8,"nodeType":"StructuredDocumentation","src":"255:393:0","text":" @title Deployable implementation with `constructor` of ERC725Y, a generic data key/value store.\n @author Fabian Vogelsteller <fabian@lukso.network>\n @dev ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time.\n It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage."},"fullyImplemented":true,"id":35,"linearizedBaseContracts":[35,270,505,3796,4002,402],"name":"ERC725Y","nameLocation":"658:7:0","nodeType":"ContractDefinition","nodes":[{"body":{"id":33,"nodeType":"Block","src":"1095:162:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":21,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":16,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1109:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":19,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1133:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":18,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1125:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":17,"name":"address","nodeType":"ElementaryTypeName","src":"1125:7:0","typeDescriptions":{}}},"id":20,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1125:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1109:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":26,"nodeType":"IfStatement","src":"1105:100:0","trueBody":{"id":25,"nodeType":"Block","src":"1137:68:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":22,"name":"OwnableCannotSetZeroAddressAsOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"1158:34:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":23,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1158:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":24,"nodeType":"RevertStatement","src":"1151:43:0"}]}},{"expression":{"arguments":[{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1237:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":27,"name":"OwnableUnset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"1214:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_OwnableUnset_$402_$","typeString":"type(contract OwnableUnset)"}},"id":29,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_setOwner","nodeType":"MemberAccess","referencedDeclaration":401,"src":"1214:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":31,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1214:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":32,"nodeType":"ExpressionStatement","src":"1214:36:0"}]},"documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"687:361:0","text":" @notice Deploying an ERC725Y smart contract and setting address `initialOwner` as the contract owner.\n @dev Deploy a new ERC725Y contract with the provided `initialOwner` as the contract {owner}.\n @param initialOwner the owner of the contract.\n @custom:requirements\n - `initialOwner` CANNOT be the zero address."},"id":34,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":14,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13,"mutability":"mutable","name":"initialOwner","nameLocation":"1073:12:0","nodeType":"VariableDeclaration","scope":34,"src":"1065:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"1065:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1064:22:0"},"returnParameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"1095:0:0"},"scope":35,"src":"1053:204:0","stateMutability":"payable","virtual":false,"visibility":"public"}],"scope":36,"src":"649:610:0","usedErrors":[407,412,448,451,454]}],"src":"39:1221:0"},"id":0},"@erc725/smart-contracts/contracts/ERC725YCore.sol":{"ast":{"absolutePath":"@erc725/smart-contracts/contracts/ERC725YCore.sol","exportedSymbols":{"ERC165":[3796],"ERC725YCore":[270],"ERC725Y_DataKeysValuesEmptyArray":[451],"ERC725Y_DataKeysValuesLengthMismatch":[448],"ERC725Y_MsgValueDisallowed":[454],"IERC165":[4002],"IERC725Y":[505],"OwnableUnset":[402],"_INTERFACEID_ERC725Y":[278]},"id":271,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":37,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:1"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":39,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":271,"sourceUnit":4003,"src":"78:80:1","symbolAliases":[{"foreign":{"id":38,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"86:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$4002_$","typeString":"type(contract IERC165)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol","file":"./interfaces/IERC725Y.sol","id":41,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":271,"sourceUnit":506,"src":"159:51:1","symbolAliases":[{"foreign":{"id":40,"name":"IERC725Y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"167:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC725Y_$505_$","typeString":"type(contract IERC725Y)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"@openzeppelin/contracts/utils/introspection/ERC165.sol","id":43,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":271,"sourceUnit":3797,"src":"223:78:1","symbolAliases":[{"foreign":{"id":42,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"231:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC165_$3796_$","typeString":"type(contract ERC165)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol","file":"./custom/OwnableUnset.sol","id":45,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":271,"sourceUnit":403,"src":"302:55:1","symbolAliases":[{"foreign":{"id":44,"name":"OwnableUnset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"310:12:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_OwnableUnset_$402_$","typeString":"type(contract OwnableUnset)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@erc725/smart-contracts/contracts/constants.sol","file":"./constants.sol","id":47,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":271,"sourceUnit":294,"src":"372:53:1","symbolAliases":[{"foreign":{"id":46,"name":"_INTERFACEID_ERC725Y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"380:20:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@erc725/smart-contracts/contracts/errors.sol","file":"./errors.sol","id":51,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":271,"sourceUnit":455,"src":"427:142:1","symbolAliases":[{"foreign":{"id":48,"name":"ERC725Y_MsgValueDisallowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"440:26:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":49,"name":"ERC725Y_DataKeysValuesLengthMismatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"472:36:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":50,"name":"ERC725Y_DataKeysValuesEmptyArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"514:32:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":53,"name":"OwnableUnset","nodeType":"IdentifierPath","referencedDeclaration":402,"src":"986:12:1"},"id":54,"nodeType":"InheritanceSpecifier","src":"986:12:1"},{"baseName":{"id":55,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":3796,"src":"1000:6:1"},"id":56,"nodeType":"InheritanceSpecifier","src":"1000:6:1"},{"baseName":{"id":57,"name":"IERC725Y","nodeType":"IdentifierPath","referencedDeclaration":505,"src":"1008:8:1"},"id":58,"nodeType":"InheritanceSpecifier","src":"1008:8:1"}],"canonicalName":"ERC725YCore","contractDependencies":[],"contractKind":"contract","documentation":{"id":52,"nodeType":"StructuredDocumentation","src":"571:381:1","text":" @title Core implementation of ERC725Y sub-standard, a general data key/value store.\n @author Fabian Vogelsteller <fabian@lukso.network>\n @dev ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time.\n It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage."},"fullyImplemented":true,"id":270,"linearizedBaseContracts":[270,505,3796,4002,402],"name":"ERC725YCore","nameLocation":"971:11:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1023:77:1","text":" @dev Map `bytes32` data keys to their `bytes` data values."},"id":63,"mutability":"mutable","name":"_store","nameLocation":"1140:6:1","nodeType":"VariableDeclaration","scope":270,"src":"1105:41:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes)"},"typeName":{"id":62,"keyType":{"id":60,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1113:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1105:25:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes)"},"valueType":{"id":61,"name":"bytes","nodeType":"ElementaryTypeName","src":"1124:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"visibility":"internal"},{"baseFunctions":[476],"body":{"id":78,"nodeType":"Block","src":"1307:46:1","statements":[{"expression":{"id":76,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":72,"name":"dataValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":70,"src":"1317:9:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":74,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":66,"src":"1338:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":73,"name":"_getData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"1329:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32) view returns (bytes memory)"}},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1329:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"1317:29:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":77,"nodeType":"ExpressionStatement","src":"1317:29:1"}]},"documentation":{"id":64,"nodeType":"StructuredDocumentation","src":"1153:39:1","text":" @inheritdoc IERC725Y"},"functionSelector":"54f6127f","id":79,"implemented":true,"kind":"function","modifiers":[],"name":"getData","nameLocation":"1206:7:1","nodeType":"FunctionDefinition","overrides":{"id":68,"nodeType":"OverrideSpecifier","overrides":[],"src":"1265:8:1"},"parameters":{"id":67,"nodeType":"ParameterList","parameters":[{"constant":false,"id":66,"mutability":"mutable","name":"dataKey","nameLocation":"1231:7:1","nodeType":"VariableDeclaration","scope":79,"src":"1223:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":65,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1223:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1213:31:1"},"returnParameters":{"id":71,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"dataValue","nameLocation":"1296:9:1","nodeType":"VariableDeclaration","scope":79,"src":"1283:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":69,"name":"bytes","nodeType":"ElementaryTypeName","src":"1283:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1282:24:1"},"scope":270,"src":"1197:156:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[486],"body":{"id":125,"nodeType":"Block","src":"1531:330:1","statements":[{"expression":{"id":97,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":90,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":88,"src":"1541:10:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":94,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"1566:8:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1566:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":93,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1554:11:1","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory[] memory)"},"typeName":{"baseType":{"id":91,"name":"bytes","nodeType":"ElementaryTypeName","src":"1558:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":92,"nodeType":"ArrayTypeName","src":"1558:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}}},"id":96,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1554:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"src":"1541:41:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":98,"nodeType":"ExpressionStatement","src":"1541:41:1"},{"body":{"id":121,"nodeType":"Block","src":"1636:191:1","statements":[{"expression":{"id":115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":107,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":88,"src":"1650:10:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":109,"indexExpression":{"id":108,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"1661:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1650:13:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":111,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"1675:8:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":113,"indexExpression":{"id":112,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"1684:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1675:11:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":110,"name":"_getData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"1666:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32) view returns (bytes memory)"}},"id":114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1666:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"1650:37:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":116,"nodeType":"ExpressionStatement","src":"1650:37:1"},{"id":120,"nodeType":"UncheckedBlock","src":"1771:46:1","statements":[{"expression":{"id":118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"1799:3:1","subExpression":{"id":117,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"1801:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":119,"nodeType":"ExpressionStatement","src":"1799:3:1"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":103,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"1613:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":104,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"1617:8:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1617:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1613:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":122,"initializationExpression":{"assignments":[100],"declarations":[{"constant":false,"id":100,"mutability":"mutable","name":"i","nameLocation":"1606:1:1","nodeType":"VariableDeclaration","scope":122,"src":"1598:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":99,"name":"uint256","nodeType":"ElementaryTypeName","src":"1598:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":102,"initialValue":{"hexValue":"30","id":101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1610:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1598:13:1"},"nodeType":"ForStatement","src":"1593:234:1"},{"expression":{"id":123,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":88,"src":"1844:10:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"functionReturnParameters":89,"id":124,"nodeType":"Return","src":"1837:17:1"}]},"documentation":{"id":80,"nodeType":"StructuredDocumentation","src":"1359:39:1","text":" @inheritdoc IERC725Y"},"functionSelector":"dedff9c6","id":126,"implemented":true,"kind":"function","modifiers":[],"name":"getDataBatch","nameLocation":"1412:12:1","nodeType":"FunctionDefinition","overrides":{"id":85,"nodeType":"OverrideSpecifier","overrides":[],"src":"1486:8:1"},"parameters":{"id":84,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"dataKeys","nameLocation":"1451:8:1","nodeType":"VariableDeclaration","scope":126,"src":"1434:25:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":81,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1434:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":82,"nodeType":"ArrayTypeName","src":"1434:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"1424:41:1"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[{"constant":false,"id":88,"mutability":"mutable","name":"dataValues","nameLocation":"1519:10:1","nodeType":"VariableDeclaration","scope":126,"src":"1504:25:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":86,"name":"bytes","nodeType":"ElementaryTypeName","src":"1504:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":87,"nodeType":"ArrayTypeName","src":"1504:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"1503:27:1"},"scope":270,"src":"1403:458:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[494],"body":{"id":150,"nodeType":"Block","src":"2448:110:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":137,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2462:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"2462:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2475:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2462:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":144,"nodeType":"IfStatement","src":"2458:55:1","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":141,"name":"ERC725Y_MsgValueDisallowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"2485:26:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2485:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":143,"nodeType":"RevertStatement","src":"2478:35:1"}},{"expression":{"arguments":[{"id":146,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"2532:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":147,"name":"dataValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"2541:9:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":145,"name":"_setData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"2523:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2523:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":149,"nodeType":"ExpressionStatement","src":"2523:28:1"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"1867:454:1","text":" @inheritdoc IERC725Y\n @custom:requirements\n - SHOULD only be callable by the {owner}.\n @custom:warning\n **Note for developers:** despite the fact that this function is set as `payable`, if the function is not intended to receive value\n (= native tokens), **an additional check should be implemented to ensure that `msg.value` sent was equal to 0**.\n @custom:events {DataChanged} event."},"functionSelector":"7f23690c","id":151,"implemented":true,"kind":"function","modifiers":[{"id":135,"kind":"modifierInvocation","modifierName":{"id":134,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":324,"src":"2438:9:1"},"nodeType":"ModifierInvocation","src":"2438:9:1"}],"name":"setData","nameLocation":"2335:7:1","nodeType":"FunctionDefinition","overrides":{"id":133,"nodeType":"OverrideSpecifier","overrides":[],"src":"2429:8:1"},"parameters":{"id":132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"dataKey","nameLocation":"2360:7:1","nodeType":"VariableDeclaration","scope":151,"src":"2352:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":128,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2352:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":131,"mutability":"mutable","name":"dataValue","nameLocation":"2390:9:1","nodeType":"VariableDeclaration","scope":151,"src":"2377:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":130,"name":"bytes","nodeType":"ElementaryTypeName","src":"2377:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2342:63:1"},"returnParameters":{"id":136,"nodeType":"ParameterList","parameters":[],"src":"2448:0:1"},"scope":270,"src":"2326:232:1","stateMutability":"payable","virtual":true,"visibility":"public"},{"baseFunctions":[504],"body":{"id":214,"nodeType":"Block","src":"3216:623:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":164,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3314:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"3314:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3327:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3314:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"documentation":"@dev do not allow to send value by default when setting data in ERC725Y","id":171,"nodeType":"IfStatement","src":"3310:55:1","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":168,"name":"ERC725Y_MsgValueDisallowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"3337:26:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3337:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":170,"nodeType":"RevertStatement","src":"3330:35:1"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":172,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"3380:8:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3380:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":174,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":158,"src":"3399:10:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3399:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3380:36:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":181,"nodeType":"IfStatement","src":"3376:112:1","trueBody":{"id":180,"nodeType":"Block","src":"3418:70:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":177,"name":"ERC725Y_DataKeysValuesLengthMismatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"3439:36:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3439:38:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":179,"nodeType":"RevertStatement","src":"3432:45:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":182,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"3502:8:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3502:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3521:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3502:20:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":190,"nodeType":"IfStatement","src":"3498:92:1","trueBody":{"id":189,"nodeType":"Block","src":"3524:66:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":186,"name":"ERC725Y_DataKeysValuesEmptyArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"3545:32:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3545:34:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":188,"nodeType":"RevertStatement","src":"3538:41:1"}]}},{"body":{"id":212,"nodeType":"Block","src":"3643:190:1","statements":[{"expression":{"arguments":[{"baseExpression":{"id":200,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"3666:8:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":202,"indexExpression":{"id":201,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"3675:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3666:11:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":203,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":158,"src":"3679:10:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":205,"indexExpression":{"id":204,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"3690:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3679:13:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":199,"name":"_setData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"3657:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3657:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":207,"nodeType":"ExpressionStatement","src":"3657:36:1"},{"id":211,"nodeType":"UncheckedBlock","src":"3777:46:1","statements":[{"expression":{"id":209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"3805:3:1","subExpression":{"id":208,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"3807:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":210,"nodeType":"ExpressionStatement","src":"3805:3:1"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":195,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"3620:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":196,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"3624:8:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3624:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3620:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":213,"initializationExpression":{"assignments":[192],"declarations":[{"constant":false,"id":192,"mutability":"mutable","name":"i","nameLocation":"3613:1:1","nodeType":"VariableDeclaration","scope":213,"src":"3605:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":191,"name":"uint256","nodeType":"ElementaryTypeName","src":"3605:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":194,"initialValue":{"hexValue":"30","id":193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3617:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3605:13:1"},"nodeType":"ForStatement","src":"3600:233:1"}]},"documentation":{"id":152,"nodeType":"StructuredDocumentation","src":"2564:507:1","text":" @inheritdoc IERC725Y\n @custom:requirements\n - SHOULD only be callable by the {owner} of the contract.\n @custom:warning\n **Note for developers:** despite the fact that this function is set as `payable`, if the function is not intended to receive value\n (= native tokens), **an additional check should be implemented to ensure that `msg.value` sent was equal to 0**.\n @custom:events {DataChanged} event **for each data key/value pair set**."},"functionSelector":"97902421","id":215,"implemented":true,"kind":"function","modifiers":[{"id":162,"kind":"modifierInvocation","modifierName":{"id":161,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":324,"src":"3206:9:1"},"nodeType":"ModifierInvocation","src":"3206:9:1"}],"name":"setDataBatch","nameLocation":"3085:12:1","nodeType":"FunctionDefinition","overrides":{"id":160,"nodeType":"OverrideSpecifier","overrides":[],"src":"3197:8:1"},"parameters":{"id":159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":155,"mutability":"mutable","name":"dataKeys","nameLocation":"3124:8:1","nodeType":"VariableDeclaration","scope":215,"src":"3107:25:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":153,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3107:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":154,"nodeType":"ArrayTypeName","src":"3107:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":158,"mutability":"mutable","name":"dataValues","nameLocation":"3157:10:1","nodeType":"VariableDeclaration","scope":215,"src":"3142:25:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":156,"name":"bytes","nodeType":"ElementaryTypeName","src":"3142:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":157,"nodeType":"ArrayTypeName","src":"3142:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"3097:76:1"},"returnParameters":{"id":163,"nodeType":"ParameterList","parameters":[],"src":"3216:0:1"},"scope":270,"src":"3076:763:1","stateMutability":"payable","virtual":true,"visibility":"public"},{"body":{"id":227,"nodeType":"Block","src":"4439:39:1","statements":[{"expression":{"baseExpression":{"id":223,"name":"_store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"4456:6:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes storage ref)"}},"id":225,"indexExpression":{"id":224,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"4463:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4456:15:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"functionReturnParameters":222,"id":226,"nodeType":"Return","src":"4449:22:1"}]},"documentation":{"id":216,"nodeType":"StructuredDocumentation","src":"3845:485:1","text":" @dev Read the value stored under a specific `dataKey` inside the underlying ERC725Y storage,\n  represented as a mapping of `bytes32` data keys mapped to their `bytes` data values.\n ```solidity\n mapping(bytes32 => bytes) _store\n ```\n @param dataKey A bytes32 data key to read the associated `bytes` value from the store.\n @return dataValue The `bytes` value associated with the given `dataKey` in the ERC725Y storage."},"id":228,"implemented":true,"kind":"function","modifiers":[],"name":"_getData","nameLocation":"4344:8:1","nodeType":"FunctionDefinition","parameters":{"id":219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":218,"mutability":"mutable","name":"dataKey","nameLocation":"4370:7:1","nodeType":"VariableDeclaration","scope":228,"src":"4362:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":217,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4362:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4352:31:1"},"returnParameters":{"id":222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":221,"mutability":"mutable","name":"dataValue","nameLocation":"4428:9:1","nodeType":"VariableDeclaration","scope":228,"src":"4415:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":220,"name":"bytes","nodeType":"ElementaryTypeName","src":"4415:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4414:24:1"},"scope":270,"src":"4335:143:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":247,"nodeType":"Block","src":"5130:90:1","statements":[{"expression":{"id":240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":236,"name":"_store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"5140:6:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes storage ref)"}},"id":238,"indexExpression":{"id":237,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"5147:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5140:15:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":239,"name":"dataValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"5158:9:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"5140:27:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":241,"nodeType":"ExpressionStatement","src":"5140:27:1"},{"eventCall":{"arguments":[{"id":243,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"5194:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":244,"name":"dataValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"5203:9:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":242,"name":"DataChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"5182:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5182:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":246,"nodeType":"EmitStatement","src":"5177:36:1"}]},"documentation":{"id":229,"nodeType":"StructuredDocumentation","src":"4484:543:1","text":" @dev Write a `dataValue` to the underlying ERC725Y storage, represented as a mapping of\n `bytes32` data keys mapped to their `bytes` data values.\n ```solidity\n mapping(bytes32 => bytes) _store\n ```\n @param dataKey A bytes32 data key to write the associated `bytes` value to the store.\n @param dataValue The `bytes` value to associate with the given `dataKey` in the ERC725Y storage.\n @custom:events {DataChanged} event emitted after a successful `setData` call."},"id":248,"implemented":true,"kind":"function","modifiers":[],"name":"_setData","nameLocation":"5041:8:1","nodeType":"FunctionDefinition","parameters":{"id":234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":231,"mutability":"mutable","name":"dataKey","nameLocation":"5067:7:1","nodeType":"VariableDeclaration","scope":248,"src":"5059:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":230,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5059:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":233,"mutability":"mutable","name":"dataValue","nameLocation":"5097:9:1","nodeType":"VariableDeclaration","scope":248,"src":"5084:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":232,"name":"bytes","nodeType":"ElementaryTypeName","src":"5084:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5049:63:1"},"returnParameters":{"id":235,"nodeType":"ParameterList","parameters":[],"src":"5130:0:1"},"scope":270,"src":"5032:188:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[3795,4001],"body":{"id":268,"nodeType":"Block","src":"5390:123:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":259,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"5419:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":260,"name":"_INTERFACEID_ERC725Y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"5434:20:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"5419:35:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":264,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"5494:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":262,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"5470:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC725YCore_$270_$","typeString":"type(contract super ERC725YCore)"}},"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3795,"src":"5470:23:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5470:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5419:87:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":258,"id":267,"nodeType":"Return","src":"5400:106:1"}]},"documentation":{"id":249,"nodeType":"StructuredDocumentation","src":"5226:37:1","text":" @inheritdoc ERC165"},"functionSelector":"01ffc9a7","id":269,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"5277:17:1","nodeType":"FunctionDefinition","overrides":{"id":255,"nodeType":"OverrideSpecifier","overrides":[{"id":253,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":4002,"src":"5358:7:1"},{"id":254,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":3796,"src":"5367:6:1"}],"src":"5349:25:1"},"parameters":{"id":252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":251,"mutability":"mutable","name":"interfaceId","nameLocation":"5311:11:1","nodeType":"VariableDeclaration","scope":269,"src":"5304:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":250,"name":"bytes4","nodeType":"ElementaryTypeName","src":"5304:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"5294:34:1"},"returnParameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":269,"src":"5384:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":256,"name":"bool","nodeType":"ElementaryTypeName","src":"5384:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5383:6:1"},"scope":270,"src":"5268:245:1","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":271,"src":"953:4562:1","usedErrors":[407,412,448,451,454]}],"src":"39:5477:1"},"id":1},"@erc725/smart-contracts/contracts/constants.sol":{"ast":{"absolutePath":"@erc725/smart-contracts/contracts/constants.sol","exportedSymbols":{"OPERATION_0_CALL":[281],"OPERATION_1_CREATE":[284],"OPERATION_2_CREATE2":[287],"OPERATION_3_STATICCALL":[290],"OPERATION_4_DELEGATECALL":[293],"_INTERFACEID_ERC725X":[275],"_INTERFACEID_ERC725Y":[278]},"id":294,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":272,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"39:23:2"},{"constant":true,"id":275,"mutability":"constant","name":"_INTERFACEID_ERC725X","nameLocation":"104:20:2","nodeType":"VariableDeclaration","scope":294,"src":"88:49:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":273,"name":"bytes4","nodeType":"ElementaryTypeName","src":"88:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30783735343561636163","id":274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"127:10:2","typeDescriptions":{"typeIdentifier":"t_rational_1967500460_by_1","typeString":"int_const 1967500460"},"value":"0x7545acac"},"visibility":"internal"},{"constant":true,"id":278,"mutability":"constant","name":"_INTERFACEID_ERC725Y","nameLocation":"155:20:2","nodeType":"VariableDeclaration","scope":294,"src":"139:49:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":276,"name":"bytes4","nodeType":"ElementaryTypeName","src":"139:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30783632396161363934","id":277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"178:10:2","typeDescriptions":{"typeIdentifier":"t_rational_1654302356_by_1","typeString":"int_const 1654302356"},"value":"0x629aa694"},"visibility":"internal"},{"constant":true,"id":281,"mutability":"constant","name":"OPERATION_0_CALL","nameLocation":"235:16:2","nodeType":"VariableDeclaration","scope":294,"src":"218:37:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":279,"name":"uint256","nodeType":"ElementaryTypeName","src":"218:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"254:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"internal"},{"constant":true,"id":284,"mutability":"constant","name":"OPERATION_1_CREATE","nameLocation":"274:18:2","nodeType":"VariableDeclaration","scope":294,"src":"257:39:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":282,"name":"uint256","nodeType":"ElementaryTypeName","src":"257:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"295:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"constant":true,"id":287,"mutability":"constant","name":"OPERATION_2_CREATE2","nameLocation":"315:19:2","nodeType":"VariableDeclaration","scope":294,"src":"298:40:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":285,"name":"uint256","nodeType":"ElementaryTypeName","src":"298:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"337:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"internal"},{"constant":true,"id":290,"mutability":"constant","name":"OPERATION_3_STATICCALL","nameLocation":"357:22:2","nodeType":"VariableDeclaration","scope":294,"src":"340:43:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":288,"name":"uint256","nodeType":"ElementaryTypeName","src":"340:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"33","id":289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"382:1:2","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"internal"},{"constant":true,"id":293,"mutability":"constant","name":"OPERATION_4_DELEGATECALL","nameLocation":"402:24:2","nodeType":"VariableDeclaration","scope":294,"src":"385:45:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":291,"name":"uint256","nodeType":"ElementaryTypeName","src":"385:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"34","id":292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"429:1:2","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"visibility":"internal"}],"src":"39:393:2"},"id":2},"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol":{"ast":{"absolutePath":"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol","exportedSymbols":{"OwnableCallerNotTheOwner":[412],"OwnableCannotSetZeroAddressAsOwner":[407],"OwnableUnset":[402]},"id":403,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":295,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:3"},{"absolutePath":"@erc725/smart-contracts/contracts/errors.sol","file":"../errors.sol","id":298,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":403,"sourceUnit":455,"src":"67:101:3","symbolAliases":[{"foreign":{"id":296,"name":"OwnableCannotSetZeroAddressAsOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"80:34:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":297,"name":"OwnableCallerNotTheOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"120:24:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"OwnableUnset","contractDependencies":[],"contractKind":"contract","documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"170:317:3","text":" @title OwnableUnset\n @dev modified version of OpenZeppelin implementation, where:\n - _setOwner(address) function is internal, so this function can be used in constructor\n of contracts implementation (instead of using transferOwnership(address)\n - the contract does not inherit from Context contract"},"fullyImplemented":true,"id":402,"linearizedBaseContracts":[402],"name":"OwnableUnset","nameLocation":"506:12:3","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":301,"mutability":"mutable","name":"_owner","nameLocation":"541:6:3","nodeType":"VariableDeclaration","scope":402,"src":"525:22:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":300,"name":"address","nodeType":"ElementaryTypeName","src":"525:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":307,"name":"OwnershipTransferred","nameLocation":"560:20:3","nodeType":"EventDefinition","parameters":{"id":306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":303,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"606:13:3","nodeType":"VariableDeclaration","scope":307,"src":"590:29:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":302,"name":"address","nodeType":"ElementaryTypeName","src":"590:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":305,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"645:8:3","nodeType":"VariableDeclaration","scope":307,"src":"629:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":304,"name":"address","nodeType":"ElementaryTypeName","src":"629:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"580:79:3"},"src":"554:106:3"},{"body":{"id":315,"nodeType":"Block","src":"791:30:3","statements":[{"expression":{"id":313,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"808:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":312,"id":314,"nodeType":"Return","src":"801:13:3"}]},"documentation":{"id":308,"nodeType":"StructuredDocumentation","src":"666:65:3","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":316,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"745:5:3","nodeType":"FunctionDefinition","parameters":{"id":309,"nodeType":"ParameterList","parameters":[],"src":"750:2:3"},"returnParameters":{"id":312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":316,"src":"782:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":310,"name":"address","nodeType":"ElementaryTypeName","src":"782:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"781:9:3"},"scope":402,"src":"736:85:3","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":323,"nodeType":"Block","src":"930:41:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":319,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"940:11:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"940:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":321,"nodeType":"ExpressionStatement","src":"940:13:3"},{"id":322,"nodeType":"PlaceholderStatement","src":"963:1:3"}]},"documentation":{"id":317,"nodeType":"StructuredDocumentation","src":"827:77:3","text":" @dev Throws if called by any account other than the owner."},"id":324,"name":"onlyOwner","nameLocation":"918:9:3","nodeType":"ModifierDefinition","parameters":{"id":318,"nodeType":"ParameterList","parameters":[],"src":"927:2:3"},"src":"909:62:3","virtual":false,"visibility":"internal"},{"body":{"id":337,"nodeType":"Block","src":"1367:38:3","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1395:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1387:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"1387:7:3","typeDescriptions":{}}},"id":334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1387:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":330,"name":"_setOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"1377:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1377:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":336,"nodeType":"ExpressionStatement","src":"1377:21:3"}]},"documentation":{"id":325,"nodeType":"StructuredDocumentation","src":"977:331:3","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":338,"implemented":true,"kind":"function","modifiers":[{"id":328,"kind":"modifierInvocation","modifierName":{"id":327,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":324,"src":"1357:9:3"},"nodeType":"ModifierInvocation","src":"1357:9:3"}],"name":"renounceOwnership","nameLocation":"1322:17:3","nodeType":"FunctionDefinition","parameters":{"id":326,"nodeType":"ParameterList","parameters":[],"src":"1339:2:3"},"returnParameters":{"id":329,"nodeType":"ParameterList","parameters":[],"src":"1367:0:3"},"scope":402,"src":"1313:92:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":361,"nodeType":"Block","src":"1624:141:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":346,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"1638:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1658:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1650:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":347,"name":"address","nodeType":"ElementaryTypeName","src":"1650:7:3","typeDescriptions":{}}},"id":350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1650:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1638:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":356,"nodeType":"IfStatement","src":"1634:96:3","trueBody":{"id":355,"nodeType":"Block","src":"1662:68:3","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":352,"name":"OwnableCannotSetZeroAddressAsOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"1683:34:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1683:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":354,"nodeType":"RevertStatement","src":"1676:43:3"}]}},{"expression":{"arguments":[{"id":358,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"1749:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":357,"name":"_setOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"1739:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1739:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":360,"nodeType":"ExpressionStatement","src":"1739:19:3"}]},"documentation":{"id":339,"nodeType":"StructuredDocumentation","src":"1411:138:3","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":362,"implemented":true,"kind":"function","modifiers":[{"id":344,"kind":"modifierInvocation","modifierName":{"id":343,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":324,"src":"1614:9:3"},"nodeType":"ModifierInvocation","src":"1614:9:3"}],"name":"transferOwnership","nameLocation":"1563:17:3","nodeType":"FunctionDefinition","parameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":341,"mutability":"mutable","name":"newOwner","nameLocation":"1589:8:3","nodeType":"VariableDeclaration","scope":362,"src":"1581:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":340,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1580:18:3"},"returnParameters":{"id":345,"nodeType":"ParameterList","parameters":[],"src":"1624:0:3"},"scope":402,"src":"1554:211:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":378,"nodeType":"Block","src":"1883:111:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":366,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"1897:5:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1897:7:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":368,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1908:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1908:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1897:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":377,"nodeType":"IfStatement","src":"1893:95:3","trueBody":{"id":376,"nodeType":"Block","src":"1920:68:3","statements":[{"errorCall":{"arguments":[{"expression":{"id":372,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1966:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1966:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":371,"name":"OwnableCallerNotTheOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"1941:24:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1941:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":375,"nodeType":"RevertStatement","src":"1934:43:3"}]}}]},"documentation":{"id":363,"nodeType":"StructuredDocumentation","src":"1771:62:3","text":" @dev Throws if the sender is not the owner."},"id":379,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1847:11:3","nodeType":"FunctionDefinition","parameters":{"id":364,"nodeType":"ParameterList","parameters":[],"src":"1858:2:3"},"returnParameters":{"id":365,"nodeType":"ParameterList","parameters":[],"src":"1883:0:3"},"scope":402,"src":"1838:156:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":400,"nodeType":"Block","src":"2187:140:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":385,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"2201:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":386,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"2213:5:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2213:7:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2201:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":399,"nodeType":"IfStatement","src":"2197:124:3","trueBody":{"id":398,"nodeType":"Block","src":"2222:99:3","statements":[{"eventCall":{"arguments":[{"id":390,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"2262:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":391,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"2270:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":389,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"2241:20:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2241:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":393,"nodeType":"EmitStatement","src":"2236:43:3"},{"expression":{"id":396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":394,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"2293:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":395,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"2302:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2293:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":397,"nodeType":"ExpressionStatement","src":"2293:17:3"}]}}]},"documentation":{"id":380,"nodeType":"StructuredDocumentation","src":"2000:128:3","text":" @dev Changes the owner if `newOwner` and oldOwner are different\n This pattern is useful in inheritance."},"id":401,"implemented":true,"kind":"function","modifiers":[],"name":"_setOwner","nameLocation":"2142:9:3","nodeType":"FunctionDefinition","parameters":{"id":383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":382,"mutability":"mutable","name":"newOwner","nameLocation":"2160:8:3","nodeType":"VariableDeclaration","scope":401,"src":"2152:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":381,"name":"address","nodeType":"ElementaryTypeName","src":"2152:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2151:18:3"},"returnParameters":{"id":384,"nodeType":"ParameterList","parameters":[],"src":"2187:0:3"},"scope":402,"src":"2133:194:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":403,"src":"488:1841:3","usedErrors":[407,412]}],"src":"32:2298:3"},"id":3},"@erc725/smart-contracts/contracts/errors.sol":{"ast":{"absolutePath":"@erc725/smart-contracts/contracts/errors.sol","exportedSymbols":{"ERC725X_ContractDeploymentFailed":[436],"ERC725X_CreateOperationsRequireEmptyRecipientAddress":[433],"ERC725X_ExecuteParametersEmptyArray":[445],"ERC725X_ExecuteParametersLengthMismatch":[442],"ERC725X_InsufficientBalance":[419],"ERC725X_MsgValueDisallowedInDelegateCall":[430],"ERC725X_MsgValueDisallowedInStaticCall":[427],"ERC725X_NoContractBytecodeProvided":[439],"ERC725X_UnknownOperationType":[424],"ERC725Y_DataKeysValuesEmptyArray":[451],"ERC725Y_DataKeysValuesLengthMismatch":[448],"ERC725Y_MsgValueDisallowed":[454],"OwnableCallerNotTheOwner":[412],"OwnableCannotSetZeroAddressAsOwner":[407]},"id":455,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":404,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:4"},{"documentation":{"id":405,"nodeType":"StructuredDocumentation","src":"64:168:4","text":" @dev Reverts when trying to set `address(0)` as the contract owner when deploying the contract,\n initializing it or transferring ownership of the contract."},"id":407,"name":"OwnableCannotSetZeroAddressAsOwner","nameLocation":"239:34:4","nodeType":"ErrorDefinition","parameters":{"id":406,"nodeType":"ParameterList","parameters":[],"src":"273:2:4"},"src":"233:43:4"},{"documentation":{"id":408,"nodeType":"StructuredDocumentation","src":"278:141:4","text":" @dev Reverts when only the owner is allowed to call the function.\n @param callerAddress The address that tried to make the call."},"id":412,"name":"OwnableCallerNotTheOwner","nameLocation":"426:24:4","nodeType":"ErrorDefinition","parameters":{"id":411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":410,"mutability":"mutable","name":"callerAddress","nameLocation":"459:13:4","nodeType":"VariableDeclaration","scope":412,"src":"451:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":409,"name":"address","nodeType":"ElementaryTypeName","src":"451:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"450:23:4"},"src":"420:54:4"},{"documentation":{"id":413,"nodeType":"StructuredDocumentation","src":"476:336:4","text":" @dev Reverts when trying to send more native tokens `value` than available in current `balance`.\n @param balance The balance of native tokens of the ERC725X smart contract.\n @param value The amount of native tokens sent via `ERC725X.execute(...)`/`ERC725X.executeBatch(...)` that is greater than the contract's `balance`."},"id":419,"name":"ERC725X_InsufficientBalance","nameLocation":"819:27:4","nodeType":"ErrorDefinition","parameters":{"id":418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":415,"mutability":"mutable","name":"balance","nameLocation":"855:7:4","nodeType":"VariableDeclaration","scope":419,"src":"847:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":414,"name":"uint256","nodeType":"ElementaryTypeName","src":"847:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":417,"mutability":"mutable","name":"value","nameLocation":"872:5:4","nodeType":"VariableDeclaration","scope":419,"src":"864:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":416,"name":"uint256","nodeType":"ElementaryTypeName","src":"864:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"846:32:4"},"src":"813:66:4"},{"documentation":{"id":420,"nodeType":"StructuredDocumentation","src":"881:314:4","text":" @dev Reverts when the `operationTypeProvided` is none of the default operation types available.\n (CALL = 0; CREATE = 1; CREATE2 = 2; STATICCALL = 3; DELEGATECALL = 4)\n @param operationTypeProvided The unrecognised operation type number provided to `ERC725X.execute(...)`/`ERC725X.executeBatch(...)`."},"id":424,"name":"ERC725X_UnknownOperationType","nameLocation":"1202:28:4","nodeType":"ErrorDefinition","parameters":{"id":423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":422,"mutability":"mutable","name":"operationTypeProvided","nameLocation":"1239:21:4","nodeType":"VariableDeclaration","scope":424,"src":"1231:29:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":421,"name":"uint256","nodeType":"ElementaryTypeName","src":"1231:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1230:31:4"},"src":"1196:66:4"},{"documentation":{"id":425,"nodeType":"StructuredDocumentation","src":"1264:282:4","text":" @dev Reverts when trying to send native tokens (`value` / `values[]` parameter of {execute} or {executeBatch} functions) while making a `staticcall` (`operationType == 3`).\n Sending native tokens via `staticcall` is not allowed because it is a state changing operation."},"id":427,"name":"ERC725X_MsgValueDisallowedInStaticCall","nameLocation":"1553:38:4","nodeType":"ErrorDefinition","parameters":{"id":426,"nodeType":"ParameterList","parameters":[],"src":"1591:2:4"},"src":"1547:47:4"},{"documentation":{"id":428,"nodeType":"StructuredDocumentation","src":"1596:277:4","text":" @dev Reverts when trying to send native tokens (`value` / `values[]` parameter of {execute} or {executeBatch} functions) while making a `delegatecall` (`operationType == 4`).\n Sending native tokens via `staticcall` is not allowed because `msg.value` is persisting."},"id":430,"name":"ERC725X_MsgValueDisallowedInDelegateCall","nameLocation":"1880:40:4","nodeType":"ErrorDefinition","parameters":{"id":429,"nodeType":"ParameterList","parameters":[],"src":"1920:2:4"},"src":"1874:49:4"},{"documentation":{"id":431,"nodeType":"StructuredDocumentation","src":"1925:246:4","text":" @dev Reverts when passing a `to` address that is not `address(0)` (= address zero) while deploying a contract via {execute} or {executeBatch} functions.\n This error can occur using either operation type 1 (`CREATE`) or 2 (`CREATE2`)."},"id":433,"name":"ERC725X_CreateOperationsRequireEmptyRecipientAddress","nameLocation":"2178:52:4","nodeType":"ErrorDefinition","parameters":{"id":432,"nodeType":"ParameterList","parameters":[],"src":"2230:2:4"},"src":"2172:61:4"},{"documentation":{"id":434,"nodeType":"StructuredDocumentation","src":"2235:181:4","text":" @dev Reverts when contract deployment failed via {execute} or {executeBatch} functions,\n This error can occur using either operation type 1 (`CREATE`) or 2 (`CREATE2`)."},"id":436,"name":"ERC725X_ContractDeploymentFailed","nameLocation":"2423:32:4","nodeType":"ErrorDefinition","parameters":{"id":435,"nodeType":"ParameterList","parameters":[],"src":"2455:2:4"},"src":"2417:41:4"},{"documentation":{"id":437,"nodeType":"StructuredDocumentation","src":"2460:224:4","text":" @dev Reverts when no contract bytecode was provided as parameter when trying to deploy a contract via {execute} or {executeBatch}.\n This error can occur using either operation type 1 (`CREATE`) or 2 (`CREATE2`)."},"id":439,"name":"ERC725X_NoContractBytecodeProvided","nameLocation":"2691:34:4","nodeType":"ErrorDefinition","parameters":{"id":438,"nodeType":"ParameterList","parameters":[],"src":"2725:2:4"},"src":"2685:43:4"},{"documentation":{"id":440,"nodeType":"StructuredDocumentation","src":"2730:208:4","text":" @dev Reverts when there is not the same number of elements in the `operationTypes`, `targets` addresses, `values`, and `datas`\n array parameters provided when calling the {executeBatch} function."},"id":442,"name":"ERC725X_ExecuteParametersLengthMismatch","nameLocation":"2945:39:4","nodeType":"ErrorDefinition","parameters":{"id":441,"nodeType":"ParameterList","parameters":[],"src":"2984:2:4"},"src":"2939:48:4"},{"documentation":{"id":443,"nodeType":"StructuredDocumentation","src":"2989:114:4","text":" @dev Reverts when one of the array parameter provided to the {executeBatch} function is an empty array."},"id":445,"name":"ERC725X_ExecuteParametersEmptyArray","nameLocation":"3110:35:4","nodeType":"ErrorDefinition","parameters":{"id":444,"nodeType":"ParameterList","parameters":[],"src":"3145:2:4"},"src":"3104:44:4"},{"documentation":{"id":446,"nodeType":"StructuredDocumentation","src":"3150:175:4","text":" @dev Reverts when there is not the same number of elements in the `datakeys` and `dataValues`\n array parameters provided when calling the {setDataBatch} function."},"id":448,"name":"ERC725Y_DataKeysValuesLengthMismatch","nameLocation":"3332:36:4","nodeType":"ErrorDefinition","parameters":{"id":447,"nodeType":"ParameterList","parameters":[],"src":"3368:2:4"},"src":"3326:45:4"},{"documentation":{"id":449,"nodeType":"StructuredDocumentation","src":"3373:110:4","text":" @dev Reverts when one of the array parameter provided to {setDataBatch} function is an empty array."},"id":451,"name":"ERC725Y_DataKeysValuesEmptyArray","nameLocation":"3490:32:4","nodeType":"ErrorDefinition","parameters":{"id":450,"nodeType":"ParameterList","parameters":[],"src":"3522:2:4"},"src":"3484:41:4"},{"documentation":{"id":452,"nodeType":"StructuredDocumentation","src":"3527:87:4","text":" @dev Reverts when sending value to the {setData} or {setDataBatch} function."},"id":454,"name":"ERC725Y_MsgValueDisallowed","nameLocation":"3621:26:4","nodeType":"ErrorDefinition","parameters":{"id":453,"nodeType":"ParameterList","parameters":[],"src":"3647:2:4"},"src":"3615:35:4"}],"src":"39:3612:4"},"id":4},"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol":{"ast":{"absolutePath":"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol","exportedSymbols":{"IERC165":[4002],"IERC725Y":[505]},"id":506,"license":"CC0-1.0","nodeType":"SourceUnit","nodes":[{"id":456,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"36:23:5"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":458,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":506,"sourceUnit":4003,"src":"75:80:5","symbolAliases":[{"foreign":{"id":457,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"83:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$4002_$","typeString":"type(contract IERC165)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":460,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":4002,"src":"502:7:5"},"id":461,"nodeType":"InheritanceSpecifier","src":"502:7:5"}],"canonicalName":"IERC725Y","contractDependencies":[],"contractKind":"interface","documentation":{"id":459,"nodeType":"StructuredDocumentation","src":"157:322:5","text":" @title The interface for ERC725Y sub-standard, a generic data key/value store.\n @dev ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time.\n It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage."},"fullyImplemented":false,"id":505,"linearizedBaseContracts":[505,4002],"name":"IERC725Y","nameLocation":"490:8:5","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":462,"nodeType":"StructuredDocumentation","src":"516:373:5","text":" @notice The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\n @dev Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\n @param dataKey The data key for which a bytes value is set.\n @param dataValue The value to set for the given data key."},"id":468,"name":"DataChanged","nameLocation":"900:11:5","nodeType":"EventDefinition","parameters":{"id":467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":464,"indexed":true,"mutability":"mutable","name":"dataKey","nameLocation":"928:7:5","nodeType":"VariableDeclaration","scope":468,"src":"912:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":463,"name":"bytes32","nodeType":"ElementaryTypeName","src":"912:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":466,"indexed":false,"mutability":"mutable","name":"dataValue","nameLocation":"943:9:5","nodeType":"VariableDeclaration","scope":468,"src":"937:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":465,"name":"bytes","nodeType":"ElementaryTypeName","src":"937:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"911:42:5"},"src":"894:60:5"},{"documentation":{"id":469,"nodeType":"StructuredDocumentation","src":"960:361:5","text":" @notice Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\n @dev Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\n @param dataKey The data key for which to retrieve the value.\n @return dataValue The bytes value stored under the specified data key."},"functionSelector":"54f6127f","id":476,"implemented":false,"kind":"function","modifiers":[],"name":"getData","nameLocation":"1335:7:5","nodeType":"FunctionDefinition","parameters":{"id":472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":471,"mutability":"mutable","name":"dataKey","nameLocation":"1360:7:5","nodeType":"VariableDeclaration","scope":476,"src":"1352:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":470,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1352:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1342:31:5"},"returnParameters":{"id":475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":474,"mutability":"mutable","name":"dataValue","nameLocation":"1410:9:5","nodeType":"VariableDeclaration","scope":476,"src":"1397:22:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":473,"name":"bytes","nodeType":"ElementaryTypeName","src":"1397:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1396:24:5"},"scope":505,"src":"1326:95:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":477,"nodeType":"StructuredDocumentation","src":"1427:353:5","text":" @notice Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\n @dev Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\n @param dataKeys The array of keys which values to retrieve\n @return dataValues The array of data stored at multiple keys"},"functionSelector":"dedff9c6","id":486,"implemented":false,"kind":"function","modifiers":[],"name":"getDataBatch","nameLocation":"1794:12:5","nodeType":"FunctionDefinition","parameters":{"id":481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":480,"mutability":"mutable","name":"dataKeys","nameLocation":"1833:8:5","nodeType":"VariableDeclaration","scope":486,"src":"1816:25:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":478,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1816:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":479,"nodeType":"ArrayTypeName","src":"1816:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"1806:41:5"},"returnParameters":{"id":485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":484,"mutability":"mutable","name":"dataValues","nameLocation":"1886:10:5","nodeType":"VariableDeclaration","scope":486,"src":"1871:25:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":482,"name":"bytes","nodeType":"ElementaryTypeName","src":"1871:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":483,"nodeType":"ArrayTypeName","src":"1871:7:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"1870:27:5"},"scope":505,"src":"1785:113:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":487,"nodeType":"StructuredDocumentation","src":"1904:536:5","text":" @notice Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\n @dev Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`.\n The function is marked as payable to enable flexibility on child contracts. For instance to implement\n a fee mechanism for setting specific data.\n @param dataKey The data key for which to set a new value.\n @param dataValue The new bytes value to set."},"functionSelector":"7f23690c","id":494,"implemented":false,"kind":"function","modifiers":[],"name":"setData","nameLocation":"2454:7:5","nodeType":"FunctionDefinition","parameters":{"id":492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":489,"mutability":"mutable","name":"dataKey","nameLocation":"2470:7:5","nodeType":"VariableDeclaration","scope":494,"src":"2462:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":488,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2462:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":491,"mutability":"mutable","name":"dataValue","nameLocation":"2492:9:5","nodeType":"VariableDeclaration","scope":494,"src":"2479:22:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":490,"name":"bytes","nodeType":"ElementaryTypeName","src":"2479:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2461:41:5"},"returnParameters":{"id":493,"nodeType":"ParameterList","parameters":[],"src":"2519:0:5"},"scope":505,"src":"2445:75:5","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":495,"nodeType":"StructuredDocumentation","src":"2526:478:5","text":" @notice Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\n @dev Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\n @param dataKeys An array of data keys to set bytes values for.\n @param dataValues An array of bytes values to set for each `dataKeys`."},"functionSelector":"97902421","id":504,"implemented":false,"kind":"function","modifiers":[],"name":"setDataBatch","nameLocation":"3018:12:5","nodeType":"FunctionDefinition","parameters":{"id":502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":498,"mutability":"mutable","name":"dataKeys","nameLocation":"3057:8:5","nodeType":"VariableDeclaration","scope":504,"src":"3040:25:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":496,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3040:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":497,"nodeType":"ArrayTypeName","src":"3040:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":501,"mutability":"mutable","name":"dataValues","nameLocation":"3090:10:5","nodeType":"VariableDeclaration","scope":504,"src":"3075:25:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":499,"name":"bytes","nodeType":"ElementaryTypeName","src":"3075:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":500,"nodeType":"ArrayTypeName","src":"3075:7:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"3030:76:5"},"returnParameters":{"id":503,"nodeType":"ParameterList","parameters":[],"src":"3123:0:5"},"scope":505,"src":"3009:115:5","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":506,"src":"480:2646:5","usedErrors":[]}],"src":"36:3091:5"},"id":5},"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Constants.sol":{"ast":{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Constants.sol","exportedSymbols":{"_INTERFACEID_LSP17_EXTENDABLE":[510],"_INTERFACEID_LSP17_EXTENSION":[513],"_LSP17_EXTENSION_PREFIX":[516]},"id":517,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":507,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:6"},{"constant":true,"id":510,"mutability":"constant","name":"_INTERFACEID_LSP17_EXTENDABLE","nameLocation":"150:29:6","nodeType":"VariableDeclaration","scope":517,"src":"134:58:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":508,"name":"bytes4","nodeType":"ElementaryTypeName","src":"134:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30786139313866613662","id":509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"182:10:6","typeDescriptions":{"typeIdentifier":"t_rational_2836986475_by_1","typeString":"int_const 2836986475"},"value":"0xa918fa6b"},"visibility":"internal"},{"constant":true,"id":513,"mutability":"constant","name":"_INTERFACEID_LSP17_EXTENSION","nameLocation":"251:28:6","nodeType":"VariableDeclaration","scope":517,"src":"235:57:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":511,"name":"bytes4","nodeType":"ElementaryTypeName","src":"235:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30786365653738623430","id":512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"282:10:6","typeDescriptions":{"typeIdentifier":"t_rational_3471280960_by_1","typeString":"int_const 3471280960"},"value":"0xcee78b40"},"visibility":"internal"},{"constant":true,"id":516,"mutability":"constant","name":"_LSP17_EXTENSION_PREFIX","nameLocation":"407:23:6","nodeType":"VariableDeclaration","scope":517,"src":"390:65:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"},"typeName":{"id":514,"name":"bytes10","nodeType":"ElementaryTypeName","src":"390:7:6","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},"value":{"hexValue":"30786365653738623430393464613836303131303936","id":515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"433:22:6","typeDescriptions":{"typeIdentifier":"t_rational_977078727535809873907862_by_1","typeString":"int_const 977078727535809873907862"},"value":"0xcee78b4094da86011096"},"visibility":"internal"}],"src":"39:418:6"},"id":6},"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Errors.sol":{"ast":{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Errors.sol","exportedSymbols":{"InvalidExtensionAddress":[533],"InvalidFunctionSelector":[528],"NoExtensionFoundForFunctionSelector":[523]},"id":534,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":518,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:7"},{"documentation":{"id":519,"nodeType":"StructuredDocumentation","src":"64:94:7","text":" @dev reverts when there is no extension for the function selector being called with"},"id":523,"name":"NoExtensionFoundForFunctionSelector","nameLocation":"165:35:7","nodeType":"ErrorDefinition","parameters":{"id":522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":521,"mutability":"mutable","name":"functionSelector","nameLocation":"208:16:7","nodeType":"VariableDeclaration","scope":523,"src":"201:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":520,"name":"bytes4","nodeType":"ElementaryTypeName","src":"201:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"200:25:7"},"src":"159:67:7"},{"documentation":{"id":524,"nodeType":"StructuredDocumentation","src":"228:114:7","text":" @dev reverts when the contract is called with a function selector not valid (less than 4 bytes of data)"},"id":528,"name":"InvalidFunctionSelector","nameLocation":"349:23:7","nodeType":"ErrorDefinition","parameters":{"id":527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":526,"mutability":"mutable","name":"data","nameLocation":"379:4:7","nodeType":"VariableDeclaration","scope":528,"src":"373:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":525,"name":"bytes","nodeType":"ElementaryTypeName","src":"373:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"372:12:7"},"src":"343:42:7"},{"documentation":{"id":529,"nodeType":"StructuredDocumentation","src":"387:110:7","text":" @dev reverts when the bytes retrieved from the LSP17 data key is not a valid address (not 20 bytes)"},"id":533,"name":"InvalidExtensionAddress","nameLocation":"504:23:7","nodeType":"ErrorDefinition","parameters":{"id":532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":531,"mutability":"mutable","name":"storedData","nameLocation":"534:10:7","nodeType":"VariableDeclaration","scope":533,"src":"528:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":530,"name":"bytes","nodeType":"ElementaryTypeName","src":"528:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"527:18:7"},"src":"498:48:7"}],"src":"39:508:7"},"id":7},"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Extendable.sol":{"ast":{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Extendable.sol","exportedSymbols":{"ERC165":[3796],"ERC165Checker":[3990],"LSP17Extendable":[667],"NoExtensionFoundForFunctionSelector":[523],"_INTERFACEID_LSP17_EXTENDABLE":[510]},"id":668,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":535,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:8"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"@openzeppelin/contracts/utils/introspection/ERC165.sol","id":537,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":668,"sourceUnit":3797,"src":"75:78:8","symbolAliases":[{"foreign":{"id":536,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"83:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC165_$3796_$","typeString":"type(contract ERC165)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol","file":"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol","id":539,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":668,"sourceUnit":3991,"src":"154:98:8","symbolAliases":[{"foreign":{"id":538,"name":"ERC165Checker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3990,"src":"167:13:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC165Checker_$3990_$","typeString":"type(library ERC165Checker)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Constants.sol","file":"./LSP17Constants.sol","id":541,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":668,"sourceUnit":517,"src":"267:67:8","symbolAliases":[{"foreign":{"id":540,"name":"_INTERFACEID_LSP17_EXTENDABLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"275:29:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Errors.sol","file":"./LSP17Errors.sol","id":543,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":668,"sourceUnit":534,"src":"346:70:8","symbolAliases":[{"foreign":{"id":542,"name":"NoExtensionFoundForFunctionSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"354:35:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":545,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":3796,"src":"924:6:8"},"id":546,"nodeType":"InheritanceSpecifier","src":"924:6:8"}],"canonicalName":"LSP17Extendable","contractDependencies":[],"contractKind":"contract","documentation":{"id":544,"nodeType":"StructuredDocumentation","src":"418:468:8","text":" @title Module to add more functionalities to a contract using extensions.\n @dev Implementation of the `fallback(...)` logic according to LSP17 - Contract Extension standard.\n This module can be inherited to extend the functionality of the parent contract when\n calling a function that doesn't exist on the parent contract via forwarding the call\n to an extension mapped to the function selector being called, set originally by the parent contract"},"fullyImplemented":false,"id":667,"linearizedBaseContracts":[667,3796,4002],"name":"LSP17Extendable","nameLocation":"905:15:8","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[3795],"body":{"id":564,"nodeType":"Block","src":"1103:132:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":555,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"1132:11:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":556,"name":"_INTERFACEID_LSP17_EXTENDABLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"1147:29:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1132:44:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":560,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"1216:11:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":558,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1192:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_LSP17Extendable_$667_$","typeString":"type(contract super LSP17Extendable)"}},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3795,"src":"1192:23:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1192:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1132:96:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":554,"id":563,"nodeType":"Return","src":"1113:115:8"}]},"documentation":{"id":547,"nodeType":"StructuredDocumentation","src":"937:56:8","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":565,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1007:17:8","nodeType":"FunctionDefinition","overrides":{"id":551,"nodeType":"OverrideSpecifier","overrides":[],"src":"1079:8:8"},"parameters":{"id":550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":549,"mutability":"mutable","name":"interfaceId","nameLocation":"1041:11:8","nodeType":"VariableDeclaration","scope":565,"src":"1034:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":548,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1034:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1024:34:8"},"returnParameters":{"id":554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":553,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":565,"src":"1097:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":552,"name":"bool","nodeType":"ElementaryTypeName","src":"1097:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1096:6:8"},"scope":667,"src":"998:237:8","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":596,"nodeType":"Block","src":"1774:341:8","statements":[{"assignments":[574,null],"declarations":[{"constant":false,"id":574,"mutability":"mutable","name":"erc165Extension","nameLocation":"1793:15:8","nodeType":"VariableDeclaration","scope":596,"src":"1785:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":573,"name":"address","nodeType":"ElementaryTypeName","src":"1785:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},null],"id":580,"initialValue":{"arguments":[{"expression":{"expression":{"id":576,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"1856:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC165_$3796_$","typeString":"type(contract ERC165)"}},"id":577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3795,"src":"1856:24:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"1856:33:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":575,"name":"_getExtensionAndForwardValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"1814:28:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_address_$_t_bool_$","typeString":"function (bytes4) view returns (address,bool)"}},"id":579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1814:85:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bool_$","typeString":"tuple(address,bool)"}},"nodeType":"VariableDeclarationStatement","src":"1784:115:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":581,"name":"erc165Extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"1913:15:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1940:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1932:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":582,"name":"address","nodeType":"ElementaryTypeName","src":"1932:7:8","typeDescriptions":{}}},"id":585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1932:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1913:29:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":589,"nodeType":"IfStatement","src":"1909:47:8","trueBody":{"expression":{"hexValue":"66616c7365","id":587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1951:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":572,"id":588,"nodeType":"Return","src":"1944:12:8"}},{"expression":{"arguments":[{"id":592,"name":"erc165Extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"2050:15:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":593,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"2083:11:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":590,"name":"ERC165Checker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3990,"src":"1986:13:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC165Checker_$3990_$","typeString":"type(library ERC165Checker)"}},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsERC165InterfaceUnchecked","nodeType":"MemberAccess","referencedDeclaration":3989,"src":"1986:46:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1986:122:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":572,"id":595,"nodeType":"Return","src":"1967:141:8"}]},"documentation":{"id":566,"nodeType":"StructuredDocumentation","src":"1241:412:8","text":" @dev Returns whether the interfaceId being checked is supported in the extension of the\n {supportsInterface} selector.\n To be used by extendable contracts wishing to extend the ERC165 interfaceIds originally\n supported by reading whether the interfaceId queried is supported in the `supportsInterface`\n extension if the extension is set, if not it returns false."},"id":597,"implemented":true,"kind":"function","modifiers":[],"name":"_supportsInterfaceInERC165Extension","nameLocation":"1667:35:8","nodeType":"FunctionDefinition","parameters":{"id":569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":568,"mutability":"mutable","name":"interfaceId","nameLocation":"1719:11:8","nodeType":"VariableDeclaration","scope":597,"src":"1712:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":567,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1712:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1702:34:8"},"returnParameters":{"id":572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":571,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":597,"src":"1768:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":570,"name":"bool","nodeType":"ElementaryTypeName","src":"1768:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1767:6:8"},"scope":667,"src":"1658:457:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":598,"nodeType":"StructuredDocumentation","src":"2121:254:8","text":" @dev Returns the extension mapped to a specific function selector\n If no extension was found, return the address(0)\n To be overrided.\n Up to the implementor contract to return an extension based on a function selector"},"id":607,"implemented":false,"kind":"function","modifiers":[],"name":"_getExtensionAndForwardValue","nameLocation":"2389:28:8","nodeType":"FunctionDefinition","parameters":{"id":601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":600,"mutability":"mutable","name":"functionSelector","nameLocation":"2434:16:8","nodeType":"VariableDeclaration","scope":607,"src":"2427:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":599,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2427:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2417:39:8"},"returnParameters":{"id":606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":603,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":607,"src":"2488:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":602,"name":"address","nodeType":"ElementaryTypeName","src":"2488:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":605,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":607,"src":"2497:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":604,"name":"bool","nodeType":"ElementaryTypeName","src":"2497:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2487:15:8"},"scope":667,"src":"2380:123:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":665,"nodeType":"Block","src":"3787:991:8","statements":[{"assignments":[616,618],"declarations":[{"constant":false,"id":616,"mutability":"mutable","name":"extension","nameLocation":"3862:9:8","nodeType":"VariableDeclaration","scope":665,"src":"3854:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":615,"name":"address","nodeType":"ElementaryTypeName","src":"3854:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":618,"mutability":"mutable","name":"shouldForwardValue","nameLocation":"3890:18:8","nodeType":"VariableDeclaration","scope":665,"src":"3885:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":617,"name":"bool","nodeType":"ElementaryTypeName","src":"3885:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":623,"initialValue":{"arguments":[{"expression":{"id":620,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3950:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sig","nodeType":"MemberAccess","src":"3950:7:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":619,"name":"_getExtensionAndForwardValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"3921:28:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_address_$_t_bool_$","typeString":"function (bytes4) view returns (address,bool)"}},"id":622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3921:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bool_$","typeString":"tuple(address,bool)"}},"nodeType":"VariableDeclarationStatement","src":"3840:118:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":624,"name":"extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"4018:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4039:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4031:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":625,"name":"address","nodeType":"ElementaryTypeName","src":"4031:7:8","typeDescriptions":{}}},"id":628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4031:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4018:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":635,"nodeType":"IfStatement","src":"4014:92:8","trueBody":{"errorCall":{"arguments":[{"expression":{"id":631,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4098:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sig","nodeType":"MemberAccess","src":"4098:7:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":630,"name":"NoExtensionFoundForFunctionSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"4062:35:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4062:44:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":634,"nodeType":"RevertStatement","src":"4055:51:8"}},{"assignments":[637,639],"declarations":[{"constant":false,"id":637,"mutability":"mutable","name":"success","nameLocation":"4123:7:8","nodeType":"VariableDeclaration","scope":665,"src":"4118:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":636,"name":"bool","nodeType":"ElementaryTypeName","src":"4118:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":639,"mutability":"mutable","name":"result","nameLocation":"4145:6:8","nodeType":"VariableDeclaration","scope":665,"src":"4132:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":638,"name":"bytes","nodeType":"ElementaryTypeName","src":"4132:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":657,"initialValue":{"arguments":[{"arguments":[{"id":650,"name":"callData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"4252:8:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"expression":{"id":651,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4262:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4262:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":653,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4274:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"4274:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":648,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4235:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"4235:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4235:49:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":640,"name":"extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"4155:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"4155:14:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"condition":{"id":642,"name":"shouldForwardValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"4190:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4223:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4190:34:8","trueExpression":{"expression":{"id":643,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4211:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"4211:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"4155:79:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4155:130:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4117:168:8"},{"condition":{"id":658,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"4300:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":663,"nodeType":"Block","src":"4353:419:8","statements":[{"AST":{"nodeType":"YulBlock","src":"4637:125:8","statements":[{"nodeType":"YulVariableDeclaration","src":"4655:36:8","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"4684:6:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4678:5:8"},"nodeType":"YulFunctionCall","src":"4678:13:8"},"variables":[{"name":"resultdata_size","nodeType":"YulTypedName","src":"4659:15:8","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"4719:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"4727:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4715:3:8"},"nodeType":"YulFunctionCall","src":"4715:15:8"},{"name":"resultdata_size","nodeType":"YulIdentifier","src":"4732:15:8"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4708:6:8"},"nodeType":"YulFunctionCall","src":"4708:40:8"},"nodeType":"YulExpressionStatement","src":"4708:40:8"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":639,"isOffset":false,"isSlot":false,"src":"4684:6:8","valueSize":1},{"declaration":639,"isOffset":false,"isSlot":false,"src":"4719:6:8","valueSize":1}],"id":662,"nodeType":"InlineAssembly","src":"4628:134:8"}]},"id":664,"nodeType":"IfStatement","src":"4296:476:8","trueBody":{"id":661,"nodeType":"Block","src":"4309:38:8","statements":[{"expression":{"id":659,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"4330:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":614,"id":660,"nodeType":"Return","src":"4323:13:8"}]}}]},"documentation":{"id":608,"nodeType":"StructuredDocumentation","src":"2509:1160:8","text":" @dev Forwards the call to an extension mapped to a function selector.\n Calls {_getExtensionAndForwardValue} to get the address of the extension mapped to the function selector being\n called on the account. If there is no extension, the `address(0)` will be returned.\n Forwards the value if the extension is payable.\n Reverts if there is no extension for the function being called.\n If there is an extension for the function selector being called, it calls the extension with the\n `CALL` opcode, passing the `msg.data` appended with the 20 bytes of the {msg.sender} and 32 bytes of the `msg.value`.\n @custom:hint This function does not forward to the extension contract the `msg.value` received by the contract that inherits `LSP17Extendable`.\n If you would like to forward the `msg.value` to the extension contract, you can override the code of this internal function as follow:\n ```solidity\n (bool success, bytes memory result) = extension.call{value: msg.value}(\n     abi.encodePacked(callData, msg.sender, msg.value)\n );\n ```"},"id":666,"implemented":true,"kind":"function","modifiers":[],"name":"_fallbackLSP17Extendable","nameLocation":"3683:24:8","nodeType":"FunctionDefinition","parameters":{"id":611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":610,"mutability":"mutable","name":"callData","nameLocation":"3732:8:8","nodeType":"VariableDeclaration","scope":666,"src":"3717:23:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":609,"name":"bytes","nodeType":"ElementaryTypeName","src":"3717:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3707:39:8"},"returnParameters":{"id":614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":613,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":666,"src":"3773:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":612,"name":"bytes","nodeType":"ElementaryTypeName","src":"3773:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3772:14:8"},"scope":667,"src":"3674:1104:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":668,"src":"887:3893:8","usedErrors":[]}],"src":"39:4742:8"},"id":8},"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/ILSP1UniversalReceiver.sol":{"ast":{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/ILSP1UniversalReceiver.sol","exportedSymbols":{"ILSP1UniversalReceiver":[694]},"id":695,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":669,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"ILSP1UniversalReceiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":670,"nodeType":"StructuredDocumentation","src":"64:257:9","text":" @title Interface of the LSP1 - Universal Receiver standard, an entry function for a contract to receive arbitrary information.\n @dev LSP1UniversalReceiver allows to receive arbitrary messages and to be informed when assets are sent or received."},"fullyImplemented":false,"id":694,"linearizedBaseContracts":[694],"name":"ILSP1UniversalReceiver","nameLocation":"332:22:9","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":671,"nodeType":"StructuredDocumentation","src":"361:893:9","text":" @dev Emitted when the {universalReceiver} function was called with a specific `typeId` and some `receivedData`\n @notice Address `from` called the `universalReceiver(...)` function while sending `value` LYX. Notification type (typeId): `typeId` - Data received: `receivedData`.\n @param from The address of the EOA or smart contract that called the {universalReceiver(...)} function.\n @param value The amount sent to the {universalReceiver(...)} function.\n @param typeId A `bytes32` unique identifier (= _\"hook\"_)that describe the type of notification, information or transaction received by the contract. Can be related to a specific standard or a hook.\n @param receivedData Any arbitrary data that was sent to the {universalReceiver(...)} function.\n @param returnedValue The value returned by the {universalReceiver(...)} function."},"id":683,"name":"UniversalReceiver","nameLocation":"1265:17:9","nodeType":"EventDefinition","parameters":{"id":682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":673,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"1308:4:9","nodeType":"VariableDeclaration","scope":683,"src":"1292:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":672,"name":"address","nodeType":"ElementaryTypeName","src":"1292:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":675,"indexed":true,"mutability":"mutable","name":"value","nameLocation":"1338:5:9","nodeType":"VariableDeclaration","scope":683,"src":"1322:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":674,"name":"uint256","nodeType":"ElementaryTypeName","src":"1322:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":677,"indexed":true,"mutability":"mutable","name":"typeId","nameLocation":"1369:6:9","nodeType":"VariableDeclaration","scope":683,"src":"1353:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":676,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1353:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":679,"indexed":false,"mutability":"mutable","name":"receivedData","nameLocation":"1391:12:9","nodeType":"VariableDeclaration","scope":683,"src":"1385:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":678,"name":"bytes","nodeType":"ElementaryTypeName","src":"1385:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":681,"indexed":false,"mutability":"mutable","name":"returnedValue","nameLocation":"1419:13:9","nodeType":"VariableDeclaration","scope":683,"src":"1413:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":680,"name":"bytes","nodeType":"ElementaryTypeName","src":"1413:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1282:156:9"},"src":"1259:180:9"},{"documentation":{"id":684,"nodeType":"StructuredDocumentation","src":"1445:517:9","text":" @dev Generic function that can be used to notify the contract about specific incoming transactions or events like asset transfers, vault transfers, etc. Allows for custom on-chain and off-chain reactions based on the `typeId` and `data`.\n @notice Reacted on received notification with `typeId` & `data`.\n @param typeId The hash of a specific standard or a hook.\n @param data The arbitrary data received with the call.\n @custom:events {UniversalReceiver} event."},"functionSelector":"6bb56a14","id":693,"implemented":false,"kind":"function","modifiers":[],"name":"universalReceiver","nameLocation":"1976:17:9","nodeType":"FunctionDefinition","parameters":{"id":689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":686,"mutability":"mutable","name":"typeId","nameLocation":"2011:6:9","nodeType":"VariableDeclaration","scope":693,"src":"2003:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":685,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2003:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":688,"mutability":"mutable","name":"data","nameLocation":"2042:4:9","nodeType":"VariableDeclaration","scope":693,"src":"2027:19:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":687,"name":"bytes","nodeType":"ElementaryTypeName","src":"2027:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1993:59:9"},"returnParameters":{"id":692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":693,"src":"2079:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":690,"name":"bytes","nodeType":"ElementaryTypeName","src":"2079:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2078:14:9"},"scope":694,"src":"1967:126:9","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":695,"src":"322:1773:9","usedErrors":[]}],"src":"39:2057:9"},"id":9},"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/LSP1Constants.sol":{"ast":{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/LSP1Constants.sol","exportedSymbols":{"_INTERFACEID_LSP1":[699],"_INTERFACEID_LSP1_DELEGATE":[702],"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY":[708],"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX":[705]},"id":709,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":696,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:10"},{"constant":true,"id":699,"mutability":"constant","name":"_INTERFACEID_LSP1","nameLocation":"108:17:10","nodeType":"VariableDeclaration","scope":709,"src":"92:46:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":697,"name":"bytes4","nodeType":"ElementaryTypeName","src":"92:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30783662623536613134","id":698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"128:10:10","typeDescriptions":{"typeIdentifier":"t_rational_1807051284_by_1","typeString":"int_const 1807051284"},"value":"0x6bb56a14"},"visibility":"internal"},{"constant":true,"id":702,"mutability":"constant","name":"_INTERFACEID_LSP1_DELEGATE","nameLocation":"156:26:10","nodeType":"VariableDeclaration","scope":709,"src":"140:55:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":700,"name":"bytes4","nodeType":"ElementaryTypeName","src":"140:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30786132343562626461","id":701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"185:10:10","typeDescriptions":{"typeIdentifier":"t_rational_2722479066_by_1","typeString":"int_const 2722479066"},"value":"0xa245bbda"},"visibility":"internal"},{"constant":true,"id":705,"mutability":"constant","name":"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX","nameLocation":"296:40:10","nodeType":"VariableDeclaration","scope":709,"src":"279:82:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"},"typeName":{"id":703,"name":"bytes10","nodeType":"ElementaryTypeName","src":"279:7:10","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},"value":{"hexValue":"30783063666335316165633337633535613464306231","id":704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"339:22:10","typeDescriptions":{"typeIdentifier":"t_rational_61322863157712349614257_by_1","typeString":"int_const 61322863157712349614257"},"value":"0x0cfc51aec37c55a4d0b1"},"visibility":"internal"},{"constant":true,"id":708,"mutability":"constant","name":"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY","nameLocation":"427:37:10","nodeType":"VariableDeclaration","scope":709,"src":"410:123:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":706,"name":"bytes32","nodeType":"ElementaryTypeName","src":"410:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830636663353161656333376335356134643062316136356336323535633462663266626466363237376633636330373330633435623832386236646238623437","id":707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"467:66:10","typeDescriptions":{"typeIdentifier":"t_rational_5873563396395204772354203425660447968463963513255343663932314865640255753031_by_1","typeString":"int_const 5873...(68 digits omitted)...3031"},"value":"0x0cfc51aec37c55a4d0b1a65c6255c4bf2fbdf6277f3cc0730c45b828b6db8b47"},"visibility":"internal"}],"src":"39:496:10"},"id":10},"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/LSP1Utils.sol":{"ast":{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/LSP1Utils.sol","exportedSymbols":{"ERC165Checker":[3990],"ILSP1":[694],"LSP1Utils":[793],"LSP2Utils":[1530],"_INTERFACEID_LSP1":[699],"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY":[708],"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX":[705]},"id":794,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":710,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:11"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol","file":"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol","id":712,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":794,"sourceUnit":3991,"src":"77:98:11","symbolAliases":[{"foreign":{"id":711,"name":"ERC165Checker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3990,"src":"90:13:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC165Checker_$3990_$","typeString":"type(library ERC165Checker)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP2ERC725YJSONSchema/LSP2Utils.sol","file":"../LSP2ERC725YJSONSchema/LSP2Utils.sol","id":714,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":794,"sourceUnit":1531,"src":"176:65:11","symbolAliases":[{"foreign":{"id":713,"name":"LSP2Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"184:9:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP2Utils_$1530_$","typeString":"type(library LSP2Utils)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/ILSP1UniversalReceiver.sol","file":"./ILSP1UniversalReceiver.sol","id":716,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":794,"sourceUnit":695,"src":"256:77:11","symbolAliases":[{"foreign":{"id":715,"name":"ILSP1UniversalReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"264:22:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILSP1UniversalReceiver_$694_$","typeString":"type(contract ILSP1UniversalReceiver)"}},"local":"ILSP1","nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/LSP1Constants.sol","file":"../LSP1UniversalReceiver/LSP1Constants.sol","id":720,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":794,"sourceUnit":709,"src":"348:172:11","symbolAliases":[{"foreign":{"id":717,"name":"_INTERFACEID_LSP1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"361:17:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":718,"name":"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"384:37:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":719,"name":"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"427:40:11","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"LSP1Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":721,"nodeType":"StructuredDocumentation","src":"522:370:11","text":" @title LSP1 Utility library.\n @author Jean Cavallera <CJ42>, Yamen Merhi <YamenMerhi>, Daniel Afteni <B00ste>\n @dev LSP1Utils is a library of utility functions that can be used to notify the `universalReceiver` function of a contract\n that implements LSP1 and retrieve informations related to LSP1 `typeId`.\n Based on LSP1 Universal Receiver standard."},"fullyImplemented":true,"id":793,"linearizedBaseContracts":[793],"name":"LSP1Utils","nameLocation":"901:9:11","nodeType":"ContractDefinition","nodes":[{"id":724,"libraryName":{"id":722,"name":"ERC165Checker","nodeType":"IdentifierPath","referencedDeclaration":3990,"src":"923:13:11"},"nodeType":"UsingForDirective","src":"917:32:11","typeName":{"id":723,"name":"address","nodeType":"ElementaryTypeName","src":"941:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":748,"nodeType":"Block","src":"1503:226:11","statements":[{"condition":{"arguments":[{"id":736,"name":"_INTERFACEID_LSP1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"1599:17:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":734,"name":"lsp1Implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"1530:18:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsERC165InterfaceUnchecked","nodeType":"MemberAccess","referencedDeclaration":3989,"src":"1530:51:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$bound_to$_t_address_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1530:100:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":747,"nodeType":"IfStatement","src":"1513:210:11","trueBody":{"id":746,"nodeType":"Block","src":"1641:82:11","statements":[{"expression":{"arguments":[{"id":742,"name":"typeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"1699:6:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":743,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"1707:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":739,"name":"lsp1Implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"1661:18:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":738,"name":"ILSP1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"1655:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILSP1UniversalReceiver_$694_$","typeString":"type(contract ILSP1UniversalReceiver)"}},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1655:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILSP1UniversalReceiver_$694","typeString":"contract ILSP1UniversalReceiver"}},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"universalReceiver","nodeType":"MemberAccess","referencedDeclaration":693,"src":"1655:43:11","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32,bytes memory) payable external returns (bytes memory)"}},"id":744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1655:57:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":745,"nodeType":"ExpressionStatement","src":"1655:57:11"}]}}]},"documentation":{"id":725,"nodeType":"StructuredDocumentation","src":"955:408:11","text":" @dev Notify a contract at `lsp1Implementation` address by calling its `universalReceiver` function if this contract\n supports the LSP1 interface.\n @param lsp1Implementation The address of the contract to notify.\n @param typeId A `bytes32` typeId.\n @param data Any optional data to send to the `universalReceiver` function to the `lsp1Implementation` address."},"id":749,"implemented":true,"kind":"function","modifiers":[],"name":"notifyUniversalReceiver","nameLocation":"1377:23:11","nodeType":"FunctionDefinition","parameters":{"id":732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":727,"mutability":"mutable","name":"lsp1Implementation","nameLocation":"1418:18:11","nodeType":"VariableDeclaration","scope":749,"src":"1410:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":726,"name":"address","nodeType":"ElementaryTypeName","src":"1410:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":729,"mutability":"mutable","name":"typeId","nameLocation":"1454:6:11","nodeType":"VariableDeclaration","scope":749,"src":"1446:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":728,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1446:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":731,"mutability":"mutable","name":"data","nameLocation":"1483:4:11","nodeType":"VariableDeclaration","scope":749,"src":"1470:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":730,"name":"bytes","nodeType":"ElementaryTypeName","src":"1470:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1400:93:11"},"returnParameters":{"id":733,"nodeType":"ParameterList","parameters":[],"src":"1503:0:11"},"scope":793,"src":"1368:361:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":763,"nodeType":"Block","src":"2342:77:11","statements":[{"expression":{"baseExpression":{"id":759,"name":"erc725YStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"2359:14:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes storage ref)"}},"id":761,"indexExpression":{"id":760,"name":"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"2374:37:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2359:53:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"functionReturnParameters":758,"id":762,"nodeType":"Return","src":"2352:60:11"}]},"documentation":{"id":750,"nodeType":"StructuredDocumentation","src":"1735:471:11","text":" @notice Retrieving the value stored under the ERC725Y data key `LSP1UniversalReceiverDelegate`.\n @dev Query internally the ERC725Y storage of a `ERC725Y` smart contract to retrieve\n the value set under the `LSP1UniversalReceiverDelegate` data key.\n @param erc725YStorage A reference to the ERC725Y storage mapping of the contract.\n @return The bytes value stored under the `LSP1UniversalReceiverDelegate` data key."},"id":764,"implemented":true,"kind":"function","modifiers":[],"name":"getLSP1DelegateValue","nameLocation":"2220:20:11","nodeType":"FunctionDefinition","parameters":{"id":755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":754,"mutability":"mutable","name":"erc725YStorage","nameLocation":"2284:14:11","nodeType":"VariableDeclaration","scope":764,"src":"2250:48:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes)"},"typeName":{"id":753,"keyType":{"id":751,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2258:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2250:25:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes)"},"valueType":{"id":752,"name":"bytes","nodeType":"ElementaryTypeName","src":"2269:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"visibility":"internal"}],"src":"2240:64:11"},"returnParameters":{"id":758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":757,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":764,"src":"2328:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":756,"name":"bytes","nodeType":"ElementaryTypeName","src":"2328:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2327:14:11"},"scope":793,"src":"2211:208:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":791,"nodeType":"Block","src":"3194:216:11","statements":[{"assignments":[777],"declarations":[{"constant":false,"id":777,"mutability":"mutable","name":"lsp1TypeIdDataKey","nameLocation":"3212:17:11","nodeType":"VariableDeclaration","scope":791,"src":"3204:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":776,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3204:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":786,"initialValue":{"arguments":[{"id":780,"name":"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"3274:40:11","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},{"arguments":[{"id":783,"name":"typeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"3336:6:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3328:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":781,"name":"bytes20","nodeType":"ElementaryTypeName","src":"3328:7:11","typeDescriptions":{}}},"id":784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3328:15:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes10","typeString":"bytes10"},{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":778,"name":"LSP2Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"3232:9:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP2Utils_$1530_$","typeString":"type(library LSP2Utils)"}},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"generateMappingKey","nodeType":"MemberAccess","referencedDeclaration":1020,"src":"3232:28:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes10_$_t_bytes20_$returns$_t_bytes32_$","typeString":"function (bytes10,bytes20) pure returns (bytes32)"}},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3232:121:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3204:149:11"},{"expression":{"baseExpression":{"id":787,"name":"erc725YStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"3370:14:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes storage ref)"}},"id":789,"indexExpression":{"id":788,"name":"lsp1TypeIdDataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"3385:17:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3370:33:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"functionReturnParameters":775,"id":790,"nodeType":"Return","src":"3363:40:11"}]},"documentation":{"id":765,"nodeType":"StructuredDocumentation","src":"2425:600:11","text":" @notice Retrieving the value stored under the ERC725Y data key `LSP1UniversalReceiverDelegate:<type-id>` for a specific `typeId`.\n @dev Query internally the ERC725Y storage of a `ERC725Y` smart contract to retrieve\n the value set under the `LSP1UniversalReceiverDelegate:<bytes32>` data key for a specific LSP1 `typeId`.\n @param erc725YStorage A reference to the ERC725Y storage mapping of the contract.\n @param typeId A bytes32 LSP1 `typeId`;\n @return The bytes value stored under the `LSP1UniversalReceiverDelegate:<bytes32>` data key."},"id":792,"implemented":true,"kind":"function","modifiers":[],"name":"getLSP1DelegateValueForTypeId","nameLocation":"3039:29:11","nodeType":"FunctionDefinition","parameters":{"id":772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":769,"mutability":"mutable","name":"erc725YStorage","nameLocation":"3112:14:11","nodeType":"VariableDeclaration","scope":792,"src":"3078:48:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes)"},"typeName":{"id":768,"keyType":{"id":766,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3086:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"3078:25:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes)"},"valueType":{"id":767,"name":"bytes","nodeType":"ElementaryTypeName","src":"3097:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"visibility":"internal"},{"constant":false,"id":771,"mutability":"mutable","name":"typeId","nameLocation":"3144:6:11","nodeType":"VariableDeclaration","scope":792,"src":"3136:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":770,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3136:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3068:88:11"},"returnParameters":{"id":775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":792,"src":"3180:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":773,"name":"bytes","nodeType":"ElementaryTypeName","src":"3180:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3179:14:11"},"scope":793,"src":"3030:380:11","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":794,"src":"893:2519:11","usedErrors":[]}],"src":"39:3374:11"},"id":11},"@lukso/lsp-smart-contracts/contracts/LSP2ERC725YJSONSchema/LSP2Utils.sol":{"ast":{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP2ERC725YJSONSchema/LSP2Utils.sol","exportedSymbols":{"IERC725Y":[505],"LSP2Utils":[1530]},"id":1531,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":795,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:12"},{"absolutePath":"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol","file":"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol","id":797,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1531,"sourceUnit":506,"src":"78:89:12","symbolAliases":[{"foreign":{"id":796,"name":"IERC725Y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"91:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC725Y_$505_$","typeString":"type(contract IERC725Y)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"LSP2Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":798,"nodeType":"StructuredDocumentation","src":"169:312:12","text":" @title LSP2 Utility library.\n @author Jean Cavallera <CJ42>, Yamen Merhi <YamenMerhi>, Daniel Afteni <B00ste>\n @dev LSP2Utils is a library of utility functions that can be used to encode data key of different key type\n defined on the LSP2 standard.\n Based on LSP2 ERC725Y JSON Schema standard."},"fullyImplemented":true,"id":1530,"linearizedBaseContracts":[1530],"name":"LSP2Utils","nameLocation":"490:9:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":813,"nodeType":"Block","src":"929:49:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":809,"name":"keyName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"962:7:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"956:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":807,"name":"bytes","nodeType":"ElementaryTypeName","src":"956:5:12","typeDescriptions":{}}},"id":810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"956:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":806,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"946:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"946:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":805,"id":812,"nodeType":"Return","src":"939:32:12"}]},"documentation":{"id":799,"nodeType":"StructuredDocumentation","src":"506:319:12","text":" @dev Generates a data key of keyType Singleton by hashing the string `keyName`. As:\n ```\n keccak256(\"keyName\")\n ```\n @param keyName The string to hash to generate a Singleton data key.\n @return The generated `bytes32` data key of key type Singleton."},"id":814,"implemented":true,"kind":"function","modifiers":[],"name":"generateSingletonKey","nameLocation":"839:20:12","nodeType":"FunctionDefinition","parameters":{"id":802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":801,"mutability":"mutable","name":"keyName","nameLocation":"883:7:12","nodeType":"VariableDeclaration","scope":814,"src":"869:21:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":800,"name":"string","nodeType":"ElementaryTypeName","src":"869:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"859:37:12"},"returnParameters":{"id":805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":804,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":814,"src":"920:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":803,"name":"bytes32","nodeType":"ElementaryTypeName","src":"920:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"919:9:12"},"scope":1530,"src":"830:148:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":862,"nodeType":"Block","src":"1548:415:12","statements":[{"assignments":[823],"declarations":[{"constant":false,"id":823,"mutability":"mutable","name":"dataKey","nameLocation":"1571:7:12","nodeType":"VariableDeclaration","scope":862,"src":"1558:20:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":822,"name":"bytes","nodeType":"ElementaryTypeName","src":"1558:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":828,"initialValue":{"arguments":[{"id":826,"name":"arrayKeyName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"1587:12:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1581:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":824,"name":"bytes","nodeType":"ElementaryTypeName","src":"1581:5:12","typeDescriptions":{}}},"id":827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1581:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1558:42:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":830,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"1618:7:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1618:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"32","id":832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1636:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1618:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d555354206265206c6f6e676572207468616e20322063686172616374657273","id":834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1639:34:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_1330e5505d03eb8c2f3c566a974e84b491f709354814e0b84c5b75865f42fea2","typeString":"literal_string \"MUST be longer than 2 characters\""},"value":"MUST be longer than 2 characters"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1330e5505d03eb8c2f3c566a974e84b491f709354814e0b84c5b75865f42fea2","typeString":"literal_string \"MUST be longer than 2 characters\""}],"id":829,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1610:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1610:64:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":836,"nodeType":"ExpressionStatement","src":"1610:64:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":838,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"1705:7:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":843,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":839,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"1713:7:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1713:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1730:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1713:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1705:27:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783562","id":844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1736:4:12","typeDescriptions":{"typeIdentifier":"t_rational_91_by_1","typeString":"int_const 91"},"value":"0x5b"},"src":"1705:35:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":846,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"1783:7:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":851,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":847,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"1791:7:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1791:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1808:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1791:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1783:27:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783564","id":852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1814:4:12","typeDescriptions":{"typeIdentifier":"t_rational_93_by_1","typeString":"int_const 93"},"value":"0x5d"},"src":"1783:35:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1705:113:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d697373696e6720656d7074792073717561726520627261636b65747320275b5d272061742074686520656e64206f6620746865206b6579206e616d65","id":855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1847:63:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_5e3b6aa919fe1aff12eb32ef9916d0e70635ca417f19f845d5b01296b02b93b3","typeString":"literal_string \"Missing empty square brackets '[]' at the end of the key name\""},"value":"Missing empty square brackets '[]' at the end of the key name"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5e3b6aa919fe1aff12eb32ef9916d0e70635ca417f19f845d5b01296b02b93b3","typeString":"literal_string \"Missing empty square brackets '[]' at the end of the key name\""}],"id":837,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1684:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1684:236:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":857,"nodeType":"ExpressionStatement","src":"1684:236:12"},{"expression":{"arguments":[{"id":859,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"1948:7:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":858,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1938:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1938:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":821,"id":861,"nodeType":"Return","src":"1931:25:12"}]},"documentation":{"id":815,"nodeType":"StructuredDocumentation","src":"984:459:12","text":" @dev Generates a data key of keyType Array by hashing `arrayKeyName`. As:\n ```\n keccak256(\"arrayKeyName[]\")\n ```\n @param arrayKeyName The string that will be used to generate a data key of key type Array.\n @return The generated `bytes32` data key of key type Array.\n @custom:requirements\n - The `keyName` must include at the end of the string the square brackets `\"[]\"`."},"id":863,"implemented":true,"kind":"function","modifiers":[],"name":"generateArrayKey","nameLocation":"1457:16:12","nodeType":"FunctionDefinition","parameters":{"id":818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":817,"mutability":"mutable","name":"arrayKeyName","nameLocation":"1497:12:12","nodeType":"VariableDeclaration","scope":863,"src":"1483:26:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":816,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1473:42:12"},"returnParameters":{"id":821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":863,"src":"1539:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":819,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1539:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1538:9:12"},"scope":1530,"src":"1448:515:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":893,"nodeType":"Block","src":"2592:168:12","statements":[{"assignments":[874],"declarations":[{"constant":false,"id":874,"mutability":"mutable","name":"elementInArray","nameLocation":"2615:14:12","nodeType":"VariableDeclaration","scope":893,"src":"2602:27:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":873,"name":"bytes","nodeType":"ElementaryTypeName","src":"2602:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":887,"initialValue":{"arguments":[{"arguments":[{"id":880,"name":"arrayKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"2666:8:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2658:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes16_$","typeString":"type(bytes16)"},"typeName":{"id":878,"name":"bytes16","nodeType":"ElementaryTypeName","src":"2658:7:12","typeDescriptions":{}}},"id":881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2658:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},{"arguments":[{"id":884,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"2697:5:12","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"}],"id":883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2689:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes16_$","typeString":"type(bytes16)"},"typeName":{"id":882,"name":"bytes16","nodeType":"ElementaryTypeName","src":"2689:7:12","typeDescriptions":{}}},"id":885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2689:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes16","typeString":"bytes16"},{"typeIdentifier":"t_bytes16","typeString":"bytes16"}],"expression":{"id":876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2632:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":875,"name":"bytes","nodeType":"ElementaryTypeName","src":"2632:5:12","typeDescriptions":{}}},"id":877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"concat","nodeType":"MemberAccess","src":"2632:12:12","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2632:81:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2602:111:12"},{"expression":{"arguments":[{"id":890,"name":"elementInArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"2738:14:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2730:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":888,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2730:7:12","typeDescriptions":{}}},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2730:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":872,"id":892,"nodeType":"Return","src":"2723:30:12"}]},"documentation":{"id":864,"nodeType":"StructuredDocumentation","src":"1969:491:12","text":" @dev Generates an Array data key at a specific `index` by concatenating together the first 16 bytes of `arrayKey`\n with the 16 bytes of `index`. As:\n ```\n arrayKey[index]\n ```\n @param arrayKey The Array data key from which to generate the Array data key at a specific `index`.\n @param index The index number in the `arrayKey`.\n @return The generated `bytes32` data key of key type Array at a specific `index`."},"id":894,"implemented":true,"kind":"function","modifiers":[],"name":"generateArrayElementKeyAtIndex","nameLocation":"2474:30:12","nodeType":"FunctionDefinition","parameters":{"id":869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":866,"mutability":"mutable","name":"arrayKey","nameLocation":"2522:8:12","nodeType":"VariableDeclaration","scope":894,"src":"2514:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":865,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2514:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":868,"mutability":"mutable","name":"index","nameLocation":"2548:5:12","nodeType":"VariableDeclaration","scope":894,"src":"2540:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":867,"name":"uint128","nodeType":"ElementaryTypeName","src":"2540:7:12","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"2504:55:12"},"returnParameters":{"id":872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":871,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":894,"src":"2583:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":870,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2583:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2582:9:12"},"scope":1530,"src":"2465:295:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":946,"nodeType":"Block","src":"3444:325:12","statements":[{"assignments":[905],"declarations":[{"constant":false,"id":905,"mutability":"mutable","name":"firstWordHash","nameLocation":"3462:13:12","nodeType":"VariableDeclaration","scope":946,"src":"3454:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":904,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3454:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":912,"initialValue":{"arguments":[{"arguments":[{"id":909,"name":"firstWord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"3494:9:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3488:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":907,"name":"bytes","nodeType":"ElementaryTypeName","src":"3488:5:12","typeDescriptions":{}}},"id":910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3488:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":906,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3478:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3478:27:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3454:51:12"},{"assignments":[914],"declarations":[{"constant":false,"id":914,"mutability":"mutable","name":"lastWordHash","nameLocation":"3523:12:12","nodeType":"VariableDeclaration","scope":946,"src":"3515:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":913,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3515:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":921,"initialValue":{"arguments":[{"arguments":[{"id":918,"name":"lastWord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"3554:8:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3548:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":916,"name":"bytes","nodeType":"ElementaryTypeName","src":"3548:5:12","typeDescriptions":{}}},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3548:15:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":915,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3538:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3538:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3515:49:12"},{"assignments":[923],"declarations":[{"constant":false,"id":923,"mutability":"mutable","name":"temporaryBytes","nameLocation":"3588:14:12","nodeType":"VariableDeclaration","scope":946,"src":"3575:27:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":922,"name":"bytes","nodeType":"ElementaryTypeName","src":"3575:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":940,"initialValue":{"arguments":[{"arguments":[{"id":929,"name":"firstWordHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":905,"src":"3639:13:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":928,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3631:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes10_$","typeString":"type(bytes10)"},"typeName":{"id":927,"name":"bytes10","nodeType":"ElementaryTypeName","src":"3631:7:12","typeDescriptions":{}}},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3631:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},{"arguments":[{"hexValue":"30","id":933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3674:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3667:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":931,"name":"bytes2","nodeType":"ElementaryTypeName","src":"3667:6:12","typeDescriptions":{}}},"id":934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3667:9:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},{"arguments":[{"id":937,"name":"lastWordHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"3698:12:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3690:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":935,"name":"bytes20","nodeType":"ElementaryTypeName","src":"3690:7:12","typeDescriptions":{}}},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3690:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes10","typeString":"bytes10"},{"typeIdentifier":"t_bytes2","typeString":"bytes2"},{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3605:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":924,"name":"bytes","nodeType":"ElementaryTypeName","src":"3605:5:12","typeDescriptions":{}}},"id":926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"concat","nodeType":"MemberAccess","src":"3605:12:12","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3605:116:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3575:146:12"},{"expression":{"arguments":[{"id":943,"name":"temporaryBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"3747:14:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3739:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":941,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3739:7:12","typeDescriptions":{}}},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3739:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":903,"id":945,"nodeType":"Return","src":"3732:30:12"}]},"documentation":{"id":895,"nodeType":"StructuredDocumentation","src":"2766:542:12","text":" @dev Generates a data key of key type Mapping that map `firstWord` to `lastWord`. This is done by hashing two strings words `firstWord` and `lastWord`. As:\n ```\n bytes10(firstWordHash):0000:bytes20(lastWordHash)\n ```\n @param firstWord The word to retrieve the first 10 bytes of its hash.\n @param lastWord The word to retrieve the first 10 bytes of its hash.\n @return The generated `bytes32` data key of key type Mapping that map `firstWord` to a specific `lastWord`."},"id":947,"implemented":true,"kind":"function","modifiers":[],"name":"generateMappingKey","nameLocation":"3322:18:12","nodeType":"FunctionDefinition","parameters":{"id":900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":897,"mutability":"mutable","name":"firstWord","nameLocation":"3364:9:12","nodeType":"VariableDeclaration","scope":947,"src":"3350:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":896,"name":"string","nodeType":"ElementaryTypeName","src":"3350:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":899,"mutability":"mutable","name":"lastWord","nameLocation":"3397:8:12","nodeType":"VariableDeclaration","scope":947,"src":"3383:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":898,"name":"string","nodeType":"ElementaryTypeName","src":"3383:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3340:71:12"},"returnParameters":{"id":903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":902,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":947,"src":"3435:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":901,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3435:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3434:9:12"},"scope":1530,"src":"3313:456:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":990,"nodeType":"Block","src":"4458:258:12","statements":[{"assignments":[958],"declarations":[{"constant":false,"id":958,"mutability":"mutable","name":"firstWordHash","nameLocation":"4476:13:12","nodeType":"VariableDeclaration","scope":990,"src":"4468:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":957,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4468:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":965,"initialValue":{"arguments":[{"arguments":[{"id":962,"name":"firstWord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"4508:9:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4502:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":960,"name":"bytes","nodeType":"ElementaryTypeName","src":"4502:5:12","typeDescriptions":{}}},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4502:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":959,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4492:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4492:27:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4468:51:12"},{"assignments":[967],"declarations":[{"constant":false,"id":967,"mutability":"mutable","name":"temporaryBytes","nameLocation":"4543:14:12","nodeType":"VariableDeclaration","scope":990,"src":"4530:27:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":966,"name":"bytes","nodeType":"ElementaryTypeName","src":"4530:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":984,"initialValue":{"arguments":[{"arguments":[{"id":973,"name":"firstWordHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"4594:13:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4586:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes10_$","typeString":"type(bytes10)"},"typeName":{"id":971,"name":"bytes10","nodeType":"ElementaryTypeName","src":"4586:7:12","typeDescriptions":{}}},"id":974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4586:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},{"arguments":[{"hexValue":"30","id":977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4629:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4622:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":975,"name":"bytes2","nodeType":"ElementaryTypeName","src":"4622:6:12","typeDescriptions":{}}},"id":978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4622:9:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},{"arguments":[{"id":981,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"4653:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4645:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":979,"name":"bytes20","nodeType":"ElementaryTypeName","src":"4645:7:12","typeDescriptions":{}}},"id":982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4645:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes10","typeString":"bytes10"},{"typeIdentifier":"t_bytes2","typeString":"bytes2"},{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4560:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":968,"name":"bytes","nodeType":"ElementaryTypeName","src":"4560:5:12","typeDescriptions":{}}},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"concat","nodeType":"MemberAccess","src":"4560:12:12","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4560:108:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4530:138:12"},{"expression":{"arguments":[{"id":987,"name":"temporaryBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"4694:14:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4686:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":985,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4686:7:12","typeDescriptions":{}}},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4686:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":956,"id":989,"nodeType":"Return","src":"4679:30:12"}]},"documentation":{"id":948,"nodeType":"StructuredDocumentation","src":"3775:557:12","text":" @dev Generates a data key of key type Mapping that map `firstWord` to an address `addr`.\n This is done by hashing the string word `firstWord` and concatenating its first 10 bytes with `addr`. As:\n ```\n bytes10(firstWordHash):0000:<address>\n ```\n @param firstWord The word to retrieve the first 10 bytes of its hash.\n @param addr An address to map `firstWord` to.\n @return The generated `bytes32` data key of key type Mapping that map `firstWord` to a specific address `addr`."},"id":991,"implemented":true,"kind":"function","modifiers":[],"name":"generateMappingKey","nameLocation":"4346:18:12","nodeType":"FunctionDefinition","parameters":{"id":953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":950,"mutability":"mutable","name":"firstWord","nameLocation":"4388:9:12","nodeType":"VariableDeclaration","scope":991,"src":"4374:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":949,"name":"string","nodeType":"ElementaryTypeName","src":"4374:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":952,"mutability":"mutable","name":"addr","nameLocation":"4415:4:12","nodeType":"VariableDeclaration","scope":991,"src":"4407:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":951,"name":"address","nodeType":"ElementaryTypeName","src":"4407:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4364:61:12"},"returnParameters":{"id":956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":955,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":991,"src":"4449:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":954,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4449:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4448:9:12"},"scope":1530,"src":"4337:379:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1019,"nodeType":"Block","src":"5320:177:12","statements":[{"assignments":[1002],"declarations":[{"constant":false,"id":1002,"mutability":"mutable","name":"generatedKey","nameLocation":"5343:12:12","nodeType":"VariableDeclaration","scope":1019,"src":"5330:25:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1001,"name":"bytes","nodeType":"ElementaryTypeName","src":"5330:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1013,"initialValue":{"arguments":[{"id":1006,"name":"keyPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"5384:9:12","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},{"arguments":[{"hexValue":"30","id":1009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5414:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5407:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1007,"name":"bytes2","nodeType":"ElementaryTypeName","src":"5407:6:12","typeDescriptions":{}}},"id":1010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5407:9:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},{"id":1011,"name":"bytes20Value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"5430:12:12","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes10","typeString":"bytes10"},{"typeIdentifier":"t_bytes2","typeString":"bytes2"},{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":1004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5358:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1003,"name":"bytes","nodeType":"ElementaryTypeName","src":"5358:5:12","typeDescriptions":{}}},"id":1005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"concat","nodeType":"MemberAccess","src":"5358:12:12","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5358:94:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5330:122:12"},{"expression":{"arguments":[{"id":1016,"name":"generatedKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"5477:12:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5469:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1014,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5469:7:12","typeDescriptions":{}}},"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5469:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1000,"id":1018,"nodeType":"Return","src":"5462:28:12"}]},"documentation":{"id":992,"nodeType":"StructuredDocumentation","src":"4722:470:12","text":" @dev Generate a data key of key type Mapping that map a 10 bytes `keyPrefix` to a `bytes20Value`. As:\n ```\n keyPrefix:bytes20Value\n ```\n @param keyPrefix The first part of the data key of key type Mapping.\n @param bytes20Value The second part of the data key of key type Mapping.\n @return The generated `bytes32` data key of key type Mapping that map a `keyPrefix` to a specific `bytes20Value`."},"id":1020,"implemented":true,"kind":"function","modifiers":[],"name":"generateMappingKey","nameLocation":"5206:18:12","nodeType":"FunctionDefinition","parameters":{"id":997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":994,"mutability":"mutable","name":"keyPrefix","nameLocation":"5242:9:12","nodeType":"VariableDeclaration","scope":1020,"src":"5234:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"},"typeName":{"id":993,"name":"bytes10","nodeType":"ElementaryTypeName","src":"5234:7:12","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},"visibility":"internal"},{"constant":false,"id":996,"mutability":"mutable","name":"bytes20Value","nameLocation":"5269:12:12","nodeType":"VariableDeclaration","scope":1020,"src":"5261:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"},"typeName":{"id":995,"name":"bytes20","nodeType":"ElementaryTypeName","src":"5261:7:12","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}},"visibility":"internal"}],"src":"5224:63:12"},"returnParameters":{"id":1000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":999,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1020,"src":"5311:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":998,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5311:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5310:9:12"},"scope":1530,"src":"5197:300:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1078,"nodeType":"Block","src":"6379:356:12","statements":[{"assignments":[1033],"declarations":[{"constant":false,"id":1033,"mutability":"mutable","name":"firstWordHash","nameLocation":"6397:13:12","nodeType":"VariableDeclaration","scope":1078,"src":"6389:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1032,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6389:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1040,"initialValue":{"arguments":[{"arguments":[{"id":1037,"name":"firstWord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"6429:9:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6423:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1035,"name":"bytes","nodeType":"ElementaryTypeName","src":"6423:5:12","typeDescriptions":{}}},"id":1038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6423:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1034,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6413:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6413:27:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6389:51:12"},{"assignments":[1042],"declarations":[{"constant":false,"id":1042,"mutability":"mutable","name":"secondWordHash","nameLocation":"6458:14:12","nodeType":"VariableDeclaration","scope":1078,"src":"6450:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1041,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6450:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1049,"initialValue":{"arguments":[{"arguments":[{"id":1046,"name":"secondWord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"6491:10:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6485:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1044,"name":"bytes","nodeType":"ElementaryTypeName","src":"6485:5:12","typeDescriptions":{}}},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6485:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1043,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6475:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6475:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6450:53:12"},{"assignments":[1051],"declarations":[{"constant":false,"id":1051,"mutability":"mutable","name":"temporaryBytes","nameLocation":"6527:14:12","nodeType":"VariableDeclaration","scope":1078,"src":"6514:27:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1050,"name":"bytes","nodeType":"ElementaryTypeName","src":"6514:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1072,"initialValue":{"arguments":[{"arguments":[{"id":1057,"name":"firstWordHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"6577:13:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6570:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes6_$","typeString":"type(bytes6)"},"typeName":{"id":1055,"name":"bytes6","nodeType":"ElementaryTypeName","src":"6570:6:12","typeDescriptions":{}}},"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6570:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes6","typeString":"bytes6"}},{"arguments":[{"id":1061,"name":"secondWordHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"6612:14:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6605:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":1059,"name":"bytes4","nodeType":"ElementaryTypeName","src":"6605:6:12","typeDescriptions":{}}},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6605:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"arguments":[{"hexValue":"30","id":1065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6648:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6641:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1063,"name":"bytes2","nodeType":"ElementaryTypeName","src":"6641:6:12","typeDescriptions":{}}},"id":1066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6641:9:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},{"arguments":[{"id":1069,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"6672:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6664:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":1067,"name":"bytes20","nodeType":"ElementaryTypeName","src":"6664:7:12","typeDescriptions":{}}},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6664:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes6","typeString":"bytes6"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bytes2","typeString":"bytes2"},{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":1053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6544:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1052,"name":"bytes","nodeType":"ElementaryTypeName","src":"6544:5:12","typeDescriptions":{}}},"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"concat","nodeType":"MemberAccess","src":"6544:12:12","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6544:143:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6514:173:12"},{"expression":{"arguments":[{"id":1075,"name":"temporaryBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"6713:14:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6705:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1073,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6705:7:12","typeDescriptions":{}}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6705:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1031,"id":1077,"nodeType":"Return","src":"6698:30:12"}]},"documentation":{"id":1021,"nodeType":"StructuredDocumentation","src":"5503:704:12","text":" @dev Generate a data key of key type MappingWithGrouping by using two strings `firstWord`\n mapped to a `secondWord` mapped itself to a specific address `addr`. As:\n ```\n bytes6(keccak256(\"firstWord\")):bytes4(keccak256(\"secondWord\")):0000:<address>\n ```\n @param firstWord The word to retrieve the first 6 bytes of its hash.\n @param secondWord The word to retrieve the first 4 bytes of its hash.\n @param addr The address that makes the last part of the MappingWithGrouping.\n @return The generated `bytes32` data key of key type MappingWithGrouping that map a `firstWord` to a `secondWord` to a specific address `addr`."},"id":1079,"implemented":true,"kind":"function","modifiers":[],"name":"generateMappingWithGroupingKey","nameLocation":"6221:30:12","nodeType":"FunctionDefinition","parameters":{"id":1028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1023,"mutability":"mutable","name":"firstWord","nameLocation":"6275:9:12","nodeType":"VariableDeclaration","scope":1079,"src":"6261:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1022,"name":"string","nodeType":"ElementaryTypeName","src":"6261:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1025,"mutability":"mutable","name":"secondWord","nameLocation":"6308:10:12","nodeType":"VariableDeclaration","scope":1079,"src":"6294:24:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1024,"name":"string","nodeType":"ElementaryTypeName","src":"6294:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1027,"mutability":"mutable","name":"addr","nameLocation":"6336:4:12","nodeType":"VariableDeclaration","scope":1079,"src":"6328:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1026,"name":"address","nodeType":"ElementaryTypeName","src":"6328:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6251:95:12"},"returnParameters":{"id":1031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1030,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1079,"src":"6370:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1029,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6370:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6369:9:12"},"scope":1530,"src":"6212:523:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1110,"nodeType":"Block","src":"7579:197:12","statements":[{"assignments":[1092],"declarations":[{"constant":false,"id":1092,"mutability":"mutable","name":"generatedKey","nameLocation":"7602:12:12","nodeType":"VariableDeclaration","scope":1110,"src":"7589:25:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1091,"name":"bytes","nodeType":"ElementaryTypeName","src":"7589:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1104,"initialValue":{"arguments":[{"id":1096,"name":"keyPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"7643:9:12","typeDescriptions":{"typeIdentifier":"t_bytes6","typeString":"bytes6"}},{"id":1097,"name":"mapPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"7666:9:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"arguments":[{"hexValue":"30","id":1100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7696:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7689:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1098,"name":"bytes2","nodeType":"ElementaryTypeName","src":"7689:6:12","typeDescriptions":{}}},"id":1101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7689:9:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},{"id":1102,"name":"subMapKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"7712:9:12","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes6","typeString":"bytes6"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bytes2","typeString":"bytes2"},{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":1094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7617:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1093,"name":"bytes","nodeType":"ElementaryTypeName","src":"7617:5:12","typeDescriptions":{}}},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"concat","nodeType":"MemberAccess","src":"7617:12:12","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7617:114:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"7589:142:12"},{"expression":{"arguments":[{"id":1107,"name":"generatedKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"7756:12:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7748:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1105,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7748:7:12","typeDescriptions":{}}},"id":1108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7748:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1090,"id":1109,"nodeType":"Return","src":"7741:28:12"}]},"documentation":{"id":1080,"nodeType":"StructuredDocumentation","src":"6741:676:12","text":" @dev Generate a data key of key type MappingWithGrouping that map a `keyPrefix` to an other `mapPrefix` to a specific `subMapKey`. As:\n ```\n keyPrefix:mapPrefix:0000:subMapKey\n ```\n @param keyPrefix The first part (6 bytes) of the data key of keyType MappingWithGrouping.\n @param mapPrefix The second part (4 bytes) of the data key of keyType MappingWithGrouping.\n @param subMapKey The last part (bytes20) of the data key of keyType MappingWithGrouping.\n @return The generated `bytes32` data key of key type MappingWithGrouping that map a `keyPrefix` to a `mapPrefix` to a specific `subMapKey`."},"id":1111,"implemented":true,"kind":"function","modifiers":[],"name":"generateMappingWithGroupingKey","nameLocation":"7431:30:12","nodeType":"FunctionDefinition","parameters":{"id":1087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1082,"mutability":"mutable","name":"keyPrefix","nameLocation":"7478:9:12","nodeType":"VariableDeclaration","scope":1111,"src":"7471:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes6","typeString":"bytes6"},"typeName":{"id":1081,"name":"bytes6","nodeType":"ElementaryTypeName","src":"7471:6:12","typeDescriptions":{"typeIdentifier":"t_bytes6","typeString":"bytes6"}},"visibility":"internal"},{"constant":false,"id":1084,"mutability":"mutable","name":"mapPrefix","nameLocation":"7504:9:12","nodeType":"VariableDeclaration","scope":1111,"src":"7497:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1083,"name":"bytes4","nodeType":"ElementaryTypeName","src":"7497:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":1086,"mutability":"mutable","name":"subMapKey","nameLocation":"7531:9:12","nodeType":"VariableDeclaration","scope":1111,"src":"7523:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"},"typeName":{"id":1085,"name":"bytes20","nodeType":"ElementaryTypeName","src":"7523:7:12","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}},"visibility":"internal"}],"src":"7461:85:12"},"returnParameters":{"id":1090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1089,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1111,"src":"7570:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1088,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7570:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7569:9:12"},"scope":1530,"src":"7422:354:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1139,"nodeType":"Block","src":"8434:177:12","statements":[{"assignments":[1122],"declarations":[{"constant":false,"id":1122,"mutability":"mutable","name":"generatedKey","nameLocation":"8457:12:12","nodeType":"VariableDeclaration","scope":1139,"src":"8444:25:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1121,"name":"bytes","nodeType":"ElementaryTypeName","src":"8444:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1133,"initialValue":{"arguments":[{"id":1126,"name":"keyPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"8498:9:12","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},{"arguments":[{"hexValue":"30","id":1129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8528:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8521:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1127,"name":"bytes2","nodeType":"ElementaryTypeName","src":"8521:6:12","typeDescriptions":{}}},"id":1130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8521:9:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},{"id":1131,"name":"bytes20Value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"8544:12:12","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes10","typeString":"bytes10"},{"typeIdentifier":"t_bytes2","typeString":"bytes2"},{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":1124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8472:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1123,"name":"bytes","nodeType":"ElementaryTypeName","src":"8472:5:12","typeDescriptions":{}}},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"concat","nodeType":"MemberAccess","src":"8472:12:12","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8472:94:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"8444:122:12"},{"expression":{"arguments":[{"id":1136,"name":"generatedKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"8591:12:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8583:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1134,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8583:7:12","typeDescriptions":{}}},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8583:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1120,"id":1138,"nodeType":"Return","src":"8576:28:12"}]},"documentation":{"id":1112,"nodeType":"StructuredDocumentation","src":"7782:512:12","text":" @dev Generate a data key of key type MappingWithGrouping that map a 10 bytes `keyPrefix` to a specific `bytes20Value`. As:\n @param keyPrefix The first part of the data key of keyType MappingWithGrouping.\n @param bytes20Value The last of the data key of keyType MappingWithGrouping.\n @return The generated `bytes32` data key of key type MappingWithGrouping that map a `keyPrefix`\n (containing the first and second mapped word) to a specific `bytes20Value`."},"id":1140,"implemented":true,"kind":"function","modifiers":[],"name":"generateMappingWithGroupingKey","nameLocation":"8308:30:12","nodeType":"FunctionDefinition","parameters":{"id":1117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1114,"mutability":"mutable","name":"keyPrefix","nameLocation":"8356:9:12","nodeType":"VariableDeclaration","scope":1140,"src":"8348:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"},"typeName":{"id":1113,"name":"bytes10","nodeType":"ElementaryTypeName","src":"8348:7:12","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},"visibility":"internal"},{"constant":false,"id":1116,"mutability":"mutable","name":"bytes20Value","nameLocation":"8383:12:12","nodeType":"VariableDeclaration","scope":1140,"src":"8375:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"},"typeName":{"id":1115,"name":"bytes20","nodeType":"ElementaryTypeName","src":"8375:7:12","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}},"visibility":"internal"}],"src":"8338:63:12"},"returnParameters":{"id":1120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1119,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1140,"src":"8425:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1118,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8425:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8424:9:12"},"scope":1530,"src":"8299:312:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1180,"nodeType":"Block","src":"9017:208:12","statements":[{"assignments":[1153],"declarations":[{"constant":false,"id":1153,"mutability":"mutable","name":"hashFunctionDigest","nameLocation":"9035:18:12","nodeType":"VariableDeclaration","scope":1180,"src":"9027:26:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9027:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1160,"initialValue":{"arguments":[{"arguments":[{"id":1157,"name":"hashFunction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"9072:12:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9066:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1155,"name":"bytes","nodeType":"ElementaryTypeName","src":"9066:5:12","typeDescriptions":{}}},"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9066:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1154,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9056:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9056:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9027:59:12"},{"assignments":[1162],"declarations":[{"constant":false,"id":1162,"mutability":"mutable","name":"jsonDigest","nameLocation":"9104:10:12","nodeType":"VariableDeclaration","scope":1180,"src":"9096:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1161,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9096:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1169,"initialValue":{"arguments":[{"arguments":[{"id":1166,"name":"json","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"9133:4:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9127:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1164,"name":"bytes","nodeType":"ElementaryTypeName","src":"9127:5:12","typeDescriptions":{}}},"id":1167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9127:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1163,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9117:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9117:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9096:43:12"},{"expression":{"arguments":[{"arguments":[{"id":1174,"name":"hashFunctionDigest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"9181:18:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9174:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":1172,"name":"bytes4","nodeType":"ElementaryTypeName","src":"9174:6:12","typeDescriptions":{}}},"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9174:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1176,"name":"jsonDigest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"9202:10:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1177,"name":"url","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"9214:3:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1170,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9157:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"9157:16:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9157:61:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1151,"id":1179,"nodeType":"Return","src":"9150:68:12"}]},"documentation":{"id":1141,"nodeType":"StructuredDocumentation","src":"8617:231:12","text":" @dev Generate a JSONURL value content.\n @param hashFunction The function used to hash the JSON file.\n @param json Bytes value of the JSON file.\n @param url The URL where the JSON file is hosted."},"id":1181,"implemented":true,"kind":"function","modifiers":[],"name":"generateJSONURLValue","nameLocation":"8862:20:12","nodeType":"FunctionDefinition","parameters":{"id":1148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1143,"mutability":"mutable","name":"hashFunction","nameLocation":"8906:12:12","nodeType":"VariableDeclaration","scope":1181,"src":"8892:26:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1142,"name":"string","nodeType":"ElementaryTypeName","src":"8892:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1145,"mutability":"mutable","name":"json","nameLocation":"8942:4:12","nodeType":"VariableDeclaration","scope":1181,"src":"8928:18:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1144,"name":"string","nodeType":"ElementaryTypeName","src":"8928:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1147,"mutability":"mutable","name":"url","nameLocation":"8970:3:12","nodeType":"VariableDeclaration","scope":1181,"src":"8956:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1146,"name":"string","nodeType":"ElementaryTypeName","src":"8956:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8882:97:12"},"returnParameters":{"id":1151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1150,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1181,"src":"9003:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1149,"name":"bytes","nodeType":"ElementaryTypeName","src":"9003:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9002:14:12"},"scope":1530,"src":"8853:372:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1221,"nodeType":"Block","src":"9710:214:12","statements":[{"assignments":[1194],"declarations":[{"constant":false,"id":1194,"mutability":"mutable","name":"hashFunctionDigest","nameLocation":"9728:18:12","nodeType":"VariableDeclaration","scope":1221,"src":"9720:26:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9720:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1201,"initialValue":{"arguments":[{"arguments":[{"id":1198,"name":"hashFunction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"9765:12:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9759:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1196,"name":"bytes","nodeType":"ElementaryTypeName","src":"9759:5:12","typeDescriptions":{}}},"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9759:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1195,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9749:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9749:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9720:59:12"},{"assignments":[1203],"declarations":[{"constant":false,"id":1203,"mutability":"mutable","name":"jsonDigest","nameLocation":"9797:10:12","nodeType":"VariableDeclaration","scope":1221,"src":"9789:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1202,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9789:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1210,"initialValue":{"arguments":[{"arguments":[{"id":1207,"name":"assetBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"9826:10:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9820:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1205,"name":"bytes","nodeType":"ElementaryTypeName","src":"9820:5:12","typeDescriptions":{}}},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9820:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1204,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9810:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9810:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9789:49:12"},{"expression":{"arguments":[{"arguments":[{"id":1215,"name":"hashFunctionDigest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"9880:18:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9873:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":1213,"name":"bytes4","nodeType":"ElementaryTypeName","src":"9873:6:12","typeDescriptions":{}}},"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9873:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1217,"name":"jsonDigest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"9901:10:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1218,"name":"url","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"9913:3:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1211,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9856:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"9856:16:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9856:61:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1192,"id":1220,"nodeType":"Return","src":"9849:68:12"}]},"documentation":{"id":1182,"nodeType":"StructuredDocumentation","src":"9231:303:12","text":" @dev Generate a ASSETURL value content.\n @param hashFunction The function used to hash the JSON file.\n @param assetBytes Bytes value of the JSON file.\n @param url The URL where the JSON file is hosted.\n @return The encoded value as an `ASSETURL`."},"id":1222,"implemented":true,"kind":"function","modifiers":[],"name":"generateASSETURLValue","nameLocation":"9548:21:12","nodeType":"FunctionDefinition","parameters":{"id":1189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1184,"mutability":"mutable","name":"hashFunction","nameLocation":"9593:12:12","nodeType":"VariableDeclaration","scope":1222,"src":"9579:26:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1183,"name":"string","nodeType":"ElementaryTypeName","src":"9579:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1186,"mutability":"mutable","name":"assetBytes","nameLocation":"9629:10:12","nodeType":"VariableDeclaration","scope":1222,"src":"9615:24:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1185,"name":"string","nodeType":"ElementaryTypeName","src":"9615:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1188,"mutability":"mutable","name":"url","nameLocation":"9663:3:12","nodeType":"VariableDeclaration","scope":1222,"src":"9649:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1187,"name":"string","nodeType":"ElementaryTypeName","src":"9649:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9569:103:12"},"returnParameters":{"id":1192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1191,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1222,"src":"9696:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1190,"name":"bytes","nodeType":"ElementaryTypeName","src":"9696:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9695:14:12"},"scope":1530,"src":"9539:385:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1285,"nodeType":"Block","src":"10373:1273:12","statements":[{"assignments":[1232],"declarations":[{"constant":false,"id":1232,"mutability":"mutable","name":"pointer","nameLocation":"10870:7:12","nodeType":"VariableDeclaration","scope":1285,"src":"10862:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1231,"name":"uint256","nodeType":"ElementaryTypeName","src":"10862:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"documentation":" Pointer will always land on these values:\n ↓↓↓↓\n 0003 a00000\n 0005 fff83a0011\n 0020 aa0000000000000000000000000000000000000000000000000000000000cafe\n 0012 bb000000000000000000000000000000beef\n 0019 cc00000000000000000000000000000000000000000000deed\n ↑↑↑↑\n The pointer can only land on the length of the following bytes value.","id":1234,"initialValue":{"hexValue":"30","id":1233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10880:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10862:19:12"},{"body":{"id":1274,"nodeType":"Block","src":"11164:392:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1239,"name":"pointer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"11182:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11192:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11182:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":1242,"name":"compactBytesArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"11197:17:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"11197:24:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11182:39:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1247,"nodeType":"IfStatement","src":"11178:57:12","trueBody":{"expression":{"hexValue":"66616c7365","id":1245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11230:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1229,"id":1246,"nodeType":"Return","src":"11223:12:12"}},{"assignments":[1249],"declarations":[{"constant":false,"id":1249,"mutability":"mutable","name":"elementLength","nameLocation":"11257:13:12","nodeType":"VariableDeclaration","scope":1274,"src":"11249:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1248,"name":"uint256","nodeType":"ElementaryTypeName","src":"11249:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1267,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"baseExpression":{"id":1256,"name":"compactBytesArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"11367:17:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1258,"indexExpression":{"id":1257,"name":"pointer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"11385:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11367:26:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},{"baseExpression":{"id":1259,"name":"compactBytesArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"11419:17:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1263,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1260,"name":"pointer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"11437:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11447:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11437:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11419:30:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"},{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"expression":{"id":1254,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"11325:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"11325:16:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11325:146:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11297:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1252,"name":"bytes2","nodeType":"ElementaryTypeName","src":"11297:6:12","typeDescriptions":{}}},"id":1265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11297:192:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes2","typeString":"bytes2"}],"id":1251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11273:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":1250,"name":"uint16","nodeType":"ElementaryTypeName","src":"11273:6:12","typeDescriptions":{}}},"id":1266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11273:230:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"VariableDeclarationStatement","src":"11249:254:12"},{"expression":{"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1268,"name":"pointer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"11517:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1269,"name":"elementLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"11528:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11544:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11528:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11517:28:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1273,"nodeType":"ExpressionStatement","src":"11517:28:12"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1235,"name":"pointer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"11128:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1236,"name":"compactBytesArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"11138:17:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"11138:24:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11128:34:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"documentation":" Check each length byte and make sure that when you reach the last length byte.\n Make sure that the last length describes exactly the last bytes value and you do not get out of bounds.","id":1275,"nodeType":"WhileStatement","src":"11121:435:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1276,"name":"pointer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"11569:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1277,"name":"compactBytesArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"11580:17:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"11580:24:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11569:35:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1282,"nodeType":"IfStatement","src":"11565:52:12","trueBody":{"expression":{"hexValue":"74727565","id":1280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11613:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1229,"id":1281,"nodeType":"Return","src":"11606:11:12"}},{"expression":{"hexValue":"66616c7365","id":1283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11634:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1229,"id":1284,"nodeType":"Return","src":"11627:12:12"}]},"documentation":{"id":1223,"nodeType":"StructuredDocumentation","src":"9930:334:12","text":" @dev Verify if `data` is a valid array of value encoded as a `CompactBytesArray` according to the LSP2 `CompactBytesArray` valueType specification.\n @param compactBytesArray The bytes value to verify.\n @return `true` if the `data` is correctly encoded CompactBytesArray, `false` otherwise."},"id":1286,"implemented":true,"kind":"function","modifiers":[],"name":"isCompactBytesArray","nameLocation":"10278:19:12","nodeType":"FunctionDefinition","parameters":{"id":1226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1225,"mutability":"mutable","name":"compactBytesArray","nameLocation":"10320:17:12","nodeType":"VariableDeclaration","scope":1286,"src":"10307:30:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1224,"name":"bytes","nodeType":"ElementaryTypeName","src":"10307:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10297:46:12"},"returnParameters":{"id":1229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1228,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1286,"src":"10367:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1227,"name":"bool","nodeType":"ElementaryTypeName","src":"10367:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10366:6:12"},"scope":1530,"src":"10269:1377:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1304,"nodeType":"Block","src":"12056:104:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1294,"name":"arrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"12070:11:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"12070:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3136","id":1296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12092:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12070:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1301,"nodeType":"IfStatement","src":"12066:66:12","trueBody":{"id":1300,"nodeType":"Block","src":"12096:36:12","statements":[{"expression":{"hexValue":"74727565","id":1298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12117:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1293,"id":1299,"nodeType":"Return","src":"12110:11:12"}]}},{"expression":{"hexValue":"66616c7365","id":1302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12148:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1293,"id":1303,"nodeType":"Return","src":"12141:12:12"}]},"documentation":{"id":1287,"nodeType":"StructuredDocumentation","src":"11652:293:12","text":" @dev Validates if the bytes `arrayLength` are exactly 16 bytes long, and are of the exact size of an LSP2 Array length value\n @param arrayLength Plain bytes that should be validated.\n @return `true` if the value is 16 bytes long, `false` otherwise."},"id":1305,"implemented":true,"kind":"function","modifiers":[],"name":"isValidLSP2ArrayLengthValue","nameLocation":"11959:27:12","nodeType":"FunctionDefinition","parameters":{"id":1290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1289,"mutability":"mutable","name":"arrayLength","nameLocation":"12009:11:12","nodeType":"VariableDeclaration","scope":1305,"src":"11996:24:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1288,"name":"bytes","nodeType":"ElementaryTypeName","src":"11996:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11986:40:12"},"returnParameters":{"id":1293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1292,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1305,"src":"12050:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1291,"name":"bool","nodeType":"ElementaryTypeName","src":"12050:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12049:6:12"},"scope":1530,"src":"11950:210:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1378,"nodeType":"Block","src":"12894:512:12","statements":[{"expression":{"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1323,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"12904:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"33","id":1327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12929:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}],"id":1326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"12915:13:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":1324,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12919:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1325,"nodeType":"ArrayTypeName","src":"12919:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":1328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12915:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"src":"12904:27:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1330,"nodeType":"ExpressionStatement","src":"12904:27:12"},{"expression":{"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1331,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"12941:10:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"33","id":1335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12966:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}],"id":1334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"12954:11:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory[] memory)"},"typeName":{"baseType":{"id":1332,"name":"bytes","nodeType":"ElementaryTypeName","src":"12958:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1333,"nodeType":"ArrayTypeName","src":"12958:7:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}}},"id":1336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12954:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"src":"12941:27:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1338,"nodeType":"ExpressionStatement","src":"12941:27:12"},{"expression":{"id":1343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1339,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"13043:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1341,"indexExpression":{"hexValue":"30","id":1340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13052:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13043:11:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1342,"name":"arrayKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"13057:8:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"13043:22:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1344,"nodeType":"ExpressionStatement","src":"13043:22:12"},{"expression":{"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1345,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"13075:10:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1347,"indexExpression":{"hexValue":"30","id":1346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13086:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13075:13:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1350,"name":"newArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"13108:14:12","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":1348,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"13091:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"13091:16:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13091:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"13075:48:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1353,"nodeType":"ExpressionStatement","src":"13075:48:12"},{"expression":{"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1354,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"13198:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1356,"indexExpression":{"hexValue":"31","id":1355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13207:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13198:11:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1357,"name":"removedElementMapKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"13212:20:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"13198:34:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1359,"nodeType":"ExpressionStatement","src":"13198:34:12"},{"expression":{"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1360,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"13242:10:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1362,"indexExpression":{"hexValue":"31","id":1361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13253:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13242:13:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"","id":1363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13258:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"src":"13242:18:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1365,"nodeType":"ExpressionStatement","src":"13242:18:12"},{"expression":{"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1366,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"13335:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1368,"indexExpression":{"hexValue":"32","id":1367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13344:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13335:11:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1369,"name":"removedElementIndexKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"13349:22:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"13335:36:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1371,"nodeType":"ExpressionStatement","src":"13335:36:12"},{"expression":{"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1372,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"13381:10:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1374,"indexExpression":{"hexValue":"32","id":1373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13392:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13381:13:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"","id":1375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13397:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"src":"13381:18:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1377,"nodeType":"ExpressionStatement","src":"13381:18:12"}]},"documentation":{"id":1306,"nodeType":"StructuredDocumentation","src":"12166:434:12","text":" @dev Generates Data Key/Value pairs for removing the last element from an LSP2 Array and a mapping Data Key.\n @param arrayKey The Data Key of Key Type Array.\n @param newArrayLength The new Array Length for the `arrayKey`.\n @param removedElementIndexKey The Data Key of Key Type Array Index for the removed element.\n @param removedElementMapKey The Data Key of a mapping to be removed."},"id":1379,"implemented":true,"kind":"function","modifiers":[],"name":"removeLastElementFromArrayAndMap","nameLocation":"12614:32:12","nodeType":"FunctionDefinition","parameters":{"id":1315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1308,"mutability":"mutable","name":"arrayKey","nameLocation":"12664:8:12","nodeType":"VariableDeclaration","scope":1379,"src":"12656:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1307,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12656:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1310,"mutability":"mutable","name":"newArrayLength","nameLocation":"12690:14:12","nodeType":"VariableDeclaration","scope":1379,"src":"12682:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1309,"name":"uint128","nodeType":"ElementaryTypeName","src":"12682:7:12","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1312,"mutability":"mutable","name":"removedElementIndexKey","nameLocation":"12722:22:12","nodeType":"VariableDeclaration","scope":1379,"src":"12714:30:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1311,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12714:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1314,"mutability":"mutable","name":"removedElementMapKey","nameLocation":"12762:20:12","nodeType":"VariableDeclaration","scope":1379,"src":"12754:28:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1313,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12754:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12646:142:12"},"returnParameters":{"id":1322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1318,"mutability":"mutable","name":"dataKeys","nameLocation":"12853:8:12","nodeType":"VariableDeclaration","scope":1379,"src":"12836:25:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1316,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12836:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1317,"nodeType":"ArrayTypeName","src":"12836:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1321,"mutability":"mutable","name":"dataValues","nameLocation":"12878:10:12","nodeType":"VariableDeclaration","scope":1379,"src":"12863:25:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1319,"name":"bytes","nodeType":"ElementaryTypeName","src":"12863:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1320,"nodeType":"ArrayTypeName","src":"12863:7:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"12835:54:12"},"scope":1530,"src":"12605:801:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1528,"nodeType":"Block","src":"14506:1736:12","statements":[{"expression":{"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1402,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"14516:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"35","id":1406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14541:1:12","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"}],"id":1405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"14527:13:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":1403,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14531:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1404,"nodeType":"ArrayTypeName","src":"14531:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":1407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14527:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"src":"14516:27:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1409,"nodeType":"ExpressionStatement","src":"14516:27:12"},{"expression":{"id":1416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1410,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"14553:10:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"35","id":1414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14578:1:12","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"}],"id":1413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"14566:11:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory[] memory)"},"typeName":{"baseType":{"id":1411,"name":"bytes","nodeType":"ElementaryTypeName","src":"14570:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1412,"nodeType":"ArrayTypeName","src":"14570:7:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}}},"id":1415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14566:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"src":"14553:27:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1417,"nodeType":"ExpressionStatement","src":"14553:27:12"},{"expression":{"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1418,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"14655:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1420,"indexExpression":{"hexValue":"30","id":1419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14664:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14655:11:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1421,"name":"arrayKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"14669:8:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"14655:22:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1423,"nodeType":"ExpressionStatement","src":"14655:22:12"},{"expression":{"id":1431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1424,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"14687:10:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1426,"indexExpression":{"hexValue":"30","id":1425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14698:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14687:13:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1429,"name":"newArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"14720:14:12","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":1427,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"14703:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"14703:16:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14703:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"14687:48:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1432,"nodeType":"ExpressionStatement","src":"14687:48:12"},{"expression":{"id":1437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1433,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"14810:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1435,"indexExpression":{"hexValue":"31","id":1434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14819:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14810:11:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1436,"name":"removedElementMapKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"14824:20:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"14810:34:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1438,"nodeType":"ExpressionStatement","src":"14810:34:12"},{"expression":{"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1439,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"14854:10:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1441,"indexExpression":{"hexValue":"31","id":1440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14865:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14854:13:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"","id":1442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14870:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"src":"14854:18:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1444,"nodeType":"ExpressionStatement","src":"14854:18:12"},{"assignments":[1446],"declarations":[{"constant":false,"id":1446,"mutability":"mutable","name":"lastElementIndexKey","nameLocation":"14952:19:12","nodeType":"VariableDeclaration","scope":1528,"src":"14944:27:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1445,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14944:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1452,"initialValue":{"arguments":[{"id":1449,"name":"arrayKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"15028:8:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1450,"name":"newArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"15050:14:12","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":1447,"name":"LSP2Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"14974:9:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP2Utils_$1530_$","typeString":"type(library LSP2Utils)"}},"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"generateArrayElementKeyAtIndex","nodeType":"MemberAccess","referencedDeclaration":894,"src":"14974:40:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint128_$returns$_t_bytes32_$","typeString":"function (bytes32,uint128) pure returns (bytes32)"}},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14974:100:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"14944:130:12"},{"assignments":[1454],"declarations":[{"constant":false,"id":1454,"mutability":"mutable","name":"lastElementIndexValue","nameLocation":"15169:21:12","nodeType":"VariableDeclaration","scope":1528,"src":"15161:29:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"},"typeName":{"id":1453,"name":"bytes20","nodeType":"ElementaryTypeName","src":"15161:7:12","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}},"visibility":"internal"}],"id":1462,"initialValue":{"arguments":[{"arguments":[{"id":1459,"name":"lastElementIndexKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"15238:19:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1457,"name":"erc725YContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"15214:15:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC725Y_$505","typeString":"contract IERC725Y"}},"id":1458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getData","nodeType":"MemberAccess","referencedDeclaration":476,"src":"15214:23:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32) view external returns (bytes memory)"}},"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15214:44:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15193:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":1455,"name":"bytes20","nodeType":"ElementaryTypeName","src":"15193:7:12","typeDescriptions":{}}},"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15193:75:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}},"nodeType":"VariableDeclarationStatement","src":"15161:107:12"},{"expression":{"id":1467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1463,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"15384:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1465,"indexExpression":{"hexValue":"32","id":1464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15393:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15384:11:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1466,"name":"removedElementIndexKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"15398:22:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"15384:36:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1468,"nodeType":"ExpressionStatement","src":"15384:36:12"},{"expression":{"id":1477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1469,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"15430:10:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1471,"indexExpression":{"hexValue":"32","id":1470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15441:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15430:13:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1475,"name":"lastElementIndexValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"15459:21:12","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":1473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15446:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1472,"name":"bytes","nodeType":"ElementaryTypeName","src":"15446:5:12","typeDescriptions":{}}},"id":1474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"concat","nodeType":"MemberAccess","src":"15446:12:12","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15446:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"15430:51:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1478,"nodeType":"ExpressionStatement","src":"15430:51:12"},{"expression":{"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1479,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"15555:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1481,"indexExpression":{"hexValue":"33","id":1480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15564:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15555:11:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1482,"name":"lastElementIndexKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"15569:19:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"15555:33:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1484,"nodeType":"ExpressionStatement","src":"15555:33:12"},{"expression":{"id":1489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1485,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"15598:10:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1487,"indexExpression":{"hexValue":"33","id":1486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15609:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15598:13:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"","id":1488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15614:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"src":"15598:18:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1490,"nodeType":"ExpressionStatement","src":"15598:18:12"},{"assignments":[1492],"declarations":[{"constant":false,"id":1492,"mutability":"mutable","name":"lastElementMapKey","nameLocation":"15697:17:12","nodeType":"VariableDeclaration","scope":1528,"src":"15689:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1491,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15689:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1501,"initialValue":{"arguments":[{"arguments":[{"id":1497,"name":"removedElementMapKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"15767:20:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15759:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes10_$","typeString":"type(bytes10)"},"typeName":{"id":1495,"name":"bytes10","nodeType":"ElementaryTypeName","src":"15759:7:12","typeDescriptions":{}}},"id":1498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15759:29:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},{"id":1499,"name":"lastElementIndexValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"15802:21:12","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes10","typeString":"bytes10"},{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":1493,"name":"LSP2Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"15717:9:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP2Utils_$1530_$","typeString":"type(library LSP2Utils)"}},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"generateMappingKey","nodeType":"MemberAccess","referencedDeclaration":1020,"src":"15717:28:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes10_$_t_bytes20_$returns$_t_bytes32_$","typeString":"function (bytes10,bytes20) pure returns (bytes32)"}},"id":1500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15717:116:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"15689:144:12"},{"assignments":[1503],"declarations":[{"constant":false,"id":1503,"mutability":"mutable","name":"lastElementMapValue","nameLocation":"15925:19:12","nodeType":"VariableDeclaration","scope":1528,"src":"15912:32:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1502,"name":"bytes","nodeType":"ElementaryTypeName","src":"15912:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1515,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":1510,"name":"lastElementMapKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"16008:17:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1508,"name":"erc725YContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"15984:15:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC725Y_$505","typeString":"contract IERC725Y"}},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getData","nodeType":"MemberAccess","referencedDeclaration":476,"src":"15984:23:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32) view external returns (bytes memory)"}},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15984:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15977:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":1506,"name":"bytes4","nodeType":"ElementaryTypeName","src":"15977:6:12","typeDescriptions":{}}},"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15977:50:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1513,"name":"removedElementIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"16041:19:12","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":1504,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"15947:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"15947:16:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15947:123:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"15912:158:12"},{"expression":{"id":1520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1516,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"16159:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1518,"indexExpression":{"hexValue":"34","id":1517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16168:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16159:11:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1519,"name":"lastElementMapKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"16173:17:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"16159:31:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1521,"nodeType":"ExpressionStatement","src":"16159:31:12"},{"expression":{"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1522,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"16200:10:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1524,"indexExpression":{"hexValue":"34","id":1523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16211:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16200:13:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1525,"name":"lastElementMapValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"16216:19:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16200:35:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1527,"nodeType":"ExpressionStatement","src":"16200:35:12"}]},"documentation":{"id":1380,"nodeType":"StructuredDocumentation","src":"13412:733:12","text":" @dev Generates Data Key/Value pairs for removing an element from an LSP2 Array and a mapping Data Key.\n @custom:info The function assumes that the Data Value stored under the mapping Data Key is of length 20 where the last 16 bytes are the index of the element in the array.\n @param erc725YContract The ERC725Y contract.\n @param arrayKey The Data Key of Key Type Array.\n @param newArrayLength The new Array Length for the `arrayKey`.\n @param removedElementIndexKey The Data Key of Key Type Array Index for the removed element.\n @param removedElementIndex the index of the removed element.\n @param removedElementMapKey The Data Key of a mapping to be removed."},"id":1529,"implemented":true,"kind":"function","modifiers":[],"name":"removeElementFromArrayAndMap","nameLocation":"14159:28:12","nodeType":"FunctionDefinition","parameters":{"id":1394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1383,"mutability":"mutable","name":"erc725YContract","nameLocation":"14206:15:12","nodeType":"VariableDeclaration","scope":1529,"src":"14197:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC725Y_$505","typeString":"contract IERC725Y"},"typeName":{"id":1382,"nodeType":"UserDefinedTypeName","pathNode":{"id":1381,"name":"IERC725Y","nodeType":"IdentifierPath","referencedDeclaration":505,"src":"14197:8:12"},"referencedDeclaration":505,"src":"14197:8:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC725Y_$505","typeString":"contract IERC725Y"}},"visibility":"internal"},{"constant":false,"id":1385,"mutability":"mutable","name":"arrayKey","nameLocation":"14239:8:12","nodeType":"VariableDeclaration","scope":1529,"src":"14231:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1384,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14231:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1387,"mutability":"mutable","name":"newArrayLength","nameLocation":"14265:14:12","nodeType":"VariableDeclaration","scope":1529,"src":"14257:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1386,"name":"uint128","nodeType":"ElementaryTypeName","src":"14257:7:12","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1389,"mutability":"mutable","name":"removedElementIndexKey","nameLocation":"14297:22:12","nodeType":"VariableDeclaration","scope":1529,"src":"14289:30:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1388,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14289:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1391,"mutability":"mutable","name":"removedElementIndex","nameLocation":"14337:19:12","nodeType":"VariableDeclaration","scope":1529,"src":"14329:27:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1390,"name":"uint128","nodeType":"ElementaryTypeName","src":"14329:7:12","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1393,"mutability":"mutable","name":"removedElementMapKey","nameLocation":"14374:20:12","nodeType":"VariableDeclaration","scope":1529,"src":"14366:28:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1392,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14366:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14187:213:12"},"returnParameters":{"id":1401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1397,"mutability":"mutable","name":"dataKeys","nameLocation":"14465:8:12","nodeType":"VariableDeclaration","scope":1529,"src":"14448:25:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1395,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14448:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1396,"nodeType":"ArrayTypeName","src":"14448:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1400,"mutability":"mutable","name":"dataValues","nameLocation":"14490:10:12","nodeType":"VariableDeclaration","scope":1529,"src":"14475:25:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1398,"name":"bytes","nodeType":"ElementaryTypeName","src":"14475:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1399,"nodeType":"ArrayTypeName","src":"14475:7:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"14447:54:12"},"scope":1530,"src":"14150:2092:12","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1531,"src":"482:15762:12","usedErrors":[]}],"src":"39:16206:12"},"id":12},"@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4Constants.sol":{"ast":{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4Constants.sol","exportedSymbols":{"_LSP4_CREATORS_ARRAY_KEY":[1559],"_LSP4_CREATORS_MAP_KEY_PREFIX":[1562],"_LSP4_METADATA_KEY":[1565],"_LSP4_SUPPORTED_STANDARDS_KEY":[1544],"_LSP4_SUPPORTED_STANDARDS_VALUE":[1547],"_LSP4_TOKEN_NAME_KEY":[1550],"_LSP4_TOKEN_SYMBOL_KEY":[1553],"_LSP4_TOKEN_TYPE_COLLECTION":[1541],"_LSP4_TOKEN_TYPE_KEY":[1556],"_LSP4_TOKEN_TYPE_NFT":[1538],"_LSP4_TOKEN_TYPE_TOKEN":[1535]},"id":1566,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1532,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:13"},{"constant":true,"id":1535,"mutability":"constant","name":"_LSP4_TOKEN_TYPE_TOKEN","nameLocation":"96:22:13","nodeType":"VariableDeclaration","scope":1566,"src":"79:43:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1533,"name":"uint256","nodeType":"ElementaryTypeName","src":"79:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":1534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"121:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"internal"},{"constant":true,"id":1538,"mutability":"constant","name":"_LSP4_TOKEN_TYPE_NFT","nameLocation":"141:20:13","nodeType":"VariableDeclaration","scope":1566,"src":"124:41:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1536,"name":"uint256","nodeType":"ElementaryTypeName","src":"124:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"164:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"constant":true,"id":1541,"mutability":"constant","name":"_LSP4_TOKEN_TYPE_COLLECTION","nameLocation":"184:27:13","nodeType":"VariableDeclaration","scope":1566,"src":"167:48:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1539,"name":"uint256","nodeType":"ElementaryTypeName","src":"167:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"214:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"internal"},{"constant":true,"id":1544,"mutability":"constant","name":"_LSP4_SUPPORTED_STANDARDS_KEY","nameLocation":"356:29:13","nodeType":"VariableDeclaration","scope":1566,"src":"339:115:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1542,"name":"bytes32","nodeType":"ElementaryTypeName","src":"339:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307865616665633464383966613936313938383462363030303061346439363632346133386637616332643864396136303465636630376331326337376534383063","id":1543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"388:66:13","typeDescriptions":{"typeIdentifier":"t_rational_106291344305384829327323777171026204092068863755428044681309751323096797562892_by_1","typeString":"int_const 1062...(70 digits omitted)...2892"},"value":"0xeafec4d89fa9619884b60000a4d96624a38f7ac2d8d9a604ecf07c12c77e480c"},"visibility":"internal"},{"constant":true,"id":1547,"mutability":"constant","name":"_LSP4_SUPPORTED_STANDARDS_VALUE","nameLocation":"513:31:13","nodeType":"VariableDeclaration","scope":1566,"src":"498:62:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1545,"name":"bytes","nodeType":"ElementaryTypeName","src":"498:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":{"hexValue":"a4d96624","id":1546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"547:13:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_8031d7c868dca389fb4e96c3f4df5650d21c8966ab67d753610d01e72b8a0278","typeString":"literal_string hex\"a4d96624\""}},"visibility":"internal"},{"constant":true,"id":1550,"mutability":"constant","name":"_LSP4_TOKEN_NAME_KEY","nameLocation":"610:20:13","nodeType":"VariableDeclaration","scope":1566,"src":"593:106:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1548,"name":"bytes32","nodeType":"ElementaryTypeName","src":"593:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307864656261316532393266386261383832333865313061623363376638386264346265346661633536636164353139346236656363656166363533343638616631","id":1549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"633:66:13","typeDescriptions":{"typeIdentifier":"t_rational_100742294102289264549068743044138917200237013684961480918773254279156963117809_by_1","typeString":"int_const 1007...(70 digits omitted)...7809"},"value":"0xdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af1"},"visibility":"internal"},{"constant":true,"id":1553,"mutability":"constant","name":"_LSP4_TOKEN_SYMBOL_KEY","nameLocation":"751:22:13","nodeType":"VariableDeclaration","scope":1566,"src":"734:108:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1551,"name":"bytes32","nodeType":"ElementaryTypeName","src":"734:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307832663061363861623037373638653031393433613539396537333336326130653137613633613732653934646432653338346432633164346462393332373536","id":1552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"776:66:13","typeDescriptions":{"typeIdentifier":"t_rational_21277094746618207019470167271284656117398221945515764204453433194201650243414_by_1","typeString":"int_const 2127...(69 digits omitted)...3414"},"value":"0x2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db932756"},"visibility":"internal"},{"constant":true,"id":1556,"mutability":"constant","name":"_LSP4_TOKEN_TYPE_KEY","nameLocation":"892:20:13","nodeType":"VariableDeclaration","scope":1566,"src":"875:106:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1554,"name":"bytes32","nodeType":"ElementaryTypeName","src":"875:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307865303236316661393564623265623362353433396264303333636461363664353662393666393266323433613832323866643837353530656437626466646233","id":1555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"915:66:13","typeDescriptions":{"typeIdentifier":"t_rational_101385436791348632936915532486413845551797772917774025249609027894947960716723_by_1","typeString":"int_const 1013...(70 digits omitted)...6723"},"value":"0xe0261fa95db2eb3b5439bd033cda66d56b96f92f243a8228fd87550ed7bdfdb3"},"visibility":"internal"},{"constant":true,"id":1559,"mutability":"constant","name":"_LSP4_CREATORS_ARRAY_KEY","nameLocation":"1032:24:13","nodeType":"VariableDeclaration","scope":1566,"src":"1015:110:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1557,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1015:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307831313462643033623361343664343837353936383064383165626232623431346664613764303330613731303561383531383637616363663163323335326537","id":1558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1059:66:13","typeDescriptions":{"typeIdentifier":"t_rational_7823269115788143993216587392684831921119603420524855766908370213719800763111_by_1","typeString":"int_const 7823...(68 digits omitted)...3111"},"value":"0x114bd03b3a46d48759680d81ebb2b414fda7d030a7105a851867accf1c2352e7"},"visibility":"internal"},{"constant":true,"id":1562,"mutability":"constant","name":"_LSP4_CREATORS_MAP_KEY_PREFIX","nameLocation":"1186:29:13","nodeType":"VariableDeclaration","scope":1566,"src":"1169:71:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"},"typeName":{"id":1560,"name":"bytes10","nodeType":"ElementaryTypeName","src":"1169:7:13","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},"value":{"hexValue":"30783664653835656166356439383262346535646130","id":1561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1218:22:13","typeDescriptions":{"typeIdentifier":"t_rational_519024414032760576826784_by_1","typeString":"int_const 519024414032760576826784"},"value":"0x6de85eaf5d982b4e5da0"},"visibility":"internal"},{"constant":true,"id":1565,"mutability":"constant","name":"_LSP4_METADATA_KEY","nameLocation":"1289:18:13","nodeType":"VariableDeclaration","scope":1566,"src":"1272:104:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1563,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1272:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839616662393563616363396639353835386563343461613863336236383535313130303265333061653534343135383233663430363132386238356232333865","id":1564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1310:66:13","typeDescriptions":{"typeIdentifier":"t_rational_70100691122746653413313834938425876827577001362390431744658469452576166978446_by_1","typeString":"int_const 7010...(69 digits omitted)...8446"},"value":"0x9afb95cacc9f95858ec44aa8c3b685511002e30ae54415823f406128b85b238e"},"visibility":"internal"}],"src":"39:1339:13"},"id":13},"@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadata.sol":{"ast":{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadata.sol","exportedSymbols":{"ERC725Y":[35],"ERC725YCore":[270],"LSP4DigitalAssetMetadata":[1657],"LSP4DigitalAssetMetadataCore":[1719],"_LSP4_SUPPORTED_STANDARDS_KEY":[1544],"_LSP4_SUPPORTED_STANDARDS_VALUE":[1547],"_LSP4_TOKEN_NAME_KEY":[1550],"_LSP4_TOKEN_SYMBOL_KEY":[1553],"_LSP4_TOKEN_TYPE_KEY":[1556]},"id":1658,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1567,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:14"},{"absolutePath":"@erc725/smart-contracts/contracts/ERC725Y.sol","file":"@erc725/smart-contracts/contracts/ERC725Y.sol","id":1569,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1658,"sourceUnit":36,"src":"75:70:14","symbolAliases":[{"foreign":{"id":1568,"name":"ERC725Y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"83:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC725Y_$35_$","typeString":"type(contract ERC725Y)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@erc725/smart-contracts/contracts/ERC725YCore.sol","file":"@erc725/smart-contracts/contracts/ERC725YCore.sol","id":1571,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1658,"sourceUnit":271,"src":"146:78:14","symbolAliases":[{"foreign":{"id":1570,"name":"ERC725YCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"154:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC725YCore_$270_$","typeString":"type(contract ERC725YCore)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadataCore.sol","file":"./LSP4DigitalAssetMetadataCore.sol","id":1573,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1658,"sourceUnit":1720,"src":"225:80:14","symbolAliases":[{"foreign":{"id":1572,"name":"LSP4DigitalAssetMetadataCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"233:28:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP4DigitalAssetMetadataCore_$1719_$","typeString":"type(contract LSP4DigitalAssetMetadataCore)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4Constants.sol","file":"./LSP4Constants.sol","id":1579,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1658,"sourceUnit":1566,"src":"320:189:14","symbolAliases":[{"foreign":{"id":1574,"name":"_LSP4_SUPPORTED_STANDARDS_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"333:29:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1575,"name":"_LSP4_SUPPORTED_STANDARDS_VALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"368:31:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1576,"name":"_LSP4_TOKEN_NAME_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"405:20:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1577,"name":"_LSP4_TOKEN_SYMBOL_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"431:22:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1578,"name":"_LSP4_TOKEN_TYPE_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"459:20:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1581,"name":"ERC725Y","nodeType":"IdentifierPath","referencedDeclaration":35,"src":"816:7:14"},"id":1582,"nodeType":"InheritanceSpecifier","src":"816:7:14"},{"baseName":{"id":1583,"name":"LSP4DigitalAssetMetadataCore","nodeType":"IdentifierPath","referencedDeclaration":1719,"src":"829:28:14"},"id":1584,"nodeType":"InheritanceSpecifier","src":"829:28:14"}],"canonicalName":"LSP4DigitalAssetMetadata","contractDependencies":[],"contractKind":"contract","documentation":{"id":1580,"nodeType":"StructuredDocumentation","src":"511:254:14","text":" @title Implementation of a LSP4DigitalAssetMetadata contract that stores the **Token-Metadata** (`LSP4TokenName` and `LSP4TokenSymbol`) in its ERC725Y data store.\n @author Matthew Stevens\n @dev Standard Implementation of the LSP4 standard."},"fullyImplemented":true,"id":1657,"linearizedBaseContracts":[1657,1719,35,270,505,3796,4002,402],"name":"LSP4DigitalAssetMetadata","nameLocation":"784:24:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":1636,"nodeType":"Block","src":"1408:412:14","statements":[{"expression":{"arguments":[{"id":1602,"name":"_LSP4_SUPPORTED_STANDARDS_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"1512:29:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1603,"name":"_LSP4_SUPPORTED_STANDARDS_VALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"1555:31:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1599,"name":"ERC725YCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"1478:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC725YCore_$270_$","typeString":"type(contract ERC725YCore)"}},"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_setData","nodeType":"MemberAccess","referencedDeclaration":248,"src":"1478:20:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1478:118:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1605,"nodeType":"ExpressionStatement","src":"1478:118:14"},{"expression":{"arguments":[{"id":1609,"name":"_LSP4_TOKEN_NAME_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"1628:20:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":1612,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"1656:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1650:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1610,"name":"bytes","nodeType":"ElementaryTypeName","src":"1650:5:14","typeDescriptions":{}}},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1650:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1606,"name":"ERC725YCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"1607:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC725YCore_$270_$","typeString":"type(contract ERC725YCore)"}},"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_setData","nodeType":"MemberAccess","referencedDeclaration":248,"src":"1607:20:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":1614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1607:56:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1615,"nodeType":"ExpressionStatement","src":"1607:56:14"},{"expression":{"arguments":[{"id":1619,"name":"_LSP4_TOKEN_SYMBOL_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"1694:22:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":1622,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"1724:7:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1718:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1620,"name":"bytes","nodeType":"ElementaryTypeName","src":"1718:5:14","typeDescriptions":{}}},"id":1623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1718:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1616,"name":"ERC725YCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"1673:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC725YCore_$270_$","typeString":"type(contract ERC725YCore)"}},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_setData","nodeType":"MemberAccess","referencedDeclaration":248,"src":"1673:20:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1673:60:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1625,"nodeType":"ExpressionStatement","src":"1673:60:14"},{"expression":{"arguments":[{"id":1629,"name":"_LSP4_TOKEN_TYPE_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"1764:20:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":1632,"name":"lsp4TokenType_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"1797:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1630,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1786:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"1786:10:14","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1786:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1626,"name":"ERC725YCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"1743:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC725YCore_$270_$","typeString":"type(contract ERC725YCore)"}},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_setData","nodeType":"MemberAccess","referencedDeclaration":248,"src":"1743:20:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1743:70:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1635,"nodeType":"ExpressionStatement","src":"1743:70:14"}]},"documentation":{"id":1585,"nodeType":"StructuredDocumentation","src":"864:375:14","text":" @notice Deploying a digital asset `name_` with the `symbol_` symbol.\n @param name_ The name of the token.\n @param symbol_ The symbol of the token.\n @param initialOwner_ The owner of the token contract.\n @param lsp4TokenType_ The type of token this digital asset contract represents (`0` = Token, `1` = NFT, `2` = Collection)."},"id":1637,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1596,"name":"initialOwner_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"1393:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1597,"kind":"baseConstructorSpecifier","modifierName":{"id":1595,"name":"ERC725Y","nodeType":"IdentifierPath","referencedDeclaration":35,"src":"1385:7:14"},"nodeType":"ModifierInvocation","src":"1385:22:14"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1587,"mutability":"mutable","name":"name_","nameLocation":"1279:5:14","nodeType":"VariableDeclaration","scope":1637,"src":"1265:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1586,"name":"string","nodeType":"ElementaryTypeName","src":"1265:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1589,"mutability":"mutable","name":"symbol_","nameLocation":"1308:7:14","nodeType":"VariableDeclaration","scope":1637,"src":"1294:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1588,"name":"string","nodeType":"ElementaryTypeName","src":"1294:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1591,"mutability":"mutable","name":"initialOwner_","nameLocation":"1333:13:14","nodeType":"VariableDeclaration","scope":1637,"src":"1325:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1590,"name":"address","nodeType":"ElementaryTypeName","src":"1325:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1593,"mutability":"mutable","name":"lsp4TokenType_","nameLocation":"1364:14:14","nodeType":"VariableDeclaration","scope":1637,"src":"1356:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1592,"name":"uint256","nodeType":"ElementaryTypeName","src":"1356:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1255:129:14"},"returnParameters":{"id":1598,"nodeType":"ParameterList","parameters":[],"src":"1408:0:14"},"scope":1657,"src":"1244:576:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[248,1718],"body":{"id":1655,"nodeType":"Block","src":"2158:74:14","statements":[{"expression":{"arguments":[{"id":1651,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"2206:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1652,"name":"dataValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"2215:9:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1648,"name":"LSP4DigitalAssetMetadataCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"2168:28:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP4DigitalAssetMetadataCore_$1719_$","typeString":"type(contract LSP4DigitalAssetMetadataCore)"}},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_setData","nodeType":"MemberAccess","referencedDeclaration":1718,"src":"2168:37:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2168:57:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1654,"nodeType":"ExpressionStatement","src":"2168:57:14"}]},"documentation":{"id":1638,"nodeType":"StructuredDocumentation","src":"1826:177:14","text":" @dev The ERC725Y data keys `LSP4TokenName` and `LSP4TokenSymbol` cannot be changed\n via this function once the digital asset contract has been deployed."},"id":1656,"implemented":true,"kind":"function","modifiers":[],"name":"_setData","nameLocation":"2017:8:14","nodeType":"FunctionDefinition","overrides":{"id":1646,"nodeType":"OverrideSpecifier","overrides":[{"id":1644,"name":"ERC725YCore","nodeType":"IdentifierPath","referencedDeclaration":270,"src":"2115:11:14"},{"id":1645,"name":"LSP4DigitalAssetMetadataCore","nodeType":"IdentifierPath","referencedDeclaration":1719,"src":"2128:28:14"}],"src":"2106:51:14"},"parameters":{"id":1643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1640,"mutability":"mutable","name":"dataKey","nameLocation":"2043:7:14","nodeType":"VariableDeclaration","scope":1656,"src":"2035:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1639,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2035:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1642,"mutability":"mutable","name":"dataValue","nameLocation":"2073:9:14","nodeType":"VariableDeclaration","scope":1656,"src":"2060:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1641,"name":"bytes","nodeType":"ElementaryTypeName","src":"2060:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2025:63:14"},"returnParameters":{"id":1647,"nodeType":"ParameterList","parameters":[],"src":"2158:0:14"},"scope":1657,"src":"2008:224:14","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1658,"src":"766:1468:14","usedErrors":[407,412,448,451,454,1724,1727,1730]}],"src":"39:2196:14"},"id":14},"@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadataCore.sol":{"ast":{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadataCore.sol","exportedSymbols":{"ERC725YCore":[270],"LSP4DigitalAssetMetadataCore":[1719],"LSP4TokenNameNotEditable":[1724],"LSP4TokenSymbolNotEditable":[1727],"LSP4TokenTypeNotEditable":[1730],"_LSP4_TOKEN_NAME_KEY":[1550],"_LSP4_TOKEN_SYMBOL_KEY":[1553],"_LSP4_TOKEN_TYPE_KEY":[1556]},"id":1720,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1659,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:15"},{"absolutePath":"@erc725/smart-contracts/contracts/ERC725YCore.sol","file":"@erc725/smart-contracts/contracts/ERC725YCore.sol","id":1661,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1720,"sourceUnit":271,"src":"75:78:15","symbolAliases":[{"foreign":{"id":1660,"name":"ERC725YCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"83:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC725YCore_$270_$","typeString":"type(contract ERC725YCore)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4Constants.sol","file":"./LSP4Constants.sol","id":1665,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1720,"sourceUnit":1566,"src":"168:117:15","symbolAliases":[{"foreign":{"id":1662,"name":"_LSP4_TOKEN_NAME_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"181:20:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1663,"name":"_LSP4_TOKEN_SYMBOL_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"207:22:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1664,"name":"_LSP4_TOKEN_TYPE_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"235:20:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4Errors.sol","file":"./LSP4Errors.sol","id":1669,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1720,"sourceUnit":1731,"src":"297:126:15","symbolAliases":[{"foreign":{"id":1666,"name":"LSP4TokenNameNotEditable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1724,"src":"310:24:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1667,"name":"LSP4TokenSymbolNotEditable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"340:26:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1668,"name":"LSP4TokenTypeNotEditable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"372:24:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1671,"name":"ERC725YCore","nodeType":"IdentifierPath","referencedDeclaration":270,"src":"730:11:15"},"id":1672,"nodeType":"InheritanceSpecifier","src":"730:11:15"}],"canonicalName":"LSP4DigitalAssetMetadataCore","contractDependencies":[],"contractKind":"contract","documentation":{"id":1670,"nodeType":"StructuredDocumentation","src":"425:254:15","text":" @title Implementation of a LSP4DigitalAssetMetadata contract that stores the **Token-Metadata** (`LSP4TokenName` and `LSP4TokenSymbol`) in its ERC725Y data store.\n @author Matthew Stevens\n @dev Standard Implementation of the LSP4 standard."},"fullyImplemented":true,"id":1719,"linearizedBaseContracts":[1719,270,505,3796,4002,402],"name":"LSP4DigitalAssetMetadataCore","nameLocation":"698:28:15","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[248],"body":{"id":1717,"nodeType":"Block","src":"1037:426:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1681,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"1051:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1682,"name":"_LSP4_TOKEN_NAME_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"1062:20:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1051:31:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1688,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"1152:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1689,"name":"_LSP4_TOKEN_SYMBOL_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"1163:22:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1152:33:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1695,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"1257:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1696,"name":"_LSP4_TOKEN_TYPE_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"1268:20:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1257:31:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1713,"nodeType":"Block","src":"1354:103:15","statements":[{"expression":{"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1702,"name":"_store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"1368:6:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes storage ref)"}},"id":1704,"indexExpression":{"id":1703,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"1375:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1368:15:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1705,"name":"dataValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1677,"src":"1386:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"1368:27:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":1707,"nodeType":"ExpressionStatement","src":"1368:27:15"},{"eventCall":{"arguments":[{"id":1709,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"1427:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1710,"name":"dataValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1677,"src":"1436:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1708,"name":"DataChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"1415:11:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":1711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1415:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1712,"nodeType":"EmitStatement","src":"1410:36:15"}]},"id":1714,"nodeType":"IfStatement","src":"1253:204:15","trueBody":{"id":1701,"nodeType":"Block","src":"1290:58:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1698,"name":"LSP4TokenTypeNotEditable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"1311:24:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1311:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1700,"nodeType":"RevertStatement","src":"1304:33:15"}]}},"id":1715,"nodeType":"IfStatement","src":"1148:309:15","trueBody":{"id":1694,"nodeType":"Block","src":"1187:60:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1691,"name":"LSP4TokenSymbolNotEditable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"1208:26:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1208:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1693,"nodeType":"RevertStatement","src":"1201:35:15"}]}},"id":1716,"nodeType":"IfStatement","src":"1047:410:15","trueBody":{"id":1687,"nodeType":"Block","src":"1084:58:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1684,"name":"LSP4TokenNameNotEditable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1724,"src":"1105:24:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1105:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1686,"nodeType":"RevertStatement","src":"1098:33:15"}]}}]},"documentation":{"id":1673,"nodeType":"StructuredDocumentation","src":"748:177:15","text":" @dev The ERC725Y data keys `LSP4TokenName` and `LSP4TokenSymbol` cannot be changed\n via this function once the digital asset contract has been deployed."},"id":1718,"implemented":true,"kind":"function","modifiers":[],"name":"_setData","nameLocation":"939:8:15","nodeType":"FunctionDefinition","overrides":{"id":1679,"nodeType":"OverrideSpecifier","overrides":[],"src":"1028:8:15"},"parameters":{"id":1678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1675,"mutability":"mutable","name":"dataKey","nameLocation":"965:7:15","nodeType":"VariableDeclaration","scope":1718,"src":"957:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1674,"name":"bytes32","nodeType":"ElementaryTypeName","src":"957:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1677,"mutability":"mutable","name":"dataValue","nameLocation":"995:9:15","nodeType":"VariableDeclaration","scope":1718,"src":"982:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1676,"name":"bytes","nodeType":"ElementaryTypeName","src":"982:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"947:63:15"},"returnParameters":{"id":1680,"nodeType":"ParameterList","parameters":[],"src":"1037:0:15"},"scope":1719,"src":"930:533:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1720,"src":"680:785:15","usedErrors":[407,412,448,451,454,1724,1727,1730]}],"src":"39:1427:15"},"id":15},"@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4Errors.sol":{"ast":{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4Errors.sol","exportedSymbols":{"LSP4TokenNameNotEditable":[1724],"LSP4TokenSymbolNotEditable":[1727],"LSP4TokenTypeNotEditable":[1730]},"id":1731,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1721,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:16"},{"documentation":{"id":1722,"nodeType":"StructuredDocumentation","src":"64:379:16","text":" @dev Reverts when trying to edit the data key `LSP4TokenName` after the digital asset contract has been deployed / initialized.\n The `LSP4TokenName` data key is located inside the ERC725Y data key-value store of the digital asset contract.\n It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized."},"id":1724,"name":"LSP4TokenNameNotEditable","nameLocation":"450:24:16","nodeType":"ErrorDefinition","parameters":{"id":1723,"nodeType":"ParameterList","parameters":[],"src":"474:2:16"},"src":"444:33:16"},{"documentation":{"id":1725,"nodeType":"StructuredDocumentation","src":"479:383:16","text":" @dev Reverts when trying to edit the data key `LSP4TokenSymbol` after the digital asset contract has been deployed / initialized.\n The `LSP4TokenSymbol` data key is located inside the ERC725Y data key-value store of the digital asset contract.\n It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized."},"id":1727,"name":"LSP4TokenSymbolNotEditable","nameLocation":"869:26:16","nodeType":"ErrorDefinition","parameters":{"id":1726,"nodeType":"ParameterList","parameters":[],"src":"895:2:16"},"src":"863:35:16"},{"documentation":{"id":1728,"nodeType":"StructuredDocumentation","src":"900:381:16","text":" @dev Reverts when trying to edit the data key `LSP4TokenType` after the digital asset contract has been deployed / initialized.\n The `LSP4TokenType` data key is located inside the ERC725Y data key-value store of the digital asset contract.\n It can be set only once inside the constructor / initializer when the digital asset contract is being deployed / initialized."},"id":1730,"name":"LSP4TokenTypeNotEditable","nameLocation":"1288:24:16","nodeType":"ErrorDefinition","parameters":{"id":1729,"nodeType":"ParameterList","parameters":[],"src":"1312:2:16"},"src":"1282:33:16"}],"src":"39:1277:16"},"id":16},"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/ILSP8IdentifiableDigitalAsset.sol":{"ast":{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/ILSP8IdentifiableDigitalAsset.sol","exportedSymbols":{"IERC165":[4002],"IERC725Y":[505],"ILSP8IdentifiableDigitalAsset":[1951]},"id":1952,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1732,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:17"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":1734,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1952,"sourceUnit":4003,"src":"78:80:17","symbolAliases":[{"foreign":{"id":1733,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"86:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$4002_$","typeString":"type(contract IERC165)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol","file":"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol","id":1736,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1952,"sourceUnit":506,"src":"159:89:17","symbolAliases":[{"foreign":{"id":1735,"name":"IERC725Y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"172:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC725Y_$505_$","typeString":"type(contract IERC725Y)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1738,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":4002,"src":"402:7:17"},"id":1739,"nodeType":"InheritanceSpecifier","src":"402:7:17"},{"baseName":{"id":1740,"name":"IERC725Y","nodeType":"IdentifierPath","referencedDeclaration":505,"src":"411:8:17"},"id":1741,"nodeType":"InheritanceSpecifier","src":"411:8:17"}],"canonicalName":"ILSP8IdentifiableDigitalAsset","contractDependencies":[],"contractKind":"interface","documentation":{"id":1737,"nodeType":"StructuredDocumentation","src":"250:108:17","text":" @title Interface of the LSP8 - Identifiable Digital Asset standard, a non-fungible digital asset."},"fullyImplemented":false,"id":1951,"linearizedBaseContracts":[1951,505,4002],"name":"ILSP8IdentifiableDigitalAsset","nameLocation":"369:29:17","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1742,"nodeType":"StructuredDocumentation","src":"445:616:17","text":" @dev Emitted when `tokenId` token is transferred from the `from` to the `to` address.\n @param operator The address of operator that sent the `tokenId`\n @param from The previous owner of the `tokenId`\n @param to The new owner of `tokenId`\n @param tokenId The tokenId that was transferred\n @param force If the token transfer enforces the `to` recipient address to be a contract that implements the LSP1 standard or not.\n @param data Any additional data the caller included by the caller during the transfer, and sent in the hooks to the `from` and `to` addresses."},"id":1756,"name":"Transfer","nameLocation":"1072:8:17","nodeType":"EventDefinition","parameters":{"id":1755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1744,"indexed":false,"mutability":"mutable","name":"operator","nameLocation":"1098:8:17","nodeType":"VariableDeclaration","scope":1756,"src":"1090:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1743,"name":"address","nodeType":"ElementaryTypeName","src":"1090:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1746,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"1132:4:17","nodeType":"VariableDeclaration","scope":1756,"src":"1116:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1745,"name":"address","nodeType":"ElementaryTypeName","src":"1116:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1748,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"1162:2:17","nodeType":"VariableDeclaration","scope":1756,"src":"1146:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1747,"name":"address","nodeType":"ElementaryTypeName","src":"1146:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1750,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1190:7:17","nodeType":"VariableDeclaration","scope":1756,"src":"1174:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1749,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1174:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1752,"indexed":false,"mutability":"mutable","name":"force","nameLocation":"1212:5:17","nodeType":"VariableDeclaration","scope":1756,"src":"1207:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1751,"name":"bool","nodeType":"ElementaryTypeName","src":"1207:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1754,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"1233:4:17","nodeType":"VariableDeclaration","scope":1756,"src":"1227:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1753,"name":"bytes","nodeType":"ElementaryTypeName","src":"1227:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1080:163:17"},"src":"1066:178:17"},{"anonymous":false,"documentation":{"id":1757,"nodeType":"StructuredDocumentation","src":"1250:396:17","text":" @dev Emitted when `tokenOwner` enables `operator` to transfer or burn the `tokenId`.\n @param operator The address authorized as an operator.\n @param tokenOwner The owner of the `tokenId`.\n @param tokenId The tokenId `operator` address has access on behalf of `tokenOwner`.\n @param operatorNotificationData The data to notify the operator about via LSP1."},"id":1767,"name":"OperatorAuthorizationChanged","nameLocation":"1657:28:17","nodeType":"EventDefinition","parameters":{"id":1766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1759,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1711:8:17","nodeType":"VariableDeclaration","scope":1767,"src":"1695:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1758,"name":"address","nodeType":"ElementaryTypeName","src":"1695:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1761,"indexed":true,"mutability":"mutable","name":"tokenOwner","nameLocation":"1745:10:17","nodeType":"VariableDeclaration","scope":1767,"src":"1729:26:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1760,"name":"address","nodeType":"ElementaryTypeName","src":"1729:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1763,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1781:7:17","nodeType":"VariableDeclaration","scope":1767,"src":"1765:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1762,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1765:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1765,"indexed":false,"mutability":"mutable","name":"operatorNotificationData","nameLocation":"1804:24:17","nodeType":"VariableDeclaration","scope":1767,"src":"1798:30:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1764,"name":"bytes","nodeType":"ElementaryTypeName","src":"1798:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1685:149:17"},"src":"1651:184:17"},{"anonymous":false,"documentation":{"id":1768,"nodeType":"StructuredDocumentation","src":"1841:501:17","text":" @dev Emitted when `tokenOwner` disables `operator` to transfer or burn `tokenId` on its behalf.\n @param operator The address revoked from the operator array ({getOperatorsOf}).\n @param tokenOwner The owner of the `tokenId`.\n @param tokenId The tokenId `operator` is revoked from operating on.\n @param notified Bool indicating whether the operator has been notified or not\n @param operatorNotificationData The data to notify the operator about via LSP1."},"id":1780,"name":"OperatorRevoked","nameLocation":"2353:15:17","nodeType":"EventDefinition","parameters":{"id":1779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1770,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"2394:8:17","nodeType":"VariableDeclaration","scope":1780,"src":"2378:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1769,"name":"address","nodeType":"ElementaryTypeName","src":"2378:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1772,"indexed":true,"mutability":"mutable","name":"tokenOwner","nameLocation":"2428:10:17","nodeType":"VariableDeclaration","scope":1780,"src":"2412:26:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1771,"name":"address","nodeType":"ElementaryTypeName","src":"2412:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1774,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"2464:7:17","nodeType":"VariableDeclaration","scope":1780,"src":"2448:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1773,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2448:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1776,"indexed":false,"mutability":"mutable","name":"notified","nameLocation":"2486:8:17","nodeType":"VariableDeclaration","scope":1780,"src":"2481:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1775,"name":"bool","nodeType":"ElementaryTypeName","src":"2481:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1778,"indexed":false,"mutability":"mutable","name":"operatorNotificationData","nameLocation":"2510:24:17","nodeType":"VariableDeclaration","scope":1780,"src":"2504:30:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1777,"name":"bytes","nodeType":"ElementaryTypeName","src":"2504:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2368:172:17"},"src":"2347:194:17"},{"anonymous":false,"documentation":{"id":1781,"nodeType":"StructuredDocumentation","src":"2547:253:17","text":" @dev Emitted when setting data for `tokenId`.\n @param tokenId The tokenId which data is set for.\n @param dataKey The data key for which a bytes value is set.\n @param dataValue The value to set for the given data key."},"id":1789,"name":"TokenIdDataChanged","nameLocation":"2811:18:17","nodeType":"EventDefinition","parameters":{"id":1788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1783,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"2855:7:17","nodeType":"VariableDeclaration","scope":1789,"src":"2839:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1782,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2839:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1785,"indexed":true,"mutability":"mutable","name":"dataKey","nameLocation":"2888:7:17","nodeType":"VariableDeclaration","scope":1789,"src":"2872:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1784,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2872:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1787,"indexed":false,"mutability":"mutable","name":"dataValue","nameLocation":"2911:9:17","nodeType":"VariableDeclaration","scope":1789,"src":"2905:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1786,"name":"bytes","nodeType":"ElementaryTypeName","src":"2905:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2829:97:17"},"src":"2805:122:17"},{"documentation":{"id":1790,"nodeType":"StructuredDocumentation","src":"2959:147:17","text":" @dev Returns the number of existing tokens that have been minted in this contract.\n @return The number of existing tokens."},"functionSelector":"18160ddd","id":1795,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3120:11:17","nodeType":"FunctionDefinition","parameters":{"id":1791,"nodeType":"ParameterList","parameters":[],"src":"3131:2:17"},"returnParameters":{"id":1794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1793,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1795,"src":"3157:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1792,"name":"uint256","nodeType":"ElementaryTypeName","src":"3157:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3156:9:17"},"scope":1951,"src":"3111:55:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1796,"nodeType":"StructuredDocumentation","src":"3204:196:17","text":" @dev Get the number of token IDs owned by `tokenOwner`.\n @param tokenOwner The address to query     *\n @return The total number of token IDs that `tokenOwner` owns."},"functionSelector":"70a08231","id":1803,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3414:9:17","nodeType":"FunctionDefinition","parameters":{"id":1799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1798,"mutability":"mutable","name":"tokenOwner","nameLocation":"3432:10:17","nodeType":"VariableDeclaration","scope":1803,"src":"3424:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1797,"name":"address","nodeType":"ElementaryTypeName","src":"3424:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3423:20:17"},"returnParameters":{"id":1802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1801,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1803,"src":"3467:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1800,"name":"uint256","nodeType":"ElementaryTypeName","src":"3467:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3466:9:17"},"scope":1951,"src":"3405:71:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1804,"nodeType":"StructuredDocumentation","src":"3482:380:17","text":" @dev Returns the list of `tokenIds` for the `tokenOwner` address.\n @param tokenId tokenOwner The address to query owned tokens\n @return The owner address of the given `tokenId`.\n @custom:requirements `tokenId` must exist.\n @custom:info if the `tokenId` is not owned by any address, the returned address will be `address(0)`"},"functionSelector":"217b2270","id":1811,"implemented":false,"kind":"function","modifiers":[],"name":"tokenOwnerOf","nameLocation":"3876:12:17","nodeType":"FunctionDefinition","parameters":{"id":1807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1806,"mutability":"mutable","name":"tokenId","nameLocation":"3897:7:17","nodeType":"VariableDeclaration","scope":1811,"src":"3889:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1805,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3889:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3888:17:17"},"returnParameters":{"id":1810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1809,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1811,"src":"3929:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1808,"name":"address","nodeType":"ElementaryTypeName","src":"3929:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3928:9:17"},"scope":1951,"src":"3867:71:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1812,"nodeType":"StructuredDocumentation","src":"3944:244:17","text":" @dev Returns the list of token IDs that the `tokenOwner` address owns.\n @param tokenOwner The address that we want to get the list of token IDs for.\n @return An array of `bytes32[] tokenIds` owned by `tokenOwner`."},"functionSelector":"a3b261f2","id":1820,"implemented":false,"kind":"function","modifiers":[],"name":"tokenIdsOf","nameLocation":"4202:10:17","nodeType":"FunctionDefinition","parameters":{"id":1815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1814,"mutability":"mutable","name":"tokenOwner","nameLocation":"4230:10:17","nodeType":"VariableDeclaration","scope":1820,"src":"4222:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1813,"name":"address","nodeType":"ElementaryTypeName","src":"4222:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4212:34:17"},"returnParameters":{"id":1819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1818,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1820,"src":"4270:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1816,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4270:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1817,"nodeType":"ArrayTypeName","src":"4270:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4269:18:17"},"scope":1951,"src":"4193:95:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1821,"nodeType":"StructuredDocumentation","src":"4337:286:17","text":" @notice Retrieves data for a specific `tokenId` and `dataKey`.\n @param tokenId The unique identifier for a token.\n @param dataKey The key for the data to retrieve.\n @return dataValues The data value associated with the given `tokenId` and `dataKey`."},"functionSelector":"16e023b3","id":1830,"implemented":false,"kind":"function","modifiers":[],"name":"getDataForTokenId","nameLocation":"4637:17:17","nodeType":"FunctionDefinition","parameters":{"id":1826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1823,"mutability":"mutable","name":"tokenId","nameLocation":"4672:7:17","nodeType":"VariableDeclaration","scope":1830,"src":"4664:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1822,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4664:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1825,"mutability":"mutable","name":"dataKey","nameLocation":"4697:7:17","nodeType":"VariableDeclaration","scope":1830,"src":"4689:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1824,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4689:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4654:56:17"},"returnParameters":{"id":1829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1828,"mutability":"mutable","name":"dataValues","nameLocation":"4742:10:17","nodeType":"VariableDeclaration","scope":1830,"src":"4729:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1827,"name":"bytes","nodeType":"ElementaryTypeName","src":"4729:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4728:25:17"},"scope":1951,"src":"4628:126:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1831,"nodeType":"StructuredDocumentation","src":"4760:309:17","text":" @notice Retrieves data in batch for multiple `tokenId` and `dataKey` pairs.\n @param tokenIds An array of token IDs.\n @param dataKeys An array of data keys corresponding to the token IDs.\n @return dataValues An array of data values for each pair of `tokenId` and `dataKey`."},"functionSelector":"1d26fce6","id":1843,"implemented":false,"kind":"function","modifiers":[],"name":"getDataBatchForTokenIds","nameLocation":"5083:23:17","nodeType":"FunctionDefinition","parameters":{"id":1838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1834,"mutability":"mutable","name":"tokenIds","nameLocation":"5133:8:17","nodeType":"VariableDeclaration","scope":1843,"src":"5116:25:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1832,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5116:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1833,"nodeType":"ArrayTypeName","src":"5116:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1837,"mutability":"mutable","name":"dataKeys","nameLocation":"5168:8:17","nodeType":"VariableDeclaration","scope":1843,"src":"5151:25:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1835,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5151:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1836,"nodeType":"ArrayTypeName","src":"5151:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5106:76:17"},"returnParameters":{"id":1842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1841,"mutability":"mutable","name":"dataValues","nameLocation":"5216:10:17","nodeType":"VariableDeclaration","scope":1843,"src":"5201:25:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1839,"name":"bytes","nodeType":"ElementaryTypeName","src":"5201:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1840,"nodeType":"ArrayTypeName","src":"5201:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"5200:27:17"},"scope":1951,"src":"5074:154:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1844,"nodeType":"StructuredDocumentation","src":"5234:299:17","text":" @notice Sets data for a specific `tokenId` and `dataKey`.\n @param tokenId The unique identifier for a token.\n @param dataKey The key for the data to set.\n @param dataValue The value to set for the given data key.\n @custom:events {TokenIdDataChanged} event."},"functionSelector":"d6c1407c","id":1853,"implemented":false,"kind":"function","modifiers":[],"name":"setDataForTokenId","nameLocation":"5547:17:17","nodeType":"FunctionDefinition","parameters":{"id":1851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1846,"mutability":"mutable","name":"tokenId","nameLocation":"5582:7:17","nodeType":"VariableDeclaration","scope":1853,"src":"5574:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1845,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5574:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1848,"mutability":"mutable","name":"dataKey","nameLocation":"5607:7:17","nodeType":"VariableDeclaration","scope":1853,"src":"5599:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1847,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5599:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1850,"mutability":"mutable","name":"dataValue","nameLocation":"5637:9:17","nodeType":"VariableDeclaration","scope":1853,"src":"5624:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1849,"name":"bytes","nodeType":"ElementaryTypeName","src":"5624:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5564:88:17"},"returnParameters":{"id":1852,"nodeType":"ParameterList","parameters":[],"src":"5661:0:17"},"scope":1951,"src":"5538:124:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1854,"nodeType":"StructuredDocumentation","src":"5668:352:17","text":" @notice Sets data in batch for multiple `tokenId` and `dataKey` pairs.\n @param tokenIds An array of token IDs.\n @param dataKeys An array of data keys corresponding to the token IDs.\n @param dataValues An array of values to set for the given data keys.\n @custom:events {TokenIdDataChanged} event for each pair."},"functionSelector":"be9f0e6f","id":1866,"implemented":false,"kind":"function","modifiers":[],"name":"setDataBatchForTokenIds","nameLocation":"6034:23:17","nodeType":"FunctionDefinition","parameters":{"id":1864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1857,"mutability":"mutable","name":"tokenIds","nameLocation":"6084:8:17","nodeType":"VariableDeclaration","scope":1866,"src":"6067:25:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1855,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6067:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1856,"nodeType":"ArrayTypeName","src":"6067:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1860,"mutability":"mutable","name":"dataKeys","nameLocation":"6119:8:17","nodeType":"VariableDeclaration","scope":1866,"src":"6102:25:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1858,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6102:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1859,"nodeType":"ArrayTypeName","src":"6102:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1863,"mutability":"mutable","name":"dataValues","nameLocation":"6152:10:17","nodeType":"VariableDeclaration","scope":1866,"src":"6137:25:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1861,"name":"bytes","nodeType":"ElementaryTypeName","src":"6137:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1862,"nodeType":"ArrayTypeName","src":"6137:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"6057:111:17"},"returnParameters":{"id":1865,"nodeType":"ParameterList","parameters":[],"src":"6177:0:17"},"scope":1951,"src":"6025:153:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1867,"nodeType":"StructuredDocumentation","src":"6219:782:17","text":" @dev Allow an `operator` address to transfer or burn a specific `tokenId` on behalf of its token owner. See {isOperatorFor}.\n Notify the operator based on the LSP1-UniversalReceiver standard\n @param operator The address to authorize as an operator.\n @param tokenId The token ID operator has access to.\n @param operatorNotificationData The data to notify the operator about via LSP1.\n @custom:requirements\n - `tokenId` must exist.\n - caller MUST be the {tokenOwnerOf} `tokenId`.\n - the owner of a `tokenId` cannot grant itself as an `operator` (`operator` cannot be the calling address).\n - `operator` cannot be the zero address.\n @custom:events {OperatorAuthorizationChanged} event."},"functionSelector":"86a10ddd","id":1876,"implemented":false,"kind":"function","modifiers":[],"name":"authorizeOperator","nameLocation":"7015:17:17","nodeType":"FunctionDefinition","parameters":{"id":1874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1869,"mutability":"mutable","name":"operator","nameLocation":"7050:8:17","nodeType":"VariableDeclaration","scope":1876,"src":"7042:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1868,"name":"address","nodeType":"ElementaryTypeName","src":"7042:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1871,"mutability":"mutable","name":"tokenId","nameLocation":"7076:7:17","nodeType":"VariableDeclaration","scope":1876,"src":"7068:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1870,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7068:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1873,"mutability":"mutable","name":"operatorNotificationData","nameLocation":"7106:24:17","nodeType":"VariableDeclaration","scope":1876,"src":"7093:37:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1872,"name":"bytes","nodeType":"ElementaryTypeName","src":"7093:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7032:104:17"},"returnParameters":{"id":1875,"nodeType":"ParameterList","parameters":[],"src":"7145:0:17"},"scope":1951,"src":"7006:140:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1877,"nodeType":"StructuredDocumentation","src":"7152:893:17","text":" @dev Remove access of `operator` for a given `tokenId`, disallowing it to transfer `tokenId` on behalf of its owner.\n See also {isOperatorFor}.\n @param operator The address to revoke as an operator.\n @param tokenId The tokenId `operator` is revoked from operating on.\n @param notify Boolean indicating whether to notify the operator or not\n @param operatorNotificationData The data to notify the operator about via LSP1.\n @custom:requirements\n - `tokenId` must exist.\n - caller must be the {tokenOwnerOf} `tokenId`.\n - the owner of a `tokenId` cannot grant revoke itself as an `operator` (`operator` cannot be the calling address).\n - `operator` cannot be the zero address.\n @custom:events {OperatorRevoked} event with address of the operator being revoked for the caller (token owner).."},"functionSelector":"db8c9663","id":1888,"implemented":false,"kind":"function","modifiers":[],"name":"revokeOperator","nameLocation":"8059:14:17","nodeType":"FunctionDefinition","parameters":{"id":1886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1879,"mutability":"mutable","name":"operator","nameLocation":"8091:8:17","nodeType":"VariableDeclaration","scope":1888,"src":"8083:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1878,"name":"address","nodeType":"ElementaryTypeName","src":"8083:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1881,"mutability":"mutable","name":"tokenId","nameLocation":"8117:7:17","nodeType":"VariableDeclaration","scope":1888,"src":"8109:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1880,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8109:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1883,"mutability":"mutable","name":"notify","nameLocation":"8139:6:17","nodeType":"VariableDeclaration","scope":1888,"src":"8134:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1882,"name":"bool","nodeType":"ElementaryTypeName","src":"8134:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1885,"mutability":"mutable","name":"operatorNotificationData","nameLocation":"8168:24:17","nodeType":"VariableDeclaration","scope":1888,"src":"8155:37:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1884,"name":"bytes","nodeType":"ElementaryTypeName","src":"8155:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8073:125:17"},"returnParameters":{"id":1887,"nodeType":"ParameterList","parameters":[],"src":"8207:0:17"},"scope":1951,"src":"8050:158:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1889,"nodeType":"StructuredDocumentation","src":"8214:535:17","text":" @dev Returns whether `operator` address is an operator for a given `tokenId`.\n @param operator The address to query operator status for.\n @param tokenId The token ID to check if `operator` is allowed to operate on.\n @return `true` if `operator` is an operator for `tokenId`, `false` otherwise.\n @custom:requirements\n - `tokenId` must exist.\n - caller must be the current {tokenOwnerOf} `tokenId`.\n @custom:info The tokenOwner is its own operator."},"functionSelector":"2a3654a4","id":1898,"implemented":false,"kind":"function","modifiers":[],"name":"isOperatorFor","nameLocation":"8763:13:17","nodeType":"FunctionDefinition","parameters":{"id":1894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1891,"mutability":"mutable","name":"operator","nameLocation":"8794:8:17","nodeType":"VariableDeclaration","scope":1898,"src":"8786:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1890,"name":"address","nodeType":"ElementaryTypeName","src":"8786:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1893,"mutability":"mutable","name":"tokenId","nameLocation":"8820:7:17","nodeType":"VariableDeclaration","scope":1898,"src":"8812:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1892,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8812:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8776:57:17"},"returnParameters":{"id":1897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1896,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1898,"src":"8857:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1895,"name":"bool","nodeType":"ElementaryTypeName","src":"8857:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8856:6:17"},"scope":1951,"src":"8754:109:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1899,"nodeType":"StructuredDocumentation","src":"8869:351:17","text":" @dev Returns all `operator` addresses that are allowed to transfer or burn a specific `tokenId` on behalf of its owner.\n @param tokenId The token ID to get the operators for.\n @return An array of operators allowed to transfer or burn a specific `tokenId`.\n Requirements\n - `tokenId` must exist."},"functionSelector":"49a6078d","id":1907,"implemented":false,"kind":"function","modifiers":[],"name":"getOperatorsOf","nameLocation":"9234:14:17","nodeType":"FunctionDefinition","parameters":{"id":1902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1901,"mutability":"mutable","name":"tokenId","nameLocation":"9266:7:17","nodeType":"VariableDeclaration","scope":1907,"src":"9258:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1900,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9258:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9248:31:17"},"returnParameters":{"id":1906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1905,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1907,"src":"9303:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1903,"name":"address","nodeType":"ElementaryTypeName","src":"9303:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1904,"nodeType":"ArrayTypeName","src":"9303:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"9302:18:17"},"scope":1951,"src":"9225:96:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1908,"nodeType":"StructuredDocumentation","src":"9362:2075:17","text":" @dev Transfer a given `tokenId` token from the `from` address to the `to` address.\n If operators are set for a specific `tokenId`, all the operators are revoked after the tokenId have been transferred.\n The `force` parameter MUST be set to `true` when transferring tokens to Externally Owned Accounts (EOAs)\n or contracts that do not implement the LSP1 standard.\n @param from The address that owns the given `tokenId`.\n @param to The address that will receive the `tokenId`.\n @param tokenId The token ID to transfer.\n @param force When set to `true`, the `to` address CAN be any addres.\n When set to `false`, the `to` address MUST be a contract that supports the LSP1 UniversalReceiver standard.\n @param data Any additional data the caller wants included in the emitted event, and sent in the hooks of the `from` and `to` addresses.\n @custom:requirements\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` and `to` cannot be the same address (`from` cannot send the `tokenId` to itself).\n - `from` must own the given `tokenId`.\n - If the caller is not `from`, it must be an operator for the `tokenId`.\n @custom:events\n - {Transfer} event when the `tokenId` is successfully transferred.\n @custom:hint The `force` parameter **MUST be set to `true`** to transfer tokens to Externally Owned Accounts (EOAs)\n or contracts that do not implement the LSP1 Universal Receiver Standard. Otherwise the function will revert making the transfer fail.\n @custom:info if the `to` address is a contract that implements LSP1, it will always be notified via its `universalReceiver(...)` function, regardless if `force` is set to `true` or `false`.\n @custom:warning Be aware that when either the sender or the recipient can have logic that revert in their `universalReceiver(...)` function when being notified.\n This even if the `force` was set to `true`."},"functionSelector":"511b6952","id":1921,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"11451:8:17","nodeType":"FunctionDefinition","parameters":{"id":1919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1910,"mutability":"mutable","name":"from","nameLocation":"11477:4:17","nodeType":"VariableDeclaration","scope":1921,"src":"11469:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1909,"name":"address","nodeType":"ElementaryTypeName","src":"11469:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1912,"mutability":"mutable","name":"to","nameLocation":"11499:2:17","nodeType":"VariableDeclaration","scope":1921,"src":"11491:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1911,"name":"address","nodeType":"ElementaryTypeName","src":"11491:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1914,"mutability":"mutable","name":"tokenId","nameLocation":"11519:7:17","nodeType":"VariableDeclaration","scope":1921,"src":"11511:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1913,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11511:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1916,"mutability":"mutable","name":"force","nameLocation":"11541:5:17","nodeType":"VariableDeclaration","scope":1921,"src":"11536:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1915,"name":"bool","nodeType":"ElementaryTypeName","src":"11536:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1918,"mutability":"mutable","name":"data","nameLocation":"11569:4:17","nodeType":"VariableDeclaration","scope":1921,"src":"11556:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1917,"name":"bytes","nodeType":"ElementaryTypeName","src":"11556:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11459:120:17"},"returnParameters":{"id":1920,"nodeType":"ParameterList","parameters":[],"src":"11588:0:17"},"scope":1951,"src":"11442:147:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1922,"nodeType":"StructuredDocumentation","src":"11595:1189:17","text":" @dev Transfers multiple tokens at once based on the arrays of `from`, `to` and `tokenId`.\n If any transfer fails, the whole call will revert.\n @param from An array of sending addresses.\n @param to An array of recipient addresses.\n @param tokenId An array of token IDs to transfer.\n @param force When set to `true`, `to` may be any address.\n When set to `false`, `to` must be a contract that supports the LSP1 standard and not revert.\n @param data Any additional data the caller wants included in the emitted event, and sent in the hooks to the `from` and `to` addresses.\n @custom:requirements\n - The arrays of `from`, `to` and `tokenId` must have the same length.\n - no values in the `from` array can be the zero address.\n - no values in the `to` array can be the zero address.\n - `from` and `to` cannot be the same address at the same index on each arrays.\n - each `tokenId` must be owned by `from`.\n - If the caller is not `from`, it must be an operator of each `tokenId`.\n @custom:events\n - {Transfer} events on each successful token transfer."},"functionSelector":"7e87632c","id":1940,"implemented":false,"kind":"function","modifiers":[],"name":"transferBatch","nameLocation":"12798:13:17","nodeType":"FunctionDefinition","parameters":{"id":1938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1925,"mutability":"mutable","name":"from","nameLocation":"12838:4:17","nodeType":"VariableDeclaration","scope":1940,"src":"12821:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1923,"name":"address","nodeType":"ElementaryTypeName","src":"12821:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1924,"nodeType":"ArrayTypeName","src":"12821:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1928,"mutability":"mutable","name":"to","nameLocation":"12869:2:17","nodeType":"VariableDeclaration","scope":1940,"src":"12852:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1926,"name":"address","nodeType":"ElementaryTypeName","src":"12852:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1927,"nodeType":"ArrayTypeName","src":"12852:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1931,"mutability":"mutable","name":"tokenId","nameLocation":"12898:7:17","nodeType":"VariableDeclaration","scope":1940,"src":"12881:24:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1929,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12881:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1930,"nodeType":"ArrayTypeName","src":"12881:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1934,"mutability":"mutable","name":"force","nameLocation":"12929:5:17","nodeType":"VariableDeclaration","scope":1940,"src":"12915:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1932,"name":"bool","nodeType":"ElementaryTypeName","src":"12915:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1933,"nodeType":"ArrayTypeName","src":"12915:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1937,"mutability":"mutable","name":"data","nameLocation":"12959:4:17","nodeType":"VariableDeclaration","scope":1940,"src":"12944:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1935,"name":"bytes","nodeType":"ElementaryTypeName","src":"12944:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1936,"nodeType":"ArrayTypeName","src":"12944:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"12811:158:17"},"returnParameters":{"id":1939,"nodeType":"ParameterList","parameters":[],"src":"12978:0:17"},"scope":1951,"src":"12789:190:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1941,"nodeType":"StructuredDocumentation","src":"12985:460:17","text":" @notice Executing the following batch of abi-encoded function calls on the contract: `data`.\n @dev Allows a caller to batch different function calls in one call. Perform a `delegatecall` on self, to call different functions with preserving the context.\n @param data An array of ABI encoded function calls to be called on the contract.\n @return results An array of abi-encoded data returned by the functions executed."},"functionSelector":"6963d438","id":1950,"implemented":false,"kind":"function","modifiers":[],"name":"batchCalls","nameLocation":"13459:10:17","nodeType":"FunctionDefinition","parameters":{"id":1945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1944,"mutability":"mutable","name":"data","nameLocation":"13496:4:17","nodeType":"VariableDeclaration","scope":1950,"src":"13479:21:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1942,"name":"bytes","nodeType":"ElementaryTypeName","src":"13479:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1943,"nodeType":"ArrayTypeName","src":"13479:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"13469:37:17"},"returnParameters":{"id":1949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1948,"mutability":"mutable","name":"results","nameLocation":"13540:7:17","nodeType":"VariableDeclaration","scope":1950,"src":"13525:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1946,"name":"bytes","nodeType":"ElementaryTypeName","src":"13525:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1947,"nodeType":"ArrayTypeName","src":"13525:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"13524:24:17"},"scope":1951,"src":"13450:99:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1952,"src":"359:13192:17","usedErrors":[]}],"src":"39:13513:17"},"id":17},"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8Constants.sol":{"ast":{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8Constants.sol","exportedSymbols":{"_INTERFACEID_LSP8":[1956],"_LSP8_REFERENCE_CONTRACT":[1965],"_LSP8_TOKENID_FORMAT_ADDRESS":[1983],"_LSP8_TOKENID_FORMAT_HASH":[1989],"_LSP8_TOKENID_FORMAT_KEY":[1959],"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_ADDRESS":[1998],"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_HASH":[2004],"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_NUMBER":[1992],"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_STRING":[1995],"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_UNIQUE_ID":[2001],"_LSP8_TOKENID_FORMAT_NUMBER":[1977],"_LSP8_TOKENID_FORMAT_STRING":[1980],"_LSP8_TOKENID_FORMAT_UNIQUE_ID":[1986],"_LSP8_TOKEN_METADATA_BASE_URI":[1962],"_TYPEID_LSP8_TOKENOPERATOR":[1974],"_TYPEID_LSP8_TOKENSRECIPIENT":[1971],"_TYPEID_LSP8_TOKENSSENDER":[1968]},"id":2005,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1953,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:18"},{"constant":true,"id":1956,"mutability":"constant","name":"_INTERFACEID_LSP8","nameLocation":"108:17:18","nodeType":"VariableDeclaration","scope":2005,"src":"92:46:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1954,"name":"bytes4","nodeType":"ElementaryTypeName","src":"92:6:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30783361323731373036","id":1955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"128:10:18","typeDescriptions":{"typeIdentifier":"t_rational_975640326_by_1","typeString":"int_const 975640326"},"value":"0x3a271706"},"visibility":"internal"},{"constant":true,"id":1959,"mutability":"constant","name":"_LSP8_TOKENID_FORMAT_KEY","nameLocation":"218:24:18","nodeType":"VariableDeclaration","scope":2005,"src":"201:110:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1957,"name":"bytes32","nodeType":"ElementaryTypeName","src":"201:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866363735653933363161663163313636346331383638636661336562393736373264366231613531336161356238316465633334633965653333306538313864","id":1958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"245:66:18","typeDescriptions":{"typeIdentifier":"t_rational_111477291423636096748029871472748476558390830835668367522651640064380322611597_by_1","typeString":"int_const 1114...(70 digits omitted)...1597"},"value":"0xf675e9361af1c1664c1868cfa3eb97672d6b1a513aa5b81dec34c9ee330e818d"},"visibility":"internal"},{"constant":true,"id":1962,"mutability":"constant","name":"_LSP8_TOKEN_METADATA_BASE_URI","nameLocation":"372:29:18","nodeType":"VariableDeclaration","scope":2005,"src":"355:115:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1960,"name":"bytes32","nodeType":"ElementaryTypeName","src":"355:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307831613736323836303063336261633731303166353336393766343864663338316464633336623930313565376437633963353633336431323532616132383433","id":1961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"404:66:18","typeDescriptions":{"typeIdentifier":"t_rational_11968900676105822912557464315324495329565190357858734522371517867650361993283_by_1","typeString":"int_const 1196...(69 digits omitted)...3283"},"value":"0x1a7628600c3bac7101f53697f48df381ddc36b9015e7d7c9c5633d1252aa2843"},"visibility":"internal"},{"constant":true,"id":1965,"mutability":"constant","name":"_LSP8_REFERENCE_CONTRACT","nameLocation":"528:24:18","nodeType":"VariableDeclaration","scope":2005,"src":"511:110:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1963,"name":"bytes32","nodeType":"ElementaryTypeName","src":"511:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307837303865376238383137393566326536623663323735323130386331373765633839323438343538646533626636396430643433343830623365353033346536","id":1964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"555:66:18","typeDescriptions":{"typeIdentifier":"t_rational_50910783908361636124804393116408259141598108534342564848859926123218144867558_by_1","typeString":"int_const 5091...(69 digits omitted)...7558"},"value":"0x708e7b881795f2e6b6c2752108c177ec89248458de3bf69d0d43480b3e5034e6"},"visibility":"internal"},{"constant":true,"id":1968,"mutability":"constant","name":"_TYPEID_LSP8_TOKENSSENDER","nameLocation":"707:25:18","nodeType":"VariableDeclaration","scope":2005,"src":"690:111:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1966,"name":"bytes32","nodeType":"ElementaryTypeName","src":"690:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862323365616537653664313536346232393562346333653362653430326439613266303737366335376264663336353930333439366636666134383161623030","id":1967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"735:66:18","typeDescriptions":{"typeIdentifier":"t_rational_80622435878143139083563480449382184796258105498148027923970953027117195045632_by_1","typeString":"int_const 8062...(69 digits omitted)...5632"},"value":"0xb23eae7e6d1564b295b4c3e3be402d9a2f0776c57bdf365903496f6fa481ab00"},"visibility":"internal"},{"constant":true,"id":1971,"mutability":"constant","name":"_TYPEID_LSP8_TOKENSRECIPIENT","nameLocation":"870:28:18","nodeType":"VariableDeclaration","scope":2005,"src":"853:114:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1969,"name":"bytes32","nodeType":"ElementaryTypeName","src":"853:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830623038346135356562663730666433633036666437353532363964616332323132633464336630663464303930373937383062666135306331623239383464","id":1970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"901:66:18","typeDescriptions":{"typeIdentifier":"t_rational_4990089156609310438051076814138656340767597687526420738174868187457831213133_by_1","typeString":"int_const 4990...(68 digits omitted)...3133"},"value":"0x0b084a55ebf70fd3c06fd755269dac2212c4d3f0f4d09079780bfa50c1b2984d"},"visibility":"internal"},{"constant":true,"id":1974,"mutability":"constant","name":"_TYPEID_LSP8_TOKENOPERATOR","nameLocation":"1035:26:18","nodeType":"VariableDeclaration","scope":2005,"src":"1018:112:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1972,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1018:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307838613163313561383739396637316235343765303865326263623265383532353765383162306130376565653263653637313235343965656631663030393730","id":1973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1064:66:18","typeDescriptions":{"typeIdentifier":"t_rational_62468794301057257859859864036220190757926884000171377020854266712521628977520_by_1","typeString":"int_const 6246...(69 digits omitted)...7520"},"value":"0x8a1c15a8799f71b547e08e2bcb2e85257e81b0a07eee2ce6712549eef1f00970"},"visibility":"internal"},{"constant":true,"id":1977,"mutability":"constant","name":"_LSP8_TOKENID_FORMAT_NUMBER","nameLocation":"1175:27:18","nodeType":"VariableDeclaration","scope":2005,"src":"1158:48:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1975,"name":"uint256","nodeType":"ElementaryTypeName","src":"1158:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":1976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1205:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"internal"},{"constant":true,"id":1980,"mutability":"constant","name":"_LSP8_TOKENID_FORMAT_STRING","nameLocation":"1225:27:18","nodeType":"VariableDeclaration","scope":2005,"src":"1208:48:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1978,"name":"uint256","nodeType":"ElementaryTypeName","src":"1208:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1255:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"constant":true,"id":1983,"mutability":"constant","name":"_LSP8_TOKENID_FORMAT_ADDRESS","nameLocation":"1275:28:18","nodeType":"VariableDeclaration","scope":2005,"src":"1258:49:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1981,"name":"uint256","nodeType":"ElementaryTypeName","src":"1258:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1306:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"internal"},{"constant":true,"id":1986,"mutability":"constant","name":"_LSP8_TOKENID_FORMAT_UNIQUE_ID","nameLocation":"1326:30:18","nodeType":"VariableDeclaration","scope":2005,"src":"1309:51:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1984,"name":"uint256","nodeType":"ElementaryTypeName","src":"1309:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"33","id":1985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1359:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"internal"},{"constant":true,"id":1989,"mutability":"constant","name":"_LSP8_TOKENID_FORMAT_HASH","nameLocation":"1379:25:18","nodeType":"VariableDeclaration","scope":2005,"src":"1362:46:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1987,"name":"uint256","nodeType":"ElementaryTypeName","src":"1362:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"34","id":1988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1407:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"visibility":"internal"},{"constant":true,"id":1992,"mutability":"constant","name":"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_NUMBER","nameLocation":"1428:41:18","nodeType":"VariableDeclaration","scope":2005,"src":"1411:64:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1990,"name":"uint256","nodeType":"ElementaryTypeName","src":"1411:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313030","id":1991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1472:3:18","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"visibility":"internal"},{"constant":true,"id":1995,"mutability":"constant","name":"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_STRING","nameLocation":"1494:41:18","nodeType":"VariableDeclaration","scope":2005,"src":"1477:64:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1993,"name":"uint256","nodeType":"ElementaryTypeName","src":"1477:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313031","id":1994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1538:3:18","typeDescriptions":{"typeIdentifier":"t_rational_101_by_1","typeString":"int_const 101"},"value":"101"},"visibility":"internal"},{"constant":true,"id":1998,"mutability":"constant","name":"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_ADDRESS","nameLocation":"1560:42:18","nodeType":"VariableDeclaration","scope":2005,"src":"1543:65:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1996,"name":"uint256","nodeType":"ElementaryTypeName","src":"1543:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313032","id":1997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1605:3:18","typeDescriptions":{"typeIdentifier":"t_rational_102_by_1","typeString":"int_const 102"},"value":"102"},"visibility":"internal"},{"constant":true,"id":2001,"mutability":"constant","name":"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_UNIQUE_ID","nameLocation":"1627:44:18","nodeType":"VariableDeclaration","scope":2005,"src":"1610:67:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1999,"name":"uint256","nodeType":"ElementaryTypeName","src":"1610:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313033","id":2000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1674:3:18","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"visibility":"internal"},{"constant":true,"id":2004,"mutability":"constant","name":"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_HASH","nameLocation":"1696:39:18","nodeType":"VariableDeclaration","scope":2005,"src":"1679:62:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2002,"name":"uint256","nodeType":"ElementaryTypeName","src":"1679:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313034","id":2003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1738:3:18","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},"visibility":"internal"}],"src":"39:1704:18"},"id":18},"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8Errors.sol":{"ast":{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8Errors.sol","exportedSymbols":{"LSP8BatchCallFailed":[2088],"LSP8CannotSendToAddressZero":[2040],"LSP8CannotSendToSelf":[2043],"LSP8CannotUseAddressZeroAsOperator":[2037],"LSP8InvalidTransferBatch":[2058],"LSP8NonExistentTokenId":[2011],"LSP8NonExistingOperator":[2050],"LSP8NotTokenOperator":[2027],"LSP8NotTokenOwner":[2020],"LSP8NotifyTokenReceiverContractMissingLSP1Interface":[2063],"LSP8NotifyTokenReceiverIsEOA":[2068],"LSP8OperatorAlreadyAuthorized":[2034],"LSP8TokenContractCannotHoldValue":[2074],"LSP8TokenIdAlreadyMinted":[2055],"LSP8TokenIdFormatNotEditable":[2077],"LSP8TokenIdsDataEmptyArray":[2083],"LSP8TokenIdsDataLengthMismatch":[2080],"LSP8TokenOwnerCannotBeOperator":[2071]},"id":2089,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":2006,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:19"},{"documentation":{"id":2007,"nodeType":"StructuredDocumentation","src":"79:59:19","text":" @dev Reverts when `tokenId` has not been minted."},"id":2011,"name":"LSP8NonExistentTokenId","nameLocation":"145:22:19","nodeType":"ErrorDefinition","parameters":{"id":2010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2009,"mutability":"mutable","name":"tokenId","nameLocation":"176:7:19","nodeType":"VariableDeclaration","scope":2011,"src":"168:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2008,"name":"bytes32","nodeType":"ElementaryTypeName","src":"168:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"167:17:19"},"src":"139:46:19"},{"documentation":{"id":2012,"nodeType":"StructuredDocumentation","src":"187:79:19","text":" @dev Reverts when `caller` is not the `tokenOwner` of the `tokenId`."},"id":2020,"name":"LSP8NotTokenOwner","nameLocation":"273:17:19","nodeType":"ErrorDefinition","parameters":{"id":2019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2014,"mutability":"mutable","name":"tokenOwner","nameLocation":"299:10:19","nodeType":"VariableDeclaration","scope":2020,"src":"291:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2013,"name":"address","nodeType":"ElementaryTypeName","src":"291:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2016,"mutability":"mutable","name":"tokenId","nameLocation":"319:7:19","nodeType":"VariableDeclaration","scope":2020,"src":"311:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2015,"name":"bytes32","nodeType":"ElementaryTypeName","src":"311:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2018,"mutability":"mutable","name":"caller","nameLocation":"336:6:19","nodeType":"VariableDeclaration","scope":2020,"src":"328:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2017,"name":"address","nodeType":"ElementaryTypeName","src":"328:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"290:53:19"},"src":"267:77:19"},{"documentation":{"id":2021,"nodeType":"StructuredDocumentation","src":"346:79:19","text":" @dev Reverts when `caller` is not an allowed operator for `tokenId`."},"id":2027,"name":"LSP8NotTokenOperator","nameLocation":"432:20:19","nodeType":"ErrorDefinition","parameters":{"id":2026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2023,"mutability":"mutable","name":"tokenId","nameLocation":"461:7:19","nodeType":"VariableDeclaration","scope":2027,"src":"453:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2022,"name":"bytes32","nodeType":"ElementaryTypeName","src":"453:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2025,"mutability":"mutable","name":"caller","nameLocation":"478:6:19","nodeType":"VariableDeclaration","scope":2027,"src":"470:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2024,"name":"address","nodeType":"ElementaryTypeName","src":"470:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"452:33:19"},"src":"426:60:19"},{"documentation":{"id":2028,"nodeType":"StructuredDocumentation","src":"488:80:19","text":" @dev Reverts when `operator` is already authorized for the `tokenId`."},"id":2034,"name":"LSP8OperatorAlreadyAuthorized","nameLocation":"575:29:19","nodeType":"ErrorDefinition","parameters":{"id":2033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2030,"mutability":"mutable","name":"operator","nameLocation":"613:8:19","nodeType":"VariableDeclaration","scope":2034,"src":"605:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2029,"name":"address","nodeType":"ElementaryTypeName","src":"605:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2032,"mutability":"mutable","name":"tokenId","nameLocation":"631:7:19","nodeType":"VariableDeclaration","scope":2034,"src":"623:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2031,"name":"bytes32","nodeType":"ElementaryTypeName","src":"623:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"604:35:19"},"src":"569:71:19"},{"documentation":{"id":2035,"nodeType":"StructuredDocumentation","src":"642:75:19","text":" @dev Reverts when trying to set the zero address as an operator."},"id":2037,"name":"LSP8CannotUseAddressZeroAsOperator","nameLocation":"724:34:19","nodeType":"ErrorDefinition","parameters":{"id":2036,"nodeType":"ParameterList","parameters":[],"src":"758:2:19"},"src":"718:43:19"},{"documentation":{"id":2038,"nodeType":"StructuredDocumentation","src":"763:70:19","text":" @dev Reverts when trying to send token to the zero address."},"id":2040,"name":"LSP8CannotSendToAddressZero","nameLocation":"840:27:19","nodeType":"ErrorDefinition","parameters":{"id":2039,"nodeType":"ParameterList","parameters":[],"src":"867:2:19"},"src":"834:36:19"},{"documentation":{"id":2041,"nodeType":"StructuredDocumentation","src":"872:97:19","text":" @dev Reverts when specifying the same address for `from` and `to` in a token transfer."},"id":2043,"name":"LSP8CannotSendToSelf","nameLocation":"976:20:19","nodeType":"ErrorDefinition","parameters":{"id":2042,"nodeType":"ParameterList","parameters":[],"src":"996:2:19"},"src":"970:29:19"},{"documentation":{"id":2044,"nodeType":"StructuredDocumentation","src":"1001:77:19","text":" @dev Reverts when `operator` is not an operator for the `tokenId`."},"id":2050,"name":"LSP8NonExistingOperator","nameLocation":"1085:23:19","nodeType":"ErrorDefinition","parameters":{"id":2049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2046,"mutability":"mutable","name":"operator","nameLocation":"1117:8:19","nodeType":"VariableDeclaration","scope":2050,"src":"1109:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2045,"name":"address","nodeType":"ElementaryTypeName","src":"1109:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2048,"mutability":"mutable","name":"tokenId","nameLocation":"1135:7:19","nodeType":"VariableDeclaration","scope":2050,"src":"1127:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2047,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1127:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1108:35:19"},"src":"1079:65:19"},{"documentation":{"id":2051,"nodeType":"StructuredDocumentation","src":"1146:63:19","text":" @dev Reverts when `tokenId` has already been minted."},"id":2055,"name":"LSP8TokenIdAlreadyMinted","nameLocation":"1216:24:19","nodeType":"ErrorDefinition","parameters":{"id":2054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2053,"mutability":"mutable","name":"tokenId","nameLocation":"1249:7:19","nodeType":"VariableDeclaration","scope":2055,"src":"1241:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2052,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1241:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1240:17:19"},"src":"1210:48:19"},{"documentation":{"id":2056,"nodeType":"StructuredDocumentation","src":"1260:92:19","text":" @dev Reverts when the parameters used for `transferBatch` have different lengths."},"id":2058,"name":"LSP8InvalidTransferBatch","nameLocation":"1359:24:19","nodeType":"ErrorDefinition","parameters":{"id":2057,"nodeType":"ParameterList","parameters":[],"src":"1383:2:19"},"src":"1353:33:19"},{"documentation":{"id":2059,"nodeType":"StructuredDocumentation","src":"1388:143:19","text":" @dev Reverts if the `tokenReceiver` does not implement LSP1\n when minting or transferring tokens with `bool force` set as `false`."},"id":2063,"name":"LSP8NotifyTokenReceiverContractMissingLSP1Interface","nameLocation":"1538:51:19","nodeType":"ErrorDefinition","parameters":{"id":2062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2061,"mutability":"mutable","name":"tokenReceiver","nameLocation":"1603:13:19","nodeType":"VariableDeclaration","scope":2063,"src":"1595:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2060,"name":"address","nodeType":"ElementaryTypeName","src":"1595:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1589:29:19"},"src":"1532:87:19"},{"documentation":{"id":2064,"nodeType":"StructuredDocumentation","src":"1621:129:19","text":" @dev Reverts if the `tokenReceiver` is an EOA\n when minting or transferring tokens with `bool force` set as `false`."},"id":2068,"name":"LSP8NotifyTokenReceiverIsEOA","nameLocation":"1757:28:19","nodeType":"ErrorDefinition","parameters":{"id":2067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2066,"mutability":"mutable","name":"tokenReceiver","nameLocation":"1794:13:19","nodeType":"VariableDeclaration","scope":2068,"src":"1786:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2065,"name":"address","nodeType":"ElementaryTypeName","src":"1786:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1785:23:19"},"src":"1751:58:19"},{"documentation":{"id":2069,"nodeType":"StructuredDocumentation","src":"1811:92:19","text":" @dev Reverts when trying to authorize or revoke the token's owner as an operator."},"id":2071,"name":"LSP8TokenOwnerCannotBeOperator","nameLocation":"1910:30:19","nodeType":"ErrorDefinition","parameters":{"id":2070,"nodeType":"ParameterList","parameters":[],"src":"1940:2:19"},"src":"1904:39:19"},{"documentation":{"id":2072,"nodeType":"StructuredDocumentation","src":"1945:255:19","text":" @dev Error occurs when sending native tokens to the LSP8 contract without sending any data.\n E.g. Sending value without passing a bytes4 function selector to call a LSP17 Extension.\n @notice LSP8 contract cannot receive native tokens."},"id":2074,"name":"LSP8TokenContractCannotHoldValue","nameLocation":"2207:32:19","nodeType":"ErrorDefinition","parameters":{"id":2073,"nodeType":"ParameterList","parameters":[],"src":"2239:2:19"},"src":"2201:41:19"},{"documentation":{"id":2075,"nodeType":"StructuredDocumentation","src":"2244:398:19","text":" @dev Reverts when trying to edit the data key `LSP8TokenIdFormat` after the identifiable digital asset contract has been deployed.\n The `LSP8TokenIdFormat` data key is located inside the ERC725Y Data key-value store of the identifiable digital asset contract.\n It can be set only once inside the constructor/initializer when the identifiable digital asset contract is being deployed."},"id":2077,"name":"LSP8TokenIdFormatNotEditable","nameLocation":"2649:28:19","nodeType":"ErrorDefinition","parameters":{"id":2076,"nodeType":"ParameterList","parameters":[],"src":"2677:2:19"},"src":"2643:37:19"},{"documentation":{"id":2078,"nodeType":"StructuredDocumentation","src":"2682:81:19","text":" @dev Reverts when the length of the token IDs data arrays is not equal"},"id":2080,"name":"LSP8TokenIdsDataLengthMismatch","nameLocation":"2770:30:19","nodeType":"ErrorDefinition","parameters":{"id":2079,"nodeType":"ParameterList","parameters":[],"src":"2800:2:19"},"src":"2764:39:19"},{"documentation":{"id":2081,"nodeType":"StructuredDocumentation","src":"2805:67:19","text":" @dev Reverts when empty arrays is passed to the function"},"id":2083,"name":"LSP8TokenIdsDataEmptyArray","nameLocation":"2879:26:19","nodeType":"ErrorDefinition","parameters":{"id":2082,"nodeType":"ParameterList","parameters":[],"src":"2905:2:19"},"src":"2873:35:19"},{"documentation":{"id":2084,"nodeType":"StructuredDocumentation","src":"2910:79:19","text":" @dev Reverts when a batch call failed.\n @notice Batch call failed."},"id":2088,"name":"LSP8BatchCallFailed","nameLocation":"2996:19:19","nodeType":"ErrorDefinition","parameters":{"id":2087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2086,"mutability":"mutable","name":"callIndex","nameLocation":"3024:9:19","nodeType":"VariableDeclaration","scope":2088,"src":"3016:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2085,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3015:19:19"},"src":"2990:45:19"}],"src":"39:2997:19"},"id":19},"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAsset.sol":{"ast":{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAsset.sol","exportedSymbols":{"ERC725YCore":[270],"IERC165":[4002],"InvalidExtensionAddress":[533],"InvalidFunctionSelector":[528],"LSP17Extendable":[667],"LSP2Utils":[1530],"LSP4DigitalAssetMetadata":[1657],"LSP4DigitalAssetMetadataCore":[1719],"LSP8IdentifiableDigitalAsset":[2357],"LSP8IdentifiableDigitalAssetCore":[3695],"LSP8TokenContractCannotHoldValue":[2074],"LSP8TokenIdFormatNotEditable":[2077],"NoExtensionFoundForFunctionSelector":[523],"_INTERFACEID_LSP8":[1956],"_LSP17_EXTENSION_PREFIX":[516],"_LSP8_TOKENID_FORMAT_KEY":[1959]},"id":2358,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":2090,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"39:24:20"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":2092,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2358,"sourceUnit":4003,"src":"79:80:20","symbolAliases":[{"foreign":{"id":2091,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"87:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$4002_$","typeString":"type(contract IERC165)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@erc725/smart-contracts/contracts/ERC725YCore.sol","file":"@erc725/smart-contracts/contracts/ERC725YCore.sol","id":2094,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2358,"sourceUnit":271,"src":"172:78:20","symbolAliases":[{"foreign":{"id":2093,"name":"ERC725YCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"180:11:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC725YCore_$270_$","typeString":"type(contract ERC725YCore)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAssetCore.sol","file":"./LSP8IdentifiableDigitalAssetCore.sol","id":2096,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2358,"sourceUnit":3696,"src":"251:94:20","symbolAliases":[{"foreign":{"id":2095,"name":"LSP8IdentifiableDigitalAssetCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3695,"src":"264:32:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP8IdentifiableDigitalAssetCore_$3695_$","typeString":"type(contract LSP8IdentifiableDigitalAssetCore)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadata.sol","file":"../LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadata.sol","id":2098,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2358,"sourceUnit":1658,"src":"346:104:20","symbolAliases":[{"foreign":{"id":2097,"name":"LSP4DigitalAssetMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"359:24:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP4DigitalAssetMetadata_$1657_$","typeString":"type(contract LSP4DigitalAssetMetadata)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadataCore.sol","file":"../LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadataCore.sol","id":2100,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2358,"sourceUnit":1720,"src":"452:112:20","symbolAliases":[{"foreign":{"id":2099,"name":"LSP4DigitalAssetMetadataCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"465:28:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP4DigitalAssetMetadataCore_$1719_$","typeString":"type(contract LSP4DigitalAssetMetadataCore)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Extendable.sol","file":"../LSP17ContractExtension/LSP17Extendable.sol","id":2102,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2358,"sourceUnit":668,"src":"566:78:20","symbolAliases":[{"foreign":{"id":2101,"name":"LSP17Extendable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"574:15:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP17Extendable_$667_$","typeString":"type(contract LSP17Extendable)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP2ERC725YJSONSchema/LSP2Utils.sol","file":"../LSP2ERC725YJSONSchema/LSP2Utils.sol","id":2104,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2358,"sourceUnit":1531,"src":"659:65:20","symbolAliases":[{"foreign":{"id":2103,"name":"LSP2Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"667:9:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP2Utils_$1530_$","typeString":"type(library LSP2Utils)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8Constants.sol","file":"./LSP8Constants.sol","id":2107,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2358,"sourceUnit":2005,"src":"739:80:20","symbolAliases":[{"foreign":{"id":2105,"name":"_INTERFACEID_LSP8","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"747:17:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2106,"name":"_LSP8_TOKENID_FORMAT_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1959,"src":"766:24:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8Errors.sol","file":"./LSP8Errors.sol","id":2110,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2358,"sourceUnit":2089,"src":"831:106:20","symbolAliases":[{"foreign":{"id":2108,"name":"LSP8TokenContractCannotHoldValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"844:32:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2109,"name":"LSP8TokenIdFormatNotEditable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"882:28:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Constants.sol","file":"../LSP17ContractExtension/LSP17Constants.sol","id":2112,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2358,"sourceUnit":517,"src":"939:91:20","symbolAliases":[{"foreign":{"id":2111,"name":"_LSP17_EXTENSION_PREFIX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"952:23:20","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Errors.sol","file":"../LSP17ContractExtension/LSP17Errors.sol","id":2116,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2358,"sourceUnit":534,"src":"1043:158:20","symbolAliases":[{"foreign":{"id":2113,"name":"NoExtensionFoundForFunctionSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"1056:35:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2114,"name":"InvalidFunctionSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"1097:23:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2115,"name":"InvalidExtensionAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"1126:23:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2118,"name":"LSP4DigitalAssetMetadata","nodeType":"IdentifierPath","referencedDeclaration":1657,"src":"1731:24:20"},"id":2119,"nodeType":"InheritanceSpecifier","src":"1731:24:20"},{"baseName":{"id":2120,"name":"LSP8IdentifiableDigitalAssetCore","nodeType":"IdentifierPath","referencedDeclaration":3695,"src":"1761:32:20"},"id":2121,"nodeType":"InheritanceSpecifier","src":"1761:32:20"},{"baseName":{"id":2122,"name":"LSP17Extendable","nodeType":"IdentifierPath","referencedDeclaration":667,"src":"1799:15:20"},"id":2123,"nodeType":"InheritanceSpecifier","src":"1799:15:20"}],"canonicalName":"LSP8IdentifiableDigitalAsset","contractDependencies":[],"contractKind":"contract","documentation":{"id":2117,"nodeType":"StructuredDocumentation","src":"1203:473:20","text":" @title Implementation of a LSP8 Identifiable Digital Asset, a contract that represents a non-fungible token.\n @author Matthew Stevens\n @dev Standard implementation contract of the LSP8 standard.\n Minting and transferring are done by providing a unique `tokenId`.\n This implementation is agnostic to the way tokens are created.\n A supply mechanism has to be added in a derived contract using {_mint}\n For a generic mechanism, see {LSP7Mintable}."},"fullyImplemented":true,"id":2357,"linearizedBaseContracts":[2357,667,3695,1951,1657,1719,35,270,505,3796,4002,402],"name":"LSP8IdentifiableDigitalAsset","nameLocation":"1695:28:20","nodeType":"ContractDefinition","nodes":[{"body":{"id":2153,"nodeType":"Block","src":"3106:142:20","statements":[{"expression":{"arguments":[{"id":2146,"name":"_LSP8_TOKENID_FORMAT_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1959,"src":"3163:24:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":2149,"name":"lsp8TokenIdFormat_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2134,"src":"3212:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2147,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3201:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"3201:10:20","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3201:30:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2143,"name":"LSP4DigitalAssetMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"3116:24:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP4DigitalAssetMetadata_$1657_$","typeString":"type(contract LSP4DigitalAssetMetadata)"}},"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_setData","nodeType":"MemberAccess","referencedDeclaration":1656,"src":"3116:33:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3116:125:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2152,"nodeType":"ExpressionStatement","src":"3116:125:20"}]},"documentation":{"id":2124,"nodeType":"StructuredDocumentation","src":"1821:1039:20","text":" @notice Deploying a LSP8IdentifiableDigitalAsset with name `name_`, symbol `symbol_`, owned by address `newOwner_`\n with tokenId format `lsp8TokenIdFormat_`.\n @dev Deploy a `LSP8IdentifiableDigitalAsset` contract and set the tokenId format inside the ERC725Y storage of the contract.\n This will also set the token `name_` and `symbol_` under the ERC725Y data keys `LSP4TokenName` and `LSP4TokenSymbol`.\n @param name_ The name of the token\n @param symbol_ The symbol of the token\n @param newOwner_ The owner of the the token-Metadata\n @param lsp4TokenType_ The type of token this digital asset contract represents (`0` = Token, `1` = NFT, `2` = Collection).\n @param lsp8TokenIdFormat_ The format of tokenIds (= NFTs) that this contract will create.\n @custom:warning Make sure the tokenId format provided on deployment is correct, as it can only be set once\n and cannot be changed in the ERC725Y storage after the contract has been deployed."},"id":2154,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":2137,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2126,"src":"3063:5:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2138,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"3070:7:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2139,"name":"newOwner_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"3079:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2140,"name":"lsp4TokenType_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"3090:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2141,"kind":"baseConstructorSpecifier","modifierName":{"id":2136,"name":"LSP4DigitalAssetMetadata","nodeType":"IdentifierPath","referencedDeclaration":1657,"src":"3038:24:20"},"nodeType":"ModifierInvocation","src":"3038:67:20"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2126,"mutability":"mutable","name":"name_","nameLocation":"2900:5:20","nodeType":"VariableDeclaration","scope":2154,"src":"2886:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2125,"name":"string","nodeType":"ElementaryTypeName","src":"2886:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2128,"mutability":"mutable","name":"symbol_","nameLocation":"2929:7:20","nodeType":"VariableDeclaration","scope":2154,"src":"2915:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2127,"name":"string","nodeType":"ElementaryTypeName","src":"2915:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2130,"mutability":"mutable","name":"newOwner_","nameLocation":"2954:9:20","nodeType":"VariableDeclaration","scope":2154,"src":"2946:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2129,"name":"address","nodeType":"ElementaryTypeName","src":"2946:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2132,"mutability":"mutable","name":"lsp4TokenType_","nameLocation":"2981:14:20","nodeType":"VariableDeclaration","scope":2154,"src":"2973:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2131,"name":"uint256","nodeType":"ElementaryTypeName","src":"2973:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2134,"mutability":"mutable","name":"lsp8TokenIdFormat_","nameLocation":"3013:18:20","nodeType":"VariableDeclaration","scope":2154,"src":"3005:26:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2133,"name":"uint256","nodeType":"ElementaryTypeName","src":"3005:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2876:161:20"},"returnParameters":{"id":2142,"nodeType":"ParameterList","parameters":[],"src":"3106:0:20"},"scope":2357,"src":"2865:383:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2177,"nodeType":"Block","src":"5081:157:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2162,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5095:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"5095:8:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":2164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5095:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"34","id":2165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5113:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"5095:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2172,"nodeType":"IfStatement","src":"5091:90:20","trueBody":{"id":2171,"nodeType":"Block","src":"5116:65:20","statements":[{"errorCall":{"arguments":[{"id":2168,"name":"callData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"5161:8:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":2167,"name":"InvalidFunctionSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"5137:23:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5137:33:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2170,"nodeType":"RevertStatement","src":"5130:40:20"}]}},{"expression":{"arguments":[{"id":2174,"name":"callData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"5222:8:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":2173,"name":"_fallbackLSP17Extendable","nodeType":"Identifier","overloadedDeclarations":[2251],"referencedDeclaration":2251,"src":"5197:24:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_calldata_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes calldata) returns (bytes memory)"}},"id":2175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5197:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2161,"id":2176,"nodeType":"Return","src":"5190:41:20"}]},"documentation":{"id":2155,"nodeType":"StructuredDocumentation","src":"3280:1647:20","text":" @notice The `fallback` function was called with the following amount of native tokens: `msg.value`; and the following calldata: `callData`.\n @dev Achieves the goal of [LSP-17-ContractExtension] standard by extending the contract to handle calls of functions that do not exist natively,\n forwarding the function call to the extension address mapped to the function being called.\n This function is executed when:\n    - Sending data of length less than 4 bytes to the contract.\n    - The first 4 bytes of the calldata do not match any publicly callable functions from the contract ABI.\n    - Receiving native tokens\n 1. If the data is equal or longer than 4 bytes, the [ERC-725Y] storage is queried with the following data key: [_LSP17_EXTENSION_PREFIX] + `bytes4(msg.sig)` (Check [LSP-2-ERC725YJSONSchema] for encoding the data key)\n   - If there is no address stored under the following data key, revert with {NoExtensionFoundForFunctionSelector(bytes4)}. The data key relative to `bytes4(0)` is an exception, where no reverts occurs if there is no extension address stored under. This exception is made to allow users to send random data (graffiti) to the account and to be able to react on it.\n   - If there is an address, forward the `msg.data` to the extension using the CALL opcode, appending 52 bytes (20 bytes of `msg.sender` and 32 bytes of `msg.value`). Return what the calls returns, or revert if the call failed.\n 2. If the data sent to this function is of length less than 4 bytes (not a function selector), revert."},"id":2178,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2157,"mutability":"mutable","name":"callData","nameLocation":"5018:8:20","nodeType":"VariableDeclaration","scope":2178,"src":"5003:23:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2156,"name":"bytes","nodeType":"ElementaryTypeName","src":"5003:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4993:39:20"},"returnParameters":{"id":2161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2160,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2178,"src":"5067:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2159,"name":"bytes","nodeType":"ElementaryTypeName","src":"5067:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5066:14:20"},"scope":2357,"src":"4985:253:20","stateMutability":"payable","virtual":true,"visibility":"external"},{"body":{"id":2195,"nodeType":"Block","src":"5439:205:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2182,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5500:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"5500:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5513:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5500:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2191,"nodeType":"IfStatement","src":"5496:90:20","trueBody":{"id":2190,"nodeType":"Block","src":"5516:70:20","statements":[{"errorCall":{"arguments":[{"hexValue":"00000000","id":2187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5561:13:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c","typeString":"literal_string hex\"00000000\""},"value":"\u0000\u0000\u0000\u0000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c","typeString":"literal_string hex\"00000000\""}],"id":2186,"name":"InvalidFunctionSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"5537:23:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5537:38:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2189,"nodeType":"RevertStatement","src":"5530:45:20"}]}},{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2192,"name":"LSP8TokenContractCannotHoldValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"5603:32:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5603:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2194,"nodeType":"RevertStatement","src":"5596:41:20"}]},"documentation":{"id":2179,"nodeType":"StructuredDocumentation","src":"5244:155:20","text":" @dev Reverts whenever someone tries to send native tokens to a LSP8 contract.\n @notice LSP8 contract cannot receive native tokens."},"id":2196,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2180,"nodeType":"ParameterList","parameters":[],"src":"5411:2:20"},"returnParameters":{"id":2181,"nodeType":"ParameterList","parameters":[],"src":"5439:0:20"},"scope":2357,"src":"5404:240:20","stateMutability":"payable","virtual":true,"visibility":"external"},{"baseFunctions":[666],"body":{"id":2250,"nodeType":"Block","src":"6761:909:20","statements":[{"assignments":[2206,null],"declarations":[{"constant":false,"id":2206,"mutability":"mutable","name":"extension","nameLocation":"6823:9:20","nodeType":"VariableDeclaration","scope":2250,"src":"6815:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2205,"name":"address","nodeType":"ElementaryTypeName","src":"6815:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},null],"id":2211,"initialValue":{"arguments":[{"expression":{"id":2208,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6867:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sig","nodeType":"MemberAccess","src":"6867:7:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":2207,"name":"_getExtensionAndForwardValue","nodeType":"Identifier","overloadedDeclarations":[2302],"referencedDeclaration":2302,"src":"6838:28:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_address_$_t_bool_$","typeString":"function (bytes4) view returns (address,bool)"}},"id":2210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6838:37:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bool_$","typeString":"tuple(address,bool)"}},"nodeType":"VariableDeclarationStatement","src":"6814:61:20"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2212,"name":"extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"6935:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6956:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6948:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2213,"name":"address","nodeType":"ElementaryTypeName","src":"6948:7:20","typeDescriptions":{}}},"id":2216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6948:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6935:23:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2223,"nodeType":"IfStatement","src":"6931:92:20","trueBody":{"errorCall":{"arguments":[{"expression":{"id":2219,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7015:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sig","nodeType":"MemberAccess","src":"7015:7:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":2218,"name":"NoExtensionFoundForFunctionSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"6979:35:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6979:44:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2222,"nodeType":"RevertStatement","src":"6972:51:20"}},{"assignments":[2225,2227],"declarations":[{"constant":false,"id":2225,"mutability":"mutable","name":"success","nameLocation":"7040:7:20","nodeType":"VariableDeclaration","scope":2250,"src":"7035:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2224,"name":"bool","nodeType":"ElementaryTypeName","src":"7035:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2227,"mutability":"mutable","name":"result","nameLocation":"7062:6:20","nodeType":"VariableDeclaration","scope":2250,"src":"7049:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2226,"name":"bytes","nodeType":"ElementaryTypeName","src":"7049:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2242,"initialValue":{"arguments":[{"arguments":[{"id":2235,"name":"callData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"7135:8:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"expression":{"id":2236,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7145:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"7145:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2238,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7157:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"7157:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2233,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7118:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"7118:16:20","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7118:49:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2228,"name":"extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"7072:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"7072:14:20","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":2230,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7094:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"7094:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"7072:32:20","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7072:105:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7034:143:20"},{"condition":{"id":2243,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"7192:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2248,"nodeType":"Block","src":"7245:419:20","statements":[{"AST":{"nodeType":"YulBlock","src":"7529:125:20","statements":[{"nodeType":"YulVariableDeclaration","src":"7547:36:20","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"7576:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7570:5:20"},"nodeType":"YulFunctionCall","src":"7570:13:20"},"variables":[{"name":"resultdata_size","nodeType":"YulTypedName","src":"7551:15:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"7611:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"7619:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7607:3:20"},"nodeType":"YulFunctionCall","src":"7607:15:20"},{"name":"resultdata_size","nodeType":"YulIdentifier","src":"7624:15:20"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7600:6:20"},"nodeType":"YulFunctionCall","src":"7600:40:20"},"nodeType":"YulExpressionStatement","src":"7600:40:20"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2227,"isOffset":false,"isSlot":false,"src":"7576:6:20","valueSize":1},{"declaration":2227,"isOffset":false,"isSlot":false,"src":"7611:6:20","valueSize":1}],"id":2247,"nodeType":"InlineAssembly","src":"7520:134:20"}]},"id":2249,"nodeType":"IfStatement","src":"7188:476:20","trueBody":{"id":2246,"nodeType":"Block","src":"7201:38:20","statements":[{"expression":{"id":2244,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"7222:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2204,"id":2245,"nodeType":"Return","src":"7215:13:20"}]}}]},"documentation":{"id":2197,"nodeType":"StructuredDocumentation","src":"5650:984:20","text":" @dev Forwards the call with the received value to an extension mapped to a function selector.\n Calls {_getExtensionAndForwardValue} to get the address of the extension mapped to the function selector being\n called on the account. If there is no extension, the address(0) will be returned.\n We will always forward the value to the extension, as the LSP8 contract is not supposed to hold any native tokens.\n Reverts if there is no extension for the function being called.\n If there is an extension for the function selector being called, it calls the extension with the\n CALL opcode, passing the {msg.data} appended with the 20 bytes of the {msg.sender} and\n 32 bytes of the {msg.value}\n @custom:info The LSP8 Token contract should not hold any native tokens. Any native tokens received by the contract\n will be forwarded to the extension address mapped to the selector from `msg.sig`."},"id":2251,"implemented":true,"kind":"function","modifiers":[],"name":"_fallbackLSP17Extendable","nameLocation":"6648:24:20","nodeType":"FunctionDefinition","overrides":{"id":2201,"nodeType":"OverrideSpecifier","overrides":[],"src":"6729:8:20"},"parameters":{"id":2200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2199,"mutability":"mutable","name":"callData","nameLocation":"6697:8:20","nodeType":"VariableDeclaration","scope":2251,"src":"6682:23:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2198,"name":"bytes","nodeType":"ElementaryTypeName","src":"6682:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6672:39:20"},"returnParameters":{"id":2204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2203,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2251,"src":"6747:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2202,"name":"bytes","nodeType":"ElementaryTypeName","src":"6747:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6746:14:20"},"scope":2357,"src":"6639:1031:20","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[607],"body":{"id":2301,"nodeType":"Block","src":"8071:619:20","statements":[{"assignments":[2263],"declarations":[{"constant":false,"id":2263,"mutability":"mutable","name":"mappedExtensionDataKey","nameLocation":"8169:22:20","nodeType":"VariableDeclaration","scope":2301,"src":"8161:30:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2262,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8161:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2269,"initialValue":{"arguments":[{"id":2266,"name":"_LSP17_EXTENSION_PREFIX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"8236:23:20","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},{"id":2267,"name":"functionSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"8273:16:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes10","typeString":"bytes10"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":2264,"name":"LSP2Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"8194:9:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP2Utils_$1530_$","typeString":"type(library LSP2Utils)"}},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"generateMappingKey","nodeType":"MemberAccess","referencedDeclaration":1020,"src":"8194:28:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes10_$_t_bytes20_$returns$_t_bytes32_$","typeString":"function (bytes10,bytes20) pure returns (bytes32)"}},"id":2268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8194:105:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8161:138:20"},{"assignments":[2271],"declarations":[{"constant":false,"id":2271,"mutability":"mutable","name":"extensionAddress","nameLocation":"8401:16:20","nodeType":"VariableDeclaration","scope":2301,"src":"8388:29:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2270,"name":"bytes","nodeType":"ElementaryTypeName","src":"8388:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2276,"initialValue":{"arguments":[{"id":2274,"name":"mappedExtensionDataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"8454:22:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2272,"name":"ERC725YCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"8420:11:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC725YCore_$270_$","typeString":"type(contract ERC725YCore)"}},"id":2273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_getData","nodeType":"MemberAccess","referencedDeclaration":228,"src":"8420:20:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32) view returns (bytes memory)"}},"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8420:66:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"8388:98:20"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2277,"name":"extensionAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"8500:16:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8500:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"3230","id":2279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8527:2:20","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"8500:29:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2281,"name":"extensionAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"8533:16:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8533:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8560:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8533:28:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8500:61:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2290,"nodeType":"IfStatement","src":"8496:127:20","trueBody":{"errorCall":{"arguments":[{"id":2287,"name":"extensionAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"8606:16:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2286,"name":"InvalidExtensionAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"8582:23:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8582:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2289,"nodeType":"RevertStatement","src":"8575:48:20"}},{"expression":{"components":[{"arguments":[{"arguments":[{"id":2295,"name":"extensionAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"8658:16:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8650:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":2293,"name":"bytes20","nodeType":"ElementaryTypeName","src":"8650:7:20","typeDescriptions":{}}},"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8650:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"id":2292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8642:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2291,"name":"address","nodeType":"ElementaryTypeName","src":"8642:7:20","typeDescriptions":{}}},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8642:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":2298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8678:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"id":2299,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8641:42:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bool_$","typeString":"tuple(address,bool)"}},"functionReturnParameters":2261,"id":2300,"nodeType":"Return","src":"8634:49:20"}]},"documentation":{"id":2252,"nodeType":"StructuredDocumentation","src":"7676:258:20","text":" @dev Returns the extension address stored under the following data key:\n - {_LSP17_EXTENSION_PREFIX} + `<bytes4>` (Check [LSP2-ERC725YJSONSchema] for encoding the data key).\n - If no extension is stored, returns the address(0)."},"id":2302,"implemented":true,"kind":"function","modifiers":[],"name":"_getExtensionAndForwardValue","nameLocation":"7948:28:20","nodeType":"FunctionDefinition","overrides":{"id":2256,"nodeType":"OverrideSpecifier","overrides":[],"src":"8038:8:20"},"parameters":{"id":2255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2254,"mutability":"mutable","name":"functionSelector","nameLocation":"7993:16:20","nodeType":"VariableDeclaration","scope":2302,"src":"7986:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2253,"name":"bytes4","nodeType":"ElementaryTypeName","src":"7986:6:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"7976:39:20"},"returnParameters":{"id":2261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2258,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2302,"src":"8056:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2257,"name":"address","nodeType":"ElementaryTypeName","src":"8056:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2260,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2302,"src":"8065:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2259,"name":"bool","nodeType":"ElementaryTypeName","src":"8065:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8055:15:20"},"scope":2357,"src":"7939:751:20","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[269,565,4001],"body":{"id":2328,"nodeType":"Block","src":"8927:200:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2314,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"8956:11:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2315,"name":"_INTERFACEID_LSP8","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"8971:17:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"8956:32:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2319,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"9028:11:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":2317,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"9004:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_LSP8IdentifiableDigitalAsset_$2357_$","typeString":"type(contract super LSP8IdentifiableDigitalAsset)"}},"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":565,"src":"9004:23:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9004:36:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8956:84:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2324,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"9108:11:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":2322,"name":"LSP17Extendable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"9056:15:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP17Extendable_$667_$","typeString":"type(contract LSP17Extendable)"}},"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_supportsInterfaceInERC165Extension","nodeType":"MemberAccess","referencedDeclaration":597,"src":"9056:51:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9056:64:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8956:164:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2313,"id":2327,"nodeType":"Return","src":"8937:183:20"}]},"documentation":{"id":2303,"nodeType":"StructuredDocumentation","src":"8696:38:20","text":" @inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":2329,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"8748:17:20","nodeType":"FunctionDefinition","overrides":{"id":2310,"nodeType":"OverrideSpecifier","overrides":[{"id":2307,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":4002,"src":"8861:7:20"},{"id":2308,"name":"ERC725YCore","nodeType":"IdentifierPath","referencedDeclaration":270,"src":"8870:11:20"},{"id":2309,"name":"LSP17Extendable","nodeType":"IdentifierPath","referencedDeclaration":667,"src":"8883:15:20"}],"src":"8852:47:20"},"parameters":{"id":2306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2305,"mutability":"mutable","name":"interfaceId","nameLocation":"8782:11:20","nodeType":"VariableDeclaration","scope":2329,"src":"8775:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2304,"name":"bytes4","nodeType":"ElementaryTypeName","src":"8775:6:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"8765:34:20"},"returnParameters":{"id":2313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2329,"src":"8917:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2311,"name":"bool","nodeType":"ElementaryTypeName","src":"8917:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8916:6:20"},"scope":2357,"src":"8739:388:20","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1656,1718],"body":{"id":2355,"nodeType":"Block","src":"9533:182:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2340,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2332,"src":"9547:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2341,"name":"_LSP8_TOKENID_FORMAT_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1959,"src":"9558:24:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"9547:35:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2347,"nodeType":"IfStatement","src":"9543:103:20","trueBody":{"id":2346,"nodeType":"Block","src":"9584:62:20","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2343,"name":"LSP8TokenIdFormatNotEditable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"9605:28:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9605:30:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2345,"nodeType":"RevertStatement","src":"9598:37:20"}]}},{"expression":{"arguments":[{"id":2351,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2332,"src":"9689:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2352,"name":"dataValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2334,"src":"9698:9:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2348,"name":"LSP4DigitalAssetMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"9655:24:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP4DigitalAssetMetadata_$1657_$","typeString":"type(contract LSP4DigitalAssetMetadata)"}},"id":2350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_setData","nodeType":"MemberAccess","referencedDeclaration":1656,"src":"9655:33:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9655:53:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2354,"nodeType":"ExpressionStatement","src":"9655:53:20"}]},"documentation":{"id":2330,"nodeType":"StructuredDocumentation","src":"9133:204:20","text":" @inheritdoc LSP4DigitalAssetMetadata\n @dev The ERC725Y data key `_LSP8_TOKENID_FORMAT_KEY` cannot be changed\n once the identifiable digital asset contract has been deployed."},"id":2356,"implemented":true,"kind":"function","modifiers":[],"name":"_setData","nameLocation":"9351:8:20","nodeType":"FunctionDefinition","overrides":{"id":2338,"nodeType":"OverrideSpecifier","overrides":[{"id":2336,"name":"LSP4DigitalAssetMetadata","nodeType":"IdentifierPath","referencedDeclaration":1657,"src":"9473:24:20"},{"id":2337,"name":"LSP4DigitalAssetMetadataCore","nodeType":"IdentifierPath","referencedDeclaration":1719,"src":"9499:28:20"}],"src":"9464:64:20"},"parameters":{"id":2335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2332,"mutability":"mutable","name":"dataKey","nameLocation":"9377:7:20","nodeType":"VariableDeclaration","scope":2356,"src":"9369:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2331,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9369:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2334,"mutability":"mutable","name":"dataValue","nameLocation":"9407:9:20","nodeType":"VariableDeclaration","scope":2356,"src":"9394:22:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2333,"name":"bytes","nodeType":"ElementaryTypeName","src":"9394:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9359:63:20"},"returnParameters":{"id":2339,"nodeType":"ParameterList","parameters":[],"src":"9533:0:20"},"scope":2357,"src":"9342:373:20","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2358,"src":"1677:8040:20","usedErrors":[407,412,448,451,454,523,528,533,1724,1727,1730,2011,2020,2027,2034,2037,2040,2043,2050,2058,2063,2068,2071,2074,2077,2080,2083,2088]}],"src":"39:9679:20"},"id":20},"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAssetCore.sol":{"ast":{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAssetCore.sol","exportedSymbols":{"ERC165Checker":[3990],"EnumerableSet":[4615],"ILSP1":[694],"ILSP8IdentifiableDigitalAsset":[1951],"LSP1Utils":[793],"LSP4DigitalAssetMetadataCore":[1719],"LSP8BatchCallFailed":[2088],"LSP8CannotSendToAddressZero":[2040],"LSP8CannotSendToSelf":[2043],"LSP8CannotUseAddressZeroAsOperator":[2037],"LSP8IdentifiableDigitalAssetCore":[3695],"LSP8InvalidTransferBatch":[2058],"LSP8NonExistentTokenId":[2011],"LSP8NonExistingOperator":[2050],"LSP8NotTokenOperator":[2027],"LSP8NotTokenOwner":[2020],"LSP8NotifyTokenReceiverContractMissingLSP1Interface":[2063],"LSP8NotifyTokenReceiverIsEOA":[2068],"LSP8OperatorAlreadyAuthorized":[2034],"LSP8TokenIdAlreadyMinted":[2055],"LSP8TokenIdsDataEmptyArray":[2083],"LSP8TokenIdsDataLengthMismatch":[2080],"LSP8TokenOwnerCannotBeOperator":[2071],"_INTERFACEID_LSP1":[699],"_TYPEID_LSP8_TOKENOPERATOR":[1974],"_TYPEID_LSP8_TOKENSRECIPIENT":[1971],"_TYPEID_LSP8_TOKENSSENDER":[1968]},"id":3696,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":2359,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"39:24:21"},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/ILSP1UniversalReceiver.sol","file":"../LSP1UniversalReceiver/ILSP1UniversalReceiver.sol","id":2361,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3696,"sourceUnit":695,"src":"79:106:21","symbolAliases":[{"foreign":{"id":2360,"name":"ILSP1UniversalReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"92:22:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILSP1UniversalReceiver_$694_$","typeString":"type(contract ILSP1UniversalReceiver)"}},"local":"ILSP1","nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/ILSP8IdentifiableDigitalAsset.sol","file":"./ILSP8IdentifiableDigitalAsset.sol","id":2363,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3696,"sourceUnit":1952,"src":"186:88:21","symbolAliases":[{"foreign":{"id":2362,"name":"ILSP8IdentifiableDigitalAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"199:29:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILSP8IdentifiableDigitalAsset_$1951_$","typeString":"type(contract ILSP8IdentifiableDigitalAsset)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadataCore.sol","file":"../LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadataCore.sol","id":2365,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3696,"sourceUnit":1720,"src":"288:112:21","symbolAliases":[{"foreign":{"id":2364,"name":"LSP4DigitalAssetMetadataCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"301:28:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP4DigitalAssetMetadataCore_$1719_$","typeString":"type(contract LSP4DigitalAssetMetadataCore)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","file":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","id":2367,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3696,"sourceUnit":4616,"src":"415:92:21","symbolAliases":[{"foreign":{"id":2366,"name":"EnumerableSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4615,"src":"428:13:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnumerableSet_$4615_$","typeString":"type(library EnumerableSet)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol","file":"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol","id":2369,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3696,"sourceUnit":3991,"src":"508:98:21","symbolAliases":[{"foreign":{"id":2368,"name":"ERC165Checker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3990,"src":"521:13:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC165Checker_$3990_$","typeString":"type(library ERC165Checker)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/LSP1Utils.sol","file":"../LSP1UniversalReceiver/LSP1Utils.sol","id":2371,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3696,"sourceUnit":794,"src":"607:65:21","symbolAliases":[{"foreign":{"id":2370,"name":"LSP1Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"615:9:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP1Utils_$793_$","typeString":"type(library LSP1Utils)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8Errors.sol","file":"./LSP8Errors.sol","id":2388,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3696,"sourceUnit":2089,"src":"684:554:21","symbolAliases":[{"foreign":{"id":2372,"name":"LSP8NonExistentTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"697:22:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2373,"name":"LSP8NotTokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"725:17:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$_t_address_$returns$__$","typeString":"function (address,bytes32,address) pure"}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2374,"name":"LSP8CannotUseAddressZeroAsOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"748:34:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2375,"name":"LSP8TokenOwnerCannotBeOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"788:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2376,"name":"LSP8OperatorAlreadyAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"824:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32) pure"}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2377,"name":"LSP8NotTokenOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"859:20:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) pure"}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2378,"name":"LSP8InvalidTransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"885:24:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2379,"name":"LSP8NonExistingOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"915:23:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32) pure"}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2380,"name":"LSP8CannotSendToAddressZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2040,"src":"944:27:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2381,"name":"LSP8TokenIdAlreadyMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"977:24:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2382,"name":"LSP8CannotSendToSelf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"1007:20:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2383,"name":"LSP8NotifyTokenReceiverContractMissingLSP1Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"1033:51:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2384,"name":"LSP8NotifyTokenReceiverIsEOA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"1090:28:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2385,"name":"LSP8TokenIdsDataLengthMismatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"1124:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2386,"name":"LSP8TokenIdsDataEmptyArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2083,"src":"1160:26:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2387,"name":"LSP8BatchCallFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"1192:19:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/LSP1Constants.sol","file":"../LSP1UniversalReceiver/LSP1Constants.sol","id":2390,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3696,"sourceUnit":709,"src":"1253:77:21","symbolAliases":[{"foreign":{"id":2389,"name":"_INTERFACEID_LSP1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"1261:17:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8Constants.sol","file":"./LSP8Constants.sol","id":2394,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3696,"sourceUnit":2005,"src":"1331:134:21","symbolAliases":[{"foreign":{"id":2391,"name":"_TYPEID_LSP8_TOKENOPERATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1974,"src":"1344:26:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2392,"name":"_TYPEID_LSP8_TOKENSSENDER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"1376:25:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2393,"name":"_TYPEID_LSP8_TOKENSRECIPIENT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"1407:28:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2396,"name":"LSP4DigitalAssetMetadataCore","nodeType":"IdentifierPath","referencedDeclaration":1719,"src":"1666:28:21"},"id":2397,"nodeType":"InheritanceSpecifier","src":"1666:28:21"},{"baseName":{"id":2398,"name":"ILSP8IdentifiableDigitalAsset","nodeType":"IdentifierPath","referencedDeclaration":1951,"src":"1700:29:21"},"id":2399,"nodeType":"InheritanceSpecifier","src":"1700:29:21"}],"canonicalName":"LSP8IdentifiableDigitalAssetCore","contractDependencies":[],"contractKind":"contract","documentation":{"id":2395,"nodeType":"StructuredDocumentation","src":"1467:140:21","text":" @title LSP8IdentifiableDigitalAsset contract\n @author Matthew Stevens\n @dev Core Implementation of a LSP8 compliant contract."},"fullyImplemented":true,"id":3695,"linearizedBaseContracts":[3695,1951,1719,270,505,3796,4002,402],"name":"LSP8IdentifiableDigitalAssetCore","nameLocation":"1626:32:21","nodeType":"ContractDefinition","nodes":[{"id":2403,"libraryName":{"id":2400,"name":"EnumerableSet","nodeType":"IdentifierPath","referencedDeclaration":4615,"src":"1742:13:21"},"nodeType":"UsingForDirective","src":"1736:49:21","typeName":{"id":2402,"nodeType":"UserDefinedTypeName","pathNode":{"id":2401,"name":"EnumerableSet.AddressSet","nodeType":"IdentifierPath","referencedDeclaration":4328,"src":"1760:24:21"},"referencedDeclaration":4328,"src":"1760:24:21","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4328_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},{"id":2407,"libraryName":{"id":2404,"name":"EnumerableSet","nodeType":"IdentifierPath","referencedDeclaration":4615,"src":"1796:13:21"},"nodeType":"UsingForDirective","src":"1790:49:21","typeName":{"id":2406,"nodeType":"UserDefinedTypeName","pathNode":{"id":2405,"name":"EnumerableSet.Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":4207,"src":"1814:24:21"},"referencedDeclaration":4207,"src":"1814:24:21","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4207_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}}},{"constant":false,"id":2409,"mutability":"mutable","name":"_existingTokens","nameLocation":"1882:15:21","nodeType":"VariableDeclaration","scope":3695,"src":"1865:32:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2408,"name":"uint256","nodeType":"ElementaryTypeName","src":"1865:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2413,"mutability":"mutable","name":"_tokenOwners","nameLocation":"1987:12:21","nodeType":"VariableDeclaration","scope":3695,"src":"1950:49:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"},"typeName":{"id":2412,"keyType":{"id":2410,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1958:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1950:27:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"},"valueType":{"id":2411,"name":"address","nodeType":"ElementaryTypeName","src":"1969:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"internal"},{"constant":false,"id":2418,"mutability":"mutable","name":"_ownedTokens","nameLocation":"2106:12:21","nodeType":"VariableDeclaration","scope":3695,"src":"2052:66:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Bytes32Set_$4207_storage_$","typeString":"mapping(address => struct EnumerableSet.Bytes32Set)"},"typeName":{"id":2417,"keyType":{"id":2414,"name":"address","nodeType":"ElementaryTypeName","src":"2060:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2052:44:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Bytes32Set_$4207_storage_$","typeString":"mapping(address => struct EnumerableSet.Bytes32Set)"},"valueType":{"id":2416,"nodeType":"UserDefinedTypeName","pathNode":{"id":2415,"name":"EnumerableSet.Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":4207,"src":"2071:24:21"},"referencedDeclaration":4207,"src":"2071:24:21","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4207_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}}},"visibility":"internal"},{"constant":false,"id":2423,"mutability":"mutable","name":"_operators","nameLocation":"2244:10:21","nodeType":"VariableDeclaration","scope":3695,"src":"2190:64:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$4328_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet)"},"typeName":{"id":2422,"keyType":{"id":2419,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2198:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2190:44:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$4328_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet)"},"valueType":{"id":2421,"nodeType":"UserDefinedTypeName","pathNode":{"id":2420,"name":"EnumerableSet.AddressSet","nodeType":"IdentifierPath","referencedDeclaration":4328,"src":"2209:24:21"},"referencedDeclaration":4328,"src":"2209:24:21","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4328_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},"visibility":"internal"},{"constant":false,"id":2428,"mutability":"mutable","name":"_tokenIdsForOperator","nameLocation":"2315:20:21","nodeType":"VariableDeclaration","scope":3695,"src":"2261:74:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Bytes32Set_$4207_storage_$","typeString":"mapping(address => struct EnumerableSet.Bytes32Set)"},"typeName":{"id":2427,"keyType":{"id":2424,"name":"address","nodeType":"ElementaryTypeName","src":"2269:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2261:44:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Bytes32Set_$4207_storage_$","typeString":"mapping(address => struct EnumerableSet.Bytes32Set)"},"valueType":{"id":2426,"nodeType":"UserDefinedTypeName","pathNode":{"id":2425,"name":"EnumerableSet.Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":4207,"src":"2280:24:21"},"referencedDeclaration":4207,"src":"2280:24:21","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4207_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}}},"visibility":"internal"},{"baseFunctions":[1795],"body":{"id":2437,"nodeType":"Block","src":"2503:39:21","statements":[{"expression":{"id":2435,"name":"_existingTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"2520:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2434,"id":2436,"nodeType":"Return","src":"2513:22:21"}]},"documentation":{"id":2429,"nodeType":"StructuredDocumentation","src":"2368:60:21","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"18160ddd","id":2438,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2442:11:21","nodeType":"FunctionDefinition","overrides":{"id":2431,"nodeType":"OverrideSpecifier","overrides":[],"src":"2476:8:21"},"parameters":{"id":2430,"nodeType":"ParameterList","parameters":[],"src":"2453:2:21"},"returnParameters":{"id":2434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2438,"src":"2494:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2432,"name":"uint256","nodeType":"ElementaryTypeName","src":"2494:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2493:9:21"},"scope":3695,"src":"2433:109:21","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1803],"body":{"id":2453,"nodeType":"Block","src":"2745:57:21","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":2447,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"2762:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Bytes32Set_$4207_storage_$","typeString":"mapping(address => struct EnumerableSet.Bytes32Set storage ref)"}},"id":2449,"indexExpression":{"id":2448,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2441,"src":"2775:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2762:24:21","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4207_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":2450,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":4276,"src":"2762:31:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$4207_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Bytes32Set_$4207_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer) view returns (uint256)"}},"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2762:33:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2446,"id":2452,"nodeType":"Return","src":"2755:40:21"}]},"documentation":{"id":2439,"nodeType":"StructuredDocumentation","src":"2580:60:21","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"70a08231","id":2454,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2654:9:21","nodeType":"FunctionDefinition","overrides":{"id":2443,"nodeType":"OverrideSpecifier","overrides":[],"src":"2718:8:21"},"parameters":{"id":2442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2441,"mutability":"mutable","name":"tokenOwner","nameLocation":"2681:10:21","nodeType":"VariableDeclaration","scope":2454,"src":"2673:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2440,"name":"address","nodeType":"ElementaryTypeName","src":"2673:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2663:34:21"},"returnParameters":{"id":2446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2454,"src":"2736:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2444,"name":"uint256","nodeType":"ElementaryTypeName","src":"2736:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2735:9:21"},"scope":3695,"src":"2645:157:21","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1811],"body":{"id":2483,"nodeType":"Block","src":"2973:190:21","statements":[{"assignments":[2464],"declarations":[{"constant":false,"id":2464,"mutability":"mutable","name":"tokenOwner","nameLocation":"2991:10:21","nodeType":"VariableDeclaration","scope":2483,"src":"2983:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2463,"name":"address","nodeType":"ElementaryTypeName","src":"2983:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2468,"initialValue":{"baseExpression":{"id":2465,"name":"_tokenOwners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"3004:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":2467,"indexExpression":{"id":2466,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"3017:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3004:21:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2983:42:21"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2469,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"3040:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3062:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3054:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2470,"name":"address","nodeType":"ElementaryTypeName","src":"3054:7:21","typeDescriptions":{}}},"id":2473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3054:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3040:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2480,"nodeType":"IfStatement","src":"3036:93:21","trueBody":{"id":2479,"nodeType":"Block","src":"3066:63:21","statements":[{"errorCall":{"arguments":[{"id":2476,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"3110:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2475,"name":"LSP8NonExistentTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"3087:22:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":2477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3087:31:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2478,"nodeType":"RevertStatement","src":"3080:38:21"}]}},{"expression":{"id":2481,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"3146:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2462,"id":2482,"nodeType":"Return","src":"3139:17:21"}]},"documentation":{"id":2455,"nodeType":"StructuredDocumentation","src":"2808:60:21","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"217b2270","id":2484,"implemented":true,"kind":"function","modifiers":[],"name":"tokenOwnerOf","nameLocation":"2882:12:21","nodeType":"FunctionDefinition","overrides":{"id":2459,"nodeType":"OverrideSpecifier","overrides":[],"src":"2946:8:21"},"parameters":{"id":2458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2457,"mutability":"mutable","name":"tokenId","nameLocation":"2912:7:21","nodeType":"VariableDeclaration","scope":2484,"src":"2904:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2456,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2904:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2894:31:21"},"returnParameters":{"id":2462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2461,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2484,"src":"2964:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2460,"name":"address","nodeType":"ElementaryTypeName","src":"2964:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2963:9:21"},"scope":3695,"src":"2873:290:21","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1820],"body":{"id":2500,"nodeType":"Block","src":"3344:57:21","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":2494,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"3361:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Bytes32Set_$4207_storage_$","typeString":"mapping(address => struct EnumerableSet.Bytes32Set storage ref)"}},"id":2496,"indexExpression":{"id":2495,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"3374:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3361:24:21","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4207_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":2497,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"values","nodeType":"MemberAccess","referencedDeclaration":4324,"src":"3361:31:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$4207_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$bound_to$_t_struct$_Bytes32Set_$4207_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer) view returns (bytes32[] memory)"}},"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3361:33:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":2493,"id":2499,"nodeType":"Return","src":"3354:40:21"}]},"documentation":{"id":2485,"nodeType":"StructuredDocumentation","src":"3169:60:21","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"a3b261f2","id":2501,"implemented":true,"kind":"function","modifiers":[],"name":"tokenIdsOf","nameLocation":"3243:10:21","nodeType":"FunctionDefinition","overrides":{"id":2489,"nodeType":"OverrideSpecifier","overrides":[],"src":"3308:8:21"},"parameters":{"id":2488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2487,"mutability":"mutable","name":"tokenOwner","nameLocation":"3271:10:21","nodeType":"VariableDeclaration","scope":2501,"src":"3263:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2486,"name":"address","nodeType":"ElementaryTypeName","src":"3263:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3253:34:21"},"returnParameters":{"id":2493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2492,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2501,"src":"3326:16:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2490,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3326:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2491,"nodeType":"ArrayTypeName","src":"3326:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"3325:18:21"},"scope":3695,"src":"3234:167:21","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1830],"body":{"id":2517,"nodeType":"Block","src":"3660:60:21","statements":[{"expression":{"arguments":[{"id":2513,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"3696:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2514,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"3705:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2512,"name":"_getDataForTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3588,"src":"3677:18:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32,bytes32) view returns (bytes memory)"}},"id":2515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3677:36:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2511,"id":2516,"nodeType":"Return","src":"3670:43:21"}]},"documentation":{"id":2502,"nodeType":"StructuredDocumentation","src":"3450:60:21","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"16e023b3","id":2518,"implemented":true,"kind":"function","modifiers":[],"name":"getDataForTokenId","nameLocation":"3524:17:21","nodeType":"FunctionDefinition","overrides":{"id":2508,"nodeType":"OverrideSpecifier","overrides":[],"src":"3618:8:21"},"parameters":{"id":2507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2504,"mutability":"mutable","name":"tokenId","nameLocation":"3559:7:21","nodeType":"VariableDeclaration","scope":2518,"src":"3551:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2503,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3551:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2506,"mutability":"mutable","name":"dataKey","nameLocation":"3584:7:21","nodeType":"VariableDeclaration","scope":2518,"src":"3576:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2505,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3576:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3541:56:21"},"returnParameters":{"id":2511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2510,"mutability":"mutable","name":"dataValue","nameLocation":"3649:9:21","nodeType":"VariableDeclaration","scope":2518,"src":"3636:22:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2509,"name":"bytes","nodeType":"ElementaryTypeName","src":"3636:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3635:24:21"},"scope":3695,"src":"3515:205:21","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1843],"body":{"id":2569,"nodeType":"Block","src":"3965:349:21","statements":[{"expression":{"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2532,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2530,"src":"3975:10:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":2536,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"4000:8:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4000:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3988:11:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory[] memory)"},"typeName":{"baseType":{"id":2533,"name":"bytes","nodeType":"ElementaryTypeName","src":"3992:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2534,"nodeType":"ArrayTypeName","src":"3992:7:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}}},"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3988:28:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"src":"3975:41:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":2540,"nodeType":"ExpressionStatement","src":"3975:41:21"},{"body":{"id":2565,"nodeType":"Block","src":"4066:214:21","statements":[{"expression":{"id":2559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2548,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2530,"src":"4080:10:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":2550,"indexExpression":{"id":2549,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2542,"src":"4091:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4080:13:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":2552,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"4115:8:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2554,"indexExpression":{"id":2553,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2542,"src":"4124:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4115:11:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":2555,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"4128:8:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2557,"indexExpression":{"id":2556,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2542,"src":"4137:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4128:11:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2551,"name":"_getDataForTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3588,"src":"4096:18:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32,bytes32) view returns (bytes memory)"}},"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4096:44:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"4080:60:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2560,"nodeType":"ExpressionStatement","src":"4080:60:21"},{"id":2564,"nodeType":"UncheckedBlock","src":"4224:46:21","statements":[{"expression":{"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"4252:3:21","subExpression":{"id":2561,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2542,"src":"4254:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2563,"nodeType":"ExpressionStatement","src":"4252:3:21"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2544,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2542,"src":"4043:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2545,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"4047:8:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4047:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4043:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2566,"initializationExpression":{"assignments":[2542],"declarations":[{"constant":false,"id":2542,"mutability":"mutable","name":"i","nameLocation":"4040:1:21","nodeType":"VariableDeclaration","scope":2566,"src":"4032:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2541,"name":"uint256","nodeType":"ElementaryTypeName","src":"4032:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2543,"nodeType":"VariableDeclarationStatement","src":"4032:9:21"},"nodeType":"ForStatement","src":"4027:253:21"},{"expression":{"id":2567,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2530,"src":"4297:10:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"functionReturnParameters":2531,"id":2568,"nodeType":"Return","src":"4290:17:21"}]},"documentation":{"id":2519,"nodeType":"StructuredDocumentation","src":"3726:60:21","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"1d26fce6","id":2570,"implemented":true,"kind":"function","modifiers":[],"name":"getDataBatchForTokenIds","nameLocation":"3800:23:21","nodeType":"FunctionDefinition","overrides":{"id":2527,"nodeType":"OverrideSpecifier","overrides":[],"src":"3920:8:21"},"parameters":{"id":2526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2522,"mutability":"mutable","name":"tokenIds","nameLocation":"3850:8:21","nodeType":"VariableDeclaration","scope":2570,"src":"3833:25:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2520,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3833:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2521,"nodeType":"ArrayTypeName","src":"3833:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2525,"mutability":"mutable","name":"dataKeys","nameLocation":"3885:8:21","nodeType":"VariableDeclaration","scope":2570,"src":"3868:25:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2523,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3868:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2524,"nodeType":"ArrayTypeName","src":"3868:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"3823:76:21"},"returnParameters":{"id":2531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2530,"mutability":"mutable","name":"dataValues","nameLocation":"3953:10:21","nodeType":"VariableDeclaration","scope":2570,"src":"3938:25:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":2528,"name":"bytes","nodeType":"ElementaryTypeName","src":"3938:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2529,"nodeType":"ArrayTypeName","src":"3938:7:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"3937:27:21"},"scope":3695,"src":"3791:523:21","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1853],"body":{"id":2589,"nodeType":"Block","src":"4534:64:21","statements":[{"expression":{"arguments":[{"id":2584,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"4563:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2585,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2575,"src":"4572:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2586,"name":"dataValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2577,"src":"4581:9:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2583,"name":"_setDataForTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3566,"src":"4544:18:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes32,bytes memory)"}},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4544:47:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2588,"nodeType":"ExpressionStatement","src":"4544:47:21"}]},"documentation":{"id":2571,"nodeType":"StructuredDocumentation","src":"4320:60:21","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"d6c1407c","id":2590,"implemented":true,"kind":"function","modifiers":[{"id":2581,"kind":"modifierInvocation","modifierName":{"id":2580,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":324,"src":"4524:9:21"},"nodeType":"ModifierInvocation","src":"4524:9:21"}],"name":"setDataForTokenId","nameLocation":"4394:17:21","nodeType":"FunctionDefinition","overrides":{"id":2579,"nodeType":"OverrideSpecifier","overrides":[],"src":"4515:8:21"},"parameters":{"id":2578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2573,"mutability":"mutable","name":"tokenId","nameLocation":"4429:7:21","nodeType":"VariableDeclaration","scope":2590,"src":"4421:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2572,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4421:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2575,"mutability":"mutable","name":"dataKey","nameLocation":"4454:7:21","nodeType":"VariableDeclaration","scope":2590,"src":"4446:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2574,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4446:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2577,"mutability":"mutable","name":"dataValue","nameLocation":"4484:9:21","nodeType":"VariableDeclaration","scope":2590,"src":"4471:22:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2576,"name":"bytes","nodeType":"ElementaryTypeName","src":"4471:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4411:88:21"},"returnParameters":{"id":2582,"nodeType":"ParameterList","parameters":[],"src":"4534:0:21"},"scope":3695,"src":"4385:213:21","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1866],"body":{"id":2656,"nodeType":"Block","src":"4847:552:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2606,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2594,"src":"4874:8:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4874:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":2608,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"4893:8:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4893:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4874:34:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2611,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"4924:8:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4924:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":2613,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"4943:10:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4943:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4924:36:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4874:86:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2621,"nodeType":"IfStatement","src":"4857:178:21","trueBody":{"id":2620,"nodeType":"Block","src":"4971:64:21","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2617,"name":"LSP8TokenIdsDataLengthMismatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"4992:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4992:32:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2619,"nodeType":"RevertStatement","src":"4985:39:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2622,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2594,"src":"5049:8:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5049:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5068:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5049:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2630,"nodeType":"IfStatement","src":"5045:86:21","trueBody":{"id":2629,"nodeType":"Block","src":"5071:60:21","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2626,"name":"LSP8TokenIdsDataEmptyArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2083,"src":"5092:26:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5092:28:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2628,"nodeType":"RevertStatement","src":"5085:35:21"}]}},{"body":{"id":2654,"nodeType":"Block","src":"5180:213:21","statements":[{"expression":{"arguments":[{"baseExpression":{"id":2639,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2594,"src":"5213:8:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2641,"indexExpression":{"id":2640,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"5222:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5213:11:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":2642,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"5226:8:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2644,"indexExpression":{"id":2643,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"5235:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5226:11:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":2645,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"5239:10:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":2647,"indexExpression":{"id":2646,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"5250:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5239:13:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2638,"name":"_setDataForTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3566,"src":"5194:18:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes32,bytes memory)"}},"id":2648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5194:59:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2649,"nodeType":"ExpressionStatement","src":"5194:59:21"},{"id":2653,"nodeType":"UncheckedBlock","src":"5337:46:21","statements":[{"expression":{"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"5365:3:21","subExpression":{"id":2650,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"5367:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2652,"nodeType":"ExpressionStatement","src":"5365:3:21"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2634,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"5157:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2635,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2594,"src":"5161:8:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5161:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5157:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2655,"initializationExpression":{"assignments":[2632],"declarations":[{"constant":false,"id":2632,"mutability":"mutable","name":"i","nameLocation":"5154:1:21","nodeType":"VariableDeclaration","scope":2655,"src":"5146:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2631,"name":"uint256","nodeType":"ElementaryTypeName","src":"5146:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2633,"nodeType":"VariableDeclarationStatement","src":"5146:9:21"},"nodeType":"ForStatement","src":"5141:252:21"}]},"documentation":{"id":2591,"nodeType":"StructuredDocumentation","src":"4604:60:21","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"be9f0e6f","id":2657,"implemented":true,"kind":"function","modifiers":[{"id":2604,"kind":"modifierInvocation","modifierName":{"id":2603,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":324,"src":"4837:9:21"},"nodeType":"ModifierInvocation","src":"4837:9:21"}],"name":"setDataBatchForTokenIds","nameLocation":"4678:23:21","nodeType":"FunctionDefinition","overrides":{"id":2602,"nodeType":"OverrideSpecifier","overrides":[],"src":"4828:8:21"},"parameters":{"id":2601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2594,"mutability":"mutable","name":"tokenIds","nameLocation":"4728:8:21","nodeType":"VariableDeclaration","scope":2657,"src":"4711:25:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2592,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4711:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2593,"nodeType":"ArrayTypeName","src":"4711:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2597,"mutability":"mutable","name":"dataKeys","nameLocation":"4763:8:21","nodeType":"VariableDeclaration","scope":2657,"src":"4746:25:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2595,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4746:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2596,"nodeType":"ArrayTypeName","src":"4746:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2600,"mutability":"mutable","name":"dataValues","nameLocation":"4796:10:21","nodeType":"VariableDeclaration","scope":2657,"src":"4781:25:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":2598,"name":"bytes","nodeType":"ElementaryTypeName","src":"4781:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2599,"nodeType":"ArrayTypeName","src":"4781:7:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"4701:111:21"},"returnParameters":{"id":2605,"nodeType":"ParameterList","parameters":[],"src":"4847:0:21"},"scope":3695,"src":"4669:730:21","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1950],"body":{"id":2726,"nodeType":"Block","src":"5736:967:21","statements":[{"expression":{"id":2675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2668,"name":"results","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"5746:7:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":2672,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2661,"src":"5768:4:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":2673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5768:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5756:11:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory[] memory)"},"typeName":{"baseType":{"id":2669,"name":"bytes","nodeType":"ElementaryTypeName","src":"5760:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2670,"nodeType":"ArrayTypeName","src":"5760:7:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}}},"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5756:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"src":"5746:34:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":2676,"nodeType":"ExpressionStatement","src":"5746:34:21"},{"body":{"id":2724,"nodeType":"Block","src":"5825:872:21","statements":[{"assignments":[2685,2687],"declarations":[{"constant":false,"id":2685,"mutability":"mutable","name":"success","nameLocation":"5845:7:21","nodeType":"VariableDeclaration","scope":2724,"src":"5840:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2684,"name":"bool","nodeType":"ElementaryTypeName","src":"5840:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2687,"mutability":"mutable","name":"result","nameLocation":"5867:6:21","nodeType":"VariableDeclaration","scope":2724,"src":"5854:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2686,"name":"bytes","nodeType":"ElementaryTypeName","src":"5854:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2697,"initialValue":{"arguments":[{"baseExpression":{"id":2693,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2661,"src":"5921:4:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":2695,"indexExpression":{"id":2694,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"5926:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5921:7:21","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"arguments":[{"id":2690,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5885:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_LSP8IdentifiableDigitalAssetCore_$3695","typeString":"contract LSP8IdentifiableDigitalAssetCore"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LSP8IdentifiableDigitalAssetCore_$3695","typeString":"contract LSP8IdentifiableDigitalAssetCore"}],"id":2689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5877:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2688,"name":"address","nodeType":"ElementaryTypeName","src":"5877:7:21","typeDescriptions":{}}},"id":2691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5877:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"5877:26:21","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":2696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5877:65:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5839:103:21"},{"condition":{"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5961:8:21","subExpression":{"id":2698,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"5962:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2713,"nodeType":"IfStatement","src":"5957:636:21","trueBody":{"id":2712,"nodeType":"Block","src":"5971:622:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2700,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2687,"src":"6063:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6063:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6080:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6063:18:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2710,"nodeType":"Block","src":"6496:83:21","statements":[{"errorCall":{"arguments":[{"id":2707,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"6557:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2706,"name":"LSP8BatchCallFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"6525:19:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":["callIndex"],"nodeType":"FunctionCall","src":"6525:35:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2709,"nodeType":"RevertStatement","src":"6518:42:21"}]},"id":2711,"nodeType":"IfStatement","src":"6059:520:21","trueBody":{"id":2705,"nodeType":"Block","src":"6083:407:21","statements":[{"AST":{"nodeType":"YulBlock","src":"6323:149:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6349:36:21","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"6378:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6372:5:21"},"nodeType":"YulFunctionCall","src":"6372:13:21"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"6353:15:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6421:2:21","type":"","value":"32"},{"name":"result","nodeType":"YulIdentifier","src":"6425:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6417:3:21"},"nodeType":"YulFunctionCall","src":"6417:15:21"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"6434:15:21"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6410:6:21"},"nodeType":"YulFunctionCall","src":"6410:40:21"},"nodeType":"YulExpressionStatement","src":"6410:40:21"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2687,"isOffset":false,"isSlot":false,"src":"6378:6:21","valueSize":1},{"declaration":2687,"isOffset":false,"isSlot":false,"src":"6425:6:21","valueSize":1}],"id":2704,"nodeType":"InlineAssembly","src":"6314:158:21"}]}}]}},{"expression":{"id":2718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2714,"name":"results","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"6607:7:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":2716,"indexExpression":{"id":2715,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"6615:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6607:10:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2717,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2687,"src":"6620:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"6607:19:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2719,"nodeType":"ExpressionStatement","src":"6607:19:21"},{"id":2723,"nodeType":"UncheckedBlock","src":"6641:46:21","statements":[{"expression":{"id":2721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6669:3:21","subExpression":{"id":2720,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"6671:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2722,"nodeType":"ExpressionStatement","src":"6669:3:21"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2680,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"5806:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2681,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2661,"src":"5810:4:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":2682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5810:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5806:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2725,"initializationExpression":{"assignments":[2678],"declarations":[{"constant":false,"id":2678,"mutability":"mutable","name":"i","nameLocation":"5803:1:21","nodeType":"VariableDeclaration","scope":2725,"src":"5795:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2677,"name":"uint256","nodeType":"ElementaryTypeName","src":"5795:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2679,"nodeType":"VariableDeclarationStatement","src":"5795:9:21"},"nodeType":"ForStatement","src":"5790:907:21"}]},"documentation":{"id":2658,"nodeType":"StructuredDocumentation","src":"5439:178:21","text":" @inheritdoc ILSP8IdentifiableDigitalAsset\n @custom:info It's not possible to send value along the functions call due to the use of `delegatecall`."},"functionSelector":"6963d438","id":2727,"implemented":true,"kind":"function","modifiers":[],"name":"batchCalls","nameLocation":"5631:10:21","nodeType":"FunctionDefinition","overrides":{"id":2663,"nodeType":"OverrideSpecifier","overrides":[],"src":"5694:8:21"},"parameters":{"id":2662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2661,"mutability":"mutable","name":"data","nameLocation":"5668:4:21","nodeType":"VariableDeclaration","scope":2727,"src":"5651:21:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":2659,"name":"bytes","nodeType":"ElementaryTypeName","src":"5651:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2660,"nodeType":"ArrayTypeName","src":"5651:7:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"5641:37:21"},"returnParameters":{"id":2667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2666,"mutability":"mutable","name":"results","nameLocation":"5727:7:21","nodeType":"VariableDeclaration","scope":2727,"src":"5712:22:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":2664,"name":"bytes","nodeType":"ElementaryTypeName","src":"5712:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2665,"nodeType":"ArrayTypeName","src":"5712:7:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"5711:24:21"},"scope":3695,"src":"5622:1081:21","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1876],"body":{"id":2816,"nodeType":"Block","src":"6964:907:21","statements":[{"assignments":[2739],"declarations":[{"constant":false,"id":2739,"mutability":"mutable","name":"tokenOwner","nameLocation":"6982:10:21","nodeType":"VariableDeclaration","scope":2816,"src":"6974:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2738,"name":"address","nodeType":"ElementaryTypeName","src":"6974:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2743,"initialValue":{"arguments":[{"id":2741,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"7008:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2740,"name":"tokenOwnerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2484,"src":"6995:12:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view returns (address)"}},"id":2742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6995:21:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6974:42:21"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2744,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"7031:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":2745,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7045:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"7045:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7031:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2756,"nodeType":"IfStatement","src":"7027:112:21","trueBody":{"id":2755,"nodeType":"Block","src":"7057:82:21","statements":[{"errorCall":{"arguments":[{"id":2749,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"7096:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2750,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"7108:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2751,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7117:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"7117:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2748,"name":"LSP8NotTokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"7078:17:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$_t_address_$returns$__$","typeString":"function (address,bytes32,address) pure"}},"id":2753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7078:50:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2754,"nodeType":"RevertStatement","src":"7071:57:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2757,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"7153:8:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7173:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7165:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2758,"name":"address","nodeType":"ElementaryTypeName","src":"7165:7:21","typeDescriptions":{}}},"id":2761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7165:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7153:22:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2767,"nodeType":"IfStatement","src":"7149:96:21","trueBody":{"id":2766,"nodeType":"Block","src":"7177:68:21","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2763,"name":"LSP8CannotUseAddressZeroAsOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"7198:34:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7198:36:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2765,"nodeType":"RevertStatement","src":"7191:43:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2768,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"7259:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2769,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"7273:8:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7259:22:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2775,"nodeType":"IfStatement","src":"7255:92:21","trueBody":{"id":2774,"nodeType":"Block","src":"7283:64:21","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2771,"name":"LSP8TokenOwnerCannotBeOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"7304:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7304:32:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2773,"nodeType":"RevertStatement","src":"7297:39:21"}]}},{"assignments":[2777],"declarations":[{"constant":false,"id":2777,"mutability":"mutable","name":"isAdded","nameLocation":"7362:7:21","nodeType":"VariableDeclaration","scope":2816,"src":"7357:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2776,"name":"bool","nodeType":"ElementaryTypeName","src":"7357:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2784,"initialValue":{"arguments":[{"id":2782,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"7396:8:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":2778,"name":"_operators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2423,"src":"7372:10:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$4328_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":2780,"indexExpression":{"id":2779,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"7383:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7372:19:21","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4328_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":2781,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":4355,"src":"7372:23:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$4328_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$4328_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":2783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7372:33:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"7357:48:21"},{"condition":{"id":2786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7419:8:21","subExpression":{"id":2785,"name":"isAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2777,"src":"7420:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2792,"nodeType":"IfStatement","src":"7415:69:21","trueBody":{"errorCall":{"arguments":[{"id":2788,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"7466:8:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2789,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"7476:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2787,"name":"LSP8OperatorAlreadyAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"7436:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32) pure"}},"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7436:48:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2791,"nodeType":"RevertStatement","src":"7429:55:21"}},{"eventCall":{"arguments":[{"id":2794,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"7542:8:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2795,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"7564:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2796,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"7588:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2797,"name":"operatorNotificationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"7609:24:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2793,"name":"OperatorAuthorizationChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"7500:28:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,bytes32,bytes memory)"}},"id":2798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7500:143:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2799,"nodeType":"EmitStatement","src":"7495:148:21"},{"assignments":[2801],"declarations":[{"constant":false,"id":2801,"mutability":"mutable","name":"lsp1Data","nameLocation":"7667:8:21","nodeType":"VariableDeclaration","scope":2816,"src":"7654:21:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2800,"name":"bytes","nodeType":"ElementaryTypeName","src":"7654:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2810,"initialValue":{"arguments":[{"expression":{"id":2804,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7702:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"7702:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2806,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"7726:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"74727565","id":2807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7747:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2808,"name":"operatorNotificationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"7779:24:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2802,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7678:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"7678:10:21","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7678:135:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"7654:159:21"},{"expression":{"arguments":[{"id":2812,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"7845:8:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2813,"name":"lsp1Data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"7855:8:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2811,"name":"_notifyTokenOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3631,"src":"7824:20:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":2814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7824:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2815,"nodeType":"ExpressionStatement","src":"7824:40:21"}]},"documentation":{"id":2728,"nodeType":"StructuredDocumentation","src":"6744:60:21","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"86a10ddd","id":2817,"implemented":true,"kind":"function","modifiers":[],"name":"authorizeOperator","nameLocation":"6818:17:21","nodeType":"FunctionDefinition","overrides":{"id":2736,"nodeType":"OverrideSpecifier","overrides":[],"src":"6955:8:21"},"parameters":{"id":2735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2730,"mutability":"mutable","name":"operator","nameLocation":"6853:8:21","nodeType":"VariableDeclaration","scope":2817,"src":"6845:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2729,"name":"address","nodeType":"ElementaryTypeName","src":"6845:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2732,"mutability":"mutable","name":"tokenId","nameLocation":"6879:7:21","nodeType":"VariableDeclaration","scope":2817,"src":"6871:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2731,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6871:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2734,"mutability":"mutable","name":"operatorNotificationData","nameLocation":"6909:24:21","nodeType":"VariableDeclaration","scope":2817,"src":"6896:37:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2733,"name":"bytes","nodeType":"ElementaryTypeName","src":"6896:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6835:104:21"},"returnParameters":{"id":2737,"nodeType":"ParameterList","parameters":[],"src":"6964:0:21"},"scope":3695,"src":"6809:1062:21","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1888],"body":{"id":2895,"nodeType":"Block","src":"8115:834:21","statements":[{"assignments":[2831],"declarations":[{"constant":false,"id":2831,"mutability":"mutable","name":"tokenOwner","nameLocation":"8133:10:21","nodeType":"VariableDeclaration","scope":2895,"src":"8125:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2830,"name":"address","nodeType":"ElementaryTypeName","src":"8125:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2835,"initialValue":{"arguments":[{"id":2833,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"8159:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2832,"name":"tokenOwnerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2484,"src":"8146:12:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view returns (address)"}},"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8146:21:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8125:42:21"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2836,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"8182:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":2837,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8196:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"8196:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8182:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2848,"nodeType":"IfStatement","src":"8178:112:21","trueBody":{"id":2847,"nodeType":"Block","src":"8208:82:21","statements":[{"errorCall":{"arguments":[{"id":2841,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"8247:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2842,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"8259:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2843,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8268:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"8268:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2840,"name":"LSP8NotTokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"8229:17:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$_t_address_$returns$__$","typeString":"function (address,bytes32,address) pure"}},"id":2845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8229:50:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2846,"nodeType":"RevertStatement","src":"8222:57:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2849,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2820,"src":"8304:8:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8324:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8316:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2850,"name":"address","nodeType":"ElementaryTypeName","src":"8316:7:21","typeDescriptions":{}}},"id":2853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8316:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8304:22:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2859,"nodeType":"IfStatement","src":"8300:96:21","trueBody":{"id":2858,"nodeType":"Block","src":"8328:68:21","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2855,"name":"LSP8CannotUseAddressZeroAsOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"8349:34:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8349:36:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2857,"nodeType":"RevertStatement","src":"8342:43:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2860,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"8410:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2861,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2820,"src":"8424:8:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8410:22:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2867,"nodeType":"IfStatement","src":"8406:92:21","trueBody":{"id":2866,"nodeType":"Block","src":"8434:64:21","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2863,"name":"LSP8TokenOwnerCannotBeOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"8455:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8455:32:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2865,"nodeType":"RevertStatement","src":"8448:39:21"}]}},{"expression":{"arguments":[{"id":2869,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2820,"src":"8537:8:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2870,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"8559:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2871,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"8583:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2872,"name":"notify","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2824,"src":"8604:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2873,"name":"operatorNotificationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"8624:24:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2868,"name":"_revokeOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"8508:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,bytes32,bool,bytes memory)"}},"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8508:150:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2875,"nodeType":"ExpressionStatement","src":"8508:150:21"},{"condition":{"id":2876,"name":"notify","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2824,"src":"8673:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2894,"nodeType":"IfStatement","src":"8669:274:21","trueBody":{"id":2893,"nodeType":"Block","src":"8681:262:21","statements":[{"assignments":[2878],"declarations":[{"constant":false,"id":2878,"mutability":"mutable","name":"lsp1Data","nameLocation":"8708:8:21","nodeType":"VariableDeclaration","scope":2893,"src":"8695:21:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2877,"name":"bytes","nodeType":"ElementaryTypeName","src":"8695:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2887,"initialValue":{"arguments":[{"expression":{"id":2881,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8747:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"8747:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2883,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"8775:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"66616c7365","id":2884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8800:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":2885,"name":"operatorNotificationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"8839:24:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2879,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8719:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"8719:10:21","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8719:158:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"8695:182:21"},{"expression":{"arguments":[{"id":2889,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2820,"src":"8913:8:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2890,"name":"lsp1Data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"8923:8:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2888,"name":"_notifyTokenOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3631,"src":"8892:20:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8892:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2892,"nodeType":"ExpressionStatement","src":"8892:40:21"}]}}]},"documentation":{"id":2818,"nodeType":"StructuredDocumentation","src":"7877:60:21","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"db8c9663","id":2896,"implemented":true,"kind":"function","modifiers":[],"name":"revokeOperator","nameLocation":"7951:14:21","nodeType":"FunctionDefinition","overrides":{"id":2828,"nodeType":"OverrideSpecifier","overrides":[],"src":"8106:8:21"},"parameters":{"id":2827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2820,"mutability":"mutable","name":"operator","nameLocation":"7983:8:21","nodeType":"VariableDeclaration","scope":2896,"src":"7975:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2819,"name":"address","nodeType":"ElementaryTypeName","src":"7975:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2822,"mutability":"mutable","name":"tokenId","nameLocation":"8009:7:21","nodeType":"VariableDeclaration","scope":2896,"src":"8001:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2821,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8001:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2824,"mutability":"mutable","name":"notify","nameLocation":"8031:6:21","nodeType":"VariableDeclaration","scope":2896,"src":"8026:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2823,"name":"bool","nodeType":"ElementaryTypeName","src":"8026:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2826,"mutability":"mutable","name":"operatorNotificationData","nameLocation":"8060:24:21","nodeType":"VariableDeclaration","scope":2896,"src":"8047:37:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2825,"name":"bytes","nodeType":"ElementaryTypeName","src":"8047:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7965:125:21"},"returnParameters":{"id":2829,"nodeType":"ParameterList","parameters":[],"src":"8115:0:21"},"scope":3695,"src":"7942:1007:21","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1898],"body":{"id":2916,"nodeType":"Block","src":"9144:95:21","statements":[{"expression":{"arguments":[{"id":2908,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"9169:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2907,"name":"_existsOrError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"9154:14:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":2909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9154:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2910,"nodeType":"ExpressionStatement","src":"9154:23:21"},{"expression":{"arguments":[{"id":2912,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"9214:8:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2913,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"9224:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2911,"name":"_isOperatorOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"9195:18:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes32_$returns$_t_bool_$","typeString":"function (address,bytes32) view returns (bool)"}},"id":2914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9195:37:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2906,"id":2915,"nodeType":"Return","src":"9188:44:21"}]},"documentation":{"id":2897,"nodeType":"StructuredDocumentation","src":"8955:60:21","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"2a3654a4","id":2917,"implemented":true,"kind":"function","modifiers":[],"name":"isOperatorFor","nameLocation":"9029:13:21","nodeType":"FunctionDefinition","overrides":{"id":2903,"nodeType":"OverrideSpecifier","overrides":[],"src":"9120:8:21"},"parameters":{"id":2902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2899,"mutability":"mutable","name":"operator","nameLocation":"9060:8:21","nodeType":"VariableDeclaration","scope":2917,"src":"9052:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2898,"name":"address","nodeType":"ElementaryTypeName","src":"9052:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2901,"mutability":"mutable","name":"tokenId","nameLocation":"9086:7:21","nodeType":"VariableDeclaration","scope":2917,"src":"9078:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2900,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9078:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9042:57:21"},"returnParameters":{"id":2906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2905,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2917,"src":"9138:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2904,"name":"bool","nodeType":"ElementaryTypeName","src":"9138:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9137:6:21"},"scope":3695,"src":"9020:219:21","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1907],"body":{"id":2937,"nodeType":"Block","src":"9421:86:21","statements":[{"expression":{"arguments":[{"id":2928,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"9446:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2927,"name":"_existsOrError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"9431:14:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9431:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2930,"nodeType":"ExpressionStatement","src":"9431:23:21"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":2931,"name":"_operators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2423,"src":"9472:10:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$4328_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":2933,"indexExpression":{"id":2932,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"9483:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9472:19:21","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4328_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":2934,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"values","nodeType":"MemberAccess","referencedDeclaration":4481,"src":"9472:26:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$4328_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$bound_to$_t_struct$_AddressSet_$4328_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (address[] memory)"}},"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9472:28:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":2926,"id":2936,"nodeType":"Return","src":"9465:35:21"}]},"documentation":{"id":2918,"nodeType":"StructuredDocumentation","src":"9245:60:21","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"49a6078d","id":2938,"implemented":true,"kind":"function","modifiers":[],"name":"getOperatorsOf","nameLocation":"9319:14:21","nodeType":"FunctionDefinition","overrides":{"id":2922,"nodeType":"OverrideSpecifier","overrides":[],"src":"9385:8:21"},"parameters":{"id":2921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2920,"mutability":"mutable","name":"tokenId","nameLocation":"9351:7:21","nodeType":"VariableDeclaration","scope":2938,"src":"9343:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2919,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9343:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9333:31:21"},"returnParameters":{"id":2926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2925,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2938,"src":"9403:16:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2923,"name":"address","nodeType":"ElementaryTypeName","src":"9403:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2924,"nodeType":"ArrayTypeName","src":"9403:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"9402:18:21"},"scope":3695,"src":"9310:197:21","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2962,"nodeType":"Block","src":"9785:109:21","statements":[{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2948,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"9803:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":2950,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"9826:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2949,"name":"tokenOwnerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2484,"src":"9813:12:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view returns (address)"}},"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9813:21:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9803:31:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2957,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"9879:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":2953,"name":"_operators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2423,"src":"9850:10:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$4328_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":2955,"indexExpression":{"id":2954,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"9861:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9850:19:21","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4328_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":2956,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":4409,"src":"9850:28:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$4328_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$4328_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"}},"id":2958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9850:36:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9803:83:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2960,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9802:85:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2947,"id":2961,"nodeType":"Return","src":"9795:92:21"}]},"documentation":{"id":2939,"nodeType":"StructuredDocumentation","src":"9513:147:21","text":" @dev verifies if the `caller` is operator or owner for the `tokenId`\n @return true if `caller` is either operator or owner"},"id":2963,"implemented":true,"kind":"function","modifiers":[],"name":"_isOperatorOrOwner","nameLocation":"9674:18:21","nodeType":"FunctionDefinition","parameters":{"id":2944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2941,"mutability":"mutable","name":"caller","nameLocation":"9710:6:21","nodeType":"VariableDeclaration","scope":2963,"src":"9702:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2940,"name":"address","nodeType":"ElementaryTypeName","src":"9702:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2943,"mutability":"mutable","name":"tokenId","nameLocation":"9734:7:21","nodeType":"VariableDeclaration","scope":2963,"src":"9726:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2942,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9726:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9692:55:21"},"returnParameters":{"id":2947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2946,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2963,"src":"9779:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2945,"name":"bool","nodeType":"ElementaryTypeName","src":"9779:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9778:6:21"},"scope":3695,"src":"9665:229:21","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1921],"body":{"id":3000,"nodeType":"Block","src":"10162:187:21","statements":[{"condition":{"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10176:40:21","subExpression":{"arguments":[{"expression":{"id":2979,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10196:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"10196:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2981,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"10208:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2978,"name":"_isOperatorOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"10177:18:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes32_$returns$_t_bool_$","typeString":"function (address,bytes32) view returns (bool)"}},"id":2982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10177:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2991,"nodeType":"IfStatement","src":"10172:119:21","trueBody":{"id":2990,"nodeType":"Block","src":"10218:73:21","statements":[{"errorCall":{"arguments":[{"id":2985,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"10260:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2986,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10269:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"10269:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2984,"name":"LSP8NotTokenOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"10239:20:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) pure"}},"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10239:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2989,"nodeType":"RevertStatement","src":"10232:48:21"}]}},{"expression":{"arguments":[{"id":2993,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"10311:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2994,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"10317:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2995,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"10321:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2996,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"10330:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2997,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"10337:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2992,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3536,"src":"10301:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,bytes32,bool,bytes memory)"}},"id":2998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10301:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2999,"nodeType":"ExpressionStatement","src":"10301:41:21"}]},"documentation":{"id":2964,"nodeType":"StructuredDocumentation","src":"9935:60:21","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"511b6952","id":3001,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"10009:8:21","nodeType":"FunctionDefinition","overrides":{"id":2976,"nodeType":"OverrideSpecifier","overrides":[],"src":"10153:8:21"},"parameters":{"id":2975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2966,"mutability":"mutable","name":"from","nameLocation":"10035:4:21","nodeType":"VariableDeclaration","scope":3001,"src":"10027:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2965,"name":"address","nodeType":"ElementaryTypeName","src":"10027:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2968,"mutability":"mutable","name":"to","nameLocation":"10057:2:21","nodeType":"VariableDeclaration","scope":3001,"src":"10049:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2967,"name":"address","nodeType":"ElementaryTypeName","src":"10049:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2970,"mutability":"mutable","name":"tokenId","nameLocation":"10077:7:21","nodeType":"VariableDeclaration","scope":3001,"src":"10069:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2969,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10069:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2972,"mutability":"mutable","name":"force","nameLocation":"10099:5:21","nodeType":"VariableDeclaration","scope":3001,"src":"10094:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2971,"name":"bool","nodeType":"ElementaryTypeName","src":"10094:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2974,"mutability":"mutable","name":"data","nameLocation":"10127:4:21","nodeType":"VariableDeclaration","scope":3001,"src":"10114:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2973,"name":"bytes","nodeType":"ElementaryTypeName","src":"10114:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10017:120:21"},"returnParameters":{"id":2977,"nodeType":"ParameterList","parameters":[],"src":"10162:0:21"},"scope":3695,"src":"10000:349:21","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1940],"body":{"id":3080,"nodeType":"Block","src":"10625:478:21","statements":[{"assignments":[3022],"declarations":[{"constant":false,"id":3022,"mutability":"mutable","name":"fromLength","nameLocation":"10643:10:21","nodeType":"VariableDeclaration","scope":3080,"src":"10635:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3021,"name":"uint256","nodeType":"ElementaryTypeName","src":"10635:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3025,"initialValue":{"expression":{"id":3023,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3005,"src":"10656:4:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"10656:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10635:32:21"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3026,"name":"fromLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"10694:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":3027,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3008,"src":"10708:2:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"10708:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10694:23:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3030,"name":"fromLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"10733:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":3031,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"10747:7:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"10747:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10733:28:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10694:67:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3035,"name":"fromLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"10777:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":3036,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"10791:5:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":3037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"10791:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10777:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10694:109:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3040,"name":"fromLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"10819:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":3041,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"10833:4:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"10833:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10819:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10694:150:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3049,"nodeType":"IfStatement","src":"10677:236:21","trueBody":{"id":3048,"nodeType":"Block","src":"10855:58:21","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3045,"name":"LSP8InvalidTransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"10876:24:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10876:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3047,"nodeType":"RevertStatement","src":"10869:33:21"}]}},{"body":{"id":3078,"nodeType":"Block","src":"10957:140:21","statements":[{"expression":{"arguments":[{"baseExpression":{"id":3057,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3005,"src":"10980:4:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3059,"indexExpression":{"id":3058,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"10985:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10980:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":3060,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3008,"src":"10989:2:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3062,"indexExpression":{"id":3061,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"10992:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10989:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":3063,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"10996:7:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3065,"indexExpression":{"id":3064,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"11004:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10996:10:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":3066,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"11008:5:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":3068,"indexExpression":{"id":3067,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"11014:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11008:8:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"baseExpression":{"id":3069,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"11018:4:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":3071,"indexExpression":{"id":3070,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"11023:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11018:7:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3056,"name":"transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"10971:8:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,bytes32,bool,bytes memory)"}},"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10971:55:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3073,"nodeType":"ExpressionStatement","src":"10971:55:21"},{"id":3077,"nodeType":"UncheckedBlock","src":"11041:46:21","statements":[{"expression":{"id":3075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"11069:3:21","subExpression":{"id":3074,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"11071:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3076,"nodeType":"ExpressionStatement","src":"11069:3:21"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3053,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"10939:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3054,"name":"fromLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"10943:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10939:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3079,"initializationExpression":{"assignments":[3051],"declarations":[{"constant":false,"id":3051,"mutability":"mutable","name":"i","nameLocation":"10936:1:21","nodeType":"VariableDeclaration","scope":3079,"src":"10928:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3050,"name":"uint256","nodeType":"ElementaryTypeName","src":"10928:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3052,"nodeType":"VariableDeclarationStatement","src":"10928:9:21"},"nodeType":"ForStatement","src":"10923:174:21"}]},"documentation":{"id":3002,"nodeType":"StructuredDocumentation","src":"10355:60:21","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"7e87632c","id":3081,"implemented":true,"kind":"function","modifiers":[],"name":"transferBatch","nameLocation":"10429:13:21","nodeType":"FunctionDefinition","overrides":{"id":3019,"nodeType":"OverrideSpecifier","overrides":[],"src":"10616:8:21"},"parameters":{"id":3018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3005,"mutability":"mutable","name":"from","nameLocation":"10469:4:21","nodeType":"VariableDeclaration","scope":3081,"src":"10452:21:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3003,"name":"address","nodeType":"ElementaryTypeName","src":"10452:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3004,"nodeType":"ArrayTypeName","src":"10452:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3008,"mutability":"mutable","name":"to","nameLocation":"10500:2:21","nodeType":"VariableDeclaration","scope":3081,"src":"10483:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3006,"name":"address","nodeType":"ElementaryTypeName","src":"10483:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3007,"nodeType":"ArrayTypeName","src":"10483:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3011,"mutability":"mutable","name":"tokenId","nameLocation":"10529:7:21","nodeType":"VariableDeclaration","scope":3081,"src":"10512:24:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3009,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10512:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3010,"nodeType":"ArrayTypeName","src":"10512:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3014,"mutability":"mutable","name":"force","nameLocation":"10560:5:21","nodeType":"VariableDeclaration","scope":3081,"src":"10546:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":3012,"name":"bool","nodeType":"ElementaryTypeName","src":"10546:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3013,"nodeType":"ArrayTypeName","src":"10546:6:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":3017,"mutability":"mutable","name":"data","nameLocation":"10590:4:21","nodeType":"VariableDeclaration","scope":3081,"src":"10575:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":3015,"name":"bytes","nodeType":"ElementaryTypeName","src":"10575:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":3016,"nodeType":"ArrayTypeName","src":"10575:7:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"10442:158:21"},"returnParameters":{"id":3020,"nodeType":"ParameterList","parameters":[],"src":"10625:0:21"},"scope":3695,"src":"10420:683:21","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":3120,"nodeType":"Block","src":"11398:313:21","statements":[{"assignments":[3096],"declarations":[{"constant":false,"id":3096,"mutability":"mutable","name":"isRemoved","nameLocation":"11413:9:21","nodeType":"VariableDeclaration","scope":3120,"src":"11408:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3095,"name":"bool","nodeType":"ElementaryTypeName","src":"11408:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3103,"initialValue":{"arguments":[{"id":3101,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"11452:8:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":3097,"name":"_operators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2423,"src":"11425:10:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$4328_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":3099,"indexExpression":{"id":3098,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"11436:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11425:19:21","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4328_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":3100,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":4382,"src":"11425:26:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$4328_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$4328_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11425:36:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"11408:53:21"},{"condition":{"id":3105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11475:10:21","subExpression":{"id":3104,"name":"isRemoved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3096,"src":"11476:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3111,"nodeType":"IfStatement","src":"11471:65:21","trueBody":{"errorCall":{"arguments":[{"id":3107,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"11518:8:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3108,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"11528:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3106,"name":"LSP8NonExistingOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"11494:23:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32) pure"}},"id":3109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11494:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3110,"nodeType":"RevertStatement","src":"11487:49:21"}},{"eventCall":{"arguments":[{"id":3113,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"11581:8:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3114,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"11603:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3115,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"11627:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3116,"name":"notified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"11648:8:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3117,"name":"operatorNotificationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3092,"src":"11670:24:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3112,"name":"OperatorRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"11552:15:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,bytes32,bool,bytes memory)"}},"id":3118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11552:152:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3119,"nodeType":"EmitStatement","src":"11547:157:21"}]},"documentation":{"id":3082,"nodeType":"StructuredDocumentation","src":"11109:87:21","text":" @dev removes `operator` from the list of operators for the `tokenId`"},"id":3121,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeOperator","nameLocation":"11210:15:21","nodeType":"FunctionDefinition","parameters":{"id":3093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3084,"mutability":"mutable","name":"operator","nameLocation":"11243:8:21","nodeType":"VariableDeclaration","scope":3121,"src":"11235:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3083,"name":"address","nodeType":"ElementaryTypeName","src":"11235:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3086,"mutability":"mutable","name":"tokenOwner","nameLocation":"11269:10:21","nodeType":"VariableDeclaration","scope":3121,"src":"11261:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3085,"name":"address","nodeType":"ElementaryTypeName","src":"11261:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3088,"mutability":"mutable","name":"tokenId","nameLocation":"11297:7:21","nodeType":"VariableDeclaration","scope":3121,"src":"11289:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3087,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11289:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3090,"mutability":"mutable","name":"notified","nameLocation":"11319:8:21","nodeType":"VariableDeclaration","scope":3121,"src":"11314:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3089,"name":"bool","nodeType":"ElementaryTypeName","src":"11314:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3092,"mutability":"mutable","name":"operatorNotificationData","nameLocation":"11350:24:21","nodeType":"VariableDeclaration","scope":3121,"src":"11337:37:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3091,"name":"bytes","nodeType":"ElementaryTypeName","src":"11337:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11225:155:21"},"returnParameters":{"id":3094,"nodeType":"ParameterList","parameters":[],"src":"11398:0:21"},"scope":3695,"src":"11201:510:21","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3174,"nodeType":"Block","src":"12093:929:21","statements":[{"assignments":[3133],"declarations":[{"constant":false,"id":3133,"mutability":"mutable","name":"operatorsForTokenId","nameLocation":"12547:19:21","nodeType":"VariableDeclaration","scope":3174,"src":"12514:52:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4328_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":3132,"nodeType":"UserDefinedTypeName","pathNode":{"id":3131,"name":"EnumerableSet.AddressSet","nodeType":"IdentifierPath","referencedDeclaration":4328,"src":"12514:24:21"},"referencedDeclaration":4328,"src":"12514:24:21","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4328_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"id":3137,"initialValue":{"baseExpression":{"id":3134,"name":"_operators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2423,"src":"12569:10:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$4328_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":3136,"indexExpression":{"id":3135,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3126,"src":"12593:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12569:41:21","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4328_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"nodeType":"VariableDeclarationStatement","src":"12514:96:21"},{"assignments":[3139],"declarations":[{"constant":false,"id":3139,"mutability":"mutable","name":"operatorListLength","nameLocation":"12629:18:21","nodeType":"VariableDeclaration","scope":3174,"src":"12621:26:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3138,"name":"uint256","nodeType":"ElementaryTypeName","src":"12621:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3143,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3140,"name":"operatorsForTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3133,"src":"12650:19:21","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4328_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":3141,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":4424,"src":"12650:26:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$4328_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$4328_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}},"id":3142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12650:28:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12621:57:21"},{"assignments":[3145],"declarations":[{"constant":false,"id":3145,"mutability":"mutable","name":"operator","nameLocation":"12696:8:21","nodeType":"VariableDeclaration","scope":3174,"src":"12688:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3144,"name":"address","nodeType":"ElementaryTypeName","src":"12688:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3146,"nodeType":"VariableDeclarationStatement","src":"12688:16:21"},{"body":{"id":3172,"nodeType":"Block","src":"12756:260:21","statements":[{"expression":{"id":3158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3153,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3145,"src":"12838:8:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":3156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12872:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":3154,"name":"operatorsForTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3133,"src":"12849:19:21","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4328_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":3155,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"at","nodeType":"MemberAccess","referencedDeclaration":4451,"src":"12849:22:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$4328_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$4328_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"}},"id":3157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12849:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12838:36:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3159,"nodeType":"ExpressionStatement","src":"12838:36:21"},{"expression":{"arguments":[{"id":3161,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3145,"src":"12904:8:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3162,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"12914:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3163,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3126,"src":"12926:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"66616c7365","id":3164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12935:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"","id":3165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12942:2:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":3160,"name":"_revokeOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"12888:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,bytes32,bool,bytes memory)"}},"id":3166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12888:57:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3167,"nodeType":"ExpressionStatement","src":"12888:57:21"},{"id":3171,"nodeType":"UncheckedBlock","src":"12960:46:21","statements":[{"expression":{"id":3169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"12988:3:21","subExpression":{"id":3168,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"12990:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3170,"nodeType":"ExpressionStatement","src":"12988:3:21"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3150,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"12730:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3151,"name":"operatorListLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"12734:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:22:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3173,"initializationExpression":{"assignments":[3148],"declarations":[{"constant":false,"id":3148,"mutability":"mutable","name":"i","nameLocation":"12727:1:21","nodeType":"VariableDeclaration","scope":3173,"src":"12719:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3147,"name":"uint256","nodeType":"ElementaryTypeName","src":"12719:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3149,"nodeType":"VariableDeclarationStatement","src":"12719:9:21"},"nodeType":"ForStatement","src":"12714:302:21"}]},"documentation":{"id":3122,"nodeType":"StructuredDocumentation","src":"11717:270:21","text":" @dev revoke all the current operators for a specific `tokenId` token which belongs to `tokenOwner`.\n @param tokenOwner The address that is the owner of the `tokenId`.\n @param tokenId The token to remove the associated operators for."},"id":3175,"implemented":true,"kind":"function","modifiers":[],"name":"_clearOperators","nameLocation":"12001:15:21","nodeType":"FunctionDefinition","parameters":{"id":3127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3124,"mutability":"mutable","name":"tokenOwner","nameLocation":"12034:10:21","nodeType":"VariableDeclaration","scope":3175,"src":"12026:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3123,"name":"address","nodeType":"ElementaryTypeName","src":"12026:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3126,"mutability":"mutable","name":"tokenId","nameLocation":"12062:7:21","nodeType":"VariableDeclaration","scope":3175,"src":"12054:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3125,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12054:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12016:59:21"},"returnParameters":{"id":3128,"nodeType":"ParameterList","parameters":[],"src":"12093:0:21"},"scope":3695,"src":"11992:1030:21","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3192,"nodeType":"Block","src":"13279:59:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3183,"name":"_tokenOwners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"13296:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":3185,"indexExpression":{"id":3184,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"13309:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13296:21:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13329:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13321:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3186,"name":"address","nodeType":"ElementaryTypeName","src":"13321:7:21","typeDescriptions":{}}},"id":3189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13321:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13296:35:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3182,"id":3191,"nodeType":"Return","src":"13289:42:21"}]},"documentation":{"id":3176,"nodeType":"StructuredDocumentation","src":"13028:175:21","text":" @dev Returns whether `tokenId` exists.\n Tokens start existing when they are minted ({_mint}), and stop existing when they are burned ({_burn})."},"id":3193,"implemented":true,"kind":"function","modifiers":[],"name":"_exists","nameLocation":"13217:7:21","nodeType":"FunctionDefinition","parameters":{"id":3179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3178,"mutability":"mutable","name":"tokenId","nameLocation":"13233:7:21","nodeType":"VariableDeclaration","scope":3193,"src":"13225:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3177,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13225:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13224:17:21"},"returnParameters":{"id":3182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3181,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3193,"src":"13273:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3180,"name":"bool","nodeType":"ElementaryTypeName","src":"13273:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13272:6:21"},"scope":3695,"src":"13208:130:21","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3209,"nodeType":"Block","src":"13492:102:21","statements":[{"condition":{"id":3202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13506:17:21","subExpression":{"arguments":[{"id":3200,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"13515:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3199,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"13507:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32) view returns (bool)"}},"id":3201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13507:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3208,"nodeType":"IfStatement","src":"13502:86:21","trueBody":{"id":3207,"nodeType":"Block","src":"13525:63:21","statements":[{"errorCall":{"arguments":[{"id":3204,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"13569:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3203,"name":"LSP8NonExistentTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"13546:22:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":3205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13546:31:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3206,"nodeType":"RevertStatement","src":"13539:38:21"}]}}]},"documentation":{"id":3194,"nodeType":"StructuredDocumentation","src":"13344:80:21","text":" @dev When `tokenId` does not exist then revert with an error."},"id":3210,"implemented":true,"kind":"function","modifiers":[],"name":"_existsOrError","nameLocation":"13438:14:21","nodeType":"FunctionDefinition","parameters":{"id":3197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3196,"mutability":"mutable","name":"tokenId","nameLocation":"13461:7:21","nodeType":"VariableDeclaration","scope":3210,"src":"13453:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3195,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13453:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13452:17:21"},"returnParameters":{"id":3198,"nodeType":"ParameterList","parameters":[],"src":"13492:0:21"},"scope":3695,"src":"13429:165:21","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3312,"nodeType":"Block","src":"14748:822:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3222,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"14762:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14776:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14768:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3223,"name":"address","nodeType":"ElementaryTypeName","src":"14768:7:21","typeDescriptions":{}}},"id":3226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14768:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14762:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3232,"nodeType":"IfStatement","src":"14758:83:21","trueBody":{"id":3231,"nodeType":"Block","src":"14780:61:21","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3228,"name":"LSP8CannotSendToAddressZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2040,"src":"14801:27:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14801:29:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3230,"nodeType":"RevertStatement","src":"14794:36:21"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":3236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14880:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14872:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3234,"name":"address","nodeType":"ElementaryTypeName","src":"14872:7:21","typeDescriptions":{}}},"id":3237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14872:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3238,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"14884:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3239,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"14888:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3240,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3219,"src":"14897:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3233,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"14851:20:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,bytes32,bytes memory)"}},"id":3241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14851:51:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3242,"nodeType":"ExpressionStatement","src":"14851:51:21"},{"condition":{"arguments":[{"id":3244,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"15011:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3243,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"15003:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32) view returns (bool)"}},"id":3245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15003:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3251,"nodeType":"IfStatement","src":"14999:87:21","trueBody":{"id":3250,"nodeType":"Block","src":"15021:65:21","statements":[{"errorCall":{"arguments":[{"id":3247,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"15067:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3246,"name":"LSP8TokenIdAlreadyMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"15042:24:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":3248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15042:33:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3249,"nodeType":"RevertStatement","src":"15035:40:21"}]}},{"expression":{"id":3253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"15126:17:21","subExpression":{"id":3252,"name":"_existingTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"15128:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3254,"nodeType":"ExpressionStatement","src":"15126:17:21"},{"expression":{"arguments":[{"id":3259,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"15175:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"baseExpression":{"id":3255,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"15154:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Bytes32Set_$4207_storage_$","typeString":"mapping(address => struct EnumerableSet.Bytes32Set storage ref)"}},"id":3257,"indexExpression":{"id":3256,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"15167:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15154:16:21","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4207_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":3258,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":4225,"src":"15154:20:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Set_$4207_storage_ptr_$_t_bytes32_$returns$_t_bool_$bound_to$_t_struct$_Bytes32Set_$4207_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"}},"id":3260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15154:29:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3261,"nodeType":"ExpressionStatement","src":"15154:29:21"},{"expression":{"id":3266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3262,"name":"_tokenOwners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"15193:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":3264,"indexExpression":{"id":3263,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"15206:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15193:21:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3265,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"15217:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15193:26:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3267,"nodeType":"ExpressionStatement","src":"15193:26:21"},{"eventCall":{"arguments":[{"expression":{"id":3269,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15244:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"15244:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15264:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15256:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3271,"name":"address","nodeType":"ElementaryTypeName","src":"15256:7:21","typeDescriptions":{}}},"id":3274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15256:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3275,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"15268:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3276,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"15272:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3277,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3217,"src":"15281:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3278,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3219,"src":"15288:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3268,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"15235:8:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,bytes32,bool,bytes memory)"}},"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15235:58:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3280,"nodeType":"EmitStatement","src":"15230:63:21"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":3284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15332:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15324:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3282,"name":"address","nodeType":"ElementaryTypeName","src":"15324:7:21","typeDescriptions":{}}},"id":3285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15324:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3286,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"15336:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3287,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"15340:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3288,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3219,"src":"15349:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3281,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3614,"src":"15304:19:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,bytes32,bytes memory)"}},"id":3289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15304:50:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3290,"nodeType":"ExpressionStatement","src":"15304:50:21"},{"assignments":[3292],"declarations":[{"constant":false,"id":3292,"mutability":"mutable","name":"lsp1Data","nameLocation":"15378:8:21","nodeType":"VariableDeclaration","scope":3312,"src":"15365:21:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3291,"name":"bytes","nodeType":"ElementaryTypeName","src":"15365:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3305,"initialValue":{"arguments":[{"expression":{"id":3295,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15413:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"15413:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15445:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15437:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3297,"name":"address","nodeType":"ElementaryTypeName","src":"15437:7:21","typeDescriptions":{}}},"id":3300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15437:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3301,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"15461:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3302,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"15477:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3303,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3219,"src":"15498:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3293,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"15389:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"15389:10:21","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15389:123:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"15365:147:21"},{"expression":{"arguments":[{"id":3307,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"15543:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3308,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3217,"src":"15547:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3309,"name":"lsp1Data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"15554:8:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3306,"name":"_notifyTokenReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"15522:20:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bool,bytes memory)"}},"id":3310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15522:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3311,"nodeType":"ExpressionStatement","src":"15522:41:21"}]},"documentation":{"id":3211,"nodeType":"StructuredDocumentation","src":"13600:1013:21","text":" @dev Create `tokenId` by minting it and transfers it to `to`.\n @custom:info Any logic in the:\n - {_beforeTokenTransfer} function will run before updating the balances and ownership of `tokenId`s.\n - {_afterTokenTransfer} function will run after updating the balances and ownership of `tokenId`s, **but before notifying the recipient via LSP1**.\n @param to The address that will receive the minted `tokenId`.\n @param tokenId The token ID to create (= mint).\n @param force When set to `true`, `to` may be any address. When set to `false`, `to` must be a contract that supports the LSP1 standard.\n @param data Any additional data the caller wants included in the emitted event, and sent in the hook of the `to` address.\n @custom:requirements\n - `tokenId` must not exist and not have been already minted.\n - `to` cannot be the zero address.\n @custom:events {Transfer} event with `address(0)` as `from` address."},"id":3313,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"14627:5:21","nodeType":"FunctionDefinition","parameters":{"id":3220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3213,"mutability":"mutable","name":"to","nameLocation":"14650:2:21","nodeType":"VariableDeclaration","scope":3313,"src":"14642:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3212,"name":"address","nodeType":"ElementaryTypeName","src":"14642:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3215,"mutability":"mutable","name":"tokenId","nameLocation":"14670:7:21","nodeType":"VariableDeclaration","scope":3313,"src":"14662:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3214,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14662:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3217,"mutability":"mutable","name":"force","nameLocation":"14692:5:21","nodeType":"VariableDeclaration","scope":3313,"src":"14687:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3216,"name":"bool","nodeType":"ElementaryTypeName","src":"14687:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3219,"mutability":"mutable","name":"data","nameLocation":"14720:4:21","nodeType":"VariableDeclaration","scope":3313,"src":"14707:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3218,"name":"bytes","nodeType":"ElementaryTypeName","src":"14707:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14632:98:21"},"returnParameters":{"id":3221,"nodeType":"ParameterList","parameters":[],"src":"14748:0:21"},"scope":3695,"src":"14618:952:21","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3406,"nodeType":"Block","src":"16994:864:21","statements":[{"assignments":[3322],"declarations":[{"constant":false,"id":3322,"mutability":"mutable","name":"tokenOwner","nameLocation":"17012:10:21","nodeType":"VariableDeclaration","scope":3406,"src":"17004:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3321,"name":"address","nodeType":"ElementaryTypeName","src":"17004:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3326,"initialValue":{"arguments":[{"id":3324,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3316,"src":"17038:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3323,"name":"tokenOwnerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2484,"src":"17025:12:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view returns (address)"}},"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17025:21:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"17004:42:21"},{"expression":{"arguments":[{"id":3328,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"17078:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17098:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17090:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3329,"name":"address","nodeType":"ElementaryTypeName","src":"17090:7:21","typeDescriptions":{}}},"id":3332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17090:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3333,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3316,"src":"17102:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3334,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"17111:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3327,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"17057:20:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,bytes32,bytes memory)"}},"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17057:59:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3336,"nodeType":"ExpressionStatement","src":"17057:59:21"},{"expression":{"id":3341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3337,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"17255:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3339,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3316,"src":"17281:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3338,"name":"tokenOwnerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2484,"src":"17268:12:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view returns (address)"}},"id":3340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17268:21:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"17255:34:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3342,"nodeType":"ExpressionStatement","src":"17255:34:21"},{"expression":{"id":3344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"17330:17:21","subExpression":{"id":3343,"name":"_existingTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"17332:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3345,"nodeType":"ExpressionStatement","src":"17330:17:21"},{"expression":{"arguments":[{"id":3347,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"17374:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3348,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3316,"src":"17386:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3346,"name":"_clearOperators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3175,"src":"17358:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32)"}},"id":3349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17358:36:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3350,"nodeType":"ExpressionStatement","src":"17358:36:21"},{"expression":{"arguments":[{"id":3355,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3316,"src":"17437:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"baseExpression":{"id":3351,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"17405:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Bytes32Set_$4207_storage_$","typeString":"mapping(address => struct EnumerableSet.Bytes32Set storage ref)"}},"id":3353,"indexExpression":{"id":3352,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"17418:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17405:24:21","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4207_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":3354,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":4243,"src":"17405:31:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Set_$4207_storage_ptr_$_t_bytes32_$returns$_t_bool_$bound_to$_t_struct$_Bytes32Set_$4207_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"}},"id":3356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17405:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3357,"nodeType":"ExpressionStatement","src":"17405:40:21"},{"expression":{"id":3361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"17455:28:21","subExpression":{"baseExpression":{"id":3358,"name":"_tokenOwners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"17462:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":3360,"indexExpression":{"id":3359,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3316,"src":"17475:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17462:21:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3362,"nodeType":"ExpressionStatement","src":"17455:28:21"},{"eventCall":{"arguments":[{"expression":{"id":3364,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"17508:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"17508:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3366,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"17520:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17540:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17532:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3367,"name":"address","nodeType":"ElementaryTypeName","src":"17532:7:21","typeDescriptions":{}}},"id":3370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17532:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3371,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3316,"src":"17544:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"66616c7365","id":3372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17553:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":3373,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"17560:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3363,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"17499:8:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,bytes32,bool,bytes memory)"}},"id":3374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17499:66:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3375,"nodeType":"EmitStatement","src":"17494:71:21"},{"expression":{"arguments":[{"id":3377,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"17596:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17616:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17608:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3378,"name":"address","nodeType":"ElementaryTypeName","src":"17608:7:21","typeDescriptions":{}}},"id":3381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17608:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3382,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3316,"src":"17620:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3383,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"17629:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3376,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3614,"src":"17576:19:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,bytes32,bytes memory)"}},"id":3384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17576:58:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3385,"nodeType":"ExpressionStatement","src":"17576:58:21"},{"assignments":[3387],"declarations":[{"constant":false,"id":3387,"mutability":"mutable","name":"lsp1Data","nameLocation":"17658:8:21","nodeType":"VariableDeclaration","scope":3406,"src":"17645:21:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3386,"name":"bytes","nodeType":"ElementaryTypeName","src":"17645:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3400,"initialValue":{"arguments":[{"expression":{"id":3390,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"17693:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"17693:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3392,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"17717:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17749:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17741:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3393,"name":"address","nodeType":"ElementaryTypeName","src":"17741:7:21","typeDescriptions":{}}},"id":3396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17741:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3397,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3316,"src":"17765:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3398,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"17786:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3388,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"17669:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"17669:10:21","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17669:131:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17645:155:21"},{"expression":{"arguments":[{"id":3402,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"17830:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3403,"name":"lsp1Data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"17842:8:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3401,"name":"_notifyTokenSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"17811:18:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":3404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17811:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3405,"nodeType":"ExpressionStatement","src":"17811:40:21"}]},"documentation":{"id":3314,"nodeType":"StructuredDocumentation","src":"15576:1345:21","text":" @dev Burn a specific `tokenId`, removing the `tokenId` from the {tokenIdsOf} the caller and decreasing its {balanceOf} by -1.\n This will also clear all the operators allowed to transfer the `tokenId`.\n The owner of the `tokenId` will be notified about the `tokenId` being transferred through its LSP1 {universalReceiver}\n function, if it is a contract that supports the LSP1 interface. Its {universalReceiver} function will receive\n all the parameters in the calldata packed encoded.\n @custom:info Any logic in the:\n - {_beforeTokenTransfer} function will run before updating the balances and ownership of `tokenId`s.\n - {_afterTokenTransfer} function will run after updating the balances and ownership of `tokenId`s, **but before notifying the sender via LSP1**.\n @param tokenId The token to burn.\n @param data Any additional data the caller wants included in the emitted event, and sent in the LSP1 hook on the token owner's address.\n @custom:hint In dApps, you can know which addresses are burning tokens by listening for the `Transfer` event and filter with the zero address as `to`.\n @custom:requirements\n - `tokenId` must exist.\n @custom:events {Transfer} event with `address(0)` as the `to` address."},"id":3407,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"16935:5:21","nodeType":"FunctionDefinition","parameters":{"id":3319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3316,"mutability":"mutable","name":"tokenId","nameLocation":"16949:7:21","nodeType":"VariableDeclaration","scope":3407,"src":"16941:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3315,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16941:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3318,"mutability":"mutable","name":"data","nameLocation":"16971:4:21","nodeType":"VariableDeclaration","scope":3407,"src":"16958:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3317,"name":"bytes","nodeType":"ElementaryTypeName","src":"16958:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16940:36:21"},"returnParameters":{"id":3320,"nodeType":"ParameterList","parameters":[],"src":"16994:0:21"},"scope":3695,"src":"16926:932:21","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3535,"nodeType":"Block","src":"19445:1032:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3421,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3410,"src":"19459:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3422,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"19467:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"19459:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3428,"nodeType":"IfStatement","src":"19455:70:21","trueBody":{"id":3427,"nodeType":"Block","src":"19471:54:21","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3424,"name":"LSP8CannotSendToSelf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"19492:20:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19492:22:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3426,"nodeType":"RevertStatement","src":"19485:29:21"}]}},{"assignments":[3430],"declarations":[{"constant":false,"id":3430,"mutability":"mutable","name":"tokenOwner","nameLocation":"19543:10:21","nodeType":"VariableDeclaration","scope":3535,"src":"19535:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3429,"name":"address","nodeType":"ElementaryTypeName","src":"19535:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3434,"initialValue":{"arguments":[{"id":3432,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"19569:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3431,"name":"tokenOwnerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2484,"src":"19556:12:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view returns (address)"}},"id":3433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19556:21:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"19535:42:21"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3435,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"19591:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3436,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3410,"src":"19605:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"19591:18:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3445,"nodeType":"IfStatement","src":"19587:100:21","trueBody":{"id":3444,"nodeType":"Block","src":"19611:76:21","statements":[{"errorCall":{"arguments":[{"id":3439,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"19650:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3440,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"19662:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3441,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3410,"src":"19671:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3438,"name":"LSP8NotTokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"19632:17:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$_t_address_$returns$__$","typeString":"function (address,bytes32,address) pure"}},"id":3442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19632:44:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3443,"nodeType":"RevertStatement","src":"19625:51:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3446,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"19701:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19715:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19707:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3447,"name":"address","nodeType":"ElementaryTypeName","src":"19707:7:21","typeDescriptions":{}}},"id":3450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19707:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"19701:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3456,"nodeType":"IfStatement","src":"19697:83:21","trueBody":{"id":3455,"nodeType":"Block","src":"19719:61:21","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3452,"name":"LSP8CannotSendToAddressZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2040,"src":"19740:27:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19740:29:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3454,"nodeType":"RevertStatement","src":"19733:36:21"}]}},{"expression":{"arguments":[{"id":3458,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3410,"src":"19811:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3459,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"19817:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3460,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"19821:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3461,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3418,"src":"19830:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3457,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"19790:20:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,bytes32,bytes memory)"}},"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19790:45:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3463,"nodeType":"ExpressionStatement","src":"19790:45:21"},{"expression":{"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3464,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"19974:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3466,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"20000:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3465,"name":"tokenOwnerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2484,"src":"19987:12:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view returns (address)"}},"id":3467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19987:21:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"19974:34:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3469,"nodeType":"ExpressionStatement","src":"19974:34:21"},{"expression":{"arguments":[{"id":3471,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3410,"src":"20035:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3472,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"20041:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3470,"name":"_clearOperators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3175,"src":"20019:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32)"}},"id":3473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20019:30:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3474,"nodeType":"ExpressionStatement","src":"20019:30:21"},{"expression":{"arguments":[{"id":3479,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"20086:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"baseExpression":{"id":3475,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"20060:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Bytes32Set_$4207_storage_$","typeString":"mapping(address => struct EnumerableSet.Bytes32Set storage ref)"}},"id":3477,"indexExpression":{"id":3476,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3410,"src":"20073:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20060:18:21","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4207_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":3478,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":4243,"src":"20060:25:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Set_$4207_storage_ptr_$_t_bytes32_$returns$_t_bool_$bound_to$_t_struct$_Bytes32Set_$4207_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"}},"id":3480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20060:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3481,"nodeType":"ExpressionStatement","src":"20060:34:21"},{"expression":{"arguments":[{"id":3486,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"20125:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"baseExpression":{"id":3482,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"20104:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Bytes32Set_$4207_storage_$","typeString":"mapping(address => struct EnumerableSet.Bytes32Set storage ref)"}},"id":3484,"indexExpression":{"id":3483,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"20117:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20104:16:21","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4207_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":3485,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":4225,"src":"20104:20:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Set_$4207_storage_ptr_$_t_bytes32_$returns$_t_bool_$bound_to$_t_struct$_Bytes32Set_$4207_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"}},"id":3487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20104:29:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3488,"nodeType":"ExpressionStatement","src":"20104:29:21"},{"expression":{"id":3493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3489,"name":"_tokenOwners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"20143:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":3491,"indexExpression":{"id":3490,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"20156:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"20143:21:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3492,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"20167:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"20143:26:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3494,"nodeType":"ExpressionStatement","src":"20143:26:21"},{"eventCall":{"arguments":[{"expression":{"id":3496,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"20194:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"20194:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3498,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3410,"src":"20206:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3499,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"20212:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3500,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"20216:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3501,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3416,"src":"20225:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3502,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3418,"src":"20232:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3495,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"20185:8:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,bytes32,bool,bytes memory)"}},"id":3503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20185:52:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3504,"nodeType":"EmitStatement","src":"20180:57:21"},{"expression":{"arguments":[{"id":3506,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3410,"src":"20268:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3507,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"20274:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3508,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"20278:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3509,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3418,"src":"20287:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3505,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3614,"src":"20248:19:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,bytes32,bytes memory)"}},"id":3510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20248:44:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3511,"nodeType":"ExpressionStatement","src":"20248:44:21"},{"assignments":[3513],"declarations":[{"constant":false,"id":3513,"mutability":"mutable","name":"lsp1Data","nameLocation":"20316:8:21","nodeType":"VariableDeclaration","scope":3535,"src":"20303:21:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3512,"name":"bytes","nodeType":"ElementaryTypeName","src":"20303:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3523,"initialValue":{"arguments":[{"expression":{"id":3516,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"20338:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"20338:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3518,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3410,"src":"20350:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3519,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"20356:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3520,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"20360:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3521,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3418,"src":"20369:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3514,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"20327:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"20327:10:21","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20327:47:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"20303:71:21"},{"expression":{"arguments":[{"id":3525,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3410,"src":"20404:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3526,"name":"lsp1Data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"20410:8:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3524,"name":"_notifyTokenSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"20385:18:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20385:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3528,"nodeType":"ExpressionStatement","src":"20385:34:21"},{"expression":{"arguments":[{"id":3530,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"20450:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3531,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3416,"src":"20454:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3532,"name":"lsp1Data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"20461:8:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3529,"name":"_notifyTokenReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"20429:20:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bool,bytes memory)"}},"id":3533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20429:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3534,"nodeType":"ExpressionStatement","src":"20429:41:21"}]},"documentation":{"id":3408,"nodeType":"StructuredDocumentation","src":"17864:1420:21","text":" @dev Change the owner of the `tokenId` from `from` to `to`.\n Both the sender and recipient will be notified of the `tokenId` being transferred through their LSP1 {universalReceiver}\n function, if they are contracts that support the LSP1 interface. Their `universalReceiver` function will receive\n all the parameters in the calldata packed encoded.\n @custom:info Any logic in the:\n - {_beforeTokenTransfer} function will run before updating the balances and ownership of `tokenId`s.\n - {_afterTokenTransfer} function will run after updating the balances and ownership of `tokenId`s, **but before notifying the sender/recipient via LSP1**.\n @param from The sender address.\n @param to The recipient address.\n @param tokenId The token to transfer.\n @param force When set to `true`, `to` may be any address. When set to `false`, `to` must be a contract that supports the LSP1 standard.\n @param data Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.\n @custom:requirements\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n @custom:events {Transfer} event.\n @custom:danger This internal function does not check if the sender is authorized or not to operate on the `tokenId`."},"id":3536,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"19298:9:21","nodeType":"FunctionDefinition","parameters":{"id":3419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3410,"mutability":"mutable","name":"from","nameLocation":"19325:4:21","nodeType":"VariableDeclaration","scope":3536,"src":"19317:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3409,"name":"address","nodeType":"ElementaryTypeName","src":"19317:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3412,"mutability":"mutable","name":"to","nameLocation":"19347:2:21","nodeType":"VariableDeclaration","scope":3536,"src":"19339:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3411,"name":"address","nodeType":"ElementaryTypeName","src":"19339:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3414,"mutability":"mutable","name":"tokenId","nameLocation":"19367:7:21","nodeType":"VariableDeclaration","scope":3536,"src":"19359:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3413,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19359:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3416,"mutability":"mutable","name":"force","nameLocation":"19389:5:21","nodeType":"VariableDeclaration","scope":3536,"src":"19384:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3415,"name":"bool","nodeType":"ElementaryTypeName","src":"19384:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3418,"mutability":"mutable","name":"data","nameLocation":"19417:4:21","nodeType":"VariableDeclaration","scope":3536,"src":"19404:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3417,"name":"bytes","nodeType":"ElementaryTypeName","src":"19404:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19307:120:21"},"returnParameters":{"id":3420,"nodeType":"ParameterList","parameters":[],"src":"19445:0:21"},"scope":3695,"src":"19289:1188:21","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3565,"nodeType":"Block","src":"21023:140:21","statements":[{"expression":{"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3546,"name":"_store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"21033:6:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes storage ref)"}},"id":3555,"indexExpression":{"arguments":[{"arguments":[{"id":3551,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"21063:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3552,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3541,"src":"21072:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21050:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3548,"name":"bytes","nodeType":"ElementaryTypeName","src":"21050:5:21","typeDescriptions":{}}},"id":3550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"concat","nodeType":"MemberAccess","src":"21050:12:21","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21050:30:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3547,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"21040:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21040:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"21033:49:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3556,"name":"dataValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3543,"src":"21085:9:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"21033:61:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":3558,"nodeType":"ExpressionStatement","src":"21033:61:21"},{"eventCall":{"arguments":[{"id":3560,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"21128:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3561,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3541,"src":"21137:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3562,"name":"dataValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3543,"src":"21146:9:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3559,"name":"TokenIdDataChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"21109:18:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes32,bytes memory)"}},"id":3563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21109:47:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3564,"nodeType":"EmitStatement","src":"21104:52:21"}]},"documentation":{"id":3537,"nodeType":"StructuredDocumentation","src":"20483:402:21","text":" @dev Sets data for a specific `tokenId` and `dataKey` in the ERC725Y storage\n The ERC725Y data key is the hash of the `tokenId` and `dataKey` concatenated\n @param tokenId The unique identifier for a token.\n @param dataKey The key for the data to set.\n @param dataValue The value to set for the given data key.\n @custom:events {TokenIdDataChanged} event."},"id":3566,"implemented":true,"kind":"function","modifiers":[],"name":"_setDataForTokenId","nameLocation":"20899:18:21","nodeType":"FunctionDefinition","parameters":{"id":3544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3539,"mutability":"mutable","name":"tokenId","nameLocation":"20935:7:21","nodeType":"VariableDeclaration","scope":3566,"src":"20927:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3538,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20927:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3541,"mutability":"mutable","name":"dataKey","nameLocation":"20960:7:21","nodeType":"VariableDeclaration","scope":3566,"src":"20952:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3540,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20952:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3543,"mutability":"mutable","name":"dataValue","nameLocation":"20990:9:21","nodeType":"VariableDeclaration","scope":3566,"src":"20977:22:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3542,"name":"bytes","nodeType":"ElementaryTypeName","src":"20977:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20917:88:21"},"returnParameters":{"id":3545,"nodeType":"ParameterList","parameters":[],"src":"21023:0:21"},"scope":3695,"src":"20890:273:21","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3587,"nodeType":"Block","src":"21705:73:21","statements":[{"expression":{"baseExpression":{"id":3576,"name":"_store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"21722:6:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes storage ref)"}},"id":3585,"indexExpression":{"arguments":[{"arguments":[{"id":3581,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3569,"src":"21752:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3582,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3571,"src":"21761:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3579,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21739:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3578,"name":"bytes","nodeType":"ElementaryTypeName","src":"21739:5:21","typeDescriptions":{}}},"id":3580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"concat","nodeType":"MemberAccess","src":"21739:12:21","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21739:30:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3577,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"21729:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21729:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21722:49:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"functionReturnParameters":3575,"id":3586,"nodeType":"Return","src":"21715:56:21"}]},"documentation":{"id":3567,"nodeType":"StructuredDocumentation","src":"21169:391:21","text":" @dev Retrieves data for a specific `tokenId` and `dataKey` from the ERC725Y storage\n The ERC725Y data key is the hash of the `tokenId` and `dataKey` concatenated\n @param tokenId The unique identifier for a token.\n @param dataKey The key for the data to retrieve.\n @return dataValues The data value associated with the given `tokenId` and `dataKey`."},"id":3588,"implemented":true,"kind":"function","modifiers":[],"name":"_getDataForTokenId","nameLocation":"21574:18:21","nodeType":"FunctionDefinition","parameters":{"id":3572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3569,"mutability":"mutable","name":"tokenId","nameLocation":"21610:7:21","nodeType":"VariableDeclaration","scope":3588,"src":"21602:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3568,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21602:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3571,"mutability":"mutable","name":"dataKey","nameLocation":"21635:7:21","nodeType":"VariableDeclaration","scope":3588,"src":"21627:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3570,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21627:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21592:56:21"},"returnParameters":{"id":3575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3574,"mutability":"mutable","name":"dataValues","nameLocation":"21693:10:21","nodeType":"VariableDeclaration","scope":3588,"src":"21680:23:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3573,"name":"bytes","nodeType":"ElementaryTypeName","src":"21680:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"21679:25:21"},"scope":3695,"src":"21565:213:21","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3600,"nodeType":"Block","src":"22388:2:21","statements":[]},"documentation":{"id":3589,"nodeType":"StructuredDocumentation","src":"21784:407:21","text":" @dev Hook that is called before any token transfer, including minting and burning.\n Allows to run custom logic before updating balances and notifiying sender/recipient by overriding this function.\n @param from The sender address\n @param to The recipient address\n @param tokenId The tokenId to transfer\n @param data The data sent alongside the transfer"},"id":3601,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"22205:20:21","nodeType":"FunctionDefinition","parameters":{"id":3598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3591,"mutability":"mutable","name":"from","nameLocation":"22243:4:21","nodeType":"VariableDeclaration","scope":3601,"src":"22235:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3590,"name":"address","nodeType":"ElementaryTypeName","src":"22235:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3593,"mutability":"mutable","name":"to","nameLocation":"22265:2:21","nodeType":"VariableDeclaration","scope":3601,"src":"22257:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3592,"name":"address","nodeType":"ElementaryTypeName","src":"22257:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3595,"mutability":"mutable","name":"tokenId","nameLocation":"22285:7:21","nodeType":"VariableDeclaration","scope":3601,"src":"22277:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3594,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22277:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3597,"mutability":"mutable","name":"data","nameLocation":"22315:4:21","nodeType":"VariableDeclaration","scope":3601,"src":"22302:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3596,"name":"bytes","nodeType":"ElementaryTypeName","src":"22302:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"22225:145:21"},"returnParameters":{"id":3599,"nodeType":"ParameterList","parameters":[],"src":"22388:0:21"},"scope":3695,"src":"22196:194:21","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3613,"nodeType":"Block","src":"23018:2:21","statements":[]},"documentation":{"id":3602,"nodeType":"StructuredDocumentation","src":"22396:426:21","text":" @dev Hook that is called after any token transfer, including minting and burning.\n Allows to run custom logic after updating balances, but **before notifiying sender/recipient via LSP1** by overriding this function.\n @param from The sender address\n @param to The recipient address\n @param tokenId The tokenId to transfer\n @param data The data sent alongside the transfer"},"id":3614,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"22836:19:21","nodeType":"FunctionDefinition","parameters":{"id":3611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3604,"mutability":"mutable","name":"from","nameLocation":"22873:4:21","nodeType":"VariableDeclaration","scope":3614,"src":"22865:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3603,"name":"address","nodeType":"ElementaryTypeName","src":"22865:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3606,"mutability":"mutable","name":"to","nameLocation":"22895:2:21","nodeType":"VariableDeclaration","scope":3614,"src":"22887:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3605,"name":"address","nodeType":"ElementaryTypeName","src":"22887:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3608,"mutability":"mutable","name":"tokenId","nameLocation":"22915:7:21","nodeType":"VariableDeclaration","scope":3614,"src":"22907:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3607,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22907:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3610,"mutability":"mutable","name":"data","nameLocation":"22945:4:21","nodeType":"VariableDeclaration","scope":3614,"src":"22932:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3609,"name":"bytes","nodeType":"ElementaryTypeName","src":"22932:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"22855:145:21"},"returnParameters":{"id":3612,"nodeType":"ParameterList","parameters":[],"src":"23018:0:21"},"scope":3695,"src":"22827:193:21","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3630,"nodeType":"Block","src":"23927:144:21","statements":[{"expression":{"arguments":[{"id":3625,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3617,"src":"23984:8:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3626,"name":"_TYPEID_LSP8_TOKENOPERATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1974,"src":"24006:26:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3627,"name":"lsp1Data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3619,"src":"24046:8:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3622,"name":"LSP1Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"23937:9:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP1Utils_$793_$","typeString":"type(library LSP1Utils)"}},"id":3624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"notifyUniversalReceiver","nodeType":"MemberAccess","referencedDeclaration":749,"src":"23937:33:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes32,bytes memory)"}},"id":3628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23937:127:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3629,"nodeType":"ExpressionStatement","src":"23937:127:21"}]},"documentation":{"id":3615,"nodeType":"StructuredDocumentation","src":"23026:786:21","text":" @dev Attempt to notify the operator `operator` about the `tokenId` being authorized.\n This is done by calling its {universalReceiver} function with the `_TYPEID_LSP8_TOKENOPERATOR` as typeId, if `operator` is a contract that supports the LSP1 interface.\n If `operator` is an EOA or a contract that does not support the LSP1 interface, nothing will happen and no notification will be sent.\n @param operator The address to call the {universalReceiver} function on.                                                                                                                                                                                   \n @param lsp1Data the data to be sent to the `operator` address in the `universalReceiver` call."},"id":3631,"implemented":true,"kind":"function","modifiers":[],"name":"_notifyTokenOperator","nameLocation":"23826:20:21","nodeType":"FunctionDefinition","parameters":{"id":3620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3617,"mutability":"mutable","name":"operator","nameLocation":"23864:8:21","nodeType":"VariableDeclaration","scope":3631,"src":"23856:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3616,"name":"address","nodeType":"ElementaryTypeName","src":"23856:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3619,"mutability":"mutable","name":"lsp1Data","nameLocation":"23895:8:21","nodeType":"VariableDeclaration","scope":3631,"src":"23882:21:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3618,"name":"bytes","nodeType":"ElementaryTypeName","src":"23882:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"23846:63:21"},"returnParameters":{"id":3621,"nodeType":"ParameterList","parameters":[],"src":"23927:0:21"},"scope":3695,"src":"23817:254:21","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3647,"nodeType":"Block","src":"24956:139:21","statements":[{"expression":{"arguments":[{"id":3642,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"25013:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3643,"name":"_TYPEID_LSP8_TOKENSSENDER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"25031:25:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3644,"name":"lsp1Data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3636,"src":"25070:8:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3639,"name":"LSP1Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"24966:9:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP1Utils_$793_$","typeString":"type(library LSP1Utils)"}},"id":3641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"notifyUniversalReceiver","nodeType":"MemberAccess","referencedDeclaration":749,"src":"24966:33:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes32,bytes memory)"}},"id":3645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24966:122:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3646,"nodeType":"ExpressionStatement","src":"24966:122:21"}]},"documentation":{"id":3632,"nodeType":"StructuredDocumentation","src":"24077:770:21","text":" @dev Attempt to notify the token sender `from` about the `tokenId` being transferred.\n This is done by calling its {universalReceiver} function with the `_TYPEID_LSP8_TOKENSSENDER` as typeId, if `from` is a contract that supports the LSP1 interface.\n If `from` is an EOA or a contract that does not support the LSP1 interface, nothing will happen and no notification will be sent.\n @param from The address to call the {universalReceiver} function on.                                                                                                                                                                                   \n @param lsp1Data the data to be sent to the `from` address in the `universalReceiver` call."},"id":3648,"implemented":true,"kind":"function","modifiers":[],"name":"_notifyTokenSender","nameLocation":"24861:18:21","nodeType":"FunctionDefinition","parameters":{"id":3637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3634,"mutability":"mutable","name":"from","nameLocation":"24897:4:21","nodeType":"VariableDeclaration","scope":3648,"src":"24889:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3633,"name":"address","nodeType":"ElementaryTypeName","src":"24889:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3636,"mutability":"mutable","name":"lsp1Data","nameLocation":"24924:8:21","nodeType":"VariableDeclaration","scope":3648,"src":"24911:21:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3635,"name":"bytes","nodeType":"ElementaryTypeName","src":"24911:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"24879:59:21"},"returnParameters":{"id":3638,"nodeType":"ParameterList","parameters":[],"src":"24956:0:21"},"scope":3695,"src":"24852:243:21","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3693,"nodeType":"Block","src":"26109:491:21","statements":[{"condition":{"arguments":[{"id":3660,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3651,"src":"26200:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3661,"name":"_INTERFACEID_LSP1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"26220:17:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":3658,"name":"ERC165Checker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3990,"src":"26136:13:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC165Checker_$3990_$","typeString":"type(library ERC165Checker)"}},"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsERC165InterfaceUnchecked","nodeType":"MemberAccess","referencedDeclaration":3989,"src":"26136:46:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":3662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26136:115:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":3673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"26364:6:21","subExpression":{"id":3672,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3653,"src":"26365:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3691,"nodeType":"IfStatement","src":"26360:234:21","trueBody":{"id":3690,"nodeType":"Block","src":"26372:222:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3674,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3651,"src":"26390:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"26390:7:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"26390:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26408:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"26390:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3688,"nodeType":"Block","src":"26512:72:21","statements":[{"errorCall":{"arguments":[{"id":3685,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3651,"src":"26566:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3684,"name":"LSP8NotifyTokenReceiverIsEOA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"26537:28:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":3686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26537:32:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3687,"nodeType":"RevertStatement","src":"26530:39:21"}]},"id":3689,"nodeType":"IfStatement","src":"26386:198:21","trueBody":{"id":3683,"nodeType":"Block","src":"26411:95:21","statements":[{"errorCall":{"arguments":[{"id":3680,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3651,"src":"26488:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3679,"name":"LSP8NotifyTokenReceiverContractMissingLSP1Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"26436:51:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":3681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26436:55:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3682,"nodeType":"RevertStatement","src":"26429:62:21"}]}}]}},"id":3692,"nodeType":"IfStatement","src":"26119:475:21","trueBody":{"id":3671,"nodeType":"Block","src":"26262:92:21","statements":[{"expression":{"arguments":[{"id":3667,"name":"_TYPEID_LSP8_TOKENSRECIPIENT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"26304:28:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3668,"name":"lsp1Data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"26334:8:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":3664,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3651,"src":"26282:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3663,"name":"ILSP1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"26276:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILSP1UniversalReceiver_$694_$","typeString":"type(contract ILSP1UniversalReceiver)"}},"id":3665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26276:9:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILSP1UniversalReceiver_$694","typeString":"contract ILSP1UniversalReceiver"}},"id":3666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"universalReceiver","nodeType":"MemberAccess","referencedDeclaration":693,"src":"26276:27:21","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32,bytes memory) payable external returns (bytes memory)"}},"id":3669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26276:67:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3670,"nodeType":"ExpressionStatement","src":"26276:67:21"}]}}]},"documentation":{"id":3649,"nodeType":"StructuredDocumentation","src":"25101:879:21","text":" @dev Attempt to notify the token receiver `to` about the `tokenId` being received.\n This is done by calling its {universalReceiver} function with the `_TYPEID_LSP8_TOKENSRECIPIENT` as typeId, if `to` is a contract that supports the LSP1 interface.\n If `to` is is an EOA or a contract that does not support the LSP1 interface, the behaviour will depend on the `force` boolean flag.\n - if `force` is set to `true`, nothing will happen and no notification will be sent.\n - if `force` is set to `false, the transaction will revert.\n @param to The address to call the {universalReceiver} function on.\n @param force A boolean that describe if transfer to a `to` address that does not support LSP1 is allowed or not.\n @param lsp1Data The data to be sent to the `to` address in the `universalReceiver(...)` call."},"id":3694,"implemented":true,"kind":"function","modifiers":[],"name":"_notifyTokenReceiver","nameLocation":"25994:20:21","nodeType":"FunctionDefinition","parameters":{"id":3656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3651,"mutability":"mutable","name":"to","nameLocation":"26032:2:21","nodeType":"VariableDeclaration","scope":3694,"src":"26024:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3650,"name":"address","nodeType":"ElementaryTypeName","src":"26024:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3653,"mutability":"mutable","name":"force","nameLocation":"26049:5:21","nodeType":"VariableDeclaration","scope":3694,"src":"26044:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3652,"name":"bool","nodeType":"ElementaryTypeName","src":"26044:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3655,"mutability":"mutable","name":"lsp1Data","nameLocation":"26077:8:21","nodeType":"VariableDeclaration","scope":3694,"src":"26064:21:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3654,"name":"bytes","nodeType":"ElementaryTypeName","src":"26064:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"26014:77:21"},"returnParameters":{"id":3657,"nodeType":"ParameterList","parameters":[],"src":"26109:0:21"},"scope":3695,"src":"25985:615:21","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":3696,"src":"1608:24994:21","usedErrors":[407,412,448,451,454,1724,1727,1730,2011,2020,2027,2034,2037,2040,2043,2050,2058,2063,2068,2071,2080,2083,2088]}],"src":"39:26564:21"},"id":21},"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/presets/ILSP8Mintable.sol":{"ast":{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/presets/ILSP8Mintable.sol","exportedSymbols":{"ILSP8IdentifiableDigitalAsset":[1951],"ILSP8Mintable":[3715]},"id":3716,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":3697,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:22"},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/ILSP8IdentifiableDigitalAsset.sol","file":"../ILSP8IdentifiableDigitalAsset.sol","id":3699,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3716,"sourceUnit":1952,"src":"78:89:22","symbolAliases":[{"foreign":{"id":3698,"name":"ILSP8IdentifiableDigitalAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"91:29:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILSP8IdentifiableDigitalAsset_$1951_$","typeString":"type(contract ILSP8IdentifiableDigitalAsset)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3701,"name":"ILSP8IdentifiableDigitalAsset","nodeType":"IdentifierPath","referencedDeclaration":1951,"src":"238:29:22"},"id":3702,"nodeType":"InheritanceSpecifier","src":"238:29:22"}],"canonicalName":"ILSP8Mintable","contractDependencies":[],"contractKind":"interface","documentation":{"id":3700,"nodeType":"StructuredDocumentation","src":"169:41:22","text":" @dev LSP8 extension, mintable."},"fullyImplemented":false,"id":3715,"linearizedBaseContracts":[3715,1951,505,4002],"name":"ILSP8Mintable","nameLocation":"221:13:22","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3703,"nodeType":"StructuredDocumentation","src":"274:557:22","text":" @param to The address to mint tokens\n @param tokenId The tokenId to mint\n @param force When set to TRUE, to may be any address but\n when set to FALSE to must be a contract that supports LSP1 UniversalReceiver\n @param data Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.\n @dev Mints `amount` tokens and transfers it to `to`.\n Requirements:\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"functionSelector":"af255b61","id":3714,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"845:4:22","nodeType":"FunctionDefinition","parameters":{"id":3712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3705,"mutability":"mutable","name":"to","nameLocation":"867:2:22","nodeType":"VariableDeclaration","scope":3714,"src":"859:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3704,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3707,"mutability":"mutable","name":"tokenId","nameLocation":"887:7:22","nodeType":"VariableDeclaration","scope":3714,"src":"879:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3706,"name":"bytes32","nodeType":"ElementaryTypeName","src":"879:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3709,"mutability":"mutable","name":"force","nameLocation":"909:5:22","nodeType":"VariableDeclaration","scope":3714,"src":"904:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3708,"name":"bool","nodeType":"ElementaryTypeName","src":"904:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3711,"mutability":"mutable","name":"data","nameLocation":"937:4:22","nodeType":"VariableDeclaration","scope":3714,"src":"924:17:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3710,"name":"bytes","nodeType":"ElementaryTypeName","src":"924:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"849:98:22"},"returnParameters":{"id":3713,"nodeType":"ParameterList","parameters":[],"src":"956:0:22"},"scope":3715,"src":"836:121:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3716,"src":"211:748:22","usedErrors":[]}],"src":"39:921:22"},"id":22},"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/presets/LSP8Mintable.sol":{"ast":{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/presets/LSP8Mintable.sol","exportedSymbols":{"ILSP8Mintable":[3715],"LSP8IdentifiableDigitalAsset":[2357],"LSP8Mintable":[3772]},"id":3773,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":3717,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"39:24:23"},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/presets/ILSP8Mintable.sol","file":"./ILSP8Mintable.sol","id":3719,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3773,"sourceUnit":3716,"src":"79:50:23","symbolAliases":[{"foreign":{"id":3718,"name":"ILSP8Mintable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"87:13:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILSP8Mintable_$3715_$","typeString":"type(contract ILSP8Mintable)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAsset.sol","file":"../LSP8IdentifiableDigitalAsset.sol","id":3721,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3773,"sourceUnit":2358,"src":"142:87:23","symbolAliases":[{"foreign":{"id":3720,"name":"LSP8IdentifiableDigitalAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"155:28:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP8IdentifiableDigitalAsset_$2357_$","typeString":"type(contract LSP8IdentifiableDigitalAsset)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3723,"name":"LSP8IdentifiableDigitalAsset","nodeType":"IdentifierPath","referencedDeclaration":2357,"src":"399:28:23"},"id":3724,"nodeType":"InheritanceSpecifier","src":"399:28:23"},{"baseName":{"id":3725,"name":"ILSP8Mintable","nodeType":"IdentifierPath","referencedDeclaration":3715,"src":"429:13:23"},"id":3726,"nodeType":"InheritanceSpecifier","src":"429:13:23"}],"canonicalName":"LSP8Mintable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3722,"nodeType":"StructuredDocumentation","src":"231:142:23","text":" @title LSP8IdentifiableDigitalAsset deployable preset contract with a public {mint} function callable only by the contract {owner}."},"fullyImplemented":true,"id":3772,"linearizedBaseContracts":[3772,3715,2357,667,3695,1951,1657,1719,35,270,505,3796,4002,402],"name":"LSP8Mintable","nameLocation":"383:12:23","nodeType":"ContractDefinition","nodes":[{"body":{"id":3747,"nodeType":"Block","src":"1364:2:23","statements":[]},"documentation":{"id":3727,"nodeType":"StructuredDocumentation","src":"449:563:23","text":" @notice Deploying a `LSP8Mintable` token contract with: token name = `name_`, token symbol = `symbol_`, and\n address `newOwner_` as the token contract owner.\n @param name_ The name of the token.\n @param symbol_ The symbol of the token.\n @param newOwner_ The owner of the token contract.\n @param lsp4TokenType_ The type of token this digital asset contract represents (`0` = Token, `1` = NFT, `2` = Collection).\n @param lsp8TokenIdFormat_ The format of tokenIds (= NFTs) that this contract will create."},"id":3748,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":3740,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3729,"src":"1240:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3741,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3731,"src":"1259:7:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3742,"name":"newOwner_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3733,"src":"1280:9:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3743,"name":"lsp4TokenType_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"1303:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3744,"name":"lsp8TokenIdFormat_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3737,"src":"1331:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3745,"kind":"baseConstructorSpecifier","modifierName":{"id":3739,"name":"LSP8IdentifiableDigitalAsset","nodeType":"IdentifierPath","referencedDeclaration":2357,"src":"1198:28:23"},"nodeType":"ModifierInvocation","src":"1198:161:23"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3729,"mutability":"mutable","name":"name_","nameLocation":"1052:5:23","nodeType":"VariableDeclaration","scope":3748,"src":"1038:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3728,"name":"string","nodeType":"ElementaryTypeName","src":"1038:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3731,"mutability":"mutable","name":"symbol_","nameLocation":"1081:7:23","nodeType":"VariableDeclaration","scope":3748,"src":"1067:21:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3730,"name":"string","nodeType":"ElementaryTypeName","src":"1067:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3733,"mutability":"mutable","name":"newOwner_","nameLocation":"1106:9:23","nodeType":"VariableDeclaration","scope":3748,"src":"1098:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3732,"name":"address","nodeType":"ElementaryTypeName","src":"1098:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3735,"mutability":"mutable","name":"lsp4TokenType_","nameLocation":"1133:14:23","nodeType":"VariableDeclaration","scope":3748,"src":"1125:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3734,"name":"uint256","nodeType":"ElementaryTypeName","src":"1125:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3737,"mutability":"mutable","name":"lsp8TokenIdFormat_","nameLocation":"1165:18:23","nodeType":"VariableDeclaration","scope":3748,"src":"1157:26:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3736,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1028:161:23"},"returnParameters":{"id":3746,"nodeType":"ParameterList","parameters":[],"src":"1364:0:23"},"scope":3772,"src":"1017:349:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[3714],"body":{"id":3770,"nodeType":"Block","src":"2086:48:23","statements":[{"expression":{"arguments":[{"id":3764,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"2102:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3765,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3753,"src":"2106:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3766,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3755,"src":"2115:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3767,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3757,"src":"2122:4:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3763,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3313,"src":"2096:5:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes32,bool,bytes memory)"}},"id":3768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2096:31:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3769,"nodeType":"ExpressionStatement","src":"2096:31:23"}]},"documentation":{"id":3749,"nodeType":"StructuredDocumentation","src":"1372:563:23","text":" @notice Minting tokenId `tokenId` for address `to` with the additional data `data` (Note: allow non-LSP1 recipient is set to `force`).\n @dev Public {_mint} function only callable by the {owner}.\n @param to The address that will receive the minted `tokenId`.\n @param tokenId The tokenId to mint.\n @param force Set to `false` to ensure that you are minting for a recipient that implements LSP1, `false` otherwise for forcing the minting.\n @param data Any addition data to be sent alongside the minting."},"functionSelector":"af255b61","id":3771,"implemented":true,"kind":"function","modifiers":[{"id":3761,"kind":"modifierInvocation","modifierName":{"id":3760,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":324,"src":"2076:9:23"},"nodeType":"ModifierInvocation","src":"2076:9:23"}],"name":"mint","nameLocation":"1949:4:23","nodeType":"FunctionDefinition","overrides":{"id":3759,"nodeType":"OverrideSpecifier","overrides":[],"src":"2067:8:23"},"parameters":{"id":3758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3751,"mutability":"mutable","name":"to","nameLocation":"1971:2:23","nodeType":"VariableDeclaration","scope":3771,"src":"1963:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3750,"name":"address","nodeType":"ElementaryTypeName","src":"1963:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3753,"mutability":"mutable","name":"tokenId","nameLocation":"1991:7:23","nodeType":"VariableDeclaration","scope":3771,"src":"1983:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3752,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1983:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3755,"mutability":"mutable","name":"force","nameLocation":"2013:5:23","nodeType":"VariableDeclaration","scope":3771,"src":"2008:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3754,"name":"bool","nodeType":"ElementaryTypeName","src":"2008:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3757,"mutability":"mutable","name":"data","nameLocation":"2041:4:23","nodeType":"VariableDeclaration","scope":3771,"src":"2028:17:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3756,"name":"bytes","nodeType":"ElementaryTypeName","src":"2028:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1953:98:23"},"returnParameters":{"id":3762,"nodeType":"ParameterList","parameters":[],"src":"2086:0:23"},"scope":3772,"src":"1940:194:23","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":3773,"src":"374:1762:23","usedErrors":[407,412,448,451,454,523,528,533,1724,1727,1730,2011,2020,2027,2034,2037,2040,2043,2050,2055,2058,2063,2068,2071,2074,2077,2080,2083,2088]}],"src":"39:2098:23"},"id":23},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[3796],"IERC165":[4002]},"id":3797,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3774,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:24"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":3775,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3797,"sourceUnit":4003,"src":"124:23:24","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3777,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":4002,"src":"754:7:24"},"id":3778,"nodeType":"InheritanceSpecifier","src":"754:7:24"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":3776,"nodeType":"StructuredDocumentation","src":"149:576:24","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":3796,"linearizedBaseContracts":[3796,4002],"name":"ERC165","nameLocation":"744:6:24","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[4001],"body":{"id":3794,"nodeType":"Block","src":"920:64:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3787,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3781,"src":"937:11:24","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3789,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"957:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$4002_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$4002_$","typeString":"type(contract IERC165)"}],"id":3788,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"952:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$4002","typeString":"type(contract IERC165)"}},"id":3791,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:24","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3786,"id":3793,"nodeType":"Return","src":"930:47:24"}]},"documentation":{"id":3779,"nodeType":"StructuredDocumentation","src":"768:56:24","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":3795,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:24","nodeType":"FunctionDefinition","overrides":{"id":3783,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:24"},"parameters":{"id":3782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3781,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:24","nodeType":"VariableDeclaration","scope":3795,"src":"856:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3780,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:24","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:24"},"returnParameters":{"id":3786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3795,"src":"914:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3784,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:24"},"scope":3796,"src":"829:155:24","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":3797,"src":"726:260:24","usedErrors":[]}],"src":"99:888:24"},"id":24},"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol","exportedSymbols":{"ERC165Checker":[3990],"IERC165":[4002]},"id":3991,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3798,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"121:23:25"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":3799,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3991,"sourceUnit":4003,"src":"146:23:25","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC165Checker","contractDependencies":[],"contractKind":"library","documentation":{"id":3800,"nodeType":"StructuredDocumentation","src":"171:277:25","text":" @dev Library used to query support of an interface declared via {IERC165}.\n Note that these functions return the actual result of the query: they do not\n `revert` if an interface is not supported. It is up to the caller to decide\n what to do in these cases."},"fullyImplemented":true,"id":3990,"linearizedBaseContracts":[3990],"name":"ERC165Checker","nameLocation":"457:13:25","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3803,"mutability":"constant","name":"_INTERFACE_ID_INVALID","nameLocation":"575:21:25","nodeType":"VariableDeclaration","scope":3990,"src":"551:58:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3801,"name":"bytes4","nodeType":"ElementaryTypeName","src":"551:6:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30786666666666666666","id":3802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"599:10:25","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"visibility":"private"},{"body":{"id":3825,"nodeType":"Block","src":"774:357:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3812,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3806,"src":"1008:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"arguments":[{"id":3814,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"1022:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$4002_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$4002_$","typeString":"type(contract IERC165)"}],"id":3813,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1017:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1017:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$4002","typeString":"type(contract IERC165)"}},"id":3816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1017:25:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":3811,"name":"supportsERC165InterfaceUnchecked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"975:32:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":3817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"975:68:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1059:65:25","subExpression":{"arguments":[{"id":3819,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3806,"src":"1093:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3820,"name":"_INTERFACE_ID_INVALID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3803,"src":"1102:21:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":3818,"name":"supportsERC165InterfaceUnchecked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"1060:32:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1060:64:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"975:149:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3810,"id":3824,"nodeType":"Return","src":"956:168:25"}]},"documentation":{"id":3804,"nodeType":"StructuredDocumentation","src":"616:83:25","text":" @dev Returns true if `account` supports the {IERC165} interface."},"id":3826,"implemented":true,"kind":"function","modifiers":[],"name":"supportsERC165","nameLocation":"713:14:25","nodeType":"FunctionDefinition","parameters":{"id":3807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3806,"mutability":"mutable","name":"account","nameLocation":"736:7:25","nodeType":"VariableDeclaration","scope":3826,"src":"728:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3805,"name":"address","nodeType":"ElementaryTypeName","src":"728:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"727:17:25"},"returnParameters":{"id":3810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3809,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3826,"src":"768:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3808,"name":"bool","nodeType":"ElementaryTypeName","src":"768:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"767:6:25"},"scope":3990,"src":"704:427:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3845,"nodeType":"Block","src":"1442:189:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3837,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3829,"src":"1558:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3836,"name":"supportsERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3826,"src":"1543:14:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":3838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1543:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"id":3840,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3829,"src":"1603:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3841,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"1612:11:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":3839,"name":"supportsERC165InterfaceUnchecked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"1570:32:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":3842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1570:54:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1543:81:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3835,"id":3844,"nodeType":"Return","src":"1536:88:25"}]},"documentation":{"id":3827,"nodeType":"StructuredDocumentation","src":"1137:207:25","text":" @dev Returns true if `account` supports the interface defined by\n `interfaceId`. Support for {IERC165} itself is queried automatically.\n See {IERC165-supportsInterface}."},"id":3846,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1358:17:25","nodeType":"FunctionDefinition","parameters":{"id":3832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3829,"mutability":"mutable","name":"account","nameLocation":"1384:7:25","nodeType":"VariableDeclaration","scope":3846,"src":"1376:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3828,"name":"address","nodeType":"ElementaryTypeName","src":"1376:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3831,"mutability":"mutable","name":"interfaceId","nameLocation":"1400:11:25","nodeType":"VariableDeclaration","scope":3846,"src":"1393:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3830,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1393:6:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1375:37:25"},"returnParameters":{"id":3835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3834,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3846,"src":"1436:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3833,"name":"bool","nodeType":"ElementaryTypeName","src":"1436:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1435:6:25"},"scope":3990,"src":"1349:282:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3901,"nodeType":"Block","src":"2155:560:25","statements":[{"assignments":[3862],"declarations":[{"constant":false,"id":3862,"mutability":"mutable","name":"interfaceIdsSupported","nameLocation":"2278:21:25","nodeType":"VariableDeclaration","scope":3901,"src":"2264:35:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":3860,"name":"bool","nodeType":"ElementaryTypeName","src":"2264:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3861,"nodeType":"ArrayTypeName","src":"2264:6:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"id":3869,"initialValue":{"arguments":[{"expression":{"id":3866,"name":"interfaceIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3852,"src":"2313:12:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":3867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2313:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2302:10:25","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bool[] memory)"},"typeName":{"baseType":{"id":3863,"name":"bool","nodeType":"ElementaryTypeName","src":"2306:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3864,"nodeType":"ArrayTypeName","src":"2306:6:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}}},"id":3868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2302:31:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2264:69:25"},{"condition":{"arguments":[{"id":3871,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"2405:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3870,"name":"supportsERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3826,"src":"2390:14:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":3872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2390:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3898,"nodeType":"IfStatement","src":"2386:284:25","trueBody":{"id":3897,"nodeType":"Block","src":"2415:255:25","statements":[{"body":{"id":3895,"nodeType":"Block","src":"2542:118:25","statements":[{"expression":{"id":3893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3884,"name":"interfaceIdsSupported","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3862,"src":"2560:21:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":3886,"indexExpression":{"id":3885,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"2582:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2560:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3888,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"2620:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":3889,"name":"interfaceIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3852,"src":"2629:12:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":3891,"indexExpression":{"id":3890,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"2642:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2629:15:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":3887,"name":"supportsERC165InterfaceUnchecked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"2587:32:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2587:58:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2560:85:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3894,"nodeType":"ExpressionStatement","src":"2560:85:25"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3877,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"2512:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3878,"name":"interfaceIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3852,"src":"2516:12:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":3879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2516:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2512:23:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3896,"initializationExpression":{"assignments":[3874],"declarations":[{"constant":false,"id":3874,"mutability":"mutable","name":"i","nameLocation":"2505:1:25","nodeType":"VariableDeclaration","scope":3896,"src":"2497:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3873,"name":"uint256","nodeType":"ElementaryTypeName","src":"2497:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3876,"initialValue":{"hexValue":"30","id":3875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2509:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2497:13:25"},"loopExpression":{"expression":{"id":3882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2537:3:25","subExpression":{"id":3881,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"2537:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3883,"nodeType":"ExpressionStatement","src":"2537:3:25"},"nodeType":"ForStatement","src":"2492:168:25"}]}},{"expression":{"id":3899,"name":"interfaceIdsSupported","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3862,"src":"2687:21:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"functionReturnParameters":3857,"id":3900,"nodeType":"Return","src":"2680:28:25"}]},"documentation":{"id":3847,"nodeType":"StructuredDocumentation","src":"1637:374:25","text":" @dev Returns a boolean array where each value corresponds to the\n interfaces passed in and whether they're supported or not. This allows\n you to batch check interfaces for a contract where your expectation\n is that some interfaces may not be supported.\n See {IERC165-supportsInterface}.\n _Available since v3.4._"},"id":3902,"implemented":true,"kind":"function","modifiers":[],"name":"getSupportedInterfaces","nameLocation":"2025:22:25","nodeType":"FunctionDefinition","parameters":{"id":3853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3849,"mutability":"mutable","name":"account","nameLocation":"2065:7:25","nodeType":"VariableDeclaration","scope":3902,"src":"2057:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3848,"name":"address","nodeType":"ElementaryTypeName","src":"2057:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3852,"mutability":"mutable","name":"interfaceIds","nameLocation":"2098:12:25","nodeType":"VariableDeclaration","scope":3902,"src":"2082:28:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[]"},"typeName":{"baseType":{"id":3850,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2082:6:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":3851,"nodeType":"ArrayTypeName","src":"2082:8:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage_ptr","typeString":"bytes4[]"}},"visibility":"internal"}],"src":"2047:69:25"},"returnParameters":{"id":3857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3856,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3902,"src":"2140:13:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":3854,"name":"bool","nodeType":"ElementaryTypeName","src":"2140:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3855,"nodeType":"ArrayTypeName","src":"2140:6:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"2139:15:25"},"scope":3990,"src":"2016:699:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3947,"nodeType":"Block","src":"3157:436:25","statements":[{"condition":{"id":3916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3213:24:25","subExpression":{"arguments":[{"id":3914,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"3229:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3913,"name":"supportsERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3826,"src":"3214:14:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":3915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3214:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3920,"nodeType":"IfStatement","src":"3209:67:25","trueBody":{"id":3919,"nodeType":"Block","src":"3239:37:25","statements":[{"expression":{"hexValue":"66616c7365","id":3917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3260:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3912,"id":3918,"nodeType":"Return","src":"3253:12:25"}]}},{"body":{"id":3943,"nodeType":"Block","src":"3395:134:25","statements":[{"condition":{"id":3938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3413:59:25","subExpression":{"arguments":[{"id":3933,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"3447:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":3934,"name":"interfaceIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3908,"src":"3456:12:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":3936,"indexExpression":{"id":3935,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"3469:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3456:15:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":3932,"name":"supportsERC165InterfaceUnchecked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"3414:32:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":3937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3414:58:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3942,"nodeType":"IfStatement","src":"3409:110:25","trueBody":{"id":3941,"nodeType":"Block","src":"3474:45:25","statements":[{"expression":{"hexValue":"66616c7365","id":3939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3499:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3912,"id":3940,"nodeType":"Return","src":"3492:12:25"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3925,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"3365:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3926,"name":"interfaceIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3908,"src":"3369:12:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":3927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3369:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3365:23:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3944,"initializationExpression":{"assignments":[3922],"declarations":[{"constant":false,"id":3922,"mutability":"mutable","name":"i","nameLocation":"3358:1:25","nodeType":"VariableDeclaration","scope":3944,"src":"3350:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3921,"name":"uint256","nodeType":"ElementaryTypeName","src":"3350:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3924,"initialValue":{"hexValue":"30","id":3923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3362:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3350:13:25"},"loopExpression":{"expression":{"id":3930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3390:3:25","subExpression":{"id":3929,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"3390:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3931,"nodeType":"ExpressionStatement","src":"3390:3:25"},"nodeType":"ForStatement","src":"3345:184:25"},{"expression":{"hexValue":"74727565","id":3945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3582:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3912,"id":3946,"nodeType":"Return","src":"3575:11:25"}]},"documentation":{"id":3903,"nodeType":"StructuredDocumentation","src":"2721:324:25","text":" @dev Returns true if `account` supports all the interfaces defined in\n `interfaceIds`. Support for {IERC165} itself is queried automatically.\n Batch-querying can lead to gas savings by skipping repeated checks for\n {IERC165} support.\n See {IERC165-supportsInterface}."},"id":3948,"implemented":true,"kind":"function","modifiers":[],"name":"supportsAllInterfaces","nameLocation":"3059:21:25","nodeType":"FunctionDefinition","parameters":{"id":3909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3905,"mutability":"mutable","name":"account","nameLocation":"3089:7:25","nodeType":"VariableDeclaration","scope":3948,"src":"3081:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3904,"name":"address","nodeType":"ElementaryTypeName","src":"3081:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3908,"mutability":"mutable","name":"interfaceIds","nameLocation":"3114:12:25","nodeType":"VariableDeclaration","scope":3948,"src":"3098:28:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[]"},"typeName":{"baseType":{"id":3906,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3098:6:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":3907,"nodeType":"ArrayTypeName","src":"3098:8:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage_ptr","typeString":"bytes4[]"}},"visibility":"internal"}],"src":"3080:47:25"},"returnParameters":{"id":3912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3911,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3948,"src":"3151:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3910,"name":"bool","nodeType":"ElementaryTypeName","src":"3151:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3150:6:25"},"scope":3990,"src":"3050:543:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3988,"nodeType":"Block","src":"4529:539:25","statements":[{"assignments":[3959],"declarations":[{"constant":false,"id":3959,"mutability":"mutable","name":"encodedParams","nameLocation":"4576:13:25","nodeType":"VariableDeclaration","scope":3988,"src":"4563:26:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3958,"name":"bytes","nodeType":"ElementaryTypeName","src":"4563:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3967,"initialValue":{"arguments":[{"expression":{"expression":{"id":3962,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"4615:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$4002_$","typeString":"type(contract IERC165)"}},"id":3963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":4001,"src":"4615:25:25","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$_t_bytes4_$returns$_t_bool_$","typeString":"function IERC165.supportsInterface(bytes4) view returns (bool)"}},"id":3964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"4615:34:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":3965,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3953,"src":"4651:11:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":3960,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4592:3:25","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"4592:22:25","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4592:71:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4563:100:25"},{"assignments":[3969],"declarations":[{"constant":false,"id":3969,"mutability":"mutable","name":"success","nameLocation":"4710:7:25","nodeType":"VariableDeclaration","scope":3988,"src":"4705:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3968,"name":"bool","nodeType":"ElementaryTypeName","src":"4705:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3970,"nodeType":"VariableDeclarationStatement","src":"4705:12:25"},{"assignments":[3972],"declarations":[{"constant":false,"id":3972,"mutability":"mutable","name":"returnSize","nameLocation":"4735:10:25","nodeType":"VariableDeclaration","scope":3988,"src":"4727:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3971,"name":"uint256","nodeType":"ElementaryTypeName","src":"4727:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3973,"nodeType":"VariableDeclarationStatement","src":"4727:18:25"},{"assignments":[3975],"declarations":[{"constant":false,"id":3975,"mutability":"mutable","name":"returnValue","nameLocation":"4763:11:25","nodeType":"VariableDeclaration","scope":3988,"src":"4755:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3974,"name":"uint256","nodeType":"ElementaryTypeName","src":"4755:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3976,"nodeType":"VariableDeclarationStatement","src":"4755:19:25"},{"AST":{"nodeType":"YulBlock","src":"4793:203:25","statements":[{"nodeType":"YulAssignment","src":"4807:97:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4829:5:25","type":"","value":"30000"},{"name":"account","nodeType":"YulIdentifier","src":"4836:7:25"},{"arguments":[{"name":"encodedParams","nodeType":"YulIdentifier","src":"4849:13:25"},{"kind":"number","nodeType":"YulLiteral","src":"4864:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4845:3:25"},"nodeType":"YulFunctionCall","src":"4845:24:25"},{"arguments":[{"name":"encodedParams","nodeType":"YulIdentifier","src":"4877:13:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4871:5:25"},"nodeType":"YulFunctionCall","src":"4871:20:25"},{"kind":"number","nodeType":"YulLiteral","src":"4893:4:25","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"4899:4:25","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"4818:10:25"},"nodeType":"YulFunctionCall","src":"4818:86:25"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"4807:7:25"}]},{"nodeType":"YulAssignment","src":"4917:30:25","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"4931:14:25"},"nodeType":"YulFunctionCall","src":"4931:16:25"},"variableNames":[{"name":"returnSize","nodeType":"YulIdentifier","src":"4917:10:25"}]},{"nodeType":"YulAssignment","src":"4960:26:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4981:4:25","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4975:5:25"},"nodeType":"YulFunctionCall","src":"4975:11:25"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"4960:11:25"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3951,"isOffset":false,"isSlot":false,"src":"4836:7:25","valueSize":1},{"declaration":3959,"isOffset":false,"isSlot":false,"src":"4849:13:25","valueSize":1},{"declaration":3959,"isOffset":false,"isSlot":false,"src":"4877:13:25","valueSize":1},{"declaration":3972,"isOffset":false,"isSlot":false,"src":"4917:10:25","valueSize":1},{"declaration":3975,"isOffset":false,"isSlot":false,"src":"4960:11:25","valueSize":1},{"declaration":3969,"isOffset":false,"isSlot":false,"src":"4807:7:25","valueSize":1}],"id":3977,"nodeType":"InlineAssembly","src":"4784:212:25"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3978,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"5013:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3979,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3972,"src":"5024:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30783230","id":3980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5038:4:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5024:18:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5013:29:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3983,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"5046:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5060:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5046:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5013:48:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3957,"id":3987,"nodeType":"Return","src":"5006:55:25"}]},"documentation":{"id":3949,"nodeType":"StructuredDocumentation","src":"3599:817:25","text":" @notice Query if a contract implements an interface, does not check ERC165 support\n @param account The address of the contract to query for support of an interface\n @param interfaceId The interface identifier, as specified in ERC-165\n @return true if the contract at account indicates support of the interface with\n identifier interfaceId, false otherwise\n @dev Assumes that account contains a contract that supports ERC165, otherwise\n the behavior of this method is undefined. This precondition can be checked\n with {supportsERC165}.\n Some precompiled contracts will falsely indicate support for a given interface, so caution\n should be exercised when using this function.\n Interface identification is specified in ERC-165."},"id":3989,"implemented":true,"kind":"function","modifiers":[],"name":"supportsERC165InterfaceUnchecked","nameLocation":"4430:32:25","nodeType":"FunctionDefinition","parameters":{"id":3954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3951,"mutability":"mutable","name":"account","nameLocation":"4471:7:25","nodeType":"VariableDeclaration","scope":3989,"src":"4463:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3950,"name":"address","nodeType":"ElementaryTypeName","src":"4463:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3953,"mutability":"mutable","name":"interfaceId","nameLocation":"4487:11:25","nodeType":"VariableDeclaration","scope":3989,"src":"4480:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3952,"name":"bytes4","nodeType":"ElementaryTypeName","src":"4480:6:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"4462:37:25"},"returnParameters":{"id":3957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3956,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3989,"src":"4523:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3955,"name":"bool","nodeType":"ElementaryTypeName","src":"4523:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4522:6:25"},"scope":3990,"src":"4421:647:25","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3991,"src":"449:4621:25","usedErrors":[]}],"src":"121:4950:25"},"id":25},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[4002]},"id":4003,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3992,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:26"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":3993,"nodeType":"StructuredDocumentation","src":"125:279:26","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":4002,"linearizedBaseContracts":[4002],"name":"IERC165","nameLocation":"415:7:26","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3994,"nodeType":"StructuredDocumentation","src":"429:340:26","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":4001,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:26","nodeType":"FunctionDefinition","parameters":{"id":3997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3996,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:26","nodeType":"VariableDeclaration","scope":4001,"src":"801:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3995,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:26","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:26"},"returnParameters":{"id":4000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3999,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4001,"src":"844:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3998,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:26"},"scope":4002,"src":"774:76:26","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4003,"src":"405:447:26","usedErrors":[]}],"src":"100:753:26"},"id":26},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","exportedSymbols":{"EnumerableSet":[4615]},"id":4616,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4004,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"205:23:27"},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSet","contractDependencies":[],"contractKind":"library","documentation":{"id":4005,"nodeType":"StructuredDocumentation","src":"230:1098:27","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":4615,"linearizedBaseContracts":[4615],"name":"EnumerableSet","nameLocation":"1337:13:27","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSet.Set","id":4013,"members":[{"constant":false,"id":4008,"mutability":"mutable","name":"_values","nameLocation":"1861:7:27","nodeType":"VariableDeclaration","scope":4013,"src":"1851:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4006,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1851:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4007,"nodeType":"ArrayTypeName","src":"1851:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4012,"mutability":"mutable","name":"_indexes","nameLocation":"2029:8:27","nodeType":"VariableDeclaration","scope":4013,"src":"2001:36:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":4011,"keyType":{"id":4009,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2009:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2001:27:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueType":{"id":4010,"name":"uint256","nodeType":"ElementaryTypeName","src":"2020:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1804:3:27","nodeType":"StructDefinition","scope":4615,"src":"1797:247:27","visibility":"public"},{"body":{"id":4054,"nodeType":"Block","src":"2283:335:27","statements":[{"condition":{"id":4028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2297:22:27","subExpression":{"arguments":[{"id":4025,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"2308:3:27","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4013_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},{"id":4026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"2313:5:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4013_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4024,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"2298:9:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$4013_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2298:21:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4052,"nodeType":"Block","src":"2575:37:27","statements":[{"expression":{"hexValue":"66616c7365","id":4050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2596:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4023,"id":4051,"nodeType":"Return","src":"2589:12:27"}]},"id":4053,"nodeType":"IfStatement","src":"2293:319:27","trueBody":{"id":4049,"nodeType":"Block","src":"2321:248:27","statements":[{"expression":{"arguments":[{"id":4034,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"2352:5:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":4029,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"2335:3:27","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4013_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4032,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":4008,"src":"2335:11:27","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":4033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"2335:16:27","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":4035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2335:23:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4036,"nodeType":"ExpressionStatement","src":"2335:23:27"},{"expression":{"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":4037,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"2493:3:27","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4013_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4040,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":4012,"src":"2493:12:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":4041,"indexExpression":{"id":4039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"2506:5:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2493:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":4042,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"2515:3:27","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4013_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4043,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":4008,"src":"2515:11:27","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":4044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2515:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2493:40:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4046,"nodeType":"ExpressionStatement","src":"2493:40:27"},{"expression":{"hexValue":"74727565","id":4047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2554:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4023,"id":4048,"nodeType":"Return","src":"2547:11:27"}]}}]},"documentation":{"id":4014,"nodeType":"StructuredDocumentation","src":"2050:159:27","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":4055,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2223:4:27","nodeType":"FunctionDefinition","parameters":{"id":4020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4017,"mutability":"mutable","name":"set","nameLocation":"2240:3:27","nodeType":"VariableDeclaration","scope":4055,"src":"2228:15:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4013_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":4016,"nodeType":"UserDefinedTypeName","pathNode":{"id":4015,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":4013,"src":"2228:3:27"},"referencedDeclaration":4013,"src":"2228:3:27","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4013_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":4019,"mutability":"mutable","name":"value","nameLocation":"2253:5:27","nodeType":"VariableDeclaration","scope":4055,"src":"2245:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4018,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2245:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2227:32:27"},"returnParameters":{"id":4023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4022,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4055,"src":"2277:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4021,"name":"bool","nodeType":"ElementaryTypeName","src":"2277:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2276:6:27"},"scope":4615,"src":"2214:404:27","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":4138,"nodeType":"Block","src":"2858:1316:27","statements":[{"assignments":[4067],"declarations":[{"constant":false,"id":4067,"mutability":"mutable","name":"valueIndex","nameLocation":"2976:10:27","nodeType":"VariableDeclaration","scope":4138,"src":"2968:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4066,"name":"uint256","nodeType":"ElementaryTypeName","src":"2968:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4072,"initialValue":{"baseExpression":{"expression":{"id":4068,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"2989:3:27","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4013_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4069,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":4012,"src":"2989:12:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":4071,"indexExpression":{"id":4070,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4061,"src":"3002:5:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2989:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2968:40:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4073,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"3023:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3037:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3023:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4136,"nodeType":"Block","src":"4131:37:27","statements":[{"expression":{"hexValue":"66616c7365","id":4134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4152:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4065,"id":4135,"nodeType":"Return","src":"4145:12:27"}]},"id":4137,"nodeType":"IfStatement","src":"3019:1149:27","trueBody":{"id":4133,"nodeType":"Block","src":"3040:1085:27","statements":[{"assignments":[4077],"declarations":[{"constant":false,"id":4077,"mutability":"mutable","name":"toDeleteIndex","nameLocation":"3400:13:27","nodeType":"VariableDeclaration","scope":4133,"src":"3392:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4076,"name":"uint256","nodeType":"ElementaryTypeName","src":"3392:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4081,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4078,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"3416:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3429:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3416:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3392:38:27"},{"assignments":[4083],"declarations":[{"constant":false,"id":4083,"mutability":"mutable","name":"lastIndex","nameLocation":"3452:9:27","nodeType":"VariableDeclaration","scope":4133,"src":"3444:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4082,"name":"uint256","nodeType":"ElementaryTypeName","src":"3444:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4089,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":4084,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"3464:3:27","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4013_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4085,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":4008,"src":"3464:11:27","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":4086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3464:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3485:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3464:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3444:42:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4090,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"3505:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4091,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4077,"src":"3518:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3505:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4117,"nodeType":"IfStatement","src":"3501:398:27","trueBody":{"id":4116,"nodeType":"Block","src":"3533:366:27","statements":[{"assignments":[4094],"declarations":[{"constant":false,"id":4094,"mutability":"mutable","name":"lastValue","nameLocation":"3559:9:27","nodeType":"VariableDeclaration","scope":4116,"src":"3551:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4093,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3551:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4099,"initialValue":{"baseExpression":{"expression":{"id":4095,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"3571:3:27","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4013_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4096,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":4008,"src":"3571:11:27","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":4098,"indexExpression":{"id":4097,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"3583:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3571:22:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3551:42:27"},{"expression":{"id":4106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":4100,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"3693:3:27","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4013_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4103,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":4008,"src":"3693:11:27","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":4104,"indexExpression":{"id":4102,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4077,"src":"3705:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3693:26:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4105,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4094,"src":"3722:9:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3693:38:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4107,"nodeType":"ExpressionStatement","src":"3693:38:27"},{"expression":{"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":4108,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"3805:3:27","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4013_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4111,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":4012,"src":"3805:12:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":4112,"indexExpression":{"id":4110,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4094,"src":"3818:9:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3805:23:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4113,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"3831:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3805:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4115,"nodeType":"ExpressionStatement","src":"3805:36:27"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":4118,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"3977:3:27","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4013_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4121,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":4008,"src":"3977:11:27","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":4122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"pop","nodeType":"MemberAccess","src":"3977:15:27","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":4123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3977:17:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4124,"nodeType":"ExpressionStatement","src":"3977:17:27"},{"expression":{"id":4129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4062:26:27","subExpression":{"baseExpression":{"expression":{"id":4125,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"4069:3:27","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4013_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4126,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":4012,"src":"4069:12:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":4128,"indexExpression":{"id":4127,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4061,"src":"4082:5:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4069:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4130,"nodeType":"ExpressionStatement","src":"4062:26:27"},{"expression":{"hexValue":"74727565","id":4131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4110:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4065,"id":4132,"nodeType":"Return","src":"4103:11:27"}]}}]},"documentation":{"id":4056,"nodeType":"StructuredDocumentation","src":"2624:157:27","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":4139,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2795:7:27","nodeType":"FunctionDefinition","parameters":{"id":4062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4059,"mutability":"mutable","name":"set","nameLocation":"2815:3:27","nodeType":"VariableDeclaration","scope":4139,"src":"2803:15:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4013_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":4058,"nodeType":"UserDefinedTypeName","pathNode":{"id":4057,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":4013,"src":"2803:3:27"},"referencedDeclaration":4013,"src":"2803:3:27","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4013_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":4061,"mutability":"mutable","name":"value","nameLocation":"2828:5:27","nodeType":"VariableDeclaration","scope":4139,"src":"2820:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4060,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2820:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2802:32:27"},"returnParameters":{"id":4065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4064,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4139,"src":"2852:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4063,"name":"bool","nodeType":"ElementaryTypeName","src":"2852:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2851:6:27"},"scope":4615,"src":"2786:1388:27","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":4157,"nodeType":"Block","src":"4334:48:27","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":4150,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4143,"src":"4351:3:27","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4013_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4151,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":4012,"src":"4351:12:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":4153,"indexExpression":{"id":4152,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"4364:5:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4351:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4374:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4351:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4149,"id":4156,"nodeType":"Return","src":"4344:31:27"}]},"documentation":{"id":4140,"nodeType":"StructuredDocumentation","src":"4180:70:27","text":" @dev Returns true if the value is in the set. O(1)."},"id":4158,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4264:9:27","nodeType":"FunctionDefinition","parameters":{"id":4146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4143,"mutability":"mutable","name":"set","nameLocation":"4286:3:27","nodeType":"VariableDeclaration","scope":4158,"src":"4274:15:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4013_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":4142,"nodeType":"UserDefinedTypeName","pathNode":{"id":4141,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":4013,"src":"4274:3:27"},"referencedDeclaration":4013,"src":"4274:3:27","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4013_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":4145,"mutability":"mutable","name":"value","nameLocation":"4299:5:27","nodeType":"VariableDeclaration","scope":4158,"src":"4291:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4144,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4291:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4273:32:27"},"returnParameters":{"id":4149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4148,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4158,"src":"4328:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4147,"name":"bool","nodeType":"ElementaryTypeName","src":"4328:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4327:6:27"},"scope":4615,"src":"4255:127:27","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4171,"nodeType":"Block","src":"4528:42:27","statements":[{"expression":{"expression":{"expression":{"id":4167,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4162,"src":"4545:3:27","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4013_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4168,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":4008,"src":"4545:11:27","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":4169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4545:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4166,"id":4170,"nodeType":"Return","src":"4538:25:27"}]},"documentation":{"id":4159,"nodeType":"StructuredDocumentation","src":"4388:70:27","text":" @dev Returns the number of values on the set. O(1)."},"id":4172,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"4472:7:27","nodeType":"FunctionDefinition","parameters":{"id":4163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4162,"mutability":"mutable","name":"set","nameLocation":"4492:3:27","nodeType":"VariableDeclaration","scope":4172,"src":"4480:15:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4013_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":4161,"nodeType":"UserDefinedTypeName","pathNode":{"id":4160,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":4013,"src":"4480:3:27"},"referencedDeclaration":4013,"src":"4480:3:27","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4013_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"4479:17:27"},"returnParameters":{"id":4166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4172,"src":"4519:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4164,"name":"uint256","nodeType":"ElementaryTypeName","src":"4519:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4518:9:27"},"scope":4615,"src":"4463:107:27","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4188,"nodeType":"Block","src":"4988:42:27","statements":[{"expression":{"baseExpression":{"expression":{"id":4183,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4176,"src":"5005:3:27","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4013_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4184,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":4008,"src":"5005:11:27","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":4186,"indexExpression":{"id":4185,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"5017:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5005:18:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4182,"id":4187,"nodeType":"Return","src":"4998:25:27"}]},"documentation":{"id":4173,"nodeType":"StructuredDocumentation","src":"4576:331:27","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":4189,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4921:3:27","nodeType":"FunctionDefinition","parameters":{"id":4179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4176,"mutability":"mutable","name":"set","nameLocation":"4937:3:27","nodeType":"VariableDeclaration","scope":4189,"src":"4925:15:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4013_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":4175,"nodeType":"UserDefinedTypeName","pathNode":{"id":4174,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":4013,"src":"4925:3:27"},"referencedDeclaration":4013,"src":"4925:3:27","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4013_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":4178,"mutability":"mutable","name":"index","nameLocation":"4950:5:27","nodeType":"VariableDeclaration","scope":4189,"src":"4942:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4177,"name":"uint256","nodeType":"ElementaryTypeName","src":"4942:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4924:32:27"},"returnParameters":{"id":4182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4181,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4189,"src":"4979:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4180,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4979:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4978:9:27"},"scope":4615,"src":"4912:118:27","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4202,"nodeType":"Block","src":"5644:35:27","statements":[{"expression":{"expression":{"id":4199,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4193,"src":"5661:3:27","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4013_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":4200,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":4008,"src":"5661:11:27","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":4198,"id":4201,"nodeType":"Return","src":"5654:18:27"}]},"documentation":{"id":4190,"nodeType":"StructuredDocumentation","src":"5036:529:27","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":4203,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"5579:7:27","nodeType":"FunctionDefinition","parameters":{"id":4194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4193,"mutability":"mutable","name":"set","nameLocation":"5599:3:27","nodeType":"VariableDeclaration","scope":4203,"src":"5587:15:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4013_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":4192,"nodeType":"UserDefinedTypeName","pathNode":{"id":4191,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":4013,"src":"5587:3:27"},"referencedDeclaration":4013,"src":"5587:3:27","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4013_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"5586:17:27"},"returnParameters":{"id":4198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4203,"src":"5626:16:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4195,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5626:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4196,"nodeType":"ArrayTypeName","src":"5626:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5625:18:27"},"scope":4615,"src":"5570:109:27","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSet.Bytes32Set","id":4207,"members":[{"constant":false,"id":4206,"mutability":"mutable","name":"_inner","nameLocation":"5736:6:27","nodeType":"VariableDeclaration","scope":4207,"src":"5732:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4013_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":4205,"nodeType":"UserDefinedTypeName","pathNode":{"id":4204,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":4013,"src":"5732:3:27"},"referencedDeclaration":4013,"src":"5732:3:27","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4013_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"5711:10:27","nodeType":"StructDefinition","scope":4615,"src":"5704:45:27","visibility":"public"},{"body":{"id":4224,"nodeType":"Block","src":"5995:47:27","statements":[{"expression":{"arguments":[{"expression":{"id":4219,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"6017:3:27","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4207_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":4220,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4206,"src":"6017:10:27","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4013_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":4221,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"6029:5:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4013_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4218,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4055,"src":"6012:4:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$4013_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":4222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6012:23:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4217,"id":4223,"nodeType":"Return","src":"6005:30:27"}]},"documentation":{"id":4208,"nodeType":"StructuredDocumentation","src":"5755:159:27","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":4225,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"5928:3:27","nodeType":"FunctionDefinition","parameters":{"id":4214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4211,"mutability":"mutable","name":"set","nameLocation":"5951:3:27","nodeType":"VariableDeclaration","scope":4225,"src":"5932:22:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4207_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":4210,"nodeType":"UserDefinedTypeName","pathNode":{"id":4209,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":4207,"src":"5932:10:27"},"referencedDeclaration":4207,"src":"5932:10:27","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4207_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":4213,"mutability":"mutable","name":"value","nameLocation":"5964:5:27","nodeType":"VariableDeclaration","scope":4225,"src":"5956:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4212,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5956:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5931:39:27"},"returnParameters":{"id":4217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4216,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4225,"src":"5989:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4215,"name":"bool","nodeType":"ElementaryTypeName","src":"5989:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5988:6:27"},"scope":4615,"src":"5919:123:27","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4242,"nodeType":"Block","src":"6289:50:27","statements":[{"expression":{"arguments":[{"expression":{"id":4237,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"6314:3:27","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4207_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":4238,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4206,"src":"6314:10:27","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4013_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":4239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"6326:5:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4013_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4236,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4139,"src":"6306:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$4013_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":4240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6306:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4235,"id":4241,"nodeType":"Return","src":"6299:33:27"}]},"documentation":{"id":4226,"nodeType":"StructuredDocumentation","src":"6048:157:27","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":4243,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6219:6:27","nodeType":"FunctionDefinition","parameters":{"id":4232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4229,"mutability":"mutable","name":"set","nameLocation":"6245:3:27","nodeType":"VariableDeclaration","scope":4243,"src":"6226:22:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4207_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":4228,"nodeType":"UserDefinedTypeName","pathNode":{"id":4227,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":4207,"src":"6226:10:27"},"referencedDeclaration":4207,"src":"6226:10:27","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4207_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":4231,"mutability":"mutable","name":"value","nameLocation":"6258:5:27","nodeType":"VariableDeclaration","scope":4243,"src":"6250:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4230,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6250:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6225:39:27"},"returnParameters":{"id":4235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4234,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4243,"src":"6283:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4233,"name":"bool","nodeType":"ElementaryTypeName","src":"6283:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6282:6:27"},"scope":4615,"src":"6210:129:27","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4260,"nodeType":"Block","src":"6506:52:27","statements":[{"expression":{"arguments":[{"expression":{"id":4255,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4247,"src":"6533:3:27","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4207_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":4256,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4206,"src":"6533:10:27","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4013_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":4257,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"6545:5:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4013_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4254,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"6523:9:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$4013_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":4258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6523:28:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4253,"id":4259,"nodeType":"Return","src":"6516:35:27"}]},"documentation":{"id":4244,"nodeType":"StructuredDocumentation","src":"6345:70:27","text":" @dev Returns true if the value is in the set. O(1)."},"id":4261,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6429:8:27","nodeType":"FunctionDefinition","parameters":{"id":4250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4247,"mutability":"mutable","name":"set","nameLocation":"6457:3:27","nodeType":"VariableDeclaration","scope":4261,"src":"6438:22:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4207_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":4246,"nodeType":"UserDefinedTypeName","pathNode":{"id":4245,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":4207,"src":"6438:10:27"},"referencedDeclaration":4207,"src":"6438:10:27","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4207_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":4249,"mutability":"mutable","name":"value","nameLocation":"6470:5:27","nodeType":"VariableDeclaration","scope":4261,"src":"6462:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4248,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6462:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6437:39:27"},"returnParameters":{"id":4253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4261,"src":"6500:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4251,"name":"bool","nodeType":"ElementaryTypeName","src":"6500:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6499:6:27"},"scope":4615,"src":"6420:138:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4275,"nodeType":"Block","src":"6711:43:27","statements":[{"expression":{"arguments":[{"expression":{"id":4271,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"6736:3:27","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4207_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":4272,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4206,"src":"6736:10:27","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4013_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4013_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":4270,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"6728:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$4013_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":4273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6728:19:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4269,"id":4274,"nodeType":"Return","src":"6721:26:27"}]},"documentation":{"id":4262,"nodeType":"StructuredDocumentation","src":"6564:70:27","text":" @dev Returns the number of values in the set. O(1)."},"id":4276,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6648:6:27","nodeType":"FunctionDefinition","parameters":{"id":4266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4265,"mutability":"mutable","name":"set","nameLocation":"6674:3:27","nodeType":"VariableDeclaration","scope":4276,"src":"6655:22:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4207_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":4264,"nodeType":"UserDefinedTypeName","pathNode":{"id":4263,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":4207,"src":"6655:10:27"},"referencedDeclaration":4207,"src":"6655:10:27","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4207_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"6654:24:27"},"returnParameters":{"id":4269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4268,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4276,"src":"6702:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4267,"name":"uint256","nodeType":"ElementaryTypeName","src":"6702:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6701:9:27"},"scope":4615,"src":"6639:115:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4293,"nodeType":"Block","src":"7179:46:27","statements":[{"expression":{"arguments":[{"expression":{"id":4288,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4280,"src":"7200:3:27","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4207_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":4289,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4206,"src":"7200:10:27","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4013_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":4290,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4282,"src":"7212:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4013_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4287,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"7196:3:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$4013_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":4291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7196:22:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4286,"id":4292,"nodeType":"Return","src":"7189:29:27"}]},"documentation":{"id":4277,"nodeType":"StructuredDocumentation","src":"6760:331:27","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":4294,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7105:2:27","nodeType":"FunctionDefinition","parameters":{"id":4283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4280,"mutability":"mutable","name":"set","nameLocation":"7127:3:27","nodeType":"VariableDeclaration","scope":4294,"src":"7108:22:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4207_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":4279,"nodeType":"UserDefinedTypeName","pathNode":{"id":4278,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":4207,"src":"7108:10:27"},"referencedDeclaration":4207,"src":"7108:10:27","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4207_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":4282,"mutability":"mutable","name":"index","nameLocation":"7140:5:27","nodeType":"VariableDeclaration","scope":4294,"src":"7132:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4281,"name":"uint256","nodeType":"ElementaryTypeName","src":"7132:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7107:39:27"},"returnParameters":{"id":4286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4285,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4294,"src":"7170:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4284,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7170:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7169:9:27"},"scope":4615,"src":"7096:129:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4323,"nodeType":"Block","src":"7846:219:27","statements":[{"assignments":[4308],"declarations":[{"constant":false,"id":4308,"mutability":"mutable","name":"store","nameLocation":"7873:5:27","nodeType":"VariableDeclaration","scope":4323,"src":"7856:22:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4306,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7856:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4307,"nodeType":"ArrayTypeName","src":"7856:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":4313,"initialValue":{"arguments":[{"expression":{"id":4310,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"7889:3:27","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4207_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":4311,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4206,"src":"7889:10:27","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4013_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4013_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":4309,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"7881:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$4013_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":4312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7881:19:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7856:44:27"},{"assignments":[4318],"declarations":[{"constant":false,"id":4318,"mutability":"mutable","name":"result","nameLocation":"7927:6:27","nodeType":"VariableDeclaration","scope":4323,"src":"7910:23:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4316,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7910:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4317,"nodeType":"ArrayTypeName","src":"7910:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":4319,"nodeType":"VariableDeclarationStatement","src":"7910:23:27"},{"AST":{"nodeType":"YulBlock","src":"7996:39:27","statements":[{"nodeType":"YulAssignment","src":"8010:15:27","value":{"name":"store","nodeType":"YulIdentifier","src":"8020:5:27"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"8010:6:27"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":4318,"isOffset":false,"isSlot":false,"src":"8010:6:27","valueSize":1},{"declaration":4308,"isOffset":false,"isSlot":false,"src":"8020:5:27","valueSize":1}],"id":4320,"nodeType":"InlineAssembly","src":"7987:48:27"},{"expression":{"id":4321,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4318,"src":"8052:6:27","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":4303,"id":4322,"nodeType":"Return","src":"8045:13:27"}]},"documentation":{"id":4295,"nodeType":"StructuredDocumentation","src":"7231:529:27","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":4324,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"7774:6:27","nodeType":"FunctionDefinition","parameters":{"id":4299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4298,"mutability":"mutable","name":"set","nameLocation":"7800:3:27","nodeType":"VariableDeclaration","scope":4324,"src":"7781:22:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4207_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":4297,"nodeType":"UserDefinedTypeName","pathNode":{"id":4296,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":4207,"src":"7781:10:27"},"referencedDeclaration":4207,"src":"7781:10:27","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$4207_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"7780:24:27"},"returnParameters":{"id":4303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4302,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4324,"src":"7828:16:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4300,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7828:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4301,"nodeType":"ArrayTypeName","src":"7828:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7827:18:27"},"scope":4615,"src":"7765:300:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.AddressSet","id":4328,"members":[{"constant":false,"id":4327,"mutability":"mutable","name":"_inner","nameLocation":"8122:6:27","nodeType":"VariableDeclaration","scope":4328,"src":"8118:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4013_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":4326,"nodeType":"UserDefinedTypeName","pathNode":{"id":4325,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":4013,"src":"8118:3:27"},"referencedDeclaration":4013,"src":"8118:3:27","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4013_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"8097:10:27","nodeType":"StructDefinition","scope":4615,"src":"8090:45:27","visibility":"public"},{"body":{"id":4354,"nodeType":"Block","src":"8381:74:27","statements":[{"expression":{"arguments":[{"expression":{"id":4340,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4332,"src":"8403:3:27","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4328_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":4341,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4327,"src":"8403:10:27","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4013_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":4348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"8439:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8431:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4346,"name":"uint160","nodeType":"ElementaryTypeName","src":"8431:7:27","typeDescriptions":{}}},"id":4349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8431:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8423:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4344,"name":"uint256","nodeType":"ElementaryTypeName","src":"8423:7:27","typeDescriptions":{}}},"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8423:23:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8415:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4342,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8415:7:27","typeDescriptions":{}}},"id":4351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8415:32:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4013_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4339,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4055,"src":"8398:4:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$4013_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":4352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8398:50:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4338,"id":4353,"nodeType":"Return","src":"8391:57:27"}]},"documentation":{"id":4329,"nodeType":"StructuredDocumentation","src":"8141:159:27","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":4355,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"8314:3:27","nodeType":"FunctionDefinition","parameters":{"id":4335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4332,"mutability":"mutable","name":"set","nameLocation":"8337:3:27","nodeType":"VariableDeclaration","scope":4355,"src":"8318:22:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4328_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":4331,"nodeType":"UserDefinedTypeName","pathNode":{"id":4330,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":4328,"src":"8318:10:27"},"referencedDeclaration":4328,"src":"8318:10:27","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4328_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":4334,"mutability":"mutable","name":"value","nameLocation":"8350:5:27","nodeType":"VariableDeclaration","scope":4355,"src":"8342:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4333,"name":"address","nodeType":"ElementaryTypeName","src":"8342:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8317:39:27"},"returnParameters":{"id":4338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4355,"src":"8375:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4336,"name":"bool","nodeType":"ElementaryTypeName","src":"8375:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8374:6:27"},"scope":4615,"src":"8305:150:27","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4381,"nodeType":"Block","src":"8702:77:27","statements":[{"expression":{"arguments":[{"expression":{"id":4367,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"8727:3:27","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4328_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":4368,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4327,"src":"8727:10:27","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4013_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":4375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4361,"src":"8763:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8755:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4373,"name":"uint160","nodeType":"ElementaryTypeName","src":"8755:7:27","typeDescriptions":{}}},"id":4376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8755:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8747:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4371,"name":"uint256","nodeType":"ElementaryTypeName","src":"8747:7:27","typeDescriptions":{}}},"id":4377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8747:23:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8739:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4369,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8739:7:27","typeDescriptions":{}}},"id":4378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8739:32:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4013_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4366,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4139,"src":"8719:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$4013_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":4379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8719:53:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4365,"id":4380,"nodeType":"Return","src":"8712:60:27"}]},"documentation":{"id":4356,"nodeType":"StructuredDocumentation","src":"8461:157:27","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":4382,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"8632:6:27","nodeType":"FunctionDefinition","parameters":{"id":4362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4359,"mutability":"mutable","name":"set","nameLocation":"8658:3:27","nodeType":"VariableDeclaration","scope":4382,"src":"8639:22:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4328_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":4358,"nodeType":"UserDefinedTypeName","pathNode":{"id":4357,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":4328,"src":"8639:10:27"},"referencedDeclaration":4328,"src":"8639:10:27","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4328_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":4361,"mutability":"mutable","name":"value","nameLocation":"8671:5:27","nodeType":"VariableDeclaration","scope":4382,"src":"8663:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4360,"name":"address","nodeType":"ElementaryTypeName","src":"8663:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8638:39:27"},"returnParameters":{"id":4365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4364,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4382,"src":"8696:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4363,"name":"bool","nodeType":"ElementaryTypeName","src":"8696:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8695:6:27"},"scope":4615,"src":"8623:156:27","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4408,"nodeType":"Block","src":"8946:79:27","statements":[{"expression":{"arguments":[{"expression":{"id":4394,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"8973:3:27","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4328_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":4395,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4327,"src":"8973:10:27","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4013_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":4402,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"9009:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9001:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4400,"name":"uint160","nodeType":"ElementaryTypeName","src":"9001:7:27","typeDescriptions":{}}},"id":4403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9001:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8993:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4398,"name":"uint256","nodeType":"ElementaryTypeName","src":"8993:7:27","typeDescriptions":{}}},"id":4404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8993:23:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8985:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4396,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8985:7:27","typeDescriptions":{}}},"id":4405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8985:32:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4013_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4393,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"8963:9:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$4013_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":4406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8963:55:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4392,"id":4407,"nodeType":"Return","src":"8956:62:27"}]},"documentation":{"id":4383,"nodeType":"StructuredDocumentation","src":"8785:70:27","text":" @dev Returns true if the value is in the set. O(1)."},"id":4409,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8869:8:27","nodeType":"FunctionDefinition","parameters":{"id":4389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4386,"mutability":"mutable","name":"set","nameLocation":"8897:3:27","nodeType":"VariableDeclaration","scope":4409,"src":"8878:22:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4328_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":4385,"nodeType":"UserDefinedTypeName","pathNode":{"id":4384,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":4328,"src":"8878:10:27"},"referencedDeclaration":4328,"src":"8878:10:27","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4328_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":4388,"mutability":"mutable","name":"value","nameLocation":"8910:5:27","nodeType":"VariableDeclaration","scope":4409,"src":"8902:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4387,"name":"address","nodeType":"ElementaryTypeName","src":"8902:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8877:39:27"},"returnParameters":{"id":4392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4409,"src":"8940:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4390,"name":"bool","nodeType":"ElementaryTypeName","src":"8940:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8939:6:27"},"scope":4615,"src":"8860:165:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4423,"nodeType":"Block","src":"9178:43:27","statements":[{"expression":{"arguments":[{"expression":{"id":4419,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4413,"src":"9203:3:27","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4328_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":4420,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4327,"src":"9203:10:27","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4013_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4013_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":4418,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"9195:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$4013_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":4421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9195:19:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4417,"id":4422,"nodeType":"Return","src":"9188:26:27"}]},"documentation":{"id":4410,"nodeType":"StructuredDocumentation","src":"9031:70:27","text":" @dev Returns the number of values in the set. O(1)."},"id":4424,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"9115:6:27","nodeType":"FunctionDefinition","parameters":{"id":4414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4413,"mutability":"mutable","name":"set","nameLocation":"9141:3:27","nodeType":"VariableDeclaration","scope":4424,"src":"9122:22:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4328_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":4412,"nodeType":"UserDefinedTypeName","pathNode":{"id":4411,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":4328,"src":"9122:10:27"},"referencedDeclaration":4328,"src":"9122:10:27","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4328_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"9121:24:27"},"returnParameters":{"id":4417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4416,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4424,"src":"9169:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4415,"name":"uint256","nodeType":"ElementaryTypeName","src":"9169:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9168:9:27"},"scope":4615,"src":"9106:115:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4450,"nodeType":"Block","src":"9646:73:27","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":4442,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4428,"src":"9691:3:27","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4328_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":4443,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4327,"src":"9691:10:27","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4013_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":4444,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4430,"src":"9703:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4013_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4441,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"9687:3:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$4013_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":4445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9687:22:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9679:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4439,"name":"uint256","nodeType":"ElementaryTypeName","src":"9679:7:27","typeDescriptions":{}}},"id":4446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9679:31:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9671:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4437,"name":"uint160","nodeType":"ElementaryTypeName","src":"9671:7:27","typeDescriptions":{}}},"id":4447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9671:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9663:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4435,"name":"address","nodeType":"ElementaryTypeName","src":"9663:7:27","typeDescriptions":{}}},"id":4448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9663:49:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4434,"id":4449,"nodeType":"Return","src":"9656:56:27"}]},"documentation":{"id":4425,"nodeType":"StructuredDocumentation","src":"9227:331:27","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":4451,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"9572:2:27","nodeType":"FunctionDefinition","parameters":{"id":4431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4428,"mutability":"mutable","name":"set","nameLocation":"9594:3:27","nodeType":"VariableDeclaration","scope":4451,"src":"9575:22:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4328_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":4427,"nodeType":"UserDefinedTypeName","pathNode":{"id":4426,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":4328,"src":"9575:10:27"},"referencedDeclaration":4328,"src":"9575:10:27","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4328_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":4430,"mutability":"mutable","name":"index","nameLocation":"9607:5:27","nodeType":"VariableDeclaration","scope":4451,"src":"9599:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4429,"name":"uint256","nodeType":"ElementaryTypeName","src":"9599:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9574:39:27"},"returnParameters":{"id":4434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4451,"src":"9637:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4432,"name":"address","nodeType":"ElementaryTypeName","src":"9637:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9636:9:27"},"scope":4615,"src":"9563:156:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4480,"nodeType":"Block","src":"10340:219:27","statements":[{"assignments":[4465],"declarations":[{"constant":false,"id":4465,"mutability":"mutable","name":"store","nameLocation":"10367:5:27","nodeType":"VariableDeclaration","scope":4480,"src":"10350:22:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4463,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10350:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4464,"nodeType":"ArrayTypeName","src":"10350:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":4470,"initialValue":{"arguments":[{"expression":{"id":4467,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"10383:3:27","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4328_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":4468,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4327,"src":"10383:10:27","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4013_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4013_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":4466,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"10375:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$4013_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":4469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10375:19:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10350:44:27"},{"assignments":[4475],"declarations":[{"constant":false,"id":4475,"mutability":"mutable","name":"result","nameLocation":"10421:6:27","nodeType":"VariableDeclaration","scope":4480,"src":"10404:23:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4473,"name":"address","nodeType":"ElementaryTypeName","src":"10404:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4474,"nodeType":"ArrayTypeName","src":"10404:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":4476,"nodeType":"VariableDeclarationStatement","src":"10404:23:27"},{"AST":{"nodeType":"YulBlock","src":"10490:39:27","statements":[{"nodeType":"YulAssignment","src":"10504:15:27","value":{"name":"store","nodeType":"YulIdentifier","src":"10514:5:27"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"10504:6:27"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":4475,"isOffset":false,"isSlot":false,"src":"10504:6:27","valueSize":1},{"declaration":4465,"isOffset":false,"isSlot":false,"src":"10514:5:27","valueSize":1}],"id":4477,"nodeType":"InlineAssembly","src":"10481:48:27"},{"expression":{"id":4478,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4475,"src":"10546:6:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":4460,"id":4479,"nodeType":"Return","src":"10539:13:27"}]},"documentation":{"id":4452,"nodeType":"StructuredDocumentation","src":"9725:529:27","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":4481,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"10268:6:27","nodeType":"FunctionDefinition","parameters":{"id":4456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4455,"mutability":"mutable","name":"set","nameLocation":"10294:3:27","nodeType":"VariableDeclaration","scope":4481,"src":"10275:22:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4328_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":4454,"nodeType":"UserDefinedTypeName","pathNode":{"id":4453,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":4328,"src":"10275:10:27"},"referencedDeclaration":4328,"src":"10275:10:27","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4328_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"10274:24:27"},"returnParameters":{"id":4460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4459,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4481,"src":"10322:16:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4457,"name":"address","nodeType":"ElementaryTypeName","src":"10322:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4458,"nodeType":"ArrayTypeName","src":"10322:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10321:18:27"},"scope":4615,"src":"10259:300:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.UintSet","id":4485,"members":[{"constant":false,"id":4484,"mutability":"mutable","name":"_inner","nameLocation":"10610:6:27","nodeType":"VariableDeclaration","scope":4485,"src":"10606:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4013_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":4483,"nodeType":"UserDefinedTypeName","pathNode":{"id":4482,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":4013,"src":"10606:3:27"},"referencedDeclaration":4013,"src":"10606:3:27","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4013_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"10588:7:27","nodeType":"StructDefinition","scope":4615,"src":"10581:42:27","visibility":"public"},{"body":{"id":4505,"nodeType":"Block","src":"10866:56:27","statements":[{"expression":{"arguments":[{"expression":{"id":4497,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"10888:3:27","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4485_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4498,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4484,"src":"10888:10:27","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4013_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":4501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4491,"src":"10908:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10900:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4499,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10900:7:27","typeDescriptions":{}}},"id":4502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10900:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4013_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4496,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4055,"src":"10883:4:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$4013_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":4503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10883:32:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4495,"id":4504,"nodeType":"Return","src":"10876:39:27"}]},"documentation":{"id":4486,"nodeType":"StructuredDocumentation","src":"10629:159:27","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":4506,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"10802:3:27","nodeType":"FunctionDefinition","parameters":{"id":4492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4489,"mutability":"mutable","name":"set","nameLocation":"10822:3:27","nodeType":"VariableDeclaration","scope":4506,"src":"10806:19:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4485_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4488,"nodeType":"UserDefinedTypeName","pathNode":{"id":4487,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":4485,"src":"10806:7:27"},"referencedDeclaration":4485,"src":"10806:7:27","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4485_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":4491,"mutability":"mutable","name":"value","nameLocation":"10835:5:27","nodeType":"VariableDeclaration","scope":4506,"src":"10827:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4490,"name":"uint256","nodeType":"ElementaryTypeName","src":"10827:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10805:36:27"},"returnParameters":{"id":4495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4494,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4506,"src":"10860:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4493,"name":"bool","nodeType":"ElementaryTypeName","src":"10860:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10859:6:27"},"scope":4615,"src":"10793:129:27","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4526,"nodeType":"Block","src":"11166:59:27","statements":[{"expression":{"arguments":[{"expression":{"id":4518,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4510,"src":"11191:3:27","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4485_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4519,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4484,"src":"11191:10:27","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4013_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":4522,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"11211:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11203:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4520,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11203:7:27","typeDescriptions":{}}},"id":4523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11203:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4013_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4517,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4139,"src":"11183:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$4013_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":4524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11183:35:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4516,"id":4525,"nodeType":"Return","src":"11176:42:27"}]},"documentation":{"id":4507,"nodeType":"StructuredDocumentation","src":"10928:157:27","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":4527,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"11099:6:27","nodeType":"FunctionDefinition","parameters":{"id":4513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4510,"mutability":"mutable","name":"set","nameLocation":"11122:3:27","nodeType":"VariableDeclaration","scope":4527,"src":"11106:19:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4485_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4509,"nodeType":"UserDefinedTypeName","pathNode":{"id":4508,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":4485,"src":"11106:7:27"},"referencedDeclaration":4485,"src":"11106:7:27","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4485_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":4512,"mutability":"mutable","name":"value","nameLocation":"11135:5:27","nodeType":"VariableDeclaration","scope":4527,"src":"11127:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4511,"name":"uint256","nodeType":"ElementaryTypeName","src":"11127:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11105:36:27"},"returnParameters":{"id":4516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4515,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4527,"src":"11160:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4514,"name":"bool","nodeType":"ElementaryTypeName","src":"11160:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11159:6:27"},"scope":4615,"src":"11090:135:27","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4547,"nodeType":"Block","src":"11389:61:27","statements":[{"expression":{"arguments":[{"expression":{"id":4539,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4531,"src":"11416:3:27","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4485_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4540,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4484,"src":"11416:10:27","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4013_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":4543,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4533,"src":"11436:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11428:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4541,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11428:7:27","typeDescriptions":{}}},"id":4544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11428:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4013_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4538,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"11406:9:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$4013_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":4545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11406:37:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4537,"id":4546,"nodeType":"Return","src":"11399:44:27"}]},"documentation":{"id":4528,"nodeType":"StructuredDocumentation","src":"11231:70:27","text":" @dev Returns true if the value is in the set. O(1)."},"id":4548,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"11315:8:27","nodeType":"FunctionDefinition","parameters":{"id":4534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4531,"mutability":"mutable","name":"set","nameLocation":"11340:3:27","nodeType":"VariableDeclaration","scope":4548,"src":"11324:19:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4485_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4530,"nodeType":"UserDefinedTypeName","pathNode":{"id":4529,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":4485,"src":"11324:7:27"},"referencedDeclaration":4485,"src":"11324:7:27","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4485_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":4533,"mutability":"mutable","name":"value","nameLocation":"11353:5:27","nodeType":"VariableDeclaration","scope":4548,"src":"11345:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4532,"name":"uint256","nodeType":"ElementaryTypeName","src":"11345:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11323:36:27"},"returnParameters":{"id":4537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4536,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4548,"src":"11383:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4535,"name":"bool","nodeType":"ElementaryTypeName","src":"11383:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11382:6:27"},"scope":4615,"src":"11306:144:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4562,"nodeType":"Block","src":"11600:43:27","statements":[{"expression":{"arguments":[{"expression":{"id":4558,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"11625:3:27","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4485_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4559,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4484,"src":"11625:10:27","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4013_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4013_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":4557,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"11617:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$4013_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":4560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11617:19:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4556,"id":4561,"nodeType":"Return","src":"11610:26:27"}]},"documentation":{"id":4549,"nodeType":"StructuredDocumentation","src":"11456:70:27","text":" @dev Returns the number of values in the set. O(1)."},"id":4563,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11540:6:27","nodeType":"FunctionDefinition","parameters":{"id":4553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4552,"mutability":"mutable","name":"set","nameLocation":"11563:3:27","nodeType":"VariableDeclaration","scope":4563,"src":"11547:19:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4485_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4551,"nodeType":"UserDefinedTypeName","pathNode":{"id":4550,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":4485,"src":"11547:7:27"},"referencedDeclaration":4485,"src":"11547:7:27","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4485_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"11546:21:27"},"returnParameters":{"id":4556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4555,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4563,"src":"11591:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4554,"name":"uint256","nodeType":"ElementaryTypeName","src":"11591:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11590:9:27"},"scope":4615,"src":"11531:112:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4583,"nodeType":"Block","src":"12065:55:27","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":4577,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4567,"src":"12094:3:27","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4485_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4578,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4484,"src":"12094:10:27","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4013_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":4579,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4569,"src":"12106:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4013_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4576,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"12090:3:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$4013_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":4580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12090:22:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12082:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4574,"name":"uint256","nodeType":"ElementaryTypeName","src":"12082:7:27","typeDescriptions":{}}},"id":4581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12082:31:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4573,"id":4582,"nodeType":"Return","src":"12075:38:27"}]},"documentation":{"id":4564,"nodeType":"StructuredDocumentation","src":"11649:331:27","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":4584,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"11994:2:27","nodeType":"FunctionDefinition","parameters":{"id":4570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4567,"mutability":"mutable","name":"set","nameLocation":"12013:3:27","nodeType":"VariableDeclaration","scope":4584,"src":"11997:19:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4485_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4566,"nodeType":"UserDefinedTypeName","pathNode":{"id":4565,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":4485,"src":"11997:7:27"},"referencedDeclaration":4485,"src":"11997:7:27","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4485_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":4569,"mutability":"mutable","name":"index","nameLocation":"12026:5:27","nodeType":"VariableDeclaration","scope":4584,"src":"12018:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4568,"name":"uint256","nodeType":"ElementaryTypeName","src":"12018:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11996:36:27"},"returnParameters":{"id":4573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4572,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4584,"src":"12056:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4571,"name":"uint256","nodeType":"ElementaryTypeName","src":"12056:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12055:9:27"},"scope":4615,"src":"11985:135:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4613,"nodeType":"Block","src":"12738:219:27","statements":[{"assignments":[4598],"declarations":[{"constant":false,"id":4598,"mutability":"mutable","name":"store","nameLocation":"12765:5:27","nodeType":"VariableDeclaration","scope":4613,"src":"12748:22:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4596,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12748:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4597,"nodeType":"ArrayTypeName","src":"12748:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":4603,"initialValue":{"arguments":[{"expression":{"id":4600,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4588,"src":"12781:3:27","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4485_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4601,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4484,"src":"12781:10:27","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$4013_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$4013_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":4599,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"12773:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$4013_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":4602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12773:19:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12748:44:27"},{"assignments":[4608],"declarations":[{"constant":false,"id":4608,"mutability":"mutable","name":"result","nameLocation":"12819:6:27","nodeType":"VariableDeclaration","scope":4613,"src":"12802:23:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4606,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4607,"nodeType":"ArrayTypeName","src":"12802:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4609,"nodeType":"VariableDeclarationStatement","src":"12802:23:27"},{"AST":{"nodeType":"YulBlock","src":"12888:39:27","statements":[{"nodeType":"YulAssignment","src":"12902:15:27","value":{"name":"store","nodeType":"YulIdentifier","src":"12912:5:27"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12902:6:27"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":4608,"isOffset":false,"isSlot":false,"src":"12902:6:27","valueSize":1},{"declaration":4598,"isOffset":false,"isSlot":false,"src":"12912:5:27","valueSize":1}],"id":4610,"nodeType":"InlineAssembly","src":"12879:48:27"},{"expression":{"id":4611,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"12944:6:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":4593,"id":4612,"nodeType":"Return","src":"12937:13:27"}]},"documentation":{"id":4585,"nodeType":"StructuredDocumentation","src":"12126:529:27","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":4614,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"12669:6:27","nodeType":"FunctionDefinition","parameters":{"id":4589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4588,"mutability":"mutable","name":"set","nameLocation":"12692:3:27","nodeType":"VariableDeclaration","scope":4614,"src":"12676:19:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4485_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4587,"nodeType":"UserDefinedTypeName","pathNode":{"id":4586,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":4485,"src":"12676:7:27"},"referencedDeclaration":4485,"src":"12676:7:27","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4485_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"12675:21:27"},"returnParameters":{"id":4593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4592,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4614,"src":"12720:16:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4590,"name":"uint256","nodeType":"ElementaryTypeName","src":"12720:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4591,"nodeType":"ArrayTypeName","src":"12720:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12719:18:27"},"scope":4615,"src":"12660:297:27","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4616,"src":"1329:11630:27","usedErrors":[]}],"src":"205:12755:27"},"id":27},"contracts/BasicLSP8.sol":{"ast":{"absolutePath":"contracts/BasicLSP8.sol","exportedSymbols":{"BasicLSP8":[4643],"LSP8Mintable":[3772]},"id":4644,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4617,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"32:24:28"},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/presets/LSP8Mintable.sol","file":"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/presets/LSP8Mintable.sol","id":4619,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4644,"sourceUnit":3773,"src":"69:120:28","symbolAliases":[{"foreign":{"id":4618,"name":"LSP8Mintable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3772,"src":"77:12:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP8Mintable_$3772_$","typeString":"type(contract LSP8Mintable)"}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4620,"name":"LSP8Mintable","nodeType":"IdentifierPath","referencedDeclaration":3772,"src":"213:12:28"},"id":4621,"nodeType":"InheritanceSpecifier","src":"213:12:28"}],"canonicalName":"BasicLSP8","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4643,"linearizedBaseContracts":[4643,3772,3715,2357,667,3695,1951,1657,1719,35,270,505,3796,4002,402],"name":"BasicLSP8","nameLocation":"200:9:28","nodeType":"ContractDefinition","nodes":[{"body":{"id":4641,"nodeType":"Block","src":"605:2:28","statements":[]},"id":4642,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":4634,"name":"nftCollectionName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4623,"src":"460:17:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4635,"name":"nftCollectionSymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4625,"src":"491:19:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4636,"name":"contractOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4627,"src":"524:13:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4637,"name":"lsp4Type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4629,"src":"551:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4638,"name":"lsp8TokenIdFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4631,"src":"573:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4639,"kind":"baseConstructorSpecifier","modifierName":{"id":4633,"name":"LSP8Mintable","nodeType":"IdentifierPath","referencedDeclaration":3772,"src":"434:12:28"},"nodeType":"ModifierInvocation","src":"434:166:28"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4623,"mutability":"mutable","name":"nftCollectionName","nameLocation":"267:17:28","nodeType":"VariableDeclaration","scope":4642,"src":"253:31:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4622,"name":"string","nodeType":"ElementaryTypeName","src":"253:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4625,"mutability":"mutable","name":"nftCollectionSymbol","nameLocation":"308:19:28","nodeType":"VariableDeclaration","scope":4642,"src":"294:33:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4624,"name":"string","nodeType":"ElementaryTypeName","src":"294:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4627,"mutability":"mutable","name":"contractOwner","nameLocation":"345:13:28","nodeType":"VariableDeclaration","scope":4642,"src":"337:21:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4626,"name":"address","nodeType":"ElementaryTypeName","src":"337:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4629,"mutability":"mutable","name":"lsp4Type","nameLocation":"376:8:28","nodeType":"VariableDeclaration","scope":4642,"src":"368:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4628,"name":"uint256","nodeType":"ElementaryTypeName","src":"368:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4631,"mutability":"mutable","name":"lsp8TokenIdFormat","nameLocation":"402:17:28","nodeType":"VariableDeclaration","scope":4642,"src":"394:25:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4630,"name":"uint256","nodeType":"ElementaryTypeName","src":"394:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"243:182:28"},"returnParameters":{"id":4640,"nodeType":"ParameterList","parameters":[],"src":"605:0:28"},"scope":4643,"src":"232:375:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":4644,"src":"191:418:28","usedErrors":[407,412,448,451,454,523,528,533,1724,1727,1730,2011,2020,2027,2034,2037,2040,2043,2050,2055,2058,2063,2068,2071,2074,2077,2080,2083,2088]}],"src":"32:578:28"},"id":28}},"contracts":{"@erc725/smart-contracts/contracts/ERC725Y.sol":{"ERC725Y":{"abi":[{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"}],"stateMutability":"payable","type":"constructor"},{"inputs":[],"name":"ERC725Y_DataKeysValuesEmptyArray","type":"error"},{"inputs":[],"name":"ERC725Y_DataKeysValuesLengthMismatch","type":"error"},{"inputs":[],"name":"ERC725Y_MsgValueDisallowed","type":"error"},{"inputs":[{"internalType":"address","name":"callerAddress","type":"address"}],"name":"OwnableCallerNotTheOwner","type":"error"},{"inputs":[],"name":"OwnableCannotSetZeroAddressAsOwner","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"DataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getData","outputs":[{"internalType":"bytes","name":"dataValue","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatch","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setData","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatch","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_34":{"entryPoint":null,"id":34,"parameterSlots":1,"returnSlots":0},"@_setOwner_401":{"entryPoint":174,"id":401,"parameterSlots":1,"returnSlots":0},"@owner_316":{"entryPoint":431,"id":316,"parameterSlots":0,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":555,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":578,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":509,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":477,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":472,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":529,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1199:29","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:29","statements":[{"nodeType":"YulAssignment","src":"57:19:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:29","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:29"},"nodeType":"YulFunctionCall","src":"67:9:29"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:29"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:29","type":""}],"src":"7:75:29"},{"body":{"nodeType":"YulBlock","src":"177:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:29"},"nodeType":"YulFunctionCall","src":"187:12:29"},"nodeType":"YulExpressionStatement","src":"187:12:29"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:29"},{"body":{"nodeType":"YulBlock","src":"300:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:29"},"nodeType":"YulFunctionCall","src":"310:12:29"},"nodeType":"YulExpressionStatement","src":"310:12:29"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:29"},{"body":{"nodeType":"YulBlock","src":"379:81:29","statements":[{"nodeType":"YulAssignment","src":"389:65:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:29"},"nodeType":"YulFunctionCall","src":"400:54:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:29"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:29","type":""}],"src":"334:126:29"},{"body":{"nodeType":"YulBlock","src":"511:51:29","statements":[{"nodeType":"YulAssignment","src":"521:35:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:29"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:29"},"nodeType":"YulFunctionCall","src":"532:24:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:29"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:29","type":""}],"src":"466:96:29"},{"body":{"nodeType":"YulBlock","src":"611:79:29","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:29"},"nodeType":"YulFunctionCall","src":"670:12:29"},"nodeType":"YulExpressionStatement","src":"670:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:29"},"nodeType":"YulFunctionCall","src":"641:24:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:29"},"nodeType":"YulFunctionCall","src":"631:35:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:29"},"nodeType":"YulFunctionCall","src":"624:43:29"},"nodeType":"YulIf","src":"621:63:29"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:29","type":""}],"src":"568:122:29"},{"body":{"nodeType":"YulBlock","src":"759:80:29","statements":[{"nodeType":"YulAssignment","src":"769:22:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:29"},"nodeType":"YulFunctionCall","src":"778:13:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:29"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:29"},"nodeType":"YulFunctionCall","src":"800:33:29"},"nodeType":"YulExpressionStatement","src":"800:33:29"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:29","type":""}],"src":"696:143:29"},{"body":{"nodeType":"YulBlock","src":"922:274:29","statements":[{"body":{"nodeType":"YulBlock","src":"968:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"970:77:29"},"nodeType":"YulFunctionCall","src":"970:79:29"},"nodeType":"YulExpressionStatement","src":"970:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"943:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"952:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"939:3:29"},"nodeType":"YulFunctionCall","src":"939:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"964:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"935:3:29"},"nodeType":"YulFunctionCall","src":"935:32:29"},"nodeType":"YulIf","src":"932:119:29"},{"nodeType":"YulBlock","src":"1061:128:29","statements":[{"nodeType":"YulVariableDeclaration","src":"1076:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"1090:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1080:6:29","type":""}]},{"nodeType":"YulAssignment","src":"1105:74:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"1162:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1147:3:29"},"nodeType":"YulFunctionCall","src":"1147:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1171:7:29"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1115:31:29"},"nodeType":"YulFunctionCall","src":"1115:64:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1105:6:29"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"892:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"903:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"915:6:29","type":""}],"src":"845:351:29"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":29,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6080604052604051620013b5380380620013b5833981810160405281019062000029919062000242565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141562000091576040517f1ad8836c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b620000a781620000ae60201b620005191760201c565b5062000274565b620000be620001af60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614620001ac578073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200020a82620001dd565b9050919050565b6200021c81620001fd565b81146200022857600080fd5b50565b6000815190506200023c8162000211565b92915050565b6000602082840312156200025b576200025a620001d8565b5b60006200026b848285016200022b565b91505092915050565b61113180620002846000396000f3fe60806040526004361061007b5760003560e01c80638da5cb5b1161004e5780638da5cb5b1461012d5780639790242114610158578063dedff9c614610174578063f2fde38b146101b15761007b565b806301ffc9a71461008057806354f6127f146100bd578063715018a6146100fa5780637f23690c14610111575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a2919061090c565b6101da565b6040516100b49190610954565b60405180910390f35b3480156100c957600080fd5b506100e460048036038101906100df91906109a5565b61023b565b6040516100f19190610a6b565b60405180910390f35b34801561010657600080fd5b5061010f61024d565b005b61012b60048036038101906101269190610bc2565b610261565b005b34801561013957600080fd5b506101426102b1565b60405161014f9190610c5f565b60405180910390f35b610172600480360381019061016d9190610e23565b6102da565b005b34801561018057600080fd5b5061019b60048036038101906101969190610e9b565b6103ed565b6040516101a89190610ff0565b60405180910390f35b3480156101bd57600080fd5b506101d860048036038101906101d3919061103e565b61049e565b005b600063629aa69460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610234575061023382610611565b5b9050919050565b60606102468261067b565b9050919050565b610255610720565b61025f6000610519565b565b610269610720565b600034146102a3576040517ff36ba73700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102ad8282610799565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6102e2610720565b6000341461031c576040517ff36ba73700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8051825114610357576040517f3bcc897900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082511415610393576040517f97da5f9500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b82518110156103e8576103dd8382815181106103b5576103b461106b565b5b60200260200101518383815181106103d0576103cf61106b565b5b6020026020010151610799565b806001019050610396565b505050565b6060815167ffffffffffffffff81111561040a57610409610a97565b5b60405190808252806020026020018201604052801561043d57816020015b60608152602001906001900390816104285790505b50905060005b82518110156104985761046f8382815181106104625761046161106b565b5b602002602001015161067b565b8282815181106104825761048161106b565b5b6020026020010181905250806001019050610443565b50919050565b6104a6610720565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561050d576040517f1ad8836c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61051681610519565b50565b6105216102b1565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461060e578073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b606060016000838152602001908152602001600020805461069b906110c9565b80601f01602080910402602001604051908101604052809291908181526020018280546106c7906110c9565b80156107145780601f106106e957610100808354040283529160200191610714565b820191906000526020600020905b8154815290600101906020018083116106f757829003601f168201915b50505050509050919050565b3373ffffffffffffffffffffffffffffffffffffffff1661073f6102b1565b73ffffffffffffffffffffffffffffffffffffffff161461079757336040517fbf1169c500000000000000000000000000000000000000000000000000000000815260040161078e9190610c5f565b60405180910390fd5b565b806001600084815260200190815260200160002090805190602001906107c09291906107fd565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b2826040516107f19190610a6b565b60405180910390a25050565b828054610809906110c9565b90600052602060002090601f01602090048101928261082b5760008555610872565b82601f1061084457805160ff1916838001178555610872565b82800160010185558215610872579182015b82811115610871578251825591602001919060010190610856565b5b50905061087f9190610883565b5090565b5b8082111561089c576000816000905550600101610884565b5090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6108e9816108b4565b81146108f457600080fd5b50565b600081359050610906816108e0565b92915050565b600060208284031215610922576109216108aa565b5b6000610930848285016108f7565b91505092915050565b60008115159050919050565b61094e81610939565b82525050565b60006020820190506109696000830184610945565b92915050565b6000819050919050565b6109828161096f565b811461098d57600080fd5b50565b60008135905061099f81610979565b92915050565b6000602082840312156109bb576109ba6108aa565b5b60006109c984828501610990565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610a0c5780820151818401526020810190506109f1565b83811115610a1b576000848401525b50505050565b6000601f19601f8301169050919050565b6000610a3d826109d2565b610a4781856109dd565b9350610a578185602086016109ee565b610a6081610a21565b840191505092915050565b60006020820190508181036000830152610a858184610a32565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610acf82610a21565b810181811067ffffffffffffffff82111715610aee57610aed610a97565b5b80604052505050565b6000610b016108a0565b9050610b0d8282610ac6565b919050565b600067ffffffffffffffff821115610b2d57610b2c610a97565b5b610b3682610a21565b9050602081019050919050565b82818337600083830152505050565b6000610b65610b6084610b12565b610af7565b905082815260208101848484011115610b8157610b80610a92565b5b610b8c848285610b43565b509392505050565b600082601f830112610ba957610ba8610a8d565b5b8135610bb9848260208601610b52565b91505092915050565b60008060408385031215610bd957610bd86108aa565b5b6000610be785828601610990565b925050602083013567ffffffffffffffff811115610c0857610c076108af565b5b610c1485828601610b94565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c4982610c1e565b9050919050565b610c5981610c3e565b82525050565b6000602082019050610c746000830184610c50565b92915050565b600067ffffffffffffffff821115610c9557610c94610a97565b5b602082029050602081019050919050565b600080fd5b6000610cbe610cb984610c7a565b610af7565b90508083825260208201905060208402830185811115610ce157610ce0610ca6565b5b835b81811015610d0a5780610cf68882610990565b845260208401935050602081019050610ce3565b5050509392505050565b600082601f830112610d2957610d28610a8d565b5b8135610d39848260208601610cab565b91505092915050565b600067ffffffffffffffff821115610d5d57610d5c610a97565b5b602082029050602081019050919050565b6000610d81610d7c84610d42565b610af7565b90508083825260208201905060208402830185811115610da457610da3610ca6565b5b835b81811015610deb57803567ffffffffffffffff811115610dc957610dc8610a8d565b5b808601610dd68982610b94565b85526020850194505050602081019050610da6565b5050509392505050565b600082601f830112610e0a57610e09610a8d565b5b8135610e1a848260208601610d6e565b91505092915050565b60008060408385031215610e3a57610e396108aa565b5b600083013567ffffffffffffffff811115610e5857610e576108af565b5b610e6485828601610d14565b925050602083013567ffffffffffffffff811115610e8557610e846108af565b5b610e9185828601610df5565b9150509250929050565b600060208284031215610eb157610eb06108aa565b5b600082013567ffffffffffffffff811115610ecf57610ece6108af565b5b610edb84828501610d14565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b6000610f2c826109d2565b610f368185610f10565b9350610f468185602086016109ee565b610f4f81610a21565b840191505092915050565b6000610f668383610f21565b905092915050565b6000602082019050919050565b6000610f8682610ee4565b610f908185610eef565b935083602082028501610fa285610f00565b8060005b85811015610fde5784840389528151610fbf8582610f5a565b9450610fca83610f6e565b925060208a01995050600181019050610fa6565b50829750879550505050505092915050565b6000602082019050818103600083015261100a8184610f7b565b905092915050565b61101b81610c3e565b811461102657600080fd5b50565b60008135905061103881611012565b92915050565b600060208284031215611054576110536108aa565b5b600061106284828501611029565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806110e157607f821691505b602082108114156110f5576110f461109a565b5b5091905056fea26469706673582212209f324f7be711ce5199f4f8d2498457982296fe956d4db39f2262bd1f7ad97f0064736f6c634300080c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH3 0x13B5 CODESIZE SUB DUP1 PUSH3 0x13B5 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x29 SWAP2 SWAP1 PUSH3 0x242 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH3 0x91 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1AD8836C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xA7 DUP2 PUSH3 0xAE PUSH1 0x20 SHL PUSH3 0x519 OR PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x274 JUMP JUMPDEST PUSH3 0xBE PUSH3 0x1AF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x1AC JUMPI DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x20A DUP3 PUSH3 0x1DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x21C DUP2 PUSH3 0x1FD JUMP JUMPDEST DUP2 EQ PUSH3 0x228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x23C DUP2 PUSH3 0x211 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x25B JUMPI PUSH3 0x25A PUSH3 0x1D8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x26B DUP5 DUP3 DUP6 ADD PUSH3 0x22B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1131 DUP1 PUSH3 0x284 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x97902421 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0xDEDFF9C6 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1B1 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x54F6127F EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x7F23690C EQ PUSH2 0x111 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x90C JUMP JUMPDEST PUSH2 0x1DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x954 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDF SWAP2 SWAP1 PUSH2 0x9A5 JUMP JUMPDEST PUSH2 0x23B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF1 SWAP2 SWAP1 PUSH2 0xA6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10F PUSH2 0x24D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x126 SWAP2 SWAP1 PUSH2 0xBC2 JUMP JUMPDEST PUSH2 0x261 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x142 PUSH2 0x2B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14F SWAP2 SWAP1 PUSH2 0xC5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16D SWAP2 SWAP1 PUSH2 0xE23 JUMP JUMPDEST PUSH2 0x2DA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x196 SWAP2 SWAP1 PUSH2 0xE9B JUMP JUMPDEST PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0xFF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0x103E JUMP JUMPDEST PUSH2 0x49E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH4 0x629AA694 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x234 JUMPI POP PUSH2 0x233 DUP3 PUSH2 0x611 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x246 DUP3 PUSH2 0x67B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x255 PUSH2 0x720 JUMP JUMPDEST PUSH2 0x25F PUSH1 0x0 PUSH2 0x519 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x269 PUSH2 0x720 JUMP JUMPDEST PUSH1 0x0 CALLVALUE EQ PUSH2 0x2A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF36BA73700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2AD DUP3 DUP3 PUSH2 0x799 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2E2 PUSH2 0x720 JUMP JUMPDEST PUSH1 0x0 CALLVALUE EQ PUSH2 0x31C JUMPI PUSH1 0x40 MLOAD PUSH32 0xF36BA73700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x357 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3BCC897900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ ISZERO PUSH2 0x393 JUMPI PUSH1 0x40 MLOAD PUSH32 0x97DA5F9500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x3E8 JUMPI PUSH2 0x3DD DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3B5 JUMPI PUSH2 0x3B4 PUSH2 0x106B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3D0 JUMPI PUSH2 0x3CF PUSH2 0x106B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x799 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x396 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x40A JUMPI PUSH2 0x409 PUSH2 0xA97 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x43D JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x428 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x498 JUMPI PUSH2 0x46F DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x462 JUMPI PUSH2 0x461 PUSH2 0x106B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x67B JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x482 JUMPI PUSH2 0x481 PUSH2 0x106B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x443 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4A6 PUSH2 0x720 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x50D JUMPI PUSH1 0x40 MLOAD PUSH32 0x1AD8836C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x516 DUP2 PUSH2 0x519 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x521 PUSH2 0x2B1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x60E JUMPI DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x69B SWAP1 PUSH2 0x10C9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6C7 SWAP1 PUSH2 0x10C9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x714 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6E9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x714 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6F7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x73F PUSH2 0x2B1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x797 JUMPI CALLER PUSH1 0x40 MLOAD PUSH32 0xBF1169C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78E SWAP2 SWAP1 PUSH2 0xC5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x7C0 SWAP3 SWAP2 SWAP1 PUSH2 0x7FD JUMP JUMPDEST POP DUP2 PUSH32 0xECE574603820D07BC9B91F2A932BAADF4628AABCB8AFBA49776529C14A6104B2 DUP3 PUSH1 0x40 MLOAD PUSH2 0x7F1 SWAP2 SWAP1 PUSH2 0xA6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x809 SWAP1 PUSH2 0x10C9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x82B JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x872 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x844 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x872 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x872 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x871 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x856 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x87F SWAP2 SWAP1 PUSH2 0x883 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x89C JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x884 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8E9 DUP2 PUSH2 0x8B4 JUMP JUMPDEST DUP2 EQ PUSH2 0x8F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x906 DUP2 PUSH2 0x8E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x922 JUMPI PUSH2 0x921 PUSH2 0x8AA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x930 DUP5 DUP3 DUP6 ADD PUSH2 0x8F7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x94E DUP2 PUSH2 0x939 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x969 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x945 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x982 DUP2 PUSH2 0x96F JUMP JUMPDEST DUP2 EQ PUSH2 0x98D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x99F DUP2 PUSH2 0x979 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9BB JUMPI PUSH2 0x9BA PUSH2 0x8AA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9C9 DUP5 DUP3 DUP6 ADD PUSH2 0x990 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA0C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x9F1 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xA1B JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA3D DUP3 PUSH2 0x9D2 JUMP JUMPDEST PUSH2 0xA47 DUP2 DUP6 PUSH2 0x9DD JUMP JUMPDEST SWAP4 POP PUSH2 0xA57 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x9EE JUMP JUMPDEST PUSH2 0xA60 DUP2 PUSH2 0xA21 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA85 DUP2 DUP5 PUSH2 0xA32 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xACF DUP3 PUSH2 0xA21 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xAEE JUMPI PUSH2 0xAED PUSH2 0xA97 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB01 PUSH2 0x8A0 JUMP JUMPDEST SWAP1 POP PUSH2 0xB0D DUP3 DUP3 PUSH2 0xAC6 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xB2D JUMPI PUSH2 0xB2C PUSH2 0xA97 JUMP JUMPDEST JUMPDEST PUSH2 0xB36 DUP3 PUSH2 0xA21 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB65 PUSH2 0xB60 DUP5 PUSH2 0xB12 JUMP JUMPDEST PUSH2 0xAF7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xB81 JUMPI PUSH2 0xB80 PUSH2 0xA92 JUMP JUMPDEST JUMPDEST PUSH2 0xB8C DUP5 DUP3 DUP6 PUSH2 0xB43 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xBA9 JUMPI PUSH2 0xBA8 PUSH2 0xA8D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xBB9 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xB52 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBD9 JUMPI PUSH2 0xBD8 PUSH2 0x8AA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBE7 DUP6 DUP3 DUP7 ADD PUSH2 0x990 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC08 JUMPI PUSH2 0xC07 PUSH2 0x8AF JUMP JUMPDEST JUMPDEST PUSH2 0xC14 DUP6 DUP3 DUP7 ADD PUSH2 0xB94 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC49 DUP3 PUSH2 0xC1E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC59 DUP2 PUSH2 0xC3E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC74 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC50 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xC95 JUMPI PUSH2 0xC94 PUSH2 0xA97 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCBE PUSH2 0xCB9 DUP5 PUSH2 0xC7A JUMP JUMPDEST PUSH2 0xAF7 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xCE1 JUMPI PUSH2 0xCE0 PUSH2 0xCA6 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD0A JUMPI DUP1 PUSH2 0xCF6 DUP9 DUP3 PUSH2 0x990 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xCE3 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD29 JUMPI PUSH2 0xD28 PUSH2 0xA8D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD39 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xCAB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xD5D JUMPI PUSH2 0xD5C PUSH2 0xA97 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD81 PUSH2 0xD7C DUP5 PUSH2 0xD42 JUMP JUMPDEST PUSH2 0xAF7 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xDA4 JUMPI PUSH2 0xDA3 PUSH2 0xCA6 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xDEB JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDC9 JUMPI PUSH2 0xDC8 PUSH2 0xA8D JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0xDD6 DUP10 DUP3 PUSH2 0xB94 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDA6 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE0A JUMPI PUSH2 0xE09 PUSH2 0xA8D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xE1A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xD6E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE3A JUMPI PUSH2 0xE39 PUSH2 0x8AA JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE58 JUMPI PUSH2 0xE57 PUSH2 0x8AF JUMP JUMPDEST JUMPDEST PUSH2 0xE64 DUP6 DUP3 DUP7 ADD PUSH2 0xD14 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE85 JUMPI PUSH2 0xE84 PUSH2 0x8AF JUMP JUMPDEST JUMPDEST PUSH2 0xE91 DUP6 DUP3 DUP7 ADD PUSH2 0xDF5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEB1 JUMPI PUSH2 0xEB0 PUSH2 0x8AA JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xECF JUMPI PUSH2 0xECE PUSH2 0x8AF JUMP JUMPDEST JUMPDEST PUSH2 0xEDB DUP5 DUP3 DUP6 ADD PUSH2 0xD14 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF2C DUP3 PUSH2 0x9D2 JUMP JUMPDEST PUSH2 0xF36 DUP2 DUP6 PUSH2 0xF10 JUMP JUMPDEST SWAP4 POP PUSH2 0xF46 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x9EE JUMP JUMPDEST PUSH2 0xF4F DUP2 PUSH2 0xA21 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF66 DUP4 DUP4 PUSH2 0xF21 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF86 DUP3 PUSH2 0xEE4 JUMP JUMPDEST PUSH2 0xF90 DUP2 DUP6 PUSH2 0xEEF JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0xFA2 DUP6 PUSH2 0xF00 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xFDE JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0xFBF DUP6 DUP3 PUSH2 0xF5A JUMP JUMPDEST SWAP5 POP PUSH2 0xFCA DUP4 PUSH2 0xF6E JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xFA6 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x100A DUP2 DUP5 PUSH2 0xF7B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x101B DUP2 PUSH2 0xC3E JUMP JUMPDEST DUP2 EQ PUSH2 0x1026 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1038 DUP2 PUSH2 0x1012 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1054 JUMPI PUSH2 0x1053 PUSH2 0x8AA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1062 DUP5 DUP3 DUP6 ADD PUSH2 0x1029 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x10E1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x10F5 JUMPI PUSH2 0x10F4 PUSH2 0x109A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 ORIGIN 0x4F PUSH28 0xE711CE5199F4F8D2498457982296FE956D4DB39F2262BD1F7AD97F00 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ","sourceMap":"649:610:0:-:0;;;1053:204;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1133:1;1109:26;;:12;:26;;;1105:100;;;1158:36;;;;;;;;;;;;;;1105:100;1214:36;1237:12;1214:22;;;;;:36;;:::i;:::-;1053:204;649:610;;2133:194:3;2213:7;:5;;;:7;;:::i;:::-;2201:19;;:8;:19;;;2197:124;;2270:8;2241:38;;2262:6;;;;;;;;;;2241:38;;;;;;;;;;;;2302:8;2293:6;;:17;;;;;;;;;;;;;;;;;;2197:124;2133:194;:::o;736:85::-;782:7;808:6;;;;;;;;;;;801:13;;736:85;:::o;88:117:29:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;649:610:0:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_379":{"entryPoint":1824,"id":379,"parameterSlots":0,"returnSlots":0},"@_getData_228":{"entryPoint":1659,"id":228,"parameterSlots":1,"returnSlots":1},"@_setData_248":{"entryPoint":1945,"id":248,"parameterSlots":2,"returnSlots":0},"@_setOwner_401":{"entryPoint":1305,"id":401,"parameterSlots":1,"returnSlots":0},"@getDataBatch_126":{"entryPoint":1005,"id":126,"parameterSlots":1,"returnSlots":1},"@getData_79":{"entryPoint":571,"id":79,"parameterSlots":1,"returnSlots":1},"@owner_316":{"entryPoint":689,"id":316,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_338":{"entryPoint":589,"id":338,"parameterSlots":0,"returnSlots":0},"@setDataBatch_215":{"entryPoint":730,"id":215,"parameterSlots":2,"returnSlots":0},"@setData_151":{"entryPoint":609,"id":151,"parameterSlots":2,"returnSlots":0},"@supportsInterface_269":{"entryPoint":474,"id":269,"parameterSlots":1,"returnSlots":1},"@supportsInterface_3795":{"entryPoint":1553,"id":3795,"parameterSlots":1,"returnSlots":1},"@transferOwnership_362":{"entryPoint":1182,"id":362,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":3243,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":3438,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":2898,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":4137,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":3348,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":3573,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":2448,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":2295,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":2964,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":4158,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":3739,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":3619,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":2469,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_bytes_memory_ptr":{"entryPoint":3010,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":2316,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr":{"entryPoint":3930,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3152,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":3963,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":2373,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr":{"entryPoint":3873,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":2610,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3167,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":4080,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":2388,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":2667,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":2807,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":2208,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":3194,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":3394,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":2834,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":3840,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":3812,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":2514,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":3950,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":3823,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr":{"entryPoint":3856,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":2525,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3134,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":2361,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":2415,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":2228,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3102,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":2883,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":2542,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":4297,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":2758,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x22":{"entryPoint":4250,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":4203,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":2711,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":2701,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":3238,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":2706,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":2223,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2218,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2593,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":4114,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":2425,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":2272,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:15704:29","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:29","statements":[{"nodeType":"YulAssignment","src":"57:19:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:29","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:29"},"nodeType":"YulFunctionCall","src":"67:9:29"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:29"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:29","type":""}],"src":"7:75:29"},{"body":{"nodeType":"YulBlock","src":"177:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:29"},"nodeType":"YulFunctionCall","src":"187:12:29"},"nodeType":"YulExpressionStatement","src":"187:12:29"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:29"},{"body":{"nodeType":"YulBlock","src":"300:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:29"},"nodeType":"YulFunctionCall","src":"310:12:29"},"nodeType":"YulExpressionStatement","src":"310:12:29"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:29"},{"body":{"nodeType":"YulBlock","src":"378:105:29","statements":[{"nodeType":"YulAssignment","src":"388:89:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:29","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:29"},"nodeType":"YulFunctionCall","src":"399:78:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:29"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:29","type":""}],"src":"334:149:29"},{"body":{"nodeType":"YulBlock","src":"531:78:29","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:29"},"nodeType":"YulFunctionCall","src":"589:12:29"},"nodeType":"YulExpressionStatement","src":"589:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:29"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:29"},"nodeType":"YulFunctionCall","src":"561:23:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:29"},"nodeType":"YulFunctionCall","src":"551:34:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:29"},"nodeType":"YulFunctionCall","src":"544:42:29"},"nodeType":"YulIf","src":"541:62:29"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:29","type":""}],"src":"489:120:29"},{"body":{"nodeType":"YulBlock","src":"666:86:29","statements":[{"nodeType":"YulAssignment","src":"676:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:29"},"nodeType":"YulFunctionCall","src":"685:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:29"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:29"},"nodeType":"YulFunctionCall","src":"714:32:29"},"nodeType":"YulExpressionStatement","src":"714:32:29"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:29","type":""}],"src":"615:137:29"},{"body":{"nodeType":"YulBlock","src":"823:262:29","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:29"},"nodeType":"YulFunctionCall","src":"871:79:29"},"nodeType":"YulExpressionStatement","src":"871:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:29"},"nodeType":"YulFunctionCall","src":"840:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:29"},"nodeType":"YulFunctionCall","src":"836:32:29"},"nodeType":"YulIf","src":"833:119:29"},{"nodeType":"YulBlock","src":"962:116:29","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:29","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:29"},"nodeType":"YulFunctionCall","src":"1036:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:29"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:29"},"nodeType":"YulFunctionCall","src":"1016:52:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:29"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:29","type":""}],"src":"758:327:29"},{"body":{"nodeType":"YulBlock","src":"1133:48:29","statements":[{"nodeType":"YulAssignment","src":"1143:32:29","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:29"},"nodeType":"YulFunctionCall","src":"1161:13:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:29"},"nodeType":"YulFunctionCall","src":"1154:21:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:29"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:29","type":""}],"src":"1091:90:29"},{"body":{"nodeType":"YulBlock","src":"1246:50:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:29"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:29"},"nodeType":"YulFunctionCall","src":"1268:21:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:29"},"nodeType":"YulFunctionCall","src":"1256:34:29"},"nodeType":"YulExpressionStatement","src":"1256:34:29"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:29","type":""}],"src":"1187:109:29"},{"body":{"nodeType":"YulBlock","src":"1394:118:29","statements":[{"nodeType":"YulAssignment","src":"1404:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:29"},"nodeType":"YulFunctionCall","src":"1412:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:29"},"nodeType":"YulFunctionCall","src":"1487:17:29"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:29"},"nodeType":"YulFunctionCall","src":"1440:65:29"},"nodeType":"YulExpressionStatement","src":"1440:65:29"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:29","type":""}],"src":"1302:210:29"},{"body":{"nodeType":"YulBlock","src":"1563:32:29","statements":[{"nodeType":"YulAssignment","src":"1573:16:29","value":{"name":"value","nodeType":"YulIdentifier","src":"1584:5:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1573:7:29"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1545:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1555:7:29","type":""}],"src":"1518:77:29"},{"body":{"nodeType":"YulBlock","src":"1644:79:29","statements":[{"body":{"nodeType":"YulBlock","src":"1701:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1710:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1713:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1703:6:29"},"nodeType":"YulFunctionCall","src":"1703:12:29"},"nodeType":"YulExpressionStatement","src":"1703:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1667:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1692:5:29"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"1674:17:29"},"nodeType":"YulFunctionCall","src":"1674:24:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1664:2:29"},"nodeType":"YulFunctionCall","src":"1664:35:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1657:6:29"},"nodeType":"YulFunctionCall","src":"1657:43:29"},"nodeType":"YulIf","src":"1654:63:29"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1637:5:29","type":""}],"src":"1601:122:29"},{"body":{"nodeType":"YulBlock","src":"1781:87:29","statements":[{"nodeType":"YulAssignment","src":"1791:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1813:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1800:12:29"},"nodeType":"YulFunctionCall","src":"1800:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1791:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1856:5:29"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"1829:26:29"},"nodeType":"YulFunctionCall","src":"1829:33:29"},"nodeType":"YulExpressionStatement","src":"1829:33:29"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1759:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"1767:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1775:5:29","type":""}],"src":"1729:139:29"},{"body":{"nodeType":"YulBlock","src":"1940:263:29","statements":[{"body":{"nodeType":"YulBlock","src":"1986:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1988:77:29"},"nodeType":"YulFunctionCall","src":"1988:79:29"},"nodeType":"YulExpressionStatement","src":"1988:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1961:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"1970:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1957:3:29"},"nodeType":"YulFunctionCall","src":"1957:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"1982:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1953:3:29"},"nodeType":"YulFunctionCall","src":"1953:32:29"},"nodeType":"YulIf","src":"1950:119:29"},{"nodeType":"YulBlock","src":"2079:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"2094:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"2108:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2098:6:29","type":""}]},{"nodeType":"YulAssignment","src":"2123:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2158:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"2169:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2154:3:29"},"nodeType":"YulFunctionCall","src":"2154:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2178:7:29"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"2133:20:29"},"nodeType":"YulFunctionCall","src":"2133:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2123:6:29"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1910:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1921:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1933:6:29","type":""}],"src":"1874:329:29"},{"body":{"nodeType":"YulBlock","src":"2267:40:29","statements":[{"nodeType":"YulAssignment","src":"2278:22:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2294:5:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2288:5:29"},"nodeType":"YulFunctionCall","src":"2288:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2278:6:29"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2250:5:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2260:6:29","type":""}],"src":"2209:98:29"},{"body":{"nodeType":"YulBlock","src":"2408:73:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2425:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"2430:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2418:6:29"},"nodeType":"YulFunctionCall","src":"2418:19:29"},"nodeType":"YulExpressionStatement","src":"2418:19:29"},{"nodeType":"YulAssignment","src":"2446:29:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2465:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"2470:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2461:3:29"},"nodeType":"YulFunctionCall","src":"2461:14:29"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"2446:11:29"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2380:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"2385:6:29","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"2396:11:29","type":""}],"src":"2313:168:29"},{"body":{"nodeType":"YulBlock","src":"2536:258:29","statements":[{"nodeType":"YulVariableDeclaration","src":"2546:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"2555:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2550:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"2615:63:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2640:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"2645:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2636:3:29"},"nodeType":"YulFunctionCall","src":"2636:11:29"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2659:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"2664:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2655:3:29"},"nodeType":"YulFunctionCall","src":"2655:11:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2649:5:29"},"nodeType":"YulFunctionCall","src":"2649:18:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2629:6:29"},"nodeType":"YulFunctionCall","src":"2629:39:29"},"nodeType":"YulExpressionStatement","src":"2629:39:29"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2576:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"2579:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2573:2:29"},"nodeType":"YulFunctionCall","src":"2573:13:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2587:19:29","statements":[{"nodeType":"YulAssignment","src":"2589:15:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2598:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"2601:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2594:3:29"},"nodeType":"YulFunctionCall","src":"2594:10:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2589:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"2569:3:29","statements":[]},"src":"2565:113:29"},{"body":{"nodeType":"YulBlock","src":"2712:76:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2762:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"2767:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2758:3:29"},"nodeType":"YulFunctionCall","src":"2758:16:29"},{"kind":"number","nodeType":"YulLiteral","src":"2776:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2751:6:29"},"nodeType":"YulFunctionCall","src":"2751:27:29"},"nodeType":"YulExpressionStatement","src":"2751:27:29"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2693:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"2696:6:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2690:2:29"},"nodeType":"YulFunctionCall","src":"2690:13:29"},"nodeType":"YulIf","src":"2687:101:29"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2518:3:29","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2523:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"2528:6:29","type":""}],"src":"2487:307:29"},{"body":{"nodeType":"YulBlock","src":"2848:54:29","statements":[{"nodeType":"YulAssignment","src":"2858:38:29","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2876:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"2883:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2872:3:29"},"nodeType":"YulFunctionCall","src":"2872:14:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2892:2:29","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2888:3:29"},"nodeType":"YulFunctionCall","src":"2888:7:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2868:3:29"},"nodeType":"YulFunctionCall","src":"2868:28:29"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2858:6:29"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2831:5:29","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2841:6:29","type":""}],"src":"2800:102:29"},{"body":{"nodeType":"YulBlock","src":"2998:270:29","statements":[{"nodeType":"YulVariableDeclaration","src":"3008:52:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3054:5:29"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"3022:31:29"},"nodeType":"YulFunctionCall","src":"3022:38:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3012:6:29","type":""}]},{"nodeType":"YulAssignment","src":"3069:77:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3134:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"3139:6:29"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3076:57:29"},"nodeType":"YulFunctionCall","src":"3076:70:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3069:3:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3181:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"3188:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3177:3:29"},"nodeType":"YulFunctionCall","src":"3177:16:29"},{"name":"pos","nodeType":"YulIdentifier","src":"3195:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"3200:6:29"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"3155:21:29"},"nodeType":"YulFunctionCall","src":"3155:52:29"},"nodeType":"YulExpressionStatement","src":"3155:52:29"},{"nodeType":"YulAssignment","src":"3216:46:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3227:3:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3254:6:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3232:21:29"},"nodeType":"YulFunctionCall","src":"3232:29:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3223:3:29"},"nodeType":"YulFunctionCall","src":"3223:39:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3216:3:29"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2979:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2986:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2994:3:29","type":""}],"src":"2908:360:29"},{"body":{"nodeType":"YulBlock","src":"3390:193:29","statements":[{"nodeType":"YulAssignment","src":"3400:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3412:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3423:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3408:3:29"},"nodeType":"YulFunctionCall","src":"3408:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3400:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3447:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3458:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3443:3:29"},"nodeType":"YulFunctionCall","src":"3443:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3466:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"3472:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3462:3:29"},"nodeType":"YulFunctionCall","src":"3462:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3436:6:29"},"nodeType":"YulFunctionCall","src":"3436:47:29"},"nodeType":"YulExpressionStatement","src":"3436:47:29"},{"nodeType":"YulAssignment","src":"3492:84:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3562:6:29"},{"name":"tail","nodeType":"YulIdentifier","src":"3571:4:29"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3500:61:29"},"nodeType":"YulFunctionCall","src":"3500:76:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3492:4:29"}]}]},"name":"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3362:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3374:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3385:4:29","type":""}],"src":"3274:309:29"},{"body":{"nodeType":"YulBlock","src":"3678:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3695:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3698:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3688:6:29"},"nodeType":"YulFunctionCall","src":"3688:12:29"},"nodeType":"YulExpressionStatement","src":"3688:12:29"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"3589:117:29"},{"body":{"nodeType":"YulBlock","src":"3801:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3818:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3821:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3811:6:29"},"nodeType":"YulFunctionCall","src":"3811:12:29"},"nodeType":"YulExpressionStatement","src":"3811:12:29"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"3712:117:29"},{"body":{"nodeType":"YulBlock","src":"3863:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3880:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3883:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3873:6:29"},"nodeType":"YulFunctionCall","src":"3873:88:29"},"nodeType":"YulExpressionStatement","src":"3873:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3977:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3980:4:29","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3970:6:29"},"nodeType":"YulFunctionCall","src":"3970:15:29"},"nodeType":"YulExpressionStatement","src":"3970:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4001:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4004:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3994:6:29"},"nodeType":"YulFunctionCall","src":"3994:15:29"},"nodeType":"YulExpressionStatement","src":"3994:15:29"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3835:180:29"},{"body":{"nodeType":"YulBlock","src":"4064:238:29","statements":[{"nodeType":"YulVariableDeclaration","src":"4074:58:29","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4096:6:29"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"4126:4:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4104:21:29"},"nodeType":"YulFunctionCall","src":"4104:27:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4092:3:29"},"nodeType":"YulFunctionCall","src":"4092:40:29"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"4078:10:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"4243:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4245:16:29"},"nodeType":"YulFunctionCall","src":"4245:18:29"},"nodeType":"YulExpressionStatement","src":"4245:18:29"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4186:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"4198:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4183:2:29"},"nodeType":"YulFunctionCall","src":"4183:34:29"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4222:10:29"},{"name":"memPtr","nodeType":"YulIdentifier","src":"4234:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4219:2:29"},"nodeType":"YulFunctionCall","src":"4219:22:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4180:2:29"},"nodeType":"YulFunctionCall","src":"4180:62:29"},"nodeType":"YulIf","src":"4177:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4281:2:29","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4285:10:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4274:6:29"},"nodeType":"YulFunctionCall","src":"4274:22:29"},"nodeType":"YulExpressionStatement","src":"4274:22:29"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"4050:6:29","type":""},{"name":"size","nodeType":"YulTypedName","src":"4058:4:29","type":""}],"src":"4021:281:29"},{"body":{"nodeType":"YulBlock","src":"4349:88:29","statements":[{"nodeType":"YulAssignment","src":"4359:30:29","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"4369:18:29"},"nodeType":"YulFunctionCall","src":"4369:20:29"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4359:6:29"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4418:6:29"},{"name":"size","nodeType":"YulIdentifier","src":"4426:4:29"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"4398:19:29"},"nodeType":"YulFunctionCall","src":"4398:33:29"},"nodeType":"YulExpressionStatement","src":"4398:33:29"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"4333:4:29","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"4342:6:29","type":""}],"src":"4308:129:29"},{"body":{"nodeType":"YulBlock","src":"4509:241:29","statements":[{"body":{"nodeType":"YulBlock","src":"4614:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4616:16:29"},"nodeType":"YulFunctionCall","src":"4616:18:29"},"nodeType":"YulExpressionStatement","src":"4616:18:29"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4586:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"4594:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4583:2:29"},"nodeType":"YulFunctionCall","src":"4583:30:29"},"nodeType":"YulIf","src":"4580:56:29"},{"nodeType":"YulAssignment","src":"4646:37:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4676:6:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4654:21:29"},"nodeType":"YulFunctionCall","src":"4654:29:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4646:4:29"}]},{"nodeType":"YulAssignment","src":"4720:23:29","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"4732:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"4738:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4728:3:29"},"nodeType":"YulFunctionCall","src":"4728:15:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4720:4:29"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"4493:6:29","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"4504:4:29","type":""}],"src":"4443:307:29"},{"body":{"nodeType":"YulBlock","src":"4807:103:29","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4830:3:29"},{"name":"src","nodeType":"YulIdentifier","src":"4835:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"4840:6:29"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"4817:12:29"},"nodeType":"YulFunctionCall","src":"4817:30:29"},"nodeType":"YulExpressionStatement","src":"4817:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4888:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"4893:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4884:3:29"},"nodeType":"YulFunctionCall","src":"4884:16:29"},{"kind":"number","nodeType":"YulLiteral","src":"4902:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4877:6:29"},"nodeType":"YulFunctionCall","src":"4877:27:29"},"nodeType":"YulExpressionStatement","src":"4877:27:29"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4789:3:29","type":""},{"name":"dst","nodeType":"YulTypedName","src":"4794:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"4799:6:29","type":""}],"src":"4756:154:29"},{"body":{"nodeType":"YulBlock","src":"4999:327:29","statements":[{"nodeType":"YulAssignment","src":"5009:74:29","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5075:6:29"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"5034:40:29"},"nodeType":"YulFunctionCall","src":"5034:48:29"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"5018:15:29"},"nodeType":"YulFunctionCall","src":"5018:65:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"5009:5:29"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"5099:5:29"},{"name":"length","nodeType":"YulIdentifier","src":"5106:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5092:6:29"},"nodeType":"YulFunctionCall","src":"5092:21:29"},"nodeType":"YulExpressionStatement","src":"5092:21:29"},{"nodeType":"YulVariableDeclaration","src":"5122:27:29","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"5137:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"5144:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5133:3:29"},"nodeType":"YulFunctionCall","src":"5133:16:29"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"5126:3:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"5187:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"5189:77:29"},"nodeType":"YulFunctionCall","src":"5189:79:29"},"nodeType":"YulExpressionStatement","src":"5189:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5168:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"5173:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5164:3:29"},"nodeType":"YulFunctionCall","src":"5164:16:29"},{"name":"end","nodeType":"YulIdentifier","src":"5182:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5161:2:29"},"nodeType":"YulFunctionCall","src":"5161:25:29"},"nodeType":"YulIf","src":"5158:112:29"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5303:3:29"},{"name":"dst","nodeType":"YulIdentifier","src":"5308:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"5313:6:29"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"5279:23:29"},"nodeType":"YulFunctionCall","src":"5279:41:29"},"nodeType":"YulExpressionStatement","src":"5279:41:29"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4972:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"4977:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"4985:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4993:5:29","type":""}],"src":"4916:410:29"},{"body":{"nodeType":"YulBlock","src":"5406:277:29","statements":[{"body":{"nodeType":"YulBlock","src":"5455:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"5457:77:29"},"nodeType":"YulFunctionCall","src":"5457:79:29"},"nodeType":"YulExpressionStatement","src":"5457:79:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5434:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"5442:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5430:3:29"},"nodeType":"YulFunctionCall","src":"5430:17:29"},{"name":"end","nodeType":"YulIdentifier","src":"5449:3:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5426:3:29"},"nodeType":"YulFunctionCall","src":"5426:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5419:6:29"},"nodeType":"YulFunctionCall","src":"5419:35:29"},"nodeType":"YulIf","src":"5416:122:29"},{"nodeType":"YulVariableDeclaration","src":"5547:34:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5574:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5561:12:29"},"nodeType":"YulFunctionCall","src":"5561:20:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5551:6:29","type":""}]},{"nodeType":"YulAssignment","src":"5590:87:29","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5650:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"5658:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5646:3:29"},"nodeType":"YulFunctionCall","src":"5646:17:29"},{"name":"length","nodeType":"YulIdentifier","src":"5665:6:29"},{"name":"end","nodeType":"YulIdentifier","src":"5673:3:29"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"5599:46:29"},"nodeType":"YulFunctionCall","src":"5599:78:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"5590:5:29"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5384:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"5392:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"5400:5:29","type":""}],"src":"5345:338:29"},{"body":{"nodeType":"YulBlock","src":"5781:560:29","statements":[{"body":{"nodeType":"YulBlock","src":"5827:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5829:77:29"},"nodeType":"YulFunctionCall","src":"5829:79:29"},"nodeType":"YulExpressionStatement","src":"5829:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5802:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"5811:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5798:3:29"},"nodeType":"YulFunctionCall","src":"5798:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"5823:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5794:3:29"},"nodeType":"YulFunctionCall","src":"5794:32:29"},"nodeType":"YulIf","src":"5791:119:29"},{"nodeType":"YulBlock","src":"5920:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"5935:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"5949:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5939:6:29","type":""}]},{"nodeType":"YulAssignment","src":"5964:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5999:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"6010:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5995:3:29"},"nodeType":"YulFunctionCall","src":"5995:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6019:7:29"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"5974:20:29"},"nodeType":"YulFunctionCall","src":"5974:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5964:6:29"}]}]},{"nodeType":"YulBlock","src":"6047:287:29","statements":[{"nodeType":"YulVariableDeclaration","src":"6062:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6093:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6104:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6089:3:29"},"nodeType":"YulFunctionCall","src":"6089:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6076:12:29"},"nodeType":"YulFunctionCall","src":"6076:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6066:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"6155:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"6157:77:29"},"nodeType":"YulFunctionCall","src":"6157:79:29"},"nodeType":"YulExpressionStatement","src":"6157:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6127:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"6135:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6124:2:29"},"nodeType":"YulFunctionCall","src":"6124:30:29"},"nodeType":"YulIf","src":"6121:117:29"},{"nodeType":"YulAssignment","src":"6252:72:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6296:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"6307:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6292:3:29"},"nodeType":"YulFunctionCall","src":"6292:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6316:7:29"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"6262:29:29"},"nodeType":"YulFunctionCall","src":"6262:62:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6252:6:29"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5743:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5754:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5766:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5774:6:29","type":""}],"src":"5689:652:29"},{"body":{"nodeType":"YulBlock","src":"6392:81:29","statements":[{"nodeType":"YulAssignment","src":"6402:65:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6417:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"6424:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6413:3:29"},"nodeType":"YulFunctionCall","src":"6413:54:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6402:7:29"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6374:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6384:7:29","type":""}],"src":"6347:126:29"},{"body":{"nodeType":"YulBlock","src":"6524:51:29","statements":[{"nodeType":"YulAssignment","src":"6534:35:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6563:5:29"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"6545:17:29"},"nodeType":"YulFunctionCall","src":"6545:24:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6534:7:29"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6506:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6516:7:29","type":""}],"src":"6479:96:29"},{"body":{"nodeType":"YulBlock","src":"6646:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6663:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6686:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6668:17:29"},"nodeType":"YulFunctionCall","src":"6668:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6656:6:29"},"nodeType":"YulFunctionCall","src":"6656:37:29"},"nodeType":"YulExpressionStatement","src":"6656:37:29"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6634:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6641:3:29","type":""}],"src":"6581:118:29"},{"body":{"nodeType":"YulBlock","src":"6803:124:29","statements":[{"nodeType":"YulAssignment","src":"6813:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6825:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6836:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6821:3:29"},"nodeType":"YulFunctionCall","src":"6821:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6813:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6893:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6906:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6917:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6902:3:29"},"nodeType":"YulFunctionCall","src":"6902:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6849:43:29"},"nodeType":"YulFunctionCall","src":"6849:71:29"},"nodeType":"YulExpressionStatement","src":"6849:71:29"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6775:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6787:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6798:4:29","type":""}],"src":"6705:222:29"},{"body":{"nodeType":"YulBlock","src":"7015:229:29","statements":[{"body":{"nodeType":"YulBlock","src":"7120:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7122:16:29"},"nodeType":"YulFunctionCall","src":"7122:18:29"},"nodeType":"YulExpressionStatement","src":"7122:18:29"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7092:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"7100:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7089:2:29"},"nodeType":"YulFunctionCall","src":"7089:30:29"},"nodeType":"YulIf","src":"7086:56:29"},{"nodeType":"YulAssignment","src":"7152:25:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7164:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"7172:4:29","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7160:3:29"},"nodeType":"YulFunctionCall","src":"7160:17:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"7152:4:29"}]},{"nodeType":"YulAssignment","src":"7214:23:29","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7226:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"7232:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7222:3:29"},"nodeType":"YulFunctionCall","src":"7222:15:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"7214:4:29"}]}]},"name":"array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"6999:6:29","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"7010:4:29","type":""}],"src":"6933:311:29"},{"body":{"nodeType":"YulBlock","src":"7339:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7356:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7359:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7349:6:29"},"nodeType":"YulFunctionCall","src":"7349:12:29"},"nodeType":"YulExpressionStatement","src":"7349:12:29"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"7250:117:29"},{"body":{"nodeType":"YulBlock","src":"7492:608:29","statements":[{"nodeType":"YulAssignment","src":"7502:90:29","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7584:6:29"}],"functionName":{"name":"array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7527:56:29"},"nodeType":"YulFunctionCall","src":"7527:64:29"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"7511:15:29"},"nodeType":"YulFunctionCall","src":"7511:81:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7502:5:29"}]},{"nodeType":"YulVariableDeclaration","src":"7601:16:29","value":{"name":"array","nodeType":"YulIdentifier","src":"7612:5:29"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"7605:3:29","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7634:5:29"},{"name":"length","nodeType":"YulIdentifier","src":"7641:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7627:6:29"},"nodeType":"YulFunctionCall","src":"7627:21:29"},"nodeType":"YulExpressionStatement","src":"7627:21:29"},{"nodeType":"YulAssignment","src":"7657:23:29","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7668:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"7675:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7664:3:29"},"nodeType":"YulFunctionCall","src":"7664:16:29"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"7657:3:29"}]},{"nodeType":"YulVariableDeclaration","src":"7690:44:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7708:6:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7720:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"7728:4:29","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7716:3:29"},"nodeType":"YulFunctionCall","src":"7716:17:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7704:3:29"},"nodeType":"YulFunctionCall","src":"7704:30:29"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"7694:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"7762:103:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"7776:77:29"},"nodeType":"YulFunctionCall","src":"7776:79:29"},"nodeType":"YulExpressionStatement","src":"7776:79:29"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"7749:6:29"},{"name":"end","nodeType":"YulIdentifier","src":"7757:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7746:2:29"},"nodeType":"YulFunctionCall","src":"7746:15:29"},"nodeType":"YulIf","src":"7743:122:29"},{"body":{"nodeType":"YulBlock","src":"7950:144:29","statements":[{"nodeType":"YulVariableDeclaration","src":"7965:21:29","value":{"name":"src","nodeType":"YulIdentifier","src":"7983:3:29"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"7969:10:29","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8007:3:29"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"8033:10:29"},{"name":"end","nodeType":"YulIdentifier","src":"8045:3:29"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"8012:20:29"},"nodeType":"YulFunctionCall","src":"8012:37:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8000:6:29"},"nodeType":"YulFunctionCall","src":"8000:50:29"},"nodeType":"YulExpressionStatement","src":"8000:50:29"},{"nodeType":"YulAssignment","src":"8063:21:29","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8074:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"8079:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8070:3:29"},"nodeType":"YulFunctionCall","src":"8070:14:29"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"8063:3:29"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7903:3:29"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"7908:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7900:2:29"},"nodeType":"YulFunctionCall","src":"7900:15:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7916:25:29","statements":[{"nodeType":"YulAssignment","src":"7918:21:29","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7929:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"7934:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7925:3:29"},"nodeType":"YulFunctionCall","src":"7925:14:29"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"7918:3:29"}]}]},"pre":{"nodeType":"YulBlock","src":"7878:21:29","statements":[{"nodeType":"YulVariableDeclaration","src":"7880:17:29","value":{"name":"offset","nodeType":"YulIdentifier","src":"7891:6:29"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"7884:3:29","type":""}]}]},"src":"7874:220:29"}]},"name":"abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7462:6:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"7470:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"7478:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7486:5:29","type":""}],"src":"7390:710:29"},{"body":{"nodeType":"YulBlock","src":"8200:293:29","statements":[{"body":{"nodeType":"YulBlock","src":"8249:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8251:77:29"},"nodeType":"YulFunctionCall","src":"8251:79:29"},"nodeType":"YulExpressionStatement","src":"8251:79:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8228:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"8236:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8224:3:29"},"nodeType":"YulFunctionCall","src":"8224:17:29"},{"name":"end","nodeType":"YulIdentifier","src":"8243:3:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8220:3:29"},"nodeType":"YulFunctionCall","src":"8220:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8213:6:29"},"nodeType":"YulFunctionCall","src":"8213:35:29"},"nodeType":"YulIf","src":"8210:122:29"},{"nodeType":"YulVariableDeclaration","src":"8341:34:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8368:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8355:12:29"},"nodeType":"YulFunctionCall","src":"8355:20:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8345:6:29","type":""}]},{"nodeType":"YulAssignment","src":"8384:103:29","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8460:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"8468:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8456:3:29"},"nodeType":"YulFunctionCall","src":"8456:17:29"},{"name":"length","nodeType":"YulIdentifier","src":"8475:6:29"},{"name":"end","nodeType":"YulIdentifier","src":"8483:3:29"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8393:62:29"},"nodeType":"YulFunctionCall","src":"8393:94:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8384:5:29"}]}]},"name":"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8178:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"8186:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8194:5:29","type":""}],"src":"8123:370:29"},{"body":{"nodeType":"YulBlock","src":"8590:229:29","statements":[{"body":{"nodeType":"YulBlock","src":"8695:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8697:16:29"},"nodeType":"YulFunctionCall","src":"8697:18:29"},"nodeType":"YulExpressionStatement","src":"8697:18:29"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8667:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"8675:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8664:2:29"},"nodeType":"YulFunctionCall","src":"8664:30:29"},"nodeType":"YulIf","src":"8661:56:29"},{"nodeType":"YulAssignment","src":"8727:25:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8739:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"8747:4:29","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8735:3:29"},"nodeType":"YulFunctionCall","src":"8735:17:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8727:4:29"}]},{"nodeType":"YulAssignment","src":"8789:23:29","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8801:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"8807:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8797:3:29"},"nodeType":"YulFunctionCall","src":"8797:15:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8789:4:29"}]}]},"name":"array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"8574:6:29","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"8585:4:29","type":""}],"src":"8499:320:29"},{"body":{"nodeType":"YulBlock","src":"8951:831:29","statements":[{"nodeType":"YulAssignment","src":"8961:99:29","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9052:6:29"}],"functionName":{"name":"array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8986:65:29"},"nodeType":"YulFunctionCall","src":"8986:73:29"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"8970:15:29"},"nodeType":"YulFunctionCall","src":"8970:90:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8961:5:29"}]},{"nodeType":"YulVariableDeclaration","src":"9069:16:29","value":{"name":"array","nodeType":"YulIdentifier","src":"9080:5:29"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"9073:3:29","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"9102:5:29"},{"name":"length","nodeType":"YulIdentifier","src":"9109:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9095:6:29"},"nodeType":"YulFunctionCall","src":"9095:21:29"},"nodeType":"YulExpressionStatement","src":"9095:21:29"},{"nodeType":"YulAssignment","src":"9125:23:29","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"9136:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"9143:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9132:3:29"},"nodeType":"YulFunctionCall","src":"9132:16:29"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"9125:3:29"}]},{"nodeType":"YulVariableDeclaration","src":"9158:44:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9176:6:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9188:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"9196:4:29","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9184:3:29"},"nodeType":"YulFunctionCall","src":"9184:17:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9172:3:29"},"nodeType":"YulFunctionCall","src":"9172:30:29"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"9162:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"9230:103:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"9244:77:29"},"nodeType":"YulFunctionCall","src":"9244:79:29"},"nodeType":"YulExpressionStatement","src":"9244:79:29"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"9217:6:29"},{"name":"end","nodeType":"YulIdentifier","src":"9225:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9214:2:29"},"nodeType":"YulFunctionCall","src":"9214:15:29"},"nodeType":"YulIf","src":"9211:122:29"},{"body":{"nodeType":"YulBlock","src":"9418:358:29","statements":[{"nodeType":"YulVariableDeclaration","src":"9433:36:29","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9465:3:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9452:12:29"},"nodeType":"YulFunctionCall","src":"9452:17:29"},"variables":[{"name":"innerOffset","nodeType":"YulTypedName","src":"9437:11:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"9521:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"9523:77:29"},"nodeType":"YulFunctionCall","src":"9523:79:29"},"nodeType":"YulExpressionStatement","src":"9523:79:29"}]},"condition":{"arguments":[{"name":"innerOffset","nodeType":"YulIdentifier","src":"9488:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"9501:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9485:2:29"},"nodeType":"YulFunctionCall","src":"9485:35:29"},"nodeType":"YulIf","src":"9482:122:29"},{"nodeType":"YulVariableDeclaration","src":"9617:42:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9639:6:29"},{"name":"innerOffset","nodeType":"YulIdentifier","src":"9647:11:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9635:3:29"},"nodeType":"YulFunctionCall","src":"9635:24:29"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"9621:10:29","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9680:3:29"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"9715:10:29"},{"name":"end","nodeType":"YulIdentifier","src":"9727:3:29"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9685:29:29"},"nodeType":"YulFunctionCall","src":"9685:46:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9673:6:29"},"nodeType":"YulFunctionCall","src":"9673:59:29"},"nodeType":"YulExpressionStatement","src":"9673:59:29"},{"nodeType":"YulAssignment","src":"9745:21:29","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9756:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"9761:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9752:3:29"},"nodeType":"YulFunctionCall","src":"9752:14:29"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"9745:3:29"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9371:3:29"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"9376:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9368:2:29"},"nodeType":"YulFunctionCall","src":"9368:15:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9384:25:29","statements":[{"nodeType":"YulAssignment","src":"9386:21:29","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9397:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"9402:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9393:3:29"},"nodeType":"YulFunctionCall","src":"9393:14:29"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"9386:3:29"}]}]},"pre":{"nodeType":"YulBlock","src":"9346:21:29","statements":[{"nodeType":"YulVariableDeclaration","src":"9348:17:29","value":{"name":"offset","nodeType":"YulIdentifier","src":"9359:6:29"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"9352:3:29","type":""}]}]},"src":"9342:434:29"}]},"name":"abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8921:6:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"8929:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"8937:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8945:5:29","type":""}],"src":"8840:942:29"},{"body":{"nodeType":"YulBlock","src":"9889:302:29","statements":[{"body":{"nodeType":"YulBlock","src":"9938:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"9940:77:29"},"nodeType":"YulFunctionCall","src":"9940:79:29"},"nodeType":"YulExpressionStatement","src":"9940:79:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9917:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"9925:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9913:3:29"},"nodeType":"YulFunctionCall","src":"9913:17:29"},{"name":"end","nodeType":"YulIdentifier","src":"9932:3:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9909:3:29"},"nodeType":"YulFunctionCall","src":"9909:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9902:6:29"},"nodeType":"YulFunctionCall","src":"9902:35:29"},"nodeType":"YulIf","src":"9899:122:29"},{"nodeType":"YulVariableDeclaration","src":"10030:34:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10057:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10044:12:29"},"nodeType":"YulFunctionCall","src":"10044:20:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"10034:6:29","type":""}]},{"nodeType":"YulAssignment","src":"10073:112:29","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10158:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"10166:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10154:3:29"},"nodeType":"YulFunctionCall","src":"10154:17:29"},{"name":"length","nodeType":"YulIdentifier","src":"10173:6:29"},{"name":"end","nodeType":"YulIdentifier","src":"10181:3:29"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10082:71:29"},"nodeType":"YulFunctionCall","src":"10082:103:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"10073:5:29"}]}]},"name":"abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9867:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"9875:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"9883:5:29","type":""}],"src":"9803:388:29"},{"body":{"nodeType":"YulBlock","src":"10339:770:29","statements":[{"body":{"nodeType":"YulBlock","src":"10385:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10387:77:29"},"nodeType":"YulFunctionCall","src":"10387:79:29"},"nodeType":"YulExpressionStatement","src":"10387:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10360:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"10369:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10356:3:29"},"nodeType":"YulFunctionCall","src":"10356:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"10381:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10352:3:29"},"nodeType":"YulFunctionCall","src":"10352:32:29"},"nodeType":"YulIf","src":"10349:119:29"},{"nodeType":"YulBlock","src":"10478:302:29","statements":[{"nodeType":"YulVariableDeclaration","src":"10493:45:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10524:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10535:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10520:3:29"},"nodeType":"YulFunctionCall","src":"10520:17:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10507:12:29"},"nodeType":"YulFunctionCall","src":"10507:31:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10497:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"10585:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"10587:77:29"},"nodeType":"YulFunctionCall","src":"10587:79:29"},"nodeType":"YulExpressionStatement","src":"10587:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10557:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"10565:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10554:2:29"},"nodeType":"YulFunctionCall","src":"10554:30:29"},"nodeType":"YulIf","src":"10551:117:29"},{"nodeType":"YulAssignment","src":"10682:88:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10742:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"10753:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10738:3:29"},"nodeType":"YulFunctionCall","src":"10738:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10762:7:29"}],"functionName":{"name":"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10692:45:29"},"nodeType":"YulFunctionCall","src":"10692:78:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10682:6:29"}]}]},{"nodeType":"YulBlock","src":"10790:312:29","statements":[{"nodeType":"YulVariableDeclaration","src":"10805:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10836:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10847:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10832:3:29"},"nodeType":"YulFunctionCall","src":"10832:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10819:12:29"},"nodeType":"YulFunctionCall","src":"10819:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10809:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"10898:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"10900:77:29"},"nodeType":"YulFunctionCall","src":"10900:79:29"},"nodeType":"YulExpressionStatement","src":"10900:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10870:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"10878:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10867:2:29"},"nodeType":"YulFunctionCall","src":"10867:30:29"},"nodeType":"YulIf","src":"10864:117:29"},{"nodeType":"YulAssignment","src":"10995:97:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11064:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"11075:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11060:3:29"},"nodeType":"YulFunctionCall","src":"11060:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11084:7:29"}],"functionName":{"name":"abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"11005:54:29"},"nodeType":"YulFunctionCall","src":"11005:87:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10995:6:29"}]}]}]},"name":"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10301:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10312:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10324:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10332:6:29","type":""}],"src":"10197:912:29"},{"body":{"nodeType":"YulBlock","src":"11206:448:29","statements":[{"body":{"nodeType":"YulBlock","src":"11252:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11254:77:29"},"nodeType":"YulFunctionCall","src":"11254:79:29"},"nodeType":"YulExpressionStatement","src":"11254:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11227:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"11236:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11223:3:29"},"nodeType":"YulFunctionCall","src":"11223:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"11248:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11219:3:29"},"nodeType":"YulFunctionCall","src":"11219:32:29"},"nodeType":"YulIf","src":"11216:119:29"},{"nodeType":"YulBlock","src":"11345:302:29","statements":[{"nodeType":"YulVariableDeclaration","src":"11360:45:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11391:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"11402:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11387:3:29"},"nodeType":"YulFunctionCall","src":"11387:17:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11374:12:29"},"nodeType":"YulFunctionCall","src":"11374:31:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11364:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"11452:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"11454:77:29"},"nodeType":"YulFunctionCall","src":"11454:79:29"},"nodeType":"YulExpressionStatement","src":"11454:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11424:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"11432:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11421:2:29"},"nodeType":"YulFunctionCall","src":"11421:30:29"},"nodeType":"YulIf","src":"11418:117:29"},{"nodeType":"YulAssignment","src":"11549:88:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11609:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"11620:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11605:3:29"},"nodeType":"YulFunctionCall","src":"11605:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11629:7:29"}],"functionName":{"name":"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"11559:45:29"},"nodeType":"YulFunctionCall","src":"11559:78:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11549:6:29"}]}]}]},"name":"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11176:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11187:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11199:6:29","type":""}],"src":"11115:539:29"},{"body":{"nodeType":"YulBlock","src":"11743:40:29","statements":[{"nodeType":"YulAssignment","src":"11754:22:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11770:5:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11764:5:29"},"nodeType":"YulFunctionCall","src":"11764:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11754:6:29"}]}]},"name":"array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11726:5:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"11736:6:29","type":""}],"src":"11660:123:29"},{"body":{"nodeType":"YulBlock","src":"11909:73:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11926:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"11931:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11919:6:29"},"nodeType":"YulFunctionCall","src":"11919:19:29"},"nodeType":"YulExpressionStatement","src":"11919:19:29"},{"nodeType":"YulAssignment","src":"11947:29:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11966:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"11971:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11962:3:29"},"nodeType":"YulFunctionCall","src":"11962:14:29"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"11947:11:29"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11881:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"11886:6:29","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"11897:11:29","type":""}],"src":"11789:193:29"},{"body":{"nodeType":"YulBlock","src":"12069:60:29","statements":[{"nodeType":"YulAssignment","src":"12079:11:29","value":{"name":"ptr","nodeType":"YulIdentifier","src":"12087:3:29"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"12079:4:29"}]},{"nodeType":"YulAssignment","src":"12100:22:29","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"12112:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"12117:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12108:3:29"},"nodeType":"YulFunctionCall","src":"12108:14:29"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"12100:4:29"}]}]},"name":"array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"12056:3:29","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"12064:4:29","type":""}],"src":"11988:141:29"},{"body":{"nodeType":"YulBlock","src":"12220:73:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12237:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"12242:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12230:6:29"},"nodeType":"YulFunctionCall","src":"12230:19:29"},"nodeType":"YulExpressionStatement","src":"12230:19:29"},{"nodeType":"YulAssignment","src":"12258:29:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12277:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"12282:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12273:3:29"},"nodeType":"YulFunctionCall","src":"12273:14:29"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"12258:11:29"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12192:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"12197:6:29","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"12208:11:29","type":""}],"src":"12135:158:29"},{"body":{"nodeType":"YulBlock","src":"12379:260:29","statements":[{"nodeType":"YulVariableDeclaration","src":"12389:52:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12435:5:29"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"12403:31:29"},"nodeType":"YulFunctionCall","src":"12403:38:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12393:6:29","type":""}]},{"nodeType":"YulAssignment","src":"12450:67:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12505:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"12510:6:29"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"12457:47:29"},"nodeType":"YulFunctionCall","src":"12457:60:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12450:3:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12552:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"12559:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12548:3:29"},"nodeType":"YulFunctionCall","src":"12548:16:29"},{"name":"pos","nodeType":"YulIdentifier","src":"12566:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"12571:6:29"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"12526:21:29"},"nodeType":"YulFunctionCall","src":"12526:52:29"},"nodeType":"YulExpressionStatement","src":"12526:52:29"},{"nodeType":"YulAssignment","src":"12587:46:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12598:3:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12625:6:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"12603:21:29"},"nodeType":"YulFunctionCall","src":"12603:29:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12594:3:29"},"nodeType":"YulFunctionCall","src":"12594:39:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12587:3:29"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12360:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12367:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12375:3:29","type":""}],"src":"12299:340:29"},{"body":{"nodeType":"YulBlock","src":"12743:94:29","statements":[{"nodeType":"YulAssignment","src":"12753:78:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12819:6:29"},{"name":"pos","nodeType":"YulIdentifier","src":"12827:3:29"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"12767:51:29"},"nodeType":"YulFunctionCall","src":"12767:64:29"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"12753:10:29"}]}]},"name":"abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"12716:6:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12724:3:29","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"12732:10:29","type":""}],"src":"12645:192:29"},{"body":{"nodeType":"YulBlock","src":"12927:38:29","statements":[{"nodeType":"YulAssignment","src":"12937:22:29","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"12949:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"12954:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12945:3:29"},"nodeType":"YulFunctionCall","src":"12945:14:29"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"12937:4:29"}]}]},"name":"array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"12914:3:29","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"12922:4:29","type":""}],"src":"12843:122:29"},{"body":{"nodeType":"YulBlock","src":"13139:841:29","statements":[{"nodeType":"YulVariableDeclaration","src":"13149:77:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13220:5:29"}],"functionName":{"name":"array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"13163:56:29"},"nodeType":"YulFunctionCall","src":"13163:63:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"13153:6:29","type":""}]},{"nodeType":"YulAssignment","src":"13235:102:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13325:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"13330:6:29"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13242:82:29"},"nodeType":"YulFunctionCall","src":"13242:95:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13235:3:29"}]},{"nodeType":"YulVariableDeclaration","src":"13346:20:29","value":{"name":"pos","nodeType":"YulIdentifier","src":"13363:3:29"},"variables":[{"name":"headStart","nodeType":"YulTypedName","src":"13350:9:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13375:39:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13391:3:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13400:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"13408:4:29","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13396:3:29"},"nodeType":"YulFunctionCall","src":"13396:17:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13387:3:29"},"nodeType":"YulFunctionCall","src":"13387:27:29"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"13379:4:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13423:80:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13497:5:29"}],"functionName":{"name":"array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"13438:58:29"},"nodeType":"YulFunctionCall","src":"13438:65:29"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"13427:7:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13512:21:29","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"13526:7:29"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"13516:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"13602:333:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13623:3:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13632:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"13638:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13628:3:29"},"nodeType":"YulFunctionCall","src":"13628:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13616:6:29"},"nodeType":"YulFunctionCall","src":"13616:33:29"},"nodeType":"YulExpressionStatement","src":"13616:33:29"},{"nodeType":"YulVariableDeclaration","src":"13662:34:29","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"13689:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13683:5:29"},"nodeType":"YulFunctionCall","src":"13683:13:29"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"13666:13:29","type":""}]},{"nodeType":"YulAssignment","src":"13709:90:29","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"13779:13:29"},{"name":"tail","nodeType":"YulIdentifier","src":"13794:4:29"}],"functionName":{"name":"abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"13717:61:29"},"nodeType":"YulFunctionCall","src":"13717:82:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13709:4:29"}]},{"nodeType":"YulAssignment","src":"13812:79:29","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"13884:6:29"}],"functionName":{"name":"array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"13822:61:29"},"nodeType":"YulFunctionCall","src":"13822:69:29"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"13812:6:29"}]},{"nodeType":"YulAssignment","src":"13904:21:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13915:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"13920:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13911:3:29"},"nodeType":"YulFunctionCall","src":"13911:14:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13904:3:29"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13564:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"13567:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13561:2:29"},"nodeType":"YulFunctionCall","src":"13561:13:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"13575:18:29","statements":[{"nodeType":"YulAssignment","src":"13577:14:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13586:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"13589:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13582:3:29"},"nodeType":"YulFunctionCall","src":"13582:9:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"13577:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"13546:14:29","statements":[{"nodeType":"YulVariableDeclaration","src":"13548:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"13557:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"13552:1:29","type":""}]}]},"src":"13542:393:29"},{"nodeType":"YulAssignment","src":"13944:11:29","value":{"name":"tail","nodeType":"YulIdentifier","src":"13951:4:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13944:3:29"}]},{"nodeType":"YulAssignment","src":"13964:10:29","value":{"name":"pos","nodeType":"YulIdentifier","src":"13971:3:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13964:3:29"}]}]},"name":"abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13118:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13125:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13134:3:29","type":""}],"src":"12997:983:29"},{"body":{"nodeType":"YulBlock","src":"14152:243:29","statements":[{"nodeType":"YulAssignment","src":"14162:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14174:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"14185:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14170:3:29"},"nodeType":"YulFunctionCall","src":"14170:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14162:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14209:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"14220:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14205:3:29"},"nodeType":"YulFunctionCall","src":"14205:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14228:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"14234:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14224:3:29"},"nodeType":"YulFunctionCall","src":"14224:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14198:6:29"},"nodeType":"YulFunctionCall","src":"14198:47:29"},"nodeType":"YulExpressionStatement","src":"14198:47:29"},{"nodeType":"YulAssignment","src":"14254:134:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14374:6:29"},{"name":"tail","nodeType":"YulIdentifier","src":"14383:4:29"}],"functionName":{"name":"abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14262:111:29"},"nodeType":"YulFunctionCall","src":"14262:126:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14254:4:29"}]}]},"name":"abi_encode_tuple_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14124:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14136:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14147:4:29","type":""}],"src":"13986:409:29"},{"body":{"nodeType":"YulBlock","src":"14444:79:29","statements":[{"body":{"nodeType":"YulBlock","src":"14501:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14510:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14513:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14503:6:29"},"nodeType":"YulFunctionCall","src":"14503:12:29"},"nodeType":"YulExpressionStatement","src":"14503:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14467:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14492:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"14474:17:29"},"nodeType":"YulFunctionCall","src":"14474:24:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14464:2:29"},"nodeType":"YulFunctionCall","src":"14464:35:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14457:6:29"},"nodeType":"YulFunctionCall","src":"14457:43:29"},"nodeType":"YulIf","src":"14454:63:29"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14437:5:29","type":""}],"src":"14401:122:29"},{"body":{"nodeType":"YulBlock","src":"14581:87:29","statements":[{"nodeType":"YulAssignment","src":"14591:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14613:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14600:12:29"},"nodeType":"YulFunctionCall","src":"14600:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"14591:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14656:5:29"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"14629:26:29"},"nodeType":"YulFunctionCall","src":"14629:33:29"},"nodeType":"YulExpressionStatement","src":"14629:33:29"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"14559:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"14567:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"14575:5:29","type":""}],"src":"14529:139:29"},{"body":{"nodeType":"YulBlock","src":"14740:263:29","statements":[{"body":{"nodeType":"YulBlock","src":"14786:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"14788:77:29"},"nodeType":"YulFunctionCall","src":"14788:79:29"},"nodeType":"YulExpressionStatement","src":"14788:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14761:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"14770:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14757:3:29"},"nodeType":"YulFunctionCall","src":"14757:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"14782:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14753:3:29"},"nodeType":"YulFunctionCall","src":"14753:32:29"},"nodeType":"YulIf","src":"14750:119:29"},{"nodeType":"YulBlock","src":"14879:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"14894:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"14908:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14898:6:29","type":""}]},{"nodeType":"YulAssignment","src":"14923:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14958:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"14969:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14954:3:29"},"nodeType":"YulFunctionCall","src":"14954:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14978:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"14933:20:29"},"nodeType":"YulFunctionCall","src":"14933:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14923:6:29"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14710:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14721:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14733:6:29","type":""}],"src":"14674:329:29"},{"body":{"nodeType":"YulBlock","src":"15037:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15054:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15057:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15047:6:29"},"nodeType":"YulFunctionCall","src":"15047:88:29"},"nodeType":"YulExpressionStatement","src":"15047:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15151:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15154:4:29","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15144:6:29"},"nodeType":"YulFunctionCall","src":"15144:15:29"},"nodeType":"YulExpressionStatement","src":"15144:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15175:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15178:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15168:6:29"},"nodeType":"YulFunctionCall","src":"15168:15:29"},"nodeType":"YulExpressionStatement","src":"15168:15:29"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"15009:180:29"},{"body":{"nodeType":"YulBlock","src":"15223:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15240:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15243:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15233:6:29"},"nodeType":"YulFunctionCall","src":"15233:88:29"},"nodeType":"YulExpressionStatement","src":"15233:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15337:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15340:4:29","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15330:6:29"},"nodeType":"YulFunctionCall","src":"15330:15:29"},"nodeType":"YulExpressionStatement","src":"15330:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15361:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15364:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15354:6:29"},"nodeType":"YulFunctionCall","src":"15354:15:29"},"nodeType":"YulExpressionStatement","src":"15354:15:29"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"15195:180:29"},{"body":{"nodeType":"YulBlock","src":"15432:269:29","statements":[{"nodeType":"YulAssignment","src":"15442:22:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15456:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"15462:1:29","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"15452:3:29"},"nodeType":"YulFunctionCall","src":"15452:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15442:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"15473:38:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15503:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"15509:1:29","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15499:3:29"},"nodeType":"YulFunctionCall","src":"15499:12:29"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"15477:18:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"15550:51:29","statements":[{"nodeType":"YulAssignment","src":"15564:27:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15578:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"15586:4:29","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15574:3:29"},"nodeType":"YulFunctionCall","src":"15574:17:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15564:6:29"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"15530:18:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15523:6:29"},"nodeType":"YulFunctionCall","src":"15523:26:29"},"nodeType":"YulIf","src":"15520:81:29"},{"body":{"nodeType":"YulBlock","src":"15653:42:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"15667:16:29"},"nodeType":"YulFunctionCall","src":"15667:18:29"},"nodeType":"YulExpressionStatement","src":"15667:18:29"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"15617:18:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15640:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"15648:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15637:2:29"},"nodeType":"YulFunctionCall","src":"15637:14:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15614:2:29"},"nodeType":"YulFunctionCall","src":"15614:38:29"},"nodeType":"YulIf","src":"15611:84:29"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"15416:4:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"15425:6:29","type":""}],"src":"15381:320:29"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_bytes32t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes32[]\n    function abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_bytes32(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // bytes32[]\n    function abi_decode_t_array$_t_bytes32_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // bytes[]\n    function abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let innerOffset := calldataload(src)\n            if gt(innerOffset, 0xffffffffffffffff) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n            let elementPos := add(offset, innerOffset)\n\n            mstore(dst, abi_decode_t_bytes_memory_ptr(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // bytes[]\n    function abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_bytes32_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_bytes32_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // bytes[] -> bytes[]\n    function abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n","id":29,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x97902421 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0xDEDFF9C6 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1B1 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x54F6127F EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x7F23690C EQ PUSH2 0x111 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x90C JUMP JUMPDEST PUSH2 0x1DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x954 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDF SWAP2 SWAP1 PUSH2 0x9A5 JUMP JUMPDEST PUSH2 0x23B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF1 SWAP2 SWAP1 PUSH2 0xA6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10F PUSH2 0x24D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x126 SWAP2 SWAP1 PUSH2 0xBC2 JUMP JUMPDEST PUSH2 0x261 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x142 PUSH2 0x2B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14F SWAP2 SWAP1 PUSH2 0xC5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16D SWAP2 SWAP1 PUSH2 0xE23 JUMP JUMPDEST PUSH2 0x2DA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x196 SWAP2 SWAP1 PUSH2 0xE9B JUMP JUMPDEST PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0xFF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0x103E JUMP JUMPDEST PUSH2 0x49E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH4 0x629AA694 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x234 JUMPI POP PUSH2 0x233 DUP3 PUSH2 0x611 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x246 DUP3 PUSH2 0x67B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x255 PUSH2 0x720 JUMP JUMPDEST PUSH2 0x25F PUSH1 0x0 PUSH2 0x519 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x269 PUSH2 0x720 JUMP JUMPDEST PUSH1 0x0 CALLVALUE EQ PUSH2 0x2A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF36BA73700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2AD DUP3 DUP3 PUSH2 0x799 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2E2 PUSH2 0x720 JUMP JUMPDEST PUSH1 0x0 CALLVALUE EQ PUSH2 0x31C JUMPI PUSH1 0x40 MLOAD PUSH32 0xF36BA73700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x357 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3BCC897900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ ISZERO PUSH2 0x393 JUMPI PUSH1 0x40 MLOAD PUSH32 0x97DA5F9500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x3E8 JUMPI PUSH2 0x3DD DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3B5 JUMPI PUSH2 0x3B4 PUSH2 0x106B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3D0 JUMPI PUSH2 0x3CF PUSH2 0x106B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x799 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x396 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x40A JUMPI PUSH2 0x409 PUSH2 0xA97 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x43D JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x428 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x498 JUMPI PUSH2 0x46F DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x462 JUMPI PUSH2 0x461 PUSH2 0x106B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x67B JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x482 JUMPI PUSH2 0x481 PUSH2 0x106B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x443 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4A6 PUSH2 0x720 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x50D JUMPI PUSH1 0x40 MLOAD PUSH32 0x1AD8836C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x516 DUP2 PUSH2 0x519 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x521 PUSH2 0x2B1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x60E JUMPI DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x69B SWAP1 PUSH2 0x10C9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6C7 SWAP1 PUSH2 0x10C9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x714 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6E9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x714 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6F7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x73F PUSH2 0x2B1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x797 JUMPI CALLER PUSH1 0x40 MLOAD PUSH32 0xBF1169C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78E SWAP2 SWAP1 PUSH2 0xC5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x7C0 SWAP3 SWAP2 SWAP1 PUSH2 0x7FD JUMP JUMPDEST POP DUP2 PUSH32 0xECE574603820D07BC9B91F2A932BAADF4628AABCB8AFBA49776529C14A6104B2 DUP3 PUSH1 0x40 MLOAD PUSH2 0x7F1 SWAP2 SWAP1 PUSH2 0xA6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x809 SWAP1 PUSH2 0x10C9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x82B JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x872 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x844 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x872 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x872 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x871 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x856 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x87F SWAP2 SWAP1 PUSH2 0x883 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x89C JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x884 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8E9 DUP2 PUSH2 0x8B4 JUMP JUMPDEST DUP2 EQ PUSH2 0x8F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x906 DUP2 PUSH2 0x8E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x922 JUMPI PUSH2 0x921 PUSH2 0x8AA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x930 DUP5 DUP3 DUP6 ADD PUSH2 0x8F7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x94E DUP2 PUSH2 0x939 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x969 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x945 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x982 DUP2 PUSH2 0x96F JUMP JUMPDEST DUP2 EQ PUSH2 0x98D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x99F DUP2 PUSH2 0x979 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9BB JUMPI PUSH2 0x9BA PUSH2 0x8AA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9C9 DUP5 DUP3 DUP6 ADD PUSH2 0x990 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA0C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x9F1 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xA1B JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA3D DUP3 PUSH2 0x9D2 JUMP JUMPDEST PUSH2 0xA47 DUP2 DUP6 PUSH2 0x9DD JUMP JUMPDEST SWAP4 POP PUSH2 0xA57 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x9EE JUMP JUMPDEST PUSH2 0xA60 DUP2 PUSH2 0xA21 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA85 DUP2 DUP5 PUSH2 0xA32 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xACF DUP3 PUSH2 0xA21 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xAEE JUMPI PUSH2 0xAED PUSH2 0xA97 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB01 PUSH2 0x8A0 JUMP JUMPDEST SWAP1 POP PUSH2 0xB0D DUP3 DUP3 PUSH2 0xAC6 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xB2D JUMPI PUSH2 0xB2C PUSH2 0xA97 JUMP JUMPDEST JUMPDEST PUSH2 0xB36 DUP3 PUSH2 0xA21 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB65 PUSH2 0xB60 DUP5 PUSH2 0xB12 JUMP JUMPDEST PUSH2 0xAF7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xB81 JUMPI PUSH2 0xB80 PUSH2 0xA92 JUMP JUMPDEST JUMPDEST PUSH2 0xB8C DUP5 DUP3 DUP6 PUSH2 0xB43 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xBA9 JUMPI PUSH2 0xBA8 PUSH2 0xA8D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xBB9 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xB52 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBD9 JUMPI PUSH2 0xBD8 PUSH2 0x8AA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBE7 DUP6 DUP3 DUP7 ADD PUSH2 0x990 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC08 JUMPI PUSH2 0xC07 PUSH2 0x8AF JUMP JUMPDEST JUMPDEST PUSH2 0xC14 DUP6 DUP3 DUP7 ADD PUSH2 0xB94 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC49 DUP3 PUSH2 0xC1E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC59 DUP2 PUSH2 0xC3E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC74 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC50 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xC95 JUMPI PUSH2 0xC94 PUSH2 0xA97 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCBE PUSH2 0xCB9 DUP5 PUSH2 0xC7A JUMP JUMPDEST PUSH2 0xAF7 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xCE1 JUMPI PUSH2 0xCE0 PUSH2 0xCA6 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD0A JUMPI DUP1 PUSH2 0xCF6 DUP9 DUP3 PUSH2 0x990 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xCE3 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD29 JUMPI PUSH2 0xD28 PUSH2 0xA8D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD39 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xCAB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xD5D JUMPI PUSH2 0xD5C PUSH2 0xA97 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD81 PUSH2 0xD7C DUP5 PUSH2 0xD42 JUMP JUMPDEST PUSH2 0xAF7 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xDA4 JUMPI PUSH2 0xDA3 PUSH2 0xCA6 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xDEB JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDC9 JUMPI PUSH2 0xDC8 PUSH2 0xA8D JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0xDD6 DUP10 DUP3 PUSH2 0xB94 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDA6 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE0A JUMPI PUSH2 0xE09 PUSH2 0xA8D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xE1A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xD6E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE3A JUMPI PUSH2 0xE39 PUSH2 0x8AA JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE58 JUMPI PUSH2 0xE57 PUSH2 0x8AF JUMP JUMPDEST JUMPDEST PUSH2 0xE64 DUP6 DUP3 DUP7 ADD PUSH2 0xD14 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE85 JUMPI PUSH2 0xE84 PUSH2 0x8AF JUMP JUMPDEST JUMPDEST PUSH2 0xE91 DUP6 DUP3 DUP7 ADD PUSH2 0xDF5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEB1 JUMPI PUSH2 0xEB0 PUSH2 0x8AA JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xECF JUMPI PUSH2 0xECE PUSH2 0x8AF JUMP JUMPDEST JUMPDEST PUSH2 0xEDB DUP5 DUP3 DUP6 ADD PUSH2 0xD14 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF2C DUP3 PUSH2 0x9D2 JUMP JUMPDEST PUSH2 0xF36 DUP2 DUP6 PUSH2 0xF10 JUMP JUMPDEST SWAP4 POP PUSH2 0xF46 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x9EE JUMP JUMPDEST PUSH2 0xF4F DUP2 PUSH2 0xA21 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF66 DUP4 DUP4 PUSH2 0xF21 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF86 DUP3 PUSH2 0xEE4 JUMP JUMPDEST PUSH2 0xF90 DUP2 DUP6 PUSH2 0xEEF JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0xFA2 DUP6 PUSH2 0xF00 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xFDE JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0xFBF DUP6 DUP3 PUSH2 0xF5A JUMP JUMPDEST SWAP5 POP PUSH2 0xFCA DUP4 PUSH2 0xF6E JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xFA6 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x100A DUP2 DUP5 PUSH2 0xF7B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x101B DUP2 PUSH2 0xC3E JUMP JUMPDEST DUP2 EQ PUSH2 0x1026 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1038 DUP2 PUSH2 0x1012 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1054 JUMPI PUSH2 0x1053 PUSH2 0x8AA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1062 DUP5 DUP3 DUP6 ADD PUSH2 0x1029 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x10E1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x10F5 JUMPI PUSH2 0x10F4 PUSH2 0x109A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 ORIGIN 0x4F PUSH28 0xE711CE5199F4F8D2498457982296FE956D4DB39F2262BD1F7AD97F00 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ","sourceMap":"649:610:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5268:245:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1197:156;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1313:92:3;;;;;;;;;;;;;:::i;:::-;;2326:232:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;736:85:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3076:763:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1403:458;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1554:211:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5268:245:1;5384:4;178:10:2;5434:20:1;;5419:35;;;:11;:35;;;;:87;;;;5470:36;5494:11;5470:23;:36::i;:::-;5419:87;5400:106;;5268:245;;;:::o;1197:156::-;1283:22;1329:17;1338:7;1329:8;:17::i;:::-;1317:29;;1197:156;;;:::o;1313:92:3:-;940:13;:11;:13::i;:::-;1377:21:::1;1395:1;1377:9;:21::i;:::-;1313:92::o:0;2326:232:1:-;940:13:3;:11;:13::i;:::-;2475:1:1::1;2462:9;:14;2458:55;;2485:28;;;;;;;;;;;;;;2458:55;2523:28;2532:7;2541:9;2523:8;:28::i;:::-;2326:232:::0;;:::o;736:85:3:-;782:7;808:6;;;;;;;;;;;801:13;;736:85;:::o;3076:763:1:-;940:13:3;:11;:13::i;:::-;3327:1:1::1;3314:9;:14;3310:55;;3337:28;;;;;;;;;;;;;;3310:55;3399:10;:17;3380:8;:15;:36;3376:112;;3439:38;;;;;;;;;;;;;;3376:112;3521:1;3502:8;:15;:20;3498:92;;;3545:34;;;;;;;;;;;;;;3498:92;3605:9;3600:233;3624:8;:15;3620:1;:19;3600:233;;;3657:36;3666:8;3675:1;3666:11;;;;;;;;:::i;:::-;;;;;;;;3679:10;3690:1;3679:13;;;;;;;;:::i;:::-;;;;;;;;3657:8;:36::i;:::-;3805:3;;;;;3600:233;;;;3076:763:::0;;:::o;1403:458::-;1504:25;1566:8;:15;1554:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1541:41;;1598:9;1593:234;1617:8;:15;1613:1;:19;1593:234;;;1666:21;1675:8;1684:1;1675:11;;;;;;;;:::i;:::-;;;;;;;;1666:8;:21::i;:::-;1650:10;1661:1;1650:13;;;;;;;;:::i;:::-;;;;;;;:37;;;;1799:3;;;;;1593:234;;;;1403:458;;;:::o;1554:211:3:-;940:13;:11;:13::i;:::-;1658:1:::1;1638:22;;:8;:22;;;1634:96;;;1683:36;;;;;;;;;;;;;;1634:96;1739:19;1749:8;1739:9;:19::i;:::-;1554:211:::0;:::o;2133:194::-;2213:7;:5;:7::i;:::-;2201:19;;:8;:19;;;2197:124;;2270:8;2241:38;;2262:6;;;;;;;;;;2241:38;;;;;;;;;;;;2302:8;2293:6;;:17;;;;;;;;;;;;;;;;;;2197:124;2133:194;:::o;829:155:24:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;4335:143:1:-;4415:22;4456:6;:15;4463:7;4456:15;;;;;;;;;;;4449:22;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4335:143;;;:::o;1838:156:3:-;1908:10;1897:21;;:7;:5;:7::i;:::-;:21;;;1893:95;;1966:10;1941:36;;;;;;;;;;;:::i;:::-;;;;;;;;1893:95;1838:156::o;5032:188:1:-;5158:9;5140:6;:15;5147:7;5140:15;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;5194:7;5182:31;5203:9;5182:31;;;;;;:::i;:::-;;;;;;;;5032:188;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:29:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:122::-;1674:24;1692:5;1674:24;:::i;:::-;1667:5;1664:35;1654:63;;1713:1;1710;1703:12;1654:63;1601:122;:::o;1729:139::-;1775:5;1813:6;1800:20;1791:29;;1829:33;1856:5;1829:33;:::i;:::-;1729:139;;;;:::o;1874:329::-;1933:6;1982:2;1970:9;1961:7;1957:23;1953:32;1950:119;;;1988:79;;:::i;:::-;1950:119;2108:1;2133:53;2178:7;2169:6;2158:9;2154:22;2133:53;:::i;:::-;2123:63;;2079:117;1874:329;;;;:::o;2209:98::-;2260:6;2294:5;2288:12;2278:22;;2209:98;;;:::o;2313:168::-;2396:11;2430:6;2425:3;2418:19;2470:4;2465:3;2461:14;2446:29;;2313:168;;;;:::o;2487:307::-;2555:1;2565:113;2579:6;2576:1;2573:13;2565:113;;;2664:1;2659:3;2655:11;2649:18;2645:1;2640:3;2636:11;2629:39;2601:2;2598:1;2594:10;2589:15;;2565:113;;;2696:6;2693:1;2690:13;2687:101;;;2776:1;2767:6;2762:3;2758:16;2751:27;2687:101;2536:258;2487:307;;;:::o;2800:102::-;2841:6;2892:2;2888:7;2883:2;2876:5;2872:14;2868:28;2858:38;;2800:102;;;:::o;2908:360::-;2994:3;3022:38;3054:5;3022:38;:::i;:::-;3076:70;3139:6;3134:3;3076:70;:::i;:::-;3069:77;;3155:52;3200:6;3195:3;3188:4;3181:5;3177:16;3155:52;:::i;:::-;3232:29;3254:6;3232:29;:::i;:::-;3227:3;3223:39;3216:46;;2998:270;2908:360;;;;:::o;3274:309::-;3385:4;3423:2;3412:9;3408:18;3400:26;;3472:9;3466:4;3462:20;3458:1;3447:9;3443:17;3436:47;3500:76;3571:4;3562:6;3500:76;:::i;:::-;3492:84;;3274:309;;;;:::o;3589:117::-;3698:1;3695;3688:12;3712:117;3821:1;3818;3811:12;3835:180;3883:77;3880:1;3873:88;3980:4;3977:1;3970:15;4004:4;4001:1;3994:15;4021:281;4104:27;4126:4;4104:27;:::i;:::-;4096:6;4092:40;4234:6;4222:10;4219:22;4198:18;4186:10;4183:34;4180:62;4177:88;;;4245:18;;:::i;:::-;4177:88;4285:10;4281:2;4274:22;4064:238;4021:281;;:::o;4308:129::-;4342:6;4369:20;;:::i;:::-;4359:30;;4398:33;4426:4;4418:6;4398:33;:::i;:::-;4308:129;;;:::o;4443:307::-;4504:4;4594:18;4586:6;4583:30;4580:56;;;4616:18;;:::i;:::-;4580:56;4654:29;4676:6;4654:29;:::i;:::-;4646:37;;4738:4;4732;4728:15;4720:23;;4443:307;;;:::o;4756:154::-;4840:6;4835:3;4830;4817:30;4902:1;4893:6;4888:3;4884:16;4877:27;4756:154;;;:::o;4916:410::-;4993:5;5018:65;5034:48;5075:6;5034:48;:::i;:::-;5018:65;:::i;:::-;5009:74;;5106:6;5099:5;5092:21;5144:4;5137:5;5133:16;5182:3;5173:6;5168:3;5164:16;5161:25;5158:112;;;5189:79;;:::i;:::-;5158:112;5279:41;5313:6;5308:3;5303;5279:41;:::i;:::-;4999:327;4916:410;;;;;:::o;5345:338::-;5400:5;5449:3;5442:4;5434:6;5430:17;5426:27;5416:122;;5457:79;;:::i;:::-;5416:122;5574:6;5561:20;5599:78;5673:3;5665:6;5658:4;5650:6;5646:17;5599:78;:::i;:::-;5590:87;;5406:277;5345:338;;;;:::o;5689:652::-;5766:6;5774;5823:2;5811:9;5802:7;5798:23;5794:32;5791:119;;;5829:79;;:::i;:::-;5791:119;5949:1;5974:53;6019:7;6010:6;5999:9;5995:22;5974:53;:::i;:::-;5964:63;;5920:117;6104:2;6093:9;6089:18;6076:32;6135:18;6127:6;6124:30;6121:117;;;6157:79;;:::i;:::-;6121:117;6262:62;6316:7;6307:6;6296:9;6292:22;6262:62;:::i;:::-;6252:72;;6047:287;5689:652;;;;;:::o;6347:126::-;6384:7;6424:42;6417:5;6413:54;6402:65;;6347:126;;;:::o;6479:96::-;6516:7;6545:24;6563:5;6545:24;:::i;:::-;6534:35;;6479:96;;;:::o;6581:118::-;6668:24;6686:5;6668:24;:::i;:::-;6663:3;6656:37;6581:118;;:::o;6705:222::-;6798:4;6836:2;6825:9;6821:18;6813:26;;6849:71;6917:1;6906:9;6902:17;6893:6;6849:71;:::i;:::-;6705:222;;;;:::o;6933:311::-;7010:4;7100:18;7092:6;7089:30;7086:56;;;7122:18;;:::i;:::-;7086:56;7172:4;7164:6;7160:17;7152:25;;7232:4;7226;7222:15;7214:23;;6933:311;;;:::o;7250:117::-;7359:1;7356;7349:12;7390:710;7486:5;7511:81;7527:64;7584:6;7527:64;:::i;:::-;7511:81;:::i;:::-;7502:90;;7612:5;7641:6;7634:5;7627:21;7675:4;7668:5;7664:16;7657:23;;7728:4;7720:6;7716:17;7708:6;7704:30;7757:3;7749:6;7746:15;7743:122;;;7776:79;;:::i;:::-;7743:122;7891:6;7874:220;7908:6;7903:3;7900:15;7874:220;;;7983:3;8012:37;8045:3;8033:10;8012:37;:::i;:::-;8007:3;8000:50;8079:4;8074:3;8070:14;8063:21;;7950:144;7934:4;7929:3;7925:14;7918:21;;7874:220;;;7878:21;7492:608;;7390:710;;;;;:::o;8123:370::-;8194:5;8243:3;8236:4;8228:6;8224:17;8220:27;8210:122;;8251:79;;:::i;:::-;8210:122;8368:6;8355:20;8393:94;8483:3;8475:6;8468:4;8460:6;8456:17;8393:94;:::i;:::-;8384:103;;8200:293;8123:370;;;;:::o;8499:320::-;8585:4;8675:18;8667:6;8664:30;8661:56;;;8697:18;;:::i;:::-;8661:56;8747:4;8739:6;8735:17;8727:25;;8807:4;8801;8797:15;8789:23;;8499:320;;;:::o;8840:942::-;8945:5;8970:90;8986:73;9052:6;8986:73;:::i;:::-;8970:90;:::i;:::-;8961:99;;9080:5;9109:6;9102:5;9095:21;9143:4;9136:5;9132:16;9125:23;;9196:4;9188:6;9184:17;9176:6;9172:30;9225:3;9217:6;9214:15;9211:122;;;9244:79;;:::i;:::-;9211:122;9359:6;9342:434;9376:6;9371:3;9368:15;9342:434;;;9465:3;9452:17;9501:18;9488:11;9485:35;9482:122;;;9523:79;;:::i;:::-;9482:122;9647:11;9639:6;9635:24;9685:46;9727:3;9715:10;9685:46;:::i;:::-;9680:3;9673:59;9761:4;9756:3;9752:14;9745:21;;9418:358;;9402:4;9397:3;9393:14;9386:21;;9342:434;;;9346:21;8951:831;;8840:942;;;;;:::o;9803:388::-;9883:5;9932:3;9925:4;9917:6;9913:17;9909:27;9899:122;;9940:79;;:::i;:::-;9899:122;10057:6;10044:20;10082:103;10181:3;10173:6;10166:4;10158:6;10154:17;10082:103;:::i;:::-;10073:112;;9889:302;9803:388;;;;:::o;10197:912::-;10324:6;10332;10381:2;10369:9;10360:7;10356:23;10352:32;10349:119;;;10387:79;;:::i;:::-;10349:119;10535:1;10524:9;10520:17;10507:31;10565:18;10557:6;10554:30;10551:117;;;10587:79;;:::i;:::-;10551:117;10692:78;10762:7;10753:6;10742:9;10738:22;10692:78;:::i;:::-;10682:88;;10478:302;10847:2;10836:9;10832:18;10819:32;10878:18;10870:6;10867:30;10864:117;;;10900:79;;:::i;:::-;10864:117;11005:87;11084:7;11075:6;11064:9;11060:22;11005:87;:::i;:::-;10995:97;;10790:312;10197:912;;;;;:::o;11115:539::-;11199:6;11248:2;11236:9;11227:7;11223:23;11219:32;11216:119;;;11254:79;;:::i;:::-;11216:119;11402:1;11391:9;11387:17;11374:31;11432:18;11424:6;11421:30;11418:117;;;11454:79;;:::i;:::-;11418:117;11559:78;11629:7;11620:6;11609:9;11605:22;11559:78;:::i;:::-;11549:88;;11345:302;11115:539;;;;:::o;11660:123::-;11736:6;11770:5;11764:12;11754:22;;11660:123;;;:::o;11789:193::-;11897:11;11931:6;11926:3;11919:19;11971:4;11966:3;11962:14;11947:29;;11789:193;;;;:::o;11988:141::-;12064:4;12087:3;12079:11;;12117:4;12112:3;12108:14;12100:22;;11988:141;;;:::o;12135:158::-;12208:11;12242:6;12237:3;12230:19;12282:4;12277:3;12273:14;12258:29;;12135:158;;;;:::o;12299:340::-;12375:3;12403:38;12435:5;12403:38;:::i;:::-;12457:60;12510:6;12505:3;12457:60;:::i;:::-;12450:67;;12526:52;12571:6;12566:3;12559:4;12552:5;12548:16;12526:52;:::i;:::-;12603:29;12625:6;12603:29;:::i;:::-;12598:3;12594:39;12587:46;;12379:260;12299:340;;;;:::o;12645:192::-;12732:10;12767:64;12827:3;12819:6;12767:64;:::i;:::-;12753:78;;12645:192;;;;:::o;12843:122::-;12922:4;12954;12949:3;12945:14;12937:22;;12843:122;;;:::o;12997:983::-;13134:3;13163:63;13220:5;13163:63;:::i;:::-;13242:95;13330:6;13325:3;13242:95;:::i;:::-;13235:102;;13363:3;13408:4;13400:6;13396:17;13391:3;13387:27;13438:65;13497:5;13438:65;:::i;:::-;13526:7;13557:1;13542:393;13567:6;13564:1;13561:13;13542:393;;;13638:9;13632:4;13628:20;13623:3;13616:33;13689:6;13683:13;13717:82;13794:4;13779:13;13717:82;:::i;:::-;13709:90;;13822:69;13884:6;13822:69;:::i;:::-;13812:79;;13920:4;13915:3;13911:14;13904:21;;13602:333;13589:1;13586;13582:9;13577:14;;13542:393;;;13546:14;13951:4;13944:11;;13971:3;13964:10;;13139:841;;;;;12997:983;;;;:::o;13986:409::-;14147:4;14185:2;14174:9;14170:18;14162:26;;14234:9;14228:4;14224:20;14220:1;14209:9;14205:17;14198:47;14262:126;14383:4;14374:6;14262:126;:::i;:::-;14254:134;;13986:409;;;;:::o;14401:122::-;14474:24;14492:5;14474:24;:::i;:::-;14467:5;14464:35;14454:63;;14513:1;14510;14503:12;14454:63;14401:122;:::o;14529:139::-;14575:5;14613:6;14600:20;14591:29;;14629:33;14656:5;14629:33;:::i;:::-;14529:139;;;;:::o;14674:329::-;14733:6;14782:2;14770:9;14761:7;14757:23;14753:32;14750:119;;;14788:79;;:::i;:::-;14750:119;14908:1;14933:53;14978:7;14969:6;14958:9;14954:22;14933:53;:::i;:::-;14923:63;;14879:117;14674:329;;;;:::o;15009:180::-;15057:77;15054:1;15047:88;15154:4;15151:1;15144:15;15178:4;15175:1;15168:15;15195:180;15243:77;15240:1;15233:88;15340:4;15337:1;15330:15;15364:4;15361:1;15354:15;15381:320;15425:6;15462:1;15456:4;15452:12;15442:22;;15509:1;15503:4;15499:12;15530:18;15520:81;;15586:4;15578:6;15574:17;15564:27;;15520:81;15648:2;15640:6;15637:14;15617:18;15614:38;15611:84;;;15667:18;;:::i;:::-;15611:84;15432:269;15381:320;;;:::o"},"methodIdentifiers":{"getData(bytes32)":"54f6127f","getDataBatch(bytes32[])":"dedff9c6","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setData(bytes32,bytes)":"7f23690c","setDataBatch(bytes32[],bytes[])":"97902421","supportsInterface(bytes4)":"01ffc9a7","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesEmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_MsgValueDisallowed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callerAddress\",\"type\":\"address\"}],\"name\":\"OwnableCallerNotTheOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnableCannotSetZeroAddressAsOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Fabian Vogelsteller <fabian@lukso.network>\",\"details\":\"ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time. It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage.\",\"errors\":{\"ERC725Y_DataKeysValuesEmptyArray()\":[{\"details\":\"Reverts when one of the array parameter provided to {setDataBatch} function is an empty array.\"}],\"ERC725Y_DataKeysValuesLengthMismatch()\":[{\"details\":\"Reverts when there is not the same number of elements in the `datakeys` and `dataValues` array parameters provided when calling the {setDataBatch} function.\"}],\"ERC725Y_MsgValueDisallowed()\":[{\"details\":\"Reverts when sending value to the {setData} or {setDataBatch} function.\"}],\"OwnableCallerNotTheOwner(address)\":[{\"details\":\"Reverts when only the owner is allowed to call the function.\",\"params\":{\"callerAddress\":\"The address that tried to make the call.\"}}],\"OwnableCannotSetZeroAddressAsOwner()\":[{\"details\":\"Reverts when trying to set `address(0)` as the contract owner when deploying the contract, initializing it or transferring ownership of the contract.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:requirements\":\"- `initialOwner` CANNOT be the zero address.\",\"details\":\"Deploy a new ERC725Y contract with the provided `initialOwner` as the contract {owner}.\",\"params\":{\"initialOwner\":\"the owner of the contract.\"}},\"getData(bytes32)\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\",\"params\":{\"dataKey\":\"The data key for which to retrieve the value.\"},\"returns\":{\"dataValue\":\"The bytes value stored under the specified data key.\"}},\"getDataBatch(bytes32[])\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\",\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setData(bytes32,bytes)\":{\"custom:events\":\"{DataChanged} event.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner}.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, if the function is not intended to receive value (= native tokens), **an additional check should be implemented to ensure that `msg.value` sent was equal to 0**.\",\"details\":\"Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`. The function is marked as payable to enable flexibility on child contracts. For instance to implement a fee mechanism for setting specific data.\",\"params\":{\"dataKey\":\"The data key for which to set a new value.\",\"dataValue\":\"The new bytes value to set.\"}},\"setDataBatch(bytes32[],bytes[])\":{\"custom:events\":\"{DataChanged} event **for each data key/value pair set**.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner} of the contract.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, if the function is not intended to receive value (= native tokens), **an additional check should be implemented to ensure that `msg.value` sent was equal to 0**.\",\"details\":\"Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\",\"params\":{\"dataKeys\":\"An array of data keys to set bytes values for.\",\"dataValues\":\"An array of bytes values to set for each `dataKeys`.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Deployable implementation with `constructor` of ERC725Y, a generic data key/value store.\",\"version\":1},\"userdoc\":{\"events\":{\"DataChanged(bytes32,bytes)\":{\"notice\":\"The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Deploying an ERC725Y smart contract and setting address `initialOwner` as the contract owner.\"},\"getData(bytes32)\":{\"notice\":\"Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\"},\"getDataBatch(bytes32[])\":{\"notice\":\"Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\"},\"setData(bytes32,bytes)\":{\"notice\":\"Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\"},\"setDataBatch(bytes32[],bytes[])\":{\"notice\":\"Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@erc725/smart-contracts/contracts/ERC725Y.sol\":\"ERC725Y\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts/contracts/ERC725Y.sol\":{\"keccak256\":\"0x4cb23ef9c2c93d881737c47cd0eebd63dcb39828484fda1fd3a5ce9971df3ef7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ff707e4552e8e442ff88d8b961583912664eaee373b49f03b1e6c4cd28213938\",\"dweb:/ipfs/QmVELUkQr3TikdEZoG9cxhwUCknuvSYVGKwpeDF76XiZpb\"]},\"@erc725/smart-contracts/contracts/ERC725YCore.sol\":{\"keccak256\":\"0x90670a99b91307ed47851fcc72cee06f246f49a1810307c9e2f978116bbabfc4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://06a94fdd05c104d4d1368398ed4b00926d27c1485a5130aeb257bc904671bcc0\",\"dweb:/ipfs/Qmdsph9AnSiAvYpmgVXfy3Do5dCWKBVL3xWMeGaT7qjte2\"]},\"@erc725/smart-contracts/contracts/constants.sol\":{\"keccak256\":\"0x37da1619e580b6af6a68e91b4784f7945ee2344fad3a96b6dfb2592e35fedb60\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fb9436bd587d7b38c532f317dbd4bc5f178b50906b1a5e29adf24908f27b2c47\",\"dweb:/ipfs/QmW2vTCNM7Mr4vW5t9yBK7Zmh1FtaVjPwdAbyFcPNBSZYL\"]},\"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol\":{\"keccak256\":\"0xa9c83adb0239b86c0ff6251a03bc70115470c7ae10eb99276d6dd33636054b36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95a0109837bdffe887b6568b7f9bbde2b20cfd0c4db638805cf61ada5743b24d\",\"dweb:/ipfs/QmYH2erMtqiEYjRznWnc6NbBbwxvy6ArE45jtXYEyWi3Bc\"]},\"@erc725/smart-contracts/contracts/errors.sol\":{\"keccak256\":\"0xaafdb4370450b8874224b3c0b2b712149da97a50c9a47f56e4b654aa57eb87c5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a4e40b0f64613e5bbd62575facc72d2bcad249595e9397b5bff063dc5a81e757\",\"dweb:/ipfs/QmXx5yDvPxWzKXFYK7HDAbSNDBKRskYLoDwgrThmAimzDL\"]},\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@erc725/smart-contracts/contracts/ERC725YCore.sol":{"ERC725YCore":{"abi":[{"inputs":[],"name":"ERC725Y_DataKeysValuesEmptyArray","type":"error"},{"inputs":[],"name":"ERC725Y_DataKeysValuesLengthMismatch","type":"error"},{"inputs":[],"name":"ERC725Y_MsgValueDisallowed","type":"error"},{"inputs":[{"internalType":"address","name":"callerAddress","type":"address"}],"name":"OwnableCallerNotTheOwner","type":"error"},{"inputs":[],"name":"OwnableCannotSetZeroAddressAsOwner","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"DataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getData","outputs":[{"internalType":"bytes","name":"dataValue","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatch","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setData","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatch","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getData(bytes32)":"54f6127f","getDataBatch(bytes32[])":"dedff9c6","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setData(bytes32,bytes)":"7f23690c","setDataBatch(bytes32[],bytes[])":"97902421","supportsInterface(bytes4)":"01ffc9a7","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesEmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_MsgValueDisallowed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callerAddress\",\"type\":\"address\"}],\"name\":\"OwnableCallerNotTheOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnableCannotSetZeroAddressAsOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Fabian Vogelsteller <fabian@lukso.network>\",\"details\":\"ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time. It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage.\",\"errors\":{\"ERC725Y_DataKeysValuesEmptyArray()\":[{\"details\":\"Reverts when one of the array parameter provided to {setDataBatch} function is an empty array.\"}],\"ERC725Y_DataKeysValuesLengthMismatch()\":[{\"details\":\"Reverts when there is not the same number of elements in the `datakeys` and `dataValues` array parameters provided when calling the {setDataBatch} function.\"}],\"ERC725Y_MsgValueDisallowed()\":[{\"details\":\"Reverts when sending value to the {setData} or {setDataBatch} function.\"}],\"OwnableCallerNotTheOwner(address)\":[{\"details\":\"Reverts when only the owner is allowed to call the function.\",\"params\":{\"callerAddress\":\"The address that tried to make the call.\"}}],\"OwnableCannotSetZeroAddressAsOwner()\":[{\"details\":\"Reverts when trying to set `address(0)` as the contract owner when deploying the contract, initializing it or transferring ownership of the contract.\"}]},\"kind\":\"dev\",\"methods\":{\"getData(bytes32)\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\",\"params\":{\"dataKey\":\"The data key for which to retrieve the value.\"},\"returns\":{\"dataValue\":\"The bytes value stored under the specified data key.\"}},\"getDataBatch(bytes32[])\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\",\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setData(bytes32,bytes)\":{\"custom:events\":\"{DataChanged} event.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner}.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, if the function is not intended to receive value (= native tokens), **an additional check should be implemented to ensure that `msg.value` sent was equal to 0**.\",\"details\":\"Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`. The function is marked as payable to enable flexibility on child contracts. For instance to implement a fee mechanism for setting specific data.\",\"params\":{\"dataKey\":\"The data key for which to set a new value.\",\"dataValue\":\"The new bytes value to set.\"}},\"setDataBatch(bytes32[],bytes[])\":{\"custom:events\":\"{DataChanged} event **for each data key/value pair set**.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner} of the contract.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, if the function is not intended to receive value (= native tokens), **an additional check should be implemented to ensure that `msg.value` sent was equal to 0**.\",\"details\":\"Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\",\"params\":{\"dataKeys\":\"An array of data keys to set bytes values for.\",\"dataValues\":\"An array of bytes values to set for each `dataKeys`.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"_store\":{\"details\":\"Map `bytes32` data keys to their `bytes` data values.\"}},\"title\":\"Core implementation of ERC725Y sub-standard, a general data key/value store.\",\"version\":1},\"userdoc\":{\"events\":{\"DataChanged(bytes32,bytes)\":{\"notice\":\"The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\"}},\"kind\":\"user\",\"methods\":{\"getData(bytes32)\":{\"notice\":\"Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\"},\"getDataBatch(bytes32[])\":{\"notice\":\"Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\"},\"setData(bytes32,bytes)\":{\"notice\":\"Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\"},\"setDataBatch(bytes32[],bytes[])\":{\"notice\":\"Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@erc725/smart-contracts/contracts/ERC725YCore.sol\":\"ERC725YCore\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts/contracts/ERC725YCore.sol\":{\"keccak256\":\"0x90670a99b91307ed47851fcc72cee06f246f49a1810307c9e2f978116bbabfc4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://06a94fdd05c104d4d1368398ed4b00926d27c1485a5130aeb257bc904671bcc0\",\"dweb:/ipfs/Qmdsph9AnSiAvYpmgVXfy3Do5dCWKBVL3xWMeGaT7qjte2\"]},\"@erc725/smart-contracts/contracts/constants.sol\":{\"keccak256\":\"0x37da1619e580b6af6a68e91b4784f7945ee2344fad3a96b6dfb2592e35fedb60\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fb9436bd587d7b38c532f317dbd4bc5f178b50906b1a5e29adf24908f27b2c47\",\"dweb:/ipfs/QmW2vTCNM7Mr4vW5t9yBK7Zmh1FtaVjPwdAbyFcPNBSZYL\"]},\"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol\":{\"keccak256\":\"0xa9c83adb0239b86c0ff6251a03bc70115470c7ae10eb99276d6dd33636054b36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95a0109837bdffe887b6568b7f9bbde2b20cfd0c4db638805cf61ada5743b24d\",\"dweb:/ipfs/QmYH2erMtqiEYjRznWnc6NbBbwxvy6ArE45jtXYEyWi3Bc\"]},\"@erc725/smart-contracts/contracts/errors.sol\":{\"keccak256\":\"0xaafdb4370450b8874224b3c0b2b712149da97a50c9a47f56e4b654aa57eb87c5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a4e40b0f64613e5bbd62575facc72d2bcad249595e9397b5bff063dc5a81e757\",\"dweb:/ipfs/QmXx5yDvPxWzKXFYK7HDAbSNDBKRskYLoDwgrThmAimzDL\"]},\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol":{"OwnableUnset":{"abi":[{"inputs":[{"internalType":"address","name":"callerAddress","type":"address"}],"name":"OwnableCallerNotTheOwner","type":"error"},{"inputs":[],"name":"OwnableCannotSetZeroAddressAsOwner","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callerAddress\",\"type\":\"address\"}],\"name\":\"OwnableCallerNotTheOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnableCannotSetZeroAddressAsOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"modified version of OpenZeppelin implementation, where: - _setOwner(address) function is internal, so this function can be used in constructor of contracts implementation (instead of using transferOwnership(address) - the contract does not inherit from Context contract\",\"errors\":{\"OwnableCallerNotTheOwner(address)\":[{\"details\":\"Reverts when only the owner is allowed to call the function.\",\"params\":{\"callerAddress\":\"The address that tried to make the call.\"}}],\"OwnableCannotSetZeroAddressAsOwner()\":[{\"details\":\"Reverts when trying to set `address(0)` as the contract owner when deploying the contract, initializing it or transferring ownership of the contract.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"OwnableUnset\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol\":\"OwnableUnset\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol\":{\"keccak256\":\"0xa9c83adb0239b86c0ff6251a03bc70115470c7ae10eb99276d6dd33636054b36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95a0109837bdffe887b6568b7f9bbde2b20cfd0c4db638805cf61ada5743b24d\",\"dweb:/ipfs/QmYH2erMtqiEYjRznWnc6NbBbwxvy6ArE45jtXYEyWi3Bc\"]},\"@erc725/smart-contracts/contracts/errors.sol\":{\"keccak256\":\"0xaafdb4370450b8874224b3c0b2b712149da97a50c9a47f56e4b654aa57eb87c5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a4e40b0f64613e5bbd62575facc72d2bcad249595e9397b5bff063dc5a81e757\",\"dweb:/ipfs/QmXx5yDvPxWzKXFYK7HDAbSNDBKRskYLoDwgrThmAimzDL\"]}},\"version\":1}"}},"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol":{"IERC725Y":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"DataChanged","type":"event"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getData","outputs":[{"internalType":"bytes","name":"dataValue","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatch","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setData","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatch","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getData(bytes32)":"54f6127f","getDataBatch(bytes32[])":"dedff9c6","setData(bytes32,bytes)":"7f23690c","setDataBatch(bytes32[],bytes[])":"97902421","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time. It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage.\",\"events\":{\"DataChanged(bytes32,bytes)\":{\"details\":\"Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\",\"params\":{\"dataKey\":\"The data key for which a bytes value is set.\",\"dataValue\":\"The value to set for the given data key.\"}}},\"kind\":\"dev\",\"methods\":{\"getData(bytes32)\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\",\"params\":{\"dataKey\":\"The data key for which to retrieve the value.\"},\"returns\":{\"dataValue\":\"The bytes value stored under the specified data key.\"}},\"getDataBatch(bytes32[])\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\",\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"setData(bytes32,bytes)\":{\"details\":\"Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`. The function is marked as payable to enable flexibility on child contracts. For instance to implement a fee mechanism for setting specific data.\",\"params\":{\"dataKey\":\"The data key for which to set a new value.\",\"dataValue\":\"The new bytes value to set.\"}},\"setDataBatch(bytes32[],bytes[])\":{\"details\":\"Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\",\"params\":{\"dataKeys\":\"An array of data keys to set bytes values for.\",\"dataValues\":\"An array of bytes values to set for each `dataKeys`.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"title\":\"The interface for ERC725Y sub-standard, a generic data key/value store.\",\"version\":1},\"userdoc\":{\"events\":{\"DataChanged(bytes32,bytes)\":{\"notice\":\"The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\"}},\"kind\":\"user\",\"methods\":{\"getData(bytes32)\":{\"notice\":\"Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\"},\"getDataBatch(bytes32[])\":{\"notice\":\"Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\"},\"setData(bytes32,bytes)\":{\"notice\":\"Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\"},\"setDataBatch(bytes32[],bytes[])\":{\"notice\":\"Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":\"IERC725Y\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Extendable.sol":{"LSP17Extendable":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the `fallback(...)` logic according to LSP17 - Contract Extension standard. This module can be inherited to extend the functionality of the parent contract when calling a function that doesn't exist on the parent contract via forwarding the call to an extension mapped to the function selector being called, set originally by the parent contract\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"title\":\"Module to add more functionalities to a contract using extensions.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Extendable.sol\":\"LSP17Extendable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Constants.sol\":{\"keccak256\":\"0x6d4bb208587872ad563fef31655c44f7de03baa5b4a513910c0003aea0c04036\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://880c3b21e2090a14e7bba94ac5c8d4633e8a81d93c6f619454167a01dcc866d8\",\"dweb:/ipfs/QmZp6YVM4Eor5XtuXXqGRaPAJ3u5KCmLwuNRAGf4JY7sK1\"]},\"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Errors.sol\":{\"keccak256\":\"0x75a0159f76a3c5bf26b13aa404aca2f588ea41928eb1483683e29d2031fe5abf\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f1b93e7eb5a88a2f42a9dfa061ca5e93e7650cd9114010faa18faf0a5508f579\",\"dweb:/ipfs/QmXmLhf1ejsF7G1FZnvpTBRS9oQ9ZTuqCBRT1im3vAuUYW\"]},\"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Extendable.sol\":{\"keccak256\":\"0x5983e916a4cb604a45b585d7f745f5ac8bf69ef51fbc78cf8e70408e29e008c2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e1e9a7b8dc210030d35b4e2c3dbb7107f51c063256f7e6120997ed638f033db1\",\"dweb:/ipfs/QmRQgkaDnC9sAb9mZJtVgBsAR1xfmcTA2erCVUiyszy15o\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0x5a08ad61f4e82b8a3323562661a86fb10b10190848073fdc13d4ac43710ffba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f7bb74cf88fd88daa34e118bc6e363381d05044f34f391d39a10c0c9dac3ebd\",\"dweb:/ipfs/QmNbQ3v8v4zuDtg7VeLAbdhAm3tCzUodNoDZZ8ekmCHWZX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/ILSP1UniversalReceiver.sol":{"ILSP1UniversalReceiver":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":true,"internalType":"bytes32","name":"typeId","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"receivedData","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"returnedValue","type":"bytes"}],"name":"UniversalReceiver","type":"event"},{"inputs":[{"internalType":"bytes32","name":"typeId","type":"bytes32"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"universalReceiver","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"universalReceiver(bytes32,bytes)":"6bb56a14"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"typeId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"receivedData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"returnedValue\",\"type\":\"bytes\"}],\"name\":\"UniversalReceiver\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"typeId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"universalReceiver\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"LSP1UniversalReceiver allows to receive arbitrary messages and to be informed when assets are sent or received.\",\"events\":{\"UniversalReceiver(address,uint256,bytes32,bytes,bytes)\":{\"details\":\"Emitted when the {universalReceiver} function was called with a specific `typeId` and some `receivedData`\",\"params\":{\"from\":\"The address of the EOA or smart contract that called the {universalReceiver(...)} function.\",\"receivedData\":\"Any arbitrary data that was sent to the {universalReceiver(...)} function.\",\"returnedValue\":\"The value returned by the {universalReceiver(...)} function.\",\"typeId\":\"A `bytes32` unique identifier (= _\\\"hook\\\"_)that describe the type of notification, information or transaction received by the contract. Can be related to a specific standard or a hook.\",\"value\":\"The amount sent to the {universalReceiver(...)} function.\"}}},\"kind\":\"dev\",\"methods\":{\"universalReceiver(bytes32,bytes)\":{\"custom:events\":\"{UniversalReceiver} event.\",\"details\":\"Generic function that can be used to notify the contract about specific incoming transactions or events like asset transfers, vault transfers, etc. Allows for custom on-chain and off-chain reactions based on the `typeId` and `data`.\",\"params\":{\"data\":\"The arbitrary data received with the call.\",\"typeId\":\"The hash of a specific standard or a hook.\"}}},\"title\":\"Interface of the LSP1 - Universal Receiver standard, an entry function for a contract to receive arbitrary information.\",\"version\":1},\"userdoc\":{\"events\":{\"UniversalReceiver(address,uint256,bytes32,bytes,bytes)\":{\"notice\":\"Address `from` called the `universalReceiver(...)` function while sending `value` LYX. Notification type (typeId): `typeId` - Data received: `receivedData`.\"}},\"kind\":\"user\",\"methods\":{\"universalReceiver(bytes32,bytes)\":{\"notice\":\"Reacted on received notification with `typeId` & `data`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/ILSP1UniversalReceiver.sol\":\"ILSP1UniversalReceiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/ILSP1UniversalReceiver.sol\":{\"keccak256\":\"0x5b8764a678dc9d6673eafa8ad0ee6053cdea30acb58015bdf9c93f9f1788b49b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0e26dcf5d66120b7a0895ddcaec92207e17c63344fca885d2b7e3fe953ec027c\",\"dweb:/ipfs/QmetAuz9etfz9BG9oPJCwMthnhfd8XvZYLBmMfrPNUm3qV\"]}},\"version\":1}"}},"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/LSP1Utils.sol":{"LSP1Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122053f8f011f42d602e69f7e4c704d38ba72803f0c0591cd00a298ed6a1a530dad764736f6c634300080c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 0xF8 CREATE GT DELEGATECALL 0x2D PUSH1 0x2E PUSH10 0xF7E4C704D38BA72803F0 0xC0 MSIZE SHR 0xD0 EXP 0x29 DUP15 0xD6 LOG1 0xA5 ADDRESS 0xDA 0xD7 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ","sourceMap":"893:2519:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122053f8f011f42d602e69f7e4c704d38ba72803f0c0591cd00a298ed6a1a530dad764736f6c634300080c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 0xF8 CREATE GT DELEGATECALL 0x2D PUSH1 0x2E PUSH10 0xF7E4C704D38BA72803F0 0xC0 MSIZE SHR 0xD0 EXP 0x29 DUP15 0xD6 LOG1 0xA5 ADDRESS 0xDA 0xD7 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ","sourceMap":"893:2519:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Jean Cavallera <CJ42>, Yamen Merhi <YamenMerhi>, Daniel Afteni <B00ste>\",\"details\":\"LSP1Utils is a library of utility functions that can be used to notify the `universalReceiver` function of a contract that implements LSP1 and retrieve informations related to LSP1 `typeId`. Based on LSP1 Universal Receiver standard.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"LSP1 Utility library.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/LSP1Utils.sol\":\"LSP1Utils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/ILSP1UniversalReceiver.sol\":{\"keccak256\":\"0x5b8764a678dc9d6673eafa8ad0ee6053cdea30acb58015bdf9c93f9f1788b49b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0e26dcf5d66120b7a0895ddcaec92207e17c63344fca885d2b7e3fe953ec027c\",\"dweb:/ipfs/QmetAuz9etfz9BG9oPJCwMthnhfd8XvZYLBmMfrPNUm3qV\"]},\"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/LSP1Constants.sol\":{\"keccak256\":\"0x0f87fc38243fc70316e22814f5a79d9c0770a39f64077cbc6fb5fddfa1d4c23c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c7d83f054b71dfa5ca48a9a811e6a985ff6b38a9e5f4c220ea2ec3a322cce7cf\",\"dweb:/ipfs/QmaehpHpqc5dtRCm9BoU8vCY59AeEnmGvmmwPirVr47oGp\"]},\"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/LSP1Utils.sol\":{\"keccak256\":\"0x15fca4c3d6bfaec5d1a144762f1e160c6b82e7abb5e5c0ca8fcc5f4301b0c45e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ceb307c243e6439d5be18263f75c2ada73d70c5b0480dfd8b12315cacc81fa62\",\"dweb:/ipfs/QmVPwVhL6NAvUgAWQmV964tEHNWbXY6uej5VLpDorqBVhd\"]},\"@lukso/lsp-smart-contracts/contracts/LSP2ERC725YJSONSchema/LSP2Utils.sol\":{\"keccak256\":\"0x86ce8a85d12c79b76db5413b05b9bff16cd865b395efdc0e85b06b3b5e17219b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7ebb6d1152f88b459b9e8fc3ef6361a9fb9d03bfa994148e6b125a2ee4025487\",\"dweb:/ipfs/QmX18bCecAtrjqKTyCPqRrUuvVYSW1XZZJUgvjfYnqfmEH\"]},\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0x5a08ad61f4e82b8a3323562661a86fb10b10190848073fdc13d4ac43710ffba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f7bb74cf88fd88daa34e118bc6e363381d05044f34f391d39a10c0c9dac3ebd\",\"dweb:/ipfs/QmNbQ3v8v4zuDtg7VeLAbdhAm3tCzUodNoDZZ8ekmCHWZX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@lukso/lsp-smart-contracts/contracts/LSP2ERC725YJSONSchema/LSP2Utils.sol":{"LSP2Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122058a3e86fab771ddf57985c72cad88fd9f61ff5c82752bff3badc9d5828ebdb5564736f6c634300080c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC LOG3 0xE8 PUSH16 0xAB771DDF57985C72CAD88FD9F61FF5C8 0x27 MSTORE 0xBF RETURN 0xBA 0xDC SWAP14 PC 0x28 0xEB 0xDB SSTORE PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ","sourceMap":"482:15762:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122058a3e86fab771ddf57985c72cad88fd9f61ff5c82752bff3badc9d5828ebdb5564736f6c634300080c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC LOG3 0xE8 PUSH16 0xAB771DDF57985C72CAD88FD9F61FF5C8 0x27 MSTORE 0xBF RETURN 0xBA 0xDC SWAP14 PC 0x28 0xEB 0xDB SSTORE PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ","sourceMap":"482:15762:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Jean Cavallera <CJ42>, Yamen Merhi <YamenMerhi>, Daniel Afteni <B00ste>\",\"details\":\"LSP2Utils is a library of utility functions that can be used to encode data key of different key type defined on the LSP2 standard. Based on LSP2 ERC725Y JSON Schema standard.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"LSP2 Utility library.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp-smart-contracts/contracts/LSP2ERC725YJSONSchema/LSP2Utils.sol\":\"LSP2Utils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@lukso/lsp-smart-contracts/contracts/LSP2ERC725YJSONSchema/LSP2Utils.sol\":{\"keccak256\":\"0x86ce8a85d12c79b76db5413b05b9bff16cd865b395efdc0e85b06b3b5e17219b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7ebb6d1152f88b459b9e8fc3ef6361a9fb9d03bfa994148e6b125a2ee4025487\",\"dweb:/ipfs/QmX18bCecAtrjqKTyCPqRrUuvVYSW1XZZJUgvjfYnqfmEH\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadata.sol":{"LSP4DigitalAssetMetadata":{"abi":[{"inputs":[],"name":"ERC725Y_DataKeysValuesEmptyArray","type":"error"},{"inputs":[],"name":"ERC725Y_DataKeysValuesLengthMismatch","type":"error"},{"inputs":[],"name":"ERC725Y_MsgValueDisallowed","type":"error"},{"inputs":[],"name":"LSP4TokenNameNotEditable","type":"error"},{"inputs":[],"name":"LSP4TokenSymbolNotEditable","type":"error"},{"inputs":[],"name":"LSP4TokenTypeNotEditable","type":"error"},{"inputs":[{"internalType":"address","name":"callerAddress","type":"address"}],"name":"OwnableCallerNotTheOwner","type":"error"},{"inputs":[],"name":"OwnableCannotSetZeroAddressAsOwner","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"DataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getData","outputs":[{"internalType":"bytes","name":"dataValue","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatch","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setData","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatch","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getData(bytes32)":"54f6127f","getDataBatch(bytes32[])":"dedff9c6","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setData(bytes32,bytes)":"7f23690c","setDataBatch(bytes32[],bytes[])":"97902421","supportsInterface(bytes4)":"01ffc9a7","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesEmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_MsgValueDisallowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenNameNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenSymbolNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenTypeNotEditable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callerAddress\",\"type\":\"address\"}],\"name\":\"OwnableCallerNotTheOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnableCannotSetZeroAddressAsOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Matthew Stevens\",\"details\":\"Standard Implementation of the LSP4 standard.\",\"errors\":{\"ERC725Y_DataKeysValuesEmptyArray()\":[{\"details\":\"Reverts when one of the array parameter provided to {setDataBatch} function is an empty array.\"}],\"ERC725Y_DataKeysValuesLengthMismatch()\":[{\"details\":\"Reverts when there is not the same number of elements in the `datakeys` and `dataValues` array parameters provided when calling the {setDataBatch} function.\"}],\"ERC725Y_MsgValueDisallowed()\":[{\"details\":\"Reverts when sending value to the {setData} or {setDataBatch} function.\"}],\"LSP4TokenNameNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenName` after the digital asset contract has been deployed / initialized. The `LSP4TokenName` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP4TokenSymbolNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenSymbol` after the digital asset contract has been deployed / initialized. The `LSP4TokenSymbol` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP4TokenTypeNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenType` after the digital asset contract has been deployed / initialized. The `LSP4TokenType` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor / initializer when the digital asset contract is being deployed / initialized.\"}],\"OwnableCallerNotTheOwner(address)\":[{\"details\":\"Reverts when only the owner is allowed to call the function.\",\"params\":{\"callerAddress\":\"The address that tried to make the call.\"}}],\"OwnableCannotSetZeroAddressAsOwner()\":[{\"details\":\"Reverts when trying to set `address(0)` as the contract owner when deploying the contract, initializing it or transferring ownership of the contract.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"initialOwner_\":\"The owner of the token contract.\",\"lsp4TokenType_\":\"The type of token this digital asset contract represents (`0` = Token, `1` = NFT, `2` = Collection).\",\"name_\":\"The name of the token.\",\"symbol_\":\"The symbol of the token.\"}},\"getData(bytes32)\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\",\"params\":{\"dataKey\":\"The data key for which to retrieve the value.\"},\"returns\":{\"dataValue\":\"The bytes value stored under the specified data key.\"}},\"getDataBatch(bytes32[])\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\",\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setData(bytes32,bytes)\":{\"custom:events\":\"{DataChanged} event.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner}.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, if the function is not intended to receive value (= native tokens), **an additional check should be implemented to ensure that `msg.value` sent was equal to 0**.\",\"details\":\"Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`. The function is marked as payable to enable flexibility on child contracts. For instance to implement a fee mechanism for setting specific data.\",\"params\":{\"dataKey\":\"The data key for which to set a new value.\",\"dataValue\":\"The new bytes value to set.\"}},\"setDataBatch(bytes32[],bytes[])\":{\"custom:events\":\"{DataChanged} event **for each data key/value pair set**.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner} of the contract.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, if the function is not intended to receive value (= native tokens), **an additional check should be implemented to ensure that `msg.value` sent was equal to 0**.\",\"details\":\"Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\",\"params\":{\"dataKeys\":\"An array of data keys to set bytes values for.\",\"dataValues\":\"An array of bytes values to set for each `dataKeys`.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Implementation of a LSP4DigitalAssetMetadata contract that stores the **Token-Metadata** (`LSP4TokenName` and `LSP4TokenSymbol`) in its ERC725Y data store.\",\"version\":1},\"userdoc\":{\"events\":{\"DataChanged(bytes32,bytes)\":{\"notice\":\"The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Deploying a digital asset `name_` with the `symbol_` symbol.\"},\"getData(bytes32)\":{\"notice\":\"Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\"},\"getDataBatch(bytes32[])\":{\"notice\":\"Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\"},\"setData(bytes32,bytes)\":{\"notice\":\"Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\"},\"setDataBatch(bytes32[],bytes[])\":{\"notice\":\"Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadata.sol\":\"LSP4DigitalAssetMetadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts/contracts/ERC725Y.sol\":{\"keccak256\":\"0x4cb23ef9c2c93d881737c47cd0eebd63dcb39828484fda1fd3a5ce9971df3ef7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ff707e4552e8e442ff88d8b961583912664eaee373b49f03b1e6c4cd28213938\",\"dweb:/ipfs/QmVELUkQr3TikdEZoG9cxhwUCknuvSYVGKwpeDF76XiZpb\"]},\"@erc725/smart-contracts/contracts/ERC725YCore.sol\":{\"keccak256\":\"0x90670a99b91307ed47851fcc72cee06f246f49a1810307c9e2f978116bbabfc4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://06a94fdd05c104d4d1368398ed4b00926d27c1485a5130aeb257bc904671bcc0\",\"dweb:/ipfs/Qmdsph9AnSiAvYpmgVXfy3Do5dCWKBVL3xWMeGaT7qjte2\"]},\"@erc725/smart-contracts/contracts/constants.sol\":{\"keccak256\":\"0x37da1619e580b6af6a68e91b4784f7945ee2344fad3a96b6dfb2592e35fedb60\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fb9436bd587d7b38c532f317dbd4bc5f178b50906b1a5e29adf24908f27b2c47\",\"dweb:/ipfs/QmW2vTCNM7Mr4vW5t9yBK7Zmh1FtaVjPwdAbyFcPNBSZYL\"]},\"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol\":{\"keccak256\":\"0xa9c83adb0239b86c0ff6251a03bc70115470c7ae10eb99276d6dd33636054b36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95a0109837bdffe887b6568b7f9bbde2b20cfd0c4db638805cf61ada5743b24d\",\"dweb:/ipfs/QmYH2erMtqiEYjRznWnc6NbBbwxvy6ArE45jtXYEyWi3Bc\"]},\"@erc725/smart-contracts/contracts/errors.sol\":{\"keccak256\":\"0xaafdb4370450b8874224b3c0b2b712149da97a50c9a47f56e4b654aa57eb87c5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a4e40b0f64613e5bbd62575facc72d2bcad249595e9397b5bff063dc5a81e757\",\"dweb:/ipfs/QmXx5yDvPxWzKXFYK7HDAbSNDBKRskYLoDwgrThmAimzDL\"]},\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4Constants.sol\":{\"keccak256\":\"0xdf9b7c688d39a92cb3238136a9f56554245d5ae9b6568dcd6164d0e15c6f56c7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bb36a427cdfa0f394d2d78014f85152ab383499fc3c3d6285d4b801c656e7c3f\",\"dweb:/ipfs/QmZJehfeWKfHLyZLufhs9u4ZyVztGCUNWXzFgfZSU837vU\"]},\"@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadata.sol\":{\"keccak256\":\"0xd120529845267176d7658eb3b610fd9412012ce58cfde05a42f7fcee1c371dce\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4e2919d97ff39ae203dc57f53a7ae6a4f1dfe9354e564744ee3752771687b796\",\"dweb:/ipfs/QmbNwNCDnLcD4jrboPJhAMXVEiVGbagBteXM5sVByZ8A1h\"]},\"@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadataCore.sol\":{\"keccak256\":\"0xc442e52d34bb98acc1494675856b1f1d124af1375d8e23a9bfcc3b6c1865e1fc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://84254359ed929c1991136f9c3e934ddfa74cd85684de6c44cb70afa70d12f837\",\"dweb:/ipfs/QmWfmionUJJYyYDoeSQLGUHhou2sWxhWzwtU5GVjpumiSS\"]},\"@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4Errors.sol\":{\"keccak256\":\"0x3db7fd252ed02ce27686141125c3d65d3ff682a32601e1e8611becd9357a57b5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5aded62a160ed7f9860996004d1656e8592b3f97d478d8597f8ad6afbe4f34b7\",\"dweb:/ipfs/QmcnmLVt8cmz1iRNaX5c6iNYckRgUXGz8YkjHW9T1KNB5A\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadataCore.sol":{"LSP4DigitalAssetMetadataCore":{"abi":[{"inputs":[],"name":"ERC725Y_DataKeysValuesEmptyArray","type":"error"},{"inputs":[],"name":"ERC725Y_DataKeysValuesLengthMismatch","type":"error"},{"inputs":[],"name":"ERC725Y_MsgValueDisallowed","type":"error"},{"inputs":[],"name":"LSP4TokenNameNotEditable","type":"error"},{"inputs":[],"name":"LSP4TokenSymbolNotEditable","type":"error"},{"inputs":[],"name":"LSP4TokenTypeNotEditable","type":"error"},{"inputs":[{"internalType":"address","name":"callerAddress","type":"address"}],"name":"OwnableCallerNotTheOwner","type":"error"},{"inputs":[],"name":"OwnableCannotSetZeroAddressAsOwner","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"DataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getData","outputs":[{"internalType":"bytes","name":"dataValue","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatch","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setData","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatch","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getData(bytes32)":"54f6127f","getDataBatch(bytes32[])":"dedff9c6","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setData(bytes32,bytes)":"7f23690c","setDataBatch(bytes32[],bytes[])":"97902421","supportsInterface(bytes4)":"01ffc9a7","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesEmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_MsgValueDisallowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenNameNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenSymbolNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenTypeNotEditable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callerAddress\",\"type\":\"address\"}],\"name\":\"OwnableCallerNotTheOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnableCannotSetZeroAddressAsOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Matthew Stevens\",\"details\":\"Standard Implementation of the LSP4 standard.\",\"errors\":{\"ERC725Y_DataKeysValuesEmptyArray()\":[{\"details\":\"Reverts when one of the array parameter provided to {setDataBatch} function is an empty array.\"}],\"ERC725Y_DataKeysValuesLengthMismatch()\":[{\"details\":\"Reverts when there is not the same number of elements in the `datakeys` and `dataValues` array parameters provided when calling the {setDataBatch} function.\"}],\"ERC725Y_MsgValueDisallowed()\":[{\"details\":\"Reverts when sending value to the {setData} or {setDataBatch} function.\"}],\"LSP4TokenNameNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenName` after the digital asset contract has been deployed / initialized. The `LSP4TokenName` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP4TokenSymbolNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenSymbol` after the digital asset contract has been deployed / initialized. The `LSP4TokenSymbol` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP4TokenTypeNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenType` after the digital asset contract has been deployed / initialized. The `LSP4TokenType` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor / initializer when the digital asset contract is being deployed / initialized.\"}],\"OwnableCallerNotTheOwner(address)\":[{\"details\":\"Reverts when only the owner is allowed to call the function.\",\"params\":{\"callerAddress\":\"The address that tried to make the call.\"}}],\"OwnableCannotSetZeroAddressAsOwner()\":[{\"details\":\"Reverts when trying to set `address(0)` as the contract owner when deploying the contract, initializing it or transferring ownership of the contract.\"}]},\"kind\":\"dev\",\"methods\":{\"getData(bytes32)\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\",\"params\":{\"dataKey\":\"The data key for which to retrieve the value.\"},\"returns\":{\"dataValue\":\"The bytes value stored under the specified data key.\"}},\"getDataBatch(bytes32[])\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\",\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setData(bytes32,bytes)\":{\"custom:events\":\"{DataChanged} event.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner}.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, if the function is not intended to receive value (= native tokens), **an additional check should be implemented to ensure that `msg.value` sent was equal to 0**.\",\"details\":\"Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`. The function is marked as payable to enable flexibility on child contracts. For instance to implement a fee mechanism for setting specific data.\",\"params\":{\"dataKey\":\"The data key for which to set a new value.\",\"dataValue\":\"The new bytes value to set.\"}},\"setDataBatch(bytes32[],bytes[])\":{\"custom:events\":\"{DataChanged} event **for each data key/value pair set**.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner} of the contract.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, if the function is not intended to receive value (= native tokens), **an additional check should be implemented to ensure that `msg.value` sent was equal to 0**.\",\"details\":\"Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\",\"params\":{\"dataKeys\":\"An array of data keys to set bytes values for.\",\"dataValues\":\"An array of bytes values to set for each `dataKeys`.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Implementation of a LSP4DigitalAssetMetadata contract that stores the **Token-Metadata** (`LSP4TokenName` and `LSP4TokenSymbol`) in its ERC725Y data store.\",\"version\":1},\"userdoc\":{\"events\":{\"DataChanged(bytes32,bytes)\":{\"notice\":\"The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\"}},\"kind\":\"user\",\"methods\":{\"getData(bytes32)\":{\"notice\":\"Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\"},\"getDataBatch(bytes32[])\":{\"notice\":\"Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\"},\"setData(bytes32,bytes)\":{\"notice\":\"Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\"},\"setDataBatch(bytes32[],bytes[])\":{\"notice\":\"Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadataCore.sol\":\"LSP4DigitalAssetMetadataCore\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts/contracts/ERC725YCore.sol\":{\"keccak256\":\"0x90670a99b91307ed47851fcc72cee06f246f49a1810307c9e2f978116bbabfc4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://06a94fdd05c104d4d1368398ed4b00926d27c1485a5130aeb257bc904671bcc0\",\"dweb:/ipfs/Qmdsph9AnSiAvYpmgVXfy3Do5dCWKBVL3xWMeGaT7qjte2\"]},\"@erc725/smart-contracts/contracts/constants.sol\":{\"keccak256\":\"0x37da1619e580b6af6a68e91b4784f7945ee2344fad3a96b6dfb2592e35fedb60\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fb9436bd587d7b38c532f317dbd4bc5f178b50906b1a5e29adf24908f27b2c47\",\"dweb:/ipfs/QmW2vTCNM7Mr4vW5t9yBK7Zmh1FtaVjPwdAbyFcPNBSZYL\"]},\"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol\":{\"keccak256\":\"0xa9c83adb0239b86c0ff6251a03bc70115470c7ae10eb99276d6dd33636054b36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95a0109837bdffe887b6568b7f9bbde2b20cfd0c4db638805cf61ada5743b24d\",\"dweb:/ipfs/QmYH2erMtqiEYjRznWnc6NbBbwxvy6ArE45jtXYEyWi3Bc\"]},\"@erc725/smart-contracts/contracts/errors.sol\":{\"keccak256\":\"0xaafdb4370450b8874224b3c0b2b712149da97a50c9a47f56e4b654aa57eb87c5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a4e40b0f64613e5bbd62575facc72d2bcad249595e9397b5bff063dc5a81e757\",\"dweb:/ipfs/QmXx5yDvPxWzKXFYK7HDAbSNDBKRskYLoDwgrThmAimzDL\"]},\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4Constants.sol\":{\"keccak256\":\"0xdf9b7c688d39a92cb3238136a9f56554245d5ae9b6568dcd6164d0e15c6f56c7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bb36a427cdfa0f394d2d78014f85152ab383499fc3c3d6285d4b801c656e7c3f\",\"dweb:/ipfs/QmZJehfeWKfHLyZLufhs9u4ZyVztGCUNWXzFgfZSU837vU\"]},\"@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadataCore.sol\":{\"keccak256\":\"0xc442e52d34bb98acc1494675856b1f1d124af1375d8e23a9bfcc3b6c1865e1fc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://84254359ed929c1991136f9c3e934ddfa74cd85684de6c44cb70afa70d12f837\",\"dweb:/ipfs/QmWfmionUJJYyYDoeSQLGUHhou2sWxhWzwtU5GVjpumiSS\"]},\"@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4Errors.sol\":{\"keccak256\":\"0x3db7fd252ed02ce27686141125c3d65d3ff682a32601e1e8611becd9357a57b5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5aded62a160ed7f9860996004d1656e8592b3f97d478d8597f8ad6afbe4f34b7\",\"dweb:/ipfs/QmcnmLVt8cmz1iRNaX5c6iNYckRgUXGz8YkjHW9T1KNB5A\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/ILSP8IdentifiableDigitalAsset.sol":{"ILSP8IdentifiableDigitalAsset":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"DataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"tokenOwner","type":"address"},{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"OperatorAuthorizationChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"tokenOwner","type":"address"},{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":false,"internalType":"bool","name":"notified","type":"bool"},{"indexed":false,"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"OperatorRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"TokenIdDataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":false,"internalType":"bool","name":"force","type":"bool"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"authorizeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"batchCalls","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getData","outputs":[{"internalType":"bytes","name":"dataValue","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatch","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"tokenIds","type":"bytes32[]"},{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatchForTokenIds","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getDataForTokenId","outputs":[{"internalType":"bytes","name":"dataValues","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"getOperatorsOf","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"isOperatorFor","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bool","name":"notify","type":"bool"},{"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"revokeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setData","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatch","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"tokenIds","type":"bytes32[]"},{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatchForTokenIds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setDataForTokenId","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"}],"name":"tokenIdsOf","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"tokenOwnerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bool","name":"force","type":"bool"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"from","type":"address[]"},{"internalType":"address[]","name":"to","type":"address[]"},{"internalType":"bytes32[]","name":"tokenId","type":"bytes32[]"},{"internalType":"bool[]","name":"force","type":"bool[]"},{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"transferBatch","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"authorizeOperator(address,bytes32,bytes)":"86a10ddd","balanceOf(address)":"70a08231","batchCalls(bytes[])":"6963d438","getData(bytes32)":"54f6127f","getDataBatch(bytes32[])":"dedff9c6","getDataBatchForTokenIds(bytes32[],bytes32[])":"1d26fce6","getDataForTokenId(bytes32,bytes32)":"16e023b3","getOperatorsOf(bytes32)":"49a6078d","isOperatorFor(address,bytes32)":"2a3654a4","revokeOperator(address,bytes32,bool,bytes)":"db8c9663","setData(bytes32,bytes)":"7f23690c","setDataBatch(bytes32[],bytes[])":"97902421","setDataBatchForTokenIds(bytes32[],bytes32[],bytes[])":"be9f0e6f","setDataForTokenId(bytes32,bytes32,bytes)":"d6c1407c","supportsInterface(bytes4)":"01ffc9a7","tokenIdsOf(address)":"a3b261f2","tokenOwnerOf(bytes32)":"217b2270","totalSupply()":"18160ddd","transfer(address,address,bytes32,bool,bytes)":"511b6952","transferBatch(address[],address[],bytes32[],bool[],bytes[])":"7e87632c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"OperatorAuthorizationChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"notified\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"OperatorRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"TokenIdDataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"batchCalls\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"tokenIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatchForTokenIds\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getDataForTokenId\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValues\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"getOperatorsOf\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"notify\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"tokenIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatchForTokenIds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setDataForTokenId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"tokenIdsOf\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"tokenOwnerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"from\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"tokenId\",\"type\":\"bytes32[]\"},{\"internalType\":\"bool[]\",\"name\":\"force\",\"type\":\"bool[]\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"transferBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"OperatorAuthorizationChanged(address,address,bytes32,bytes)\":{\"details\":\"Emitted when `tokenOwner` enables `operator` to transfer or burn the `tokenId`.\",\"params\":{\"operator\":\"The address authorized as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The tokenId `operator` address has access on behalf of `tokenOwner`.\",\"tokenOwner\":\"The owner of the `tokenId`.\"}},\"OperatorRevoked(address,address,bytes32,bool,bytes)\":{\"details\":\"Emitted when `tokenOwner` disables `operator` to transfer or burn `tokenId` on its behalf.\",\"params\":{\"notified\":\"Bool indicating whether the operator has been notified or not\",\"operator\":\"The address revoked from the operator array ({getOperatorsOf}).\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The tokenId `operator` is revoked from operating on.\",\"tokenOwner\":\"The owner of the `tokenId`.\"}},\"TokenIdDataChanged(bytes32,bytes32,bytes)\":{\"details\":\"Emitted when setting data for `tokenId`.\",\"params\":{\"dataKey\":\"The data key for which a bytes value is set.\",\"dataValue\":\"The value to set for the given data key.\",\"tokenId\":\"The tokenId which data is set for.\"}},\"Transfer(address,address,address,bytes32,bool,bytes)\":{\"details\":\"Emitted when `tokenId` token is transferred from the `from` to the `to` address.\",\"params\":{\"data\":\"Any additional data the caller included by the caller during the transfer, and sent in the hooks to the `from` and `to` addresses.\",\"force\":\"If the token transfer enforces the `to` recipient address to be a contract that implements the LSP1 standard or not.\",\"from\":\"The previous owner of the `tokenId`\",\"operator\":\"The address of operator that sent the `tokenId`\",\"to\":\"The new owner of `tokenId`\",\"tokenId\":\"The tokenId that was transferred\"}}},\"kind\":\"dev\",\"methods\":{\"authorizeOperator(address,bytes32,bytes)\":{\"custom:events\":\"{OperatorAuthorizationChanged} event.\",\"custom:requirements\":\"- `tokenId` must exist. - caller MUST be the {tokenOwnerOf} `tokenId`. - the owner of a `tokenId` cannot grant itself as an `operator` (`operator` cannot be the calling address). - `operator` cannot be the zero address.\",\"details\":\"Allow an `operator` address to transfer or burn a specific `tokenId` on behalf of its token owner. See {isOperatorFor}. Notify the operator based on the LSP1-UniversalReceiver standard\",\"params\":{\"operator\":\"The address to authorize as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The token ID operator has access to.\"}},\"balanceOf(address)\":{\"details\":\"Get the number of token IDs owned by `tokenOwner`.\",\"params\":{\"tokenOwner\":\"The address to query     *\"},\"returns\":{\"_0\":\"The total number of token IDs that `tokenOwner` owns.\"}},\"batchCalls(bytes[])\":{\"details\":\"Allows a caller to batch different function calls in one call. Perform a `delegatecall` on self, to call different functions with preserving the context.\",\"params\":{\"data\":\"An array of ABI encoded function calls to be called on the contract.\"},\"returns\":{\"results\":\"An array of abi-encoded data returned by the functions executed.\"}},\"getData(bytes32)\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\",\"params\":{\"dataKey\":\"The data key for which to retrieve the value.\"},\"returns\":{\"dataValue\":\"The bytes value stored under the specified data key.\"}},\"getDataBatch(bytes32[])\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\",\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"getDataBatchForTokenIds(bytes32[],bytes32[])\":{\"params\":{\"dataKeys\":\"An array of data keys corresponding to the token IDs.\",\"tokenIds\":\"An array of token IDs.\"},\"returns\":{\"dataValues\":\"An array of data values for each pair of `tokenId` and `dataKey`.\"}},\"getDataForTokenId(bytes32,bytes32)\":{\"params\":{\"dataKey\":\"The key for the data to retrieve.\",\"tokenId\":\"The unique identifier for a token.\"},\"returns\":{\"dataValues\":\"The data value associated with the given `tokenId` and `dataKey`.\"}},\"getOperatorsOf(bytes32)\":{\"details\":\"Returns all `operator` addresses that are allowed to transfer or burn a specific `tokenId` on behalf of its owner.\",\"params\":{\"tokenId\":\"The token ID to get the operators for.\"},\"returns\":{\"_0\":\"An array of operators allowed to transfer or burn a specific `tokenId`. Requirements - `tokenId` must exist.\"}},\"isOperatorFor(address,bytes32)\":{\"custom:info\":\"The tokenOwner is its own operator.\",\"custom:requirements\":\"- `tokenId` must exist. - caller must be the current {tokenOwnerOf} `tokenId`.\",\"details\":\"Returns whether `operator` address is an operator for a given `tokenId`.\",\"params\":{\"operator\":\"The address to query operator status for.\",\"tokenId\":\"The token ID to check if `operator` is allowed to operate on.\"},\"returns\":{\"_0\":\"`true` if `operator` is an operator for `tokenId`, `false` otherwise.\"}},\"revokeOperator(address,bytes32,bool,bytes)\":{\"custom:events\":\"{OperatorRevoked} event with address of the operator being revoked for the caller (token owner)..\",\"custom:requirements\":\"- `tokenId` must exist. - caller must be the {tokenOwnerOf} `tokenId`. - the owner of a `tokenId` cannot grant revoke itself as an `operator` (`operator` cannot be the calling address). - `operator` cannot be the zero address.\",\"details\":\"Remove access of `operator` for a given `tokenId`, disallowing it to transfer `tokenId` on behalf of its owner. See also {isOperatorFor}.\",\"params\":{\"notify\":\"Boolean indicating whether to notify the operator or not\",\"operator\":\"The address to revoke as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The tokenId `operator` is revoked from operating on.\"}},\"setData(bytes32,bytes)\":{\"details\":\"Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`. The function is marked as payable to enable flexibility on child contracts. For instance to implement a fee mechanism for setting specific data.\",\"params\":{\"dataKey\":\"The data key for which to set a new value.\",\"dataValue\":\"The new bytes value to set.\"}},\"setDataBatch(bytes32[],bytes[])\":{\"details\":\"Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\",\"params\":{\"dataKeys\":\"An array of data keys to set bytes values for.\",\"dataValues\":\"An array of bytes values to set for each `dataKeys`.\"}},\"setDataBatchForTokenIds(bytes32[],bytes32[],bytes[])\":{\"custom:events\":\"{TokenIdDataChanged} event for each pair.\",\"params\":{\"dataKeys\":\"An array of data keys corresponding to the token IDs.\",\"dataValues\":\"An array of values to set for the given data keys.\",\"tokenIds\":\"An array of token IDs.\"}},\"setDataForTokenId(bytes32,bytes32,bytes)\":{\"custom:events\":\"{TokenIdDataChanged} event.\",\"params\":{\"dataKey\":\"The key for the data to set.\",\"dataValue\":\"The value to set for the given data key.\",\"tokenId\":\"The unique identifier for a token.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenIdsOf(address)\":{\"details\":\"Returns the list of token IDs that the `tokenOwner` address owns.\",\"params\":{\"tokenOwner\":\"The address that we want to get the list of token IDs for.\"},\"returns\":{\"_0\":\"An array of `bytes32[] tokenIds` owned by `tokenOwner`.\"}},\"tokenOwnerOf(bytes32)\":{\"custom:info\":\"if the `tokenId` is not owned by any address, the returned address will be `address(0)`\",\"custom:requirements\":\"`tokenId` must exist.\",\"details\":\"Returns the list of `tokenIds` for the `tokenOwner` address.\",\"params\":{\"tokenId\":\"tokenOwner The address to query owned tokens\"},\"returns\":{\"_0\":\"The owner address of the given `tokenId`.\"}},\"totalSupply()\":{\"details\":\"Returns the number of existing tokens that have been minted in this contract.\",\"returns\":{\"_0\":\"The number of existing tokens.\"}},\"transfer(address,address,bytes32,bool,bytes)\":{\"custom:events\":\"- {Transfer} event when the `tokenId` is successfully transferred.\",\"custom:hint\":\"The `force` parameter **MUST be set to `true`** to transfer tokens to Externally Owned Accounts (EOAs) or contracts that do not implement the LSP1 Universal Receiver Standard. Otherwise the function will revert making the transfer fail.\",\"custom:info\":\"if the `to` address is a contract that implements LSP1, it will always be notified via its `universalReceiver(...)` function, regardless if `force` is set to `true` or `false`.\",\"custom:requirements\":\"- `from` cannot be the zero address. - `to` cannot be the zero address. - `from` and `to` cannot be the same address (`from` cannot send the `tokenId` to itself). - `from` must own the given `tokenId`. - If the caller is not `from`, it must be an operator for the `tokenId`.\",\"custom:warning\":\"Be aware that when either the sender or the recipient can have logic that revert in their `universalReceiver(...)` function when being notified. This even if the `force` was set to `true`.\",\"details\":\"Transfer a given `tokenId` token from the `from` address to the `to` address. If operators are set for a specific `tokenId`, all the operators are revoked after the tokenId have been transferred. The `force` parameter MUST be set to `true` when transferring tokens to Externally Owned Accounts (EOAs) or contracts that do not implement the LSP1 standard.\",\"params\":{\"data\":\"Any additional data the caller wants included in the emitted event, and sent in the hooks of the `from` and `to` addresses.\",\"force\":\"When set to `true`, the `to` address CAN be any addres. When set to `false`, the `to` address MUST be a contract that supports the LSP1 UniversalReceiver standard.\",\"from\":\"The address that owns the given `tokenId`.\",\"to\":\"The address that will receive the `tokenId`.\",\"tokenId\":\"The token ID to transfer.\"}},\"transferBatch(address[],address[],bytes32[],bool[],bytes[])\":{\"custom:events\":\"- {Transfer} events on each successful token transfer.\",\"custom:requirements\":\"- The arrays of `from`, `to` and `tokenId` must have the same length. - no values in the `from` array can be the zero address. - no values in the `to` array can be the zero address. - `from` and `to` cannot be the same address at the same index on each arrays. - each `tokenId` must be owned by `from`. - If the caller is not `from`, it must be an operator of each `tokenId`.\",\"details\":\"Transfers multiple tokens at once based on the arrays of `from`, `to` and `tokenId`. If any transfer fails, the whole call will revert.\",\"params\":{\"data\":\"Any additional data the caller wants included in the emitted event, and sent in the hooks to the `from` and `to` addresses.\",\"force\":\"When set to `true`, `to` may be any address. When set to `false`, `to` must be a contract that supports the LSP1 standard and not revert.\",\"from\":\"An array of sending addresses.\",\"to\":\"An array of recipient addresses.\",\"tokenId\":\"An array of token IDs to transfer.\"}}},\"title\":\"Interface of the LSP8 - Identifiable Digital Asset standard, a non-fungible digital asset.\",\"version\":1},\"userdoc\":{\"events\":{\"DataChanged(bytes32,bytes)\":{\"notice\":\"The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\"}},\"kind\":\"user\",\"methods\":{\"batchCalls(bytes[])\":{\"notice\":\"Executing the following batch of abi-encoded function calls on the contract: `data`.\"},\"getData(bytes32)\":{\"notice\":\"Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\"},\"getDataBatch(bytes32[])\":{\"notice\":\"Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\"},\"getDataBatchForTokenIds(bytes32[],bytes32[])\":{\"notice\":\"Retrieves data in batch for multiple `tokenId` and `dataKey` pairs.\"},\"getDataForTokenId(bytes32,bytes32)\":{\"notice\":\"Retrieves data for a specific `tokenId` and `dataKey`.\"},\"setData(bytes32,bytes)\":{\"notice\":\"Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\"},\"setDataBatch(bytes32[],bytes[])\":{\"notice\":\"Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\"},\"setDataBatchForTokenIds(bytes32[],bytes32[],bytes[])\":{\"notice\":\"Sets data in batch for multiple `tokenId` and `dataKey` pairs.\"},\"setDataForTokenId(bytes32,bytes32,bytes)\":{\"notice\":\"Sets data for a specific `tokenId` and `dataKey`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/ILSP8IdentifiableDigitalAsset.sol\":\"ILSP8IdentifiableDigitalAsset\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/ILSP8IdentifiableDigitalAsset.sol\":{\"keccak256\":\"0x8fc467010034709cda26f5b4c82a8297a3d3b70e53f76c15f17169196748671f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ae752bf829815fa6a31afc29ad5c392835172cf9ad13ad33f50a382ac65a9302\",\"dweb:/ipfs/QmZc3ojmFoVX5nGtRG3JNMoRsM7AAE12iFy9XCJT2a2iBC\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAsset.sol":{"LSP8IdentifiableDigitalAsset":{"abi":[{"inputs":[],"name":"ERC725Y_DataKeysValuesEmptyArray","type":"error"},{"inputs":[],"name":"ERC725Y_DataKeysValuesLengthMismatch","type":"error"},{"inputs":[],"name":"ERC725Y_MsgValueDisallowed","type":"error"},{"inputs":[{"internalType":"bytes","name":"storedData","type":"bytes"}],"name":"InvalidExtensionAddress","type":"error"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"name":"InvalidFunctionSelector","type":"error"},{"inputs":[],"name":"LSP4TokenNameNotEditable","type":"error"},{"inputs":[],"name":"LSP4TokenSymbolNotEditable","type":"error"},{"inputs":[],"name":"LSP4TokenTypeNotEditable","type":"error"},{"inputs":[{"internalType":"uint256","name":"callIndex","type":"uint256"}],"name":"LSP8BatchCallFailed","type":"error"},{"inputs":[],"name":"LSP8CannotSendToAddressZero","type":"error"},{"inputs":[],"name":"LSP8CannotSendToSelf","type":"error"},{"inputs":[],"name":"LSP8CannotUseAddressZeroAsOperator","type":"error"},{"inputs":[],"name":"LSP8InvalidTransferBatch","type":"error"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"LSP8NonExistentTokenId","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"LSP8NonExistingOperator","type":"error"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"address","name":"caller","type":"address"}],"name":"LSP8NotTokenOperator","type":"error"},{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"address","name":"caller","type":"address"}],"name":"LSP8NotTokenOwner","type":"error"},{"inputs":[{"internalType":"address","name":"tokenReceiver","type":"address"}],"name":"LSP8NotifyTokenReceiverContractMissingLSP1Interface","type":"error"},{"inputs":[{"internalType":"address","name":"tokenReceiver","type":"address"}],"name":"LSP8NotifyTokenReceiverIsEOA","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"LSP8OperatorAlreadyAuthorized","type":"error"},{"inputs":[],"name":"LSP8TokenContractCannotHoldValue","type":"error"},{"inputs":[],"name":"LSP8TokenIdFormatNotEditable","type":"error"},{"inputs":[],"name":"LSP8TokenIdsDataEmptyArray","type":"error"},{"inputs":[],"name":"LSP8TokenIdsDataLengthMismatch","type":"error"},{"inputs":[],"name":"LSP8TokenOwnerCannotBeOperator","type":"error"},{"inputs":[{"internalType":"bytes4","name":"functionSelector","type":"bytes4"}],"name":"NoExtensionFoundForFunctionSelector","type":"error"},{"inputs":[{"internalType":"address","name":"callerAddress","type":"address"}],"name":"OwnableCallerNotTheOwner","type":"error"},{"inputs":[],"name":"OwnableCannotSetZeroAddressAsOwner","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"DataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"tokenOwner","type":"address"},{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"OperatorAuthorizationChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"tokenOwner","type":"address"},{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":false,"internalType":"bool","name":"notified","type":"bool"},{"indexed":false,"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"OperatorRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"TokenIdDataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":false,"internalType":"bool","name":"force","type":"bool"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"Transfer","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"authorizeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"batchCalls","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getData","outputs":[{"internalType":"bytes","name":"dataValue","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatch","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"tokenIds","type":"bytes32[]"},{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatchForTokenIds","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getDataForTokenId","outputs":[{"internalType":"bytes","name":"dataValue","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"getOperatorsOf","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"isOperatorFor","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bool","name":"notify","type":"bool"},{"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"revokeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setData","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatch","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"tokenIds","type":"bytes32[]"},{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatchForTokenIds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setDataForTokenId","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"}],"name":"tokenIdsOf","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"tokenOwnerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bool","name":"force","type":"bool"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"from","type":"address[]"},{"internalType":"address[]","name":"to","type":"address[]"},{"internalType":"bytes32[]","name":"tokenId","type":"bytes32[]"},{"internalType":"bool[]","name":"force","type":"bool[]"},{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"transferBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"authorizeOperator(address,bytes32,bytes)":"86a10ddd","balanceOf(address)":"70a08231","batchCalls(bytes[])":"6963d438","getData(bytes32)":"54f6127f","getDataBatch(bytes32[])":"dedff9c6","getDataBatchForTokenIds(bytes32[],bytes32[])":"1d26fce6","getDataForTokenId(bytes32,bytes32)":"16e023b3","getOperatorsOf(bytes32)":"49a6078d","isOperatorFor(address,bytes32)":"2a3654a4","owner()":"8da5cb5b","renounceOwnership()":"715018a6","revokeOperator(address,bytes32,bool,bytes)":"db8c9663","setData(bytes32,bytes)":"7f23690c","setDataBatch(bytes32[],bytes[])":"97902421","setDataBatchForTokenIds(bytes32[],bytes32[],bytes[])":"be9f0e6f","setDataForTokenId(bytes32,bytes32,bytes)":"d6c1407c","supportsInterface(bytes4)":"01ffc9a7","tokenIdsOf(address)":"a3b261f2","tokenOwnerOf(bytes32)":"217b2270","totalSupply()":"18160ddd","transfer(address,address,bytes32,bool,bytes)":"511b6952","transferBatch(address[],address[],bytes32[],bool[],bytes[])":"7e87632c","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesEmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_MsgValueDisallowed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"storedData\",\"type\":\"bytes\"}],\"name\":\"InvalidExtensionAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"InvalidFunctionSelector\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenNameNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenSymbolNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenTypeNotEditable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"callIndex\",\"type\":\"uint256\"}],\"name\":\"LSP8BatchCallFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotSendToAddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotSendToSelf\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotUseAddressZeroAsOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8InvalidTransferBatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8NonExistentTokenId\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8NonExistingOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"LSP8NotTokenOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"LSP8NotTokenOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"LSP8NotifyTokenReceiverContractMissingLSP1Interface\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"LSP8NotifyTokenReceiverIsEOA\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8OperatorAlreadyAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenContractCannotHoldValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenIdFormatNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenIdsDataEmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenIdsDataLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenOwnerCannotBeOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"functionSelector\",\"type\":\"bytes4\"}],\"name\":\"NoExtensionFoundForFunctionSelector\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callerAddress\",\"type\":\"address\"}],\"name\":\"OwnableCallerNotTheOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnableCannotSetZeroAddressAsOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"OperatorAuthorizationChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"notified\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"OperatorRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"TokenIdDataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"batchCalls\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"tokenIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatchForTokenIds\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getDataForTokenId\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"getOperatorsOf\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"notify\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"tokenIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatchForTokenIds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setDataForTokenId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"tokenIdsOf\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"tokenOwnerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"from\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"tokenId\",\"type\":\"bytes32[]\"},{\"internalType\":\"bool[]\",\"name\":\"force\",\"type\":\"bool[]\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"transferBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Matthew Stevens\",\"details\":\"Standard implementation contract of the LSP8 standard. Minting and transferring are done by providing a unique `tokenId`. This implementation is agnostic to the way tokens are created. A supply mechanism has to be added in a derived contract using {_mint} For a generic mechanism, see {LSP7Mintable}.\",\"errors\":{\"ERC725Y_DataKeysValuesEmptyArray()\":[{\"details\":\"Reverts when one of the array parameter provided to {setDataBatch} function is an empty array.\"}],\"ERC725Y_DataKeysValuesLengthMismatch()\":[{\"details\":\"Reverts when there is not the same number of elements in the `datakeys` and `dataValues` array parameters provided when calling the {setDataBatch} function.\"}],\"ERC725Y_MsgValueDisallowed()\":[{\"details\":\"Reverts when sending value to the {setData} or {setDataBatch} function.\"}],\"InvalidExtensionAddress(bytes)\":[{\"details\":\"reverts when the bytes retrieved from the LSP17 data key is not a valid address (not 20 bytes)\"}],\"InvalidFunctionSelector(bytes)\":[{\"details\":\"reverts when the contract is called with a function selector not valid (less than 4 bytes of data)\"}],\"LSP4TokenNameNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenName` after the digital asset contract has been deployed / initialized. The `LSP4TokenName` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP4TokenSymbolNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenSymbol` after the digital asset contract has been deployed / initialized. The `LSP4TokenSymbol` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP4TokenTypeNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenType` after the digital asset contract has been deployed / initialized. The `LSP4TokenType` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor / initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP8BatchCallFailed(uint256)\":[{\"details\":\"Reverts when a batch call failed.\"}],\"LSP8CannotSendToAddressZero()\":[{\"details\":\"Reverts when trying to send token to the zero address.\"}],\"LSP8CannotSendToSelf()\":[{\"details\":\"Reverts when specifying the same address for `from` and `to` in a token transfer.\"}],\"LSP8CannotUseAddressZeroAsOperator()\":[{\"details\":\"Reverts when trying to set the zero address as an operator.\"}],\"LSP8InvalidTransferBatch()\":[{\"details\":\"Reverts when the parameters used for `transferBatch` have different lengths.\"}],\"LSP8NonExistentTokenId(bytes32)\":[{\"details\":\"Reverts when `tokenId` has not been minted.\"}],\"LSP8NonExistingOperator(address,bytes32)\":[{\"details\":\"Reverts when `operator` is not an operator for the `tokenId`.\"}],\"LSP8NotTokenOperator(bytes32,address)\":[{\"details\":\"Reverts when `caller` is not an allowed operator for `tokenId`.\"}],\"LSP8NotTokenOwner(address,bytes32,address)\":[{\"details\":\"Reverts when `caller` is not the `tokenOwner` of the `tokenId`.\"}],\"LSP8NotifyTokenReceiverContractMissingLSP1Interface(address)\":[{\"details\":\"Reverts if the `tokenReceiver` does not implement LSP1 when minting or transferring tokens with `bool force` set as `false`.\"}],\"LSP8NotifyTokenReceiverIsEOA(address)\":[{\"details\":\"Reverts if the `tokenReceiver` is an EOA when minting or transferring tokens with `bool force` set as `false`.\"}],\"LSP8OperatorAlreadyAuthorized(address,bytes32)\":[{\"details\":\"Reverts when `operator` is already authorized for the `tokenId`.\"}],\"LSP8TokenContractCannotHoldValue()\":[{\"details\":\"Error occurs when sending native tokens to the LSP8 contract without sending any data. E.g. Sending value without passing a bytes4 function selector to call a LSP17 Extension.\"}],\"LSP8TokenIdFormatNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP8TokenIdFormat` after the identifiable digital asset contract has been deployed. The `LSP8TokenIdFormat` data key is located inside the ERC725Y Data key-value store of the identifiable digital asset contract. It can be set only once inside the constructor/initializer when the identifiable digital asset contract is being deployed.\"}],\"LSP8TokenIdsDataEmptyArray()\":[{\"details\":\"Reverts when empty arrays is passed to the function\"}],\"LSP8TokenIdsDataLengthMismatch()\":[{\"details\":\"Reverts when the length of the token IDs data arrays is not equal\"}],\"LSP8TokenOwnerCannotBeOperator()\":[{\"details\":\"Reverts when trying to authorize or revoke the token's owner as an operator.\"}],\"NoExtensionFoundForFunctionSelector(bytes4)\":[{\"details\":\"reverts when there is no extension for the function selector being called with\"}],\"OwnableCallerNotTheOwner(address)\":[{\"details\":\"Reverts when only the owner is allowed to call the function.\",\"params\":{\"callerAddress\":\"The address that tried to make the call.\"}}],\"OwnableCannotSetZeroAddressAsOwner()\":[{\"details\":\"Reverts when trying to set `address(0)` as the contract owner when deploying the contract, initializing it or transferring ownership of the contract.\"}]},\"kind\":\"dev\",\"methods\":{\"authorizeOperator(address,bytes32,bytes)\":{\"details\":\"Allow an `operator` address to transfer or burn a specific `tokenId` on behalf of its token owner. See {isOperatorFor}. Notify the operator based on the LSP1-UniversalReceiver standard\",\"params\":{\"operator\":\"The address to authorize as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The token ID operator has access to.\"}},\"balanceOf(address)\":{\"details\":\"Get the number of token IDs owned by `tokenOwner`.\",\"params\":{\"tokenOwner\":\"The address to query     *\"},\"returns\":{\"_0\":\"The total number of token IDs that `tokenOwner` owns.\"}},\"batchCalls(bytes[])\":{\"custom:info\":\"It's not possible to send value along the functions call due to the use of `delegatecall`.\",\"details\":\"Allows a caller to batch different function calls in one call. Perform a `delegatecall` on self, to call different functions with preserving the context.\",\"params\":{\"data\":\"An array of ABI encoded function calls to be called on the contract.\"},\"returns\":{\"results\":\"An array of abi-encoded data returned by the functions executed.\"}},\"constructor\":{\"custom:warning\":\"Make sure the tokenId format provided on deployment is correct, as it can only be set once and cannot be changed in the ERC725Y storage after the contract has been deployed.\",\"details\":\"Deploy a `LSP8IdentifiableDigitalAsset` contract and set the tokenId format inside the ERC725Y storage of the contract. This will also set the token `name_` and `symbol_` under the ERC725Y data keys `LSP4TokenName` and `LSP4TokenSymbol`.\",\"params\":{\"lsp4TokenType_\":\"The type of token this digital asset contract represents (`0` = Token, `1` = NFT, `2` = Collection).\",\"lsp8TokenIdFormat_\":\"The format of tokenIds (= NFTs) that this contract will create.\",\"name_\":\"The name of the token\",\"newOwner_\":\"The owner of the the token-Metadata\",\"symbol_\":\"The symbol of the token\"}},\"getData(bytes32)\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\",\"params\":{\"dataKey\":\"The data key for which to retrieve the value.\"},\"returns\":{\"dataValue\":\"The bytes value stored under the specified data key.\"}},\"getDataBatch(bytes32[])\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\",\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"getDataBatchForTokenIds(bytes32[],bytes32[])\":{\"params\":{\"dataKeys\":\"An array of data keys corresponding to the token IDs.\",\"tokenIds\":\"An array of token IDs.\"},\"returns\":{\"dataValues\":\"An array of data values for each pair of `tokenId` and `dataKey`.\"}},\"getDataForTokenId(bytes32,bytes32)\":{\"params\":{\"dataKey\":\"The key for the data to retrieve.\",\"tokenId\":\"The unique identifier for a token.\"},\"returns\":{\"dataValue\":\"The data value associated with the given `tokenId` and `dataKey`.\"}},\"getOperatorsOf(bytes32)\":{\"details\":\"Returns all `operator` addresses that are allowed to transfer or burn a specific `tokenId` on behalf of its owner.\",\"params\":{\"tokenId\":\"The token ID to get the operators for.\"},\"returns\":{\"_0\":\"An array of operators allowed to transfer or burn a specific `tokenId`. Requirements - `tokenId` must exist.\"}},\"isOperatorFor(address,bytes32)\":{\"details\":\"Returns whether `operator` address is an operator for a given `tokenId`.\",\"params\":{\"operator\":\"The address to query operator status for.\",\"tokenId\":\"The token ID to check if `operator` is allowed to operate on.\"},\"returns\":{\"_0\":\"`true` if `operator` is an operator for `tokenId`, `false` otherwise.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"revokeOperator(address,bytes32,bool,bytes)\":{\"details\":\"Remove access of `operator` for a given `tokenId`, disallowing it to transfer `tokenId` on behalf of its owner. See also {isOperatorFor}.\",\"params\":{\"notify\":\"Boolean indicating whether to notify the operator or not\",\"operator\":\"The address to revoke as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The tokenId `operator` is revoked from operating on.\"}},\"setData(bytes32,bytes)\":{\"custom:events\":\"{DataChanged} event.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner}.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, if the function is not intended to receive value (= native tokens), **an additional check should be implemented to ensure that `msg.value` sent was equal to 0**.\",\"details\":\"Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`. The function is marked as payable to enable flexibility on child contracts. For instance to implement a fee mechanism for setting specific data.\",\"params\":{\"dataKey\":\"The data key for which to set a new value.\",\"dataValue\":\"The new bytes value to set.\"}},\"setDataBatch(bytes32[],bytes[])\":{\"custom:events\":\"{DataChanged} event **for each data key/value pair set**.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner} of the contract.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, if the function is not intended to receive value (= native tokens), **an additional check should be implemented to ensure that `msg.value` sent was equal to 0**.\",\"details\":\"Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\",\"params\":{\"dataKeys\":\"An array of data keys to set bytes values for.\",\"dataValues\":\"An array of bytes values to set for each `dataKeys`.\"}},\"setDataBatchForTokenIds(bytes32[],bytes32[],bytes[])\":{\"params\":{\"dataKeys\":\"An array of data keys corresponding to the token IDs.\",\"dataValues\":\"An array of values to set for the given data keys.\",\"tokenIds\":\"An array of token IDs.\"}},\"setDataForTokenId(bytes32,bytes32,bytes)\":{\"params\":{\"dataKey\":\"The key for the data to set.\",\"dataValue\":\"The value to set for the given data key.\",\"tokenId\":\"The unique identifier for a token.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenIdsOf(address)\":{\"details\":\"Returns the list of token IDs that the `tokenOwner` address owns.\",\"params\":{\"tokenOwner\":\"The address that we want to get the list of token IDs for.\"},\"returns\":{\"_0\":\"An array of `bytes32[] tokenIds` owned by `tokenOwner`.\"}},\"tokenOwnerOf(bytes32)\":{\"details\":\"Returns the list of `tokenIds` for the `tokenOwner` address.\",\"params\":{\"tokenId\":\"tokenOwner The address to query owned tokens\"},\"returns\":{\"_0\":\"The owner address of the given `tokenId`.\"}},\"totalSupply()\":{\"details\":\"Returns the number of existing tokens that have been minted in this contract.\",\"returns\":{\"_0\":\"The number of existing tokens.\"}},\"transfer(address,address,bytes32,bool,bytes)\":{\"details\":\"Transfer a given `tokenId` token from the `from` address to the `to` address. If operators are set for a specific `tokenId`, all the operators are revoked after the tokenId have been transferred. The `force` parameter MUST be set to `true` when transferring tokens to Externally Owned Accounts (EOAs) or contracts that do not implement the LSP1 standard.\",\"params\":{\"data\":\"Any additional data the caller wants included in the emitted event, and sent in the hooks of the `from` and `to` addresses.\",\"force\":\"When set to `true`, the `to` address CAN be any addres. When set to `false`, the `to` address MUST be a contract that supports the LSP1 UniversalReceiver standard.\",\"from\":\"The address that owns the given `tokenId`.\",\"to\":\"The address that will receive the `tokenId`.\",\"tokenId\":\"The token ID to transfer.\"}},\"transferBatch(address[],address[],bytes32[],bool[],bytes[])\":{\"details\":\"Transfers multiple tokens at once based on the arrays of `from`, `to` and `tokenId`. If any transfer fails, the whole call will revert.\",\"params\":{\"data\":\"Any additional data the caller wants included in the emitted event, and sent in the hooks to the `from` and `to` addresses.\",\"force\":\"When set to `true`, `to` may be any address. When set to `false`, `to` must be a contract that supports the LSP1 standard and not revert.\",\"from\":\"An array of sending addresses.\",\"to\":\"An array of recipient addresses.\",\"tokenId\":\"An array of token IDs to transfer.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Implementation of a LSP8 Identifiable Digital Asset, a contract that represents a non-fungible token.\",\"version\":1},\"userdoc\":{\"errors\":{\"LSP8BatchCallFailed(uint256)\":[{\"notice\":\"Batch call failed.\"}],\"LSP8TokenContractCannotHoldValue()\":[{\"notice\":\"LSP8 contract cannot receive native tokens.\"}]},\"events\":{\"DataChanged(bytes32,bytes)\":{\"notice\":\"The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\"}},\"kind\":\"user\",\"methods\":{\"batchCalls(bytes[])\":{\"notice\":\"Executing the following batch of abi-encoded function calls on the contract: `data`.\"},\"constructor\":{\"notice\":\"Deploying a LSP8IdentifiableDigitalAsset with name `name_`, symbol `symbol_`, owned by address `newOwner_` with tokenId format `lsp8TokenIdFormat_`.\"},\"getData(bytes32)\":{\"notice\":\"Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\"},\"getDataBatch(bytes32[])\":{\"notice\":\"Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\"},\"getDataBatchForTokenIds(bytes32[],bytes32[])\":{\"notice\":\"Retrieves data in batch for multiple `tokenId` and `dataKey` pairs.\"},\"getDataForTokenId(bytes32,bytes32)\":{\"notice\":\"Retrieves data for a specific `tokenId` and `dataKey`.\"},\"setData(bytes32,bytes)\":{\"notice\":\"Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\"},\"setDataBatch(bytes32[],bytes[])\":{\"notice\":\"Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\"},\"setDataBatchForTokenIds(bytes32[],bytes32[],bytes[])\":{\"notice\":\"Sets data in batch for multiple `tokenId` and `dataKey` pairs.\"},\"setDataForTokenId(bytes32,bytes32,bytes)\":{\"notice\":\"Sets data for a specific `tokenId` and `dataKey`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAsset.sol\":\"LSP8IdentifiableDigitalAsset\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts/contracts/ERC725Y.sol\":{\"keccak256\":\"0x4cb23ef9c2c93d881737c47cd0eebd63dcb39828484fda1fd3a5ce9971df3ef7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ff707e4552e8e442ff88d8b961583912664eaee373b49f03b1e6c4cd28213938\",\"dweb:/ipfs/QmVELUkQr3TikdEZoG9cxhwUCknuvSYVGKwpeDF76XiZpb\"]},\"@erc725/smart-contracts/contracts/ERC725YCore.sol\":{\"keccak256\":\"0x90670a99b91307ed47851fcc72cee06f246f49a1810307c9e2f978116bbabfc4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://06a94fdd05c104d4d1368398ed4b00926d27c1485a5130aeb257bc904671bcc0\",\"dweb:/ipfs/Qmdsph9AnSiAvYpmgVXfy3Do5dCWKBVL3xWMeGaT7qjte2\"]},\"@erc725/smart-contracts/contracts/constants.sol\":{\"keccak256\":\"0x37da1619e580b6af6a68e91b4784f7945ee2344fad3a96b6dfb2592e35fedb60\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fb9436bd587d7b38c532f317dbd4bc5f178b50906b1a5e29adf24908f27b2c47\",\"dweb:/ipfs/QmW2vTCNM7Mr4vW5t9yBK7Zmh1FtaVjPwdAbyFcPNBSZYL\"]},\"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol\":{\"keccak256\":\"0xa9c83adb0239b86c0ff6251a03bc70115470c7ae10eb99276d6dd33636054b36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95a0109837bdffe887b6568b7f9bbde2b20cfd0c4db638805cf61ada5743b24d\",\"dweb:/ipfs/QmYH2erMtqiEYjRznWnc6NbBbwxvy6ArE45jtXYEyWi3Bc\"]},\"@erc725/smart-contracts/contracts/errors.sol\":{\"keccak256\":\"0xaafdb4370450b8874224b3c0b2b712149da97a50c9a47f56e4b654aa57eb87c5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a4e40b0f64613e5bbd62575facc72d2bcad249595e9397b5bff063dc5a81e757\",\"dweb:/ipfs/QmXx5yDvPxWzKXFYK7HDAbSNDBKRskYLoDwgrThmAimzDL\"]},\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Constants.sol\":{\"keccak256\":\"0x6d4bb208587872ad563fef31655c44f7de03baa5b4a513910c0003aea0c04036\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://880c3b21e2090a14e7bba94ac5c8d4633e8a81d93c6f619454167a01dcc866d8\",\"dweb:/ipfs/QmZp6YVM4Eor5XtuXXqGRaPAJ3u5KCmLwuNRAGf4JY7sK1\"]},\"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Errors.sol\":{\"keccak256\":\"0x75a0159f76a3c5bf26b13aa404aca2f588ea41928eb1483683e29d2031fe5abf\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f1b93e7eb5a88a2f42a9dfa061ca5e93e7650cd9114010faa18faf0a5508f579\",\"dweb:/ipfs/QmXmLhf1ejsF7G1FZnvpTBRS9oQ9ZTuqCBRT1im3vAuUYW\"]},\"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Extendable.sol\":{\"keccak256\":\"0x5983e916a4cb604a45b585d7f745f5ac8bf69ef51fbc78cf8e70408e29e008c2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e1e9a7b8dc210030d35b4e2c3dbb7107f51c063256f7e6120997ed638f033db1\",\"dweb:/ipfs/QmRQgkaDnC9sAb9mZJtVgBsAR1xfmcTA2erCVUiyszy15o\"]},\"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/ILSP1UniversalReceiver.sol\":{\"keccak256\":\"0x5b8764a678dc9d6673eafa8ad0ee6053cdea30acb58015bdf9c93f9f1788b49b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0e26dcf5d66120b7a0895ddcaec92207e17c63344fca885d2b7e3fe953ec027c\",\"dweb:/ipfs/QmetAuz9etfz9BG9oPJCwMthnhfd8XvZYLBmMfrPNUm3qV\"]},\"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/LSP1Constants.sol\":{\"keccak256\":\"0x0f87fc38243fc70316e22814f5a79d9c0770a39f64077cbc6fb5fddfa1d4c23c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c7d83f054b71dfa5ca48a9a811e6a985ff6b38a9e5f4c220ea2ec3a322cce7cf\",\"dweb:/ipfs/QmaehpHpqc5dtRCm9BoU8vCY59AeEnmGvmmwPirVr47oGp\"]},\"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/LSP1Utils.sol\":{\"keccak256\":\"0x15fca4c3d6bfaec5d1a144762f1e160c6b82e7abb5e5c0ca8fcc5f4301b0c45e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ceb307c243e6439d5be18263f75c2ada73d70c5b0480dfd8b12315cacc81fa62\",\"dweb:/ipfs/QmVPwVhL6NAvUgAWQmV964tEHNWbXY6uej5VLpDorqBVhd\"]},\"@lukso/lsp-smart-contracts/contracts/LSP2ERC725YJSONSchema/LSP2Utils.sol\":{\"keccak256\":\"0x86ce8a85d12c79b76db5413b05b9bff16cd865b395efdc0e85b06b3b5e17219b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7ebb6d1152f88b459b9e8fc3ef6361a9fb9d03bfa994148e6b125a2ee4025487\",\"dweb:/ipfs/QmX18bCecAtrjqKTyCPqRrUuvVYSW1XZZJUgvjfYnqfmEH\"]},\"@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4Constants.sol\":{\"keccak256\":\"0xdf9b7c688d39a92cb3238136a9f56554245d5ae9b6568dcd6164d0e15c6f56c7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bb36a427cdfa0f394d2d78014f85152ab383499fc3c3d6285d4b801c656e7c3f\",\"dweb:/ipfs/QmZJehfeWKfHLyZLufhs9u4ZyVztGCUNWXzFgfZSU837vU\"]},\"@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadata.sol\":{\"keccak256\":\"0xd120529845267176d7658eb3b610fd9412012ce58cfde05a42f7fcee1c371dce\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4e2919d97ff39ae203dc57f53a7ae6a4f1dfe9354e564744ee3752771687b796\",\"dweb:/ipfs/QmbNwNCDnLcD4jrboPJhAMXVEiVGbagBteXM5sVByZ8A1h\"]},\"@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadataCore.sol\":{\"keccak256\":\"0xc442e52d34bb98acc1494675856b1f1d124af1375d8e23a9bfcc3b6c1865e1fc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://84254359ed929c1991136f9c3e934ddfa74cd85684de6c44cb70afa70d12f837\",\"dweb:/ipfs/QmWfmionUJJYyYDoeSQLGUHhou2sWxhWzwtU5GVjpumiSS\"]},\"@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4Errors.sol\":{\"keccak256\":\"0x3db7fd252ed02ce27686141125c3d65d3ff682a32601e1e8611becd9357a57b5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5aded62a160ed7f9860996004d1656e8592b3f97d478d8597f8ad6afbe4f34b7\",\"dweb:/ipfs/QmcnmLVt8cmz1iRNaX5c6iNYckRgUXGz8YkjHW9T1KNB5A\"]},\"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/ILSP8IdentifiableDigitalAsset.sol\":{\"keccak256\":\"0x8fc467010034709cda26f5b4c82a8297a3d3b70e53f76c15f17169196748671f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ae752bf829815fa6a31afc29ad5c392835172cf9ad13ad33f50a382ac65a9302\",\"dweb:/ipfs/QmZc3ojmFoVX5nGtRG3JNMoRsM7AAE12iFy9XCJT2a2iBC\"]},\"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8Constants.sol\":{\"keccak256\":\"0x2372e7ec422a13ce3e7968e5fbb081b67816b5de974bd76ec61cfed787abbe1b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6d147e2f290ed60e36e9187dc7cce7d7ee1a62eee1c25c761e6090d88e3fa383\",\"dweb:/ipfs/Qmf9HEYCCjx2xBopvq7WhhtjvL9AEihvNcZ512751Wg6LN\"]},\"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8Errors.sol\":{\"keccak256\":\"0x0dfadefc7641592a03a9ab346c3b994e467add0905849d921a2587f8044d7539\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://eaab1079fb0779921eb8abff8c811adc838c3a0bf82e6d1536dc2211cf8e197c\",\"dweb:/ipfs/QmaPYBRREJmru8iTVTw2mnEePyV8heUFGE7sVx41r5EzNb\"]},\"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAsset.sol\":{\"keccak256\":\"0x952bfb5f946c62f0f9e0b2b3e606434fdb4ee3b9e101ab0de6d7cda1315825a8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b1cd070d5f069d579ae4f4bd8f17af70646beb5d0773fa273e671f2c75e0e605\",\"dweb:/ipfs/QmSqMK4QcEJNfGxbx42w7B3hCWifzGygvYGpMto8yh9aPM\"]},\"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAssetCore.sol\":{\"keccak256\":\"0x3a735a26db14a7b51a064558df64b140d0a781a6534b3dca1609b01099cccb51\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3e8900d7844a1e249b7cac32036c5fe3ce0eed90af249705ef9dd4027f17849c\",\"dweb:/ipfs/QmaiDJaFjocmG99yJyXj3kX1kj9Rh2YaMM9WfsL1Hmz9QH\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0x5a08ad61f4e82b8a3323562661a86fb10b10190848073fdc13d4ac43710ffba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f7bb74cf88fd88daa34e118bc6e363381d05044f34f391d39a10c0c9dac3ebd\",\"dweb:/ipfs/QmNbQ3v8v4zuDtg7VeLAbdhAm3tCzUodNoDZZ8ekmCHWZX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]}},\"version\":1}"}},"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAssetCore.sol":{"LSP8IdentifiableDigitalAssetCore":{"abi":[{"inputs":[],"name":"ERC725Y_DataKeysValuesEmptyArray","type":"error"},{"inputs":[],"name":"ERC725Y_DataKeysValuesLengthMismatch","type":"error"},{"inputs":[],"name":"ERC725Y_MsgValueDisallowed","type":"error"},{"inputs":[],"name":"LSP4TokenNameNotEditable","type":"error"},{"inputs":[],"name":"LSP4TokenSymbolNotEditable","type":"error"},{"inputs":[],"name":"LSP4TokenTypeNotEditable","type":"error"},{"inputs":[{"internalType":"uint256","name":"callIndex","type":"uint256"}],"name":"LSP8BatchCallFailed","type":"error"},{"inputs":[],"name":"LSP8CannotSendToAddressZero","type":"error"},{"inputs":[],"name":"LSP8CannotSendToSelf","type":"error"},{"inputs":[],"name":"LSP8CannotUseAddressZeroAsOperator","type":"error"},{"inputs":[],"name":"LSP8InvalidTransferBatch","type":"error"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"LSP8NonExistentTokenId","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"LSP8NonExistingOperator","type":"error"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"address","name":"caller","type":"address"}],"name":"LSP8NotTokenOperator","type":"error"},{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"address","name":"caller","type":"address"}],"name":"LSP8NotTokenOwner","type":"error"},{"inputs":[{"internalType":"address","name":"tokenReceiver","type":"address"}],"name":"LSP8NotifyTokenReceiverContractMissingLSP1Interface","type":"error"},{"inputs":[{"internalType":"address","name":"tokenReceiver","type":"address"}],"name":"LSP8NotifyTokenReceiverIsEOA","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"LSP8OperatorAlreadyAuthorized","type":"error"},{"inputs":[],"name":"LSP8TokenIdsDataEmptyArray","type":"error"},{"inputs":[],"name":"LSP8TokenIdsDataLengthMismatch","type":"error"},{"inputs":[],"name":"LSP8TokenOwnerCannotBeOperator","type":"error"},{"inputs":[{"internalType":"address","name":"callerAddress","type":"address"}],"name":"OwnableCallerNotTheOwner","type":"error"},{"inputs":[],"name":"OwnableCannotSetZeroAddressAsOwner","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"DataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"tokenOwner","type":"address"},{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"OperatorAuthorizationChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"tokenOwner","type":"address"},{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":false,"internalType":"bool","name":"notified","type":"bool"},{"indexed":false,"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"OperatorRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"TokenIdDataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":false,"internalType":"bool","name":"force","type":"bool"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"authorizeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"batchCalls","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getData","outputs":[{"internalType":"bytes","name":"dataValue","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatch","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"tokenIds","type":"bytes32[]"},{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatchForTokenIds","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getDataForTokenId","outputs":[{"internalType":"bytes","name":"dataValue","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"getOperatorsOf","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"isOperatorFor","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bool","name":"notify","type":"bool"},{"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"revokeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setData","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatch","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"tokenIds","type":"bytes32[]"},{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatchForTokenIds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setDataForTokenId","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"}],"name":"tokenIdsOf","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"tokenOwnerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bool","name":"force","type":"bool"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"from","type":"address[]"},{"internalType":"address[]","name":"to","type":"address[]"},{"internalType":"bytes32[]","name":"tokenId","type":"bytes32[]"},{"internalType":"bool[]","name":"force","type":"bool[]"},{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"transferBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"authorizeOperator(address,bytes32,bytes)":"86a10ddd","balanceOf(address)":"70a08231","batchCalls(bytes[])":"6963d438","getData(bytes32)":"54f6127f","getDataBatch(bytes32[])":"dedff9c6","getDataBatchForTokenIds(bytes32[],bytes32[])":"1d26fce6","getDataForTokenId(bytes32,bytes32)":"16e023b3","getOperatorsOf(bytes32)":"49a6078d","isOperatorFor(address,bytes32)":"2a3654a4","owner()":"8da5cb5b","renounceOwnership()":"715018a6","revokeOperator(address,bytes32,bool,bytes)":"db8c9663","setData(bytes32,bytes)":"7f23690c","setDataBatch(bytes32[],bytes[])":"97902421","setDataBatchForTokenIds(bytes32[],bytes32[],bytes[])":"be9f0e6f","setDataForTokenId(bytes32,bytes32,bytes)":"d6c1407c","supportsInterface(bytes4)":"01ffc9a7","tokenIdsOf(address)":"a3b261f2","tokenOwnerOf(bytes32)":"217b2270","totalSupply()":"18160ddd","transfer(address,address,bytes32,bool,bytes)":"511b6952","transferBatch(address[],address[],bytes32[],bool[],bytes[])":"7e87632c","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesEmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_MsgValueDisallowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenNameNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenSymbolNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenTypeNotEditable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"callIndex\",\"type\":\"uint256\"}],\"name\":\"LSP8BatchCallFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotSendToAddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotSendToSelf\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotUseAddressZeroAsOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8InvalidTransferBatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8NonExistentTokenId\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8NonExistingOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"LSP8NotTokenOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"LSP8NotTokenOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"LSP8NotifyTokenReceiverContractMissingLSP1Interface\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"LSP8NotifyTokenReceiverIsEOA\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8OperatorAlreadyAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenIdsDataEmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenIdsDataLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenOwnerCannotBeOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callerAddress\",\"type\":\"address\"}],\"name\":\"OwnableCallerNotTheOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnableCannotSetZeroAddressAsOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"OperatorAuthorizationChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"notified\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"OperatorRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"TokenIdDataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"batchCalls\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"tokenIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatchForTokenIds\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getDataForTokenId\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"getOperatorsOf\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"notify\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"tokenIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatchForTokenIds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setDataForTokenId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"tokenIdsOf\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"tokenOwnerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"from\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"tokenId\",\"type\":\"bytes32[]\"},{\"internalType\":\"bool[]\",\"name\":\"force\",\"type\":\"bool[]\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"transferBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Matthew Stevens\",\"details\":\"Core Implementation of a LSP8 compliant contract.\",\"errors\":{\"ERC725Y_DataKeysValuesEmptyArray()\":[{\"details\":\"Reverts when one of the array parameter provided to {setDataBatch} function is an empty array.\"}],\"ERC725Y_DataKeysValuesLengthMismatch()\":[{\"details\":\"Reverts when there is not the same number of elements in the `datakeys` and `dataValues` array parameters provided when calling the {setDataBatch} function.\"}],\"ERC725Y_MsgValueDisallowed()\":[{\"details\":\"Reverts when sending value to the {setData} or {setDataBatch} function.\"}],\"LSP4TokenNameNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenName` after the digital asset contract has been deployed / initialized. The `LSP4TokenName` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP4TokenSymbolNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenSymbol` after the digital asset contract has been deployed / initialized. The `LSP4TokenSymbol` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP4TokenTypeNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenType` after the digital asset contract has been deployed / initialized. The `LSP4TokenType` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor / initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP8BatchCallFailed(uint256)\":[{\"details\":\"Reverts when a batch call failed.\"}],\"LSP8CannotSendToAddressZero()\":[{\"details\":\"Reverts when trying to send token to the zero address.\"}],\"LSP8CannotSendToSelf()\":[{\"details\":\"Reverts when specifying the same address for `from` and `to` in a token transfer.\"}],\"LSP8CannotUseAddressZeroAsOperator()\":[{\"details\":\"Reverts when trying to set the zero address as an operator.\"}],\"LSP8InvalidTransferBatch()\":[{\"details\":\"Reverts when the parameters used for `transferBatch` have different lengths.\"}],\"LSP8NonExistentTokenId(bytes32)\":[{\"details\":\"Reverts when `tokenId` has not been minted.\"}],\"LSP8NonExistingOperator(address,bytes32)\":[{\"details\":\"Reverts when `operator` is not an operator for the `tokenId`.\"}],\"LSP8NotTokenOperator(bytes32,address)\":[{\"details\":\"Reverts when `caller` is not an allowed operator for `tokenId`.\"}],\"LSP8NotTokenOwner(address,bytes32,address)\":[{\"details\":\"Reverts when `caller` is not the `tokenOwner` of the `tokenId`.\"}],\"LSP8NotifyTokenReceiverContractMissingLSP1Interface(address)\":[{\"details\":\"Reverts if the `tokenReceiver` does not implement LSP1 when minting or transferring tokens with `bool force` set as `false`.\"}],\"LSP8NotifyTokenReceiverIsEOA(address)\":[{\"details\":\"Reverts if the `tokenReceiver` is an EOA when minting or transferring tokens with `bool force` set as `false`.\"}],\"LSP8OperatorAlreadyAuthorized(address,bytes32)\":[{\"details\":\"Reverts when `operator` is already authorized for the `tokenId`.\"}],\"LSP8TokenIdsDataEmptyArray()\":[{\"details\":\"Reverts when empty arrays is passed to the function\"}],\"LSP8TokenIdsDataLengthMismatch()\":[{\"details\":\"Reverts when the length of the token IDs data arrays is not equal\"}],\"LSP8TokenOwnerCannotBeOperator()\":[{\"details\":\"Reverts when trying to authorize or revoke the token's owner as an operator.\"}],\"OwnableCallerNotTheOwner(address)\":[{\"details\":\"Reverts when only the owner is allowed to call the function.\",\"params\":{\"callerAddress\":\"The address that tried to make the call.\"}}],\"OwnableCannotSetZeroAddressAsOwner()\":[{\"details\":\"Reverts when trying to set `address(0)` as the contract owner when deploying the contract, initializing it or transferring ownership of the contract.\"}]},\"kind\":\"dev\",\"methods\":{\"authorizeOperator(address,bytes32,bytes)\":{\"details\":\"Allow an `operator` address to transfer or burn a specific `tokenId` on behalf of its token owner. See {isOperatorFor}. Notify the operator based on the LSP1-UniversalReceiver standard\",\"params\":{\"operator\":\"The address to authorize as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The token ID operator has access to.\"}},\"balanceOf(address)\":{\"details\":\"Get the number of token IDs owned by `tokenOwner`.\",\"params\":{\"tokenOwner\":\"The address to query     *\"},\"returns\":{\"_0\":\"The total number of token IDs that `tokenOwner` owns.\"}},\"batchCalls(bytes[])\":{\"custom:info\":\"It's not possible to send value along the functions call due to the use of `delegatecall`.\",\"details\":\"Allows a caller to batch different function calls in one call. Perform a `delegatecall` on self, to call different functions with preserving the context.\",\"params\":{\"data\":\"An array of ABI encoded function calls to be called on the contract.\"},\"returns\":{\"results\":\"An array of abi-encoded data returned by the functions executed.\"}},\"getData(bytes32)\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\",\"params\":{\"dataKey\":\"The data key for which to retrieve the value.\"},\"returns\":{\"dataValue\":\"The bytes value stored under the specified data key.\"}},\"getDataBatch(bytes32[])\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\",\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"getDataBatchForTokenIds(bytes32[],bytes32[])\":{\"params\":{\"dataKeys\":\"An array of data keys corresponding to the token IDs.\",\"tokenIds\":\"An array of token IDs.\"},\"returns\":{\"dataValues\":\"An array of data values for each pair of `tokenId` and `dataKey`.\"}},\"getDataForTokenId(bytes32,bytes32)\":{\"params\":{\"dataKey\":\"The key for the data to retrieve.\",\"tokenId\":\"The unique identifier for a token.\"},\"returns\":{\"dataValue\":\"The data value associated with the given `tokenId` and `dataKey`.\"}},\"getOperatorsOf(bytes32)\":{\"details\":\"Returns all `operator` addresses that are allowed to transfer or burn a specific `tokenId` on behalf of its owner.\",\"params\":{\"tokenId\":\"The token ID to get the operators for.\"},\"returns\":{\"_0\":\"An array of operators allowed to transfer or burn a specific `tokenId`. Requirements - `tokenId` must exist.\"}},\"isOperatorFor(address,bytes32)\":{\"details\":\"Returns whether `operator` address is an operator for a given `tokenId`.\",\"params\":{\"operator\":\"The address to query operator status for.\",\"tokenId\":\"The token ID to check if `operator` is allowed to operate on.\"},\"returns\":{\"_0\":\"`true` if `operator` is an operator for `tokenId`, `false` otherwise.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"revokeOperator(address,bytes32,bool,bytes)\":{\"details\":\"Remove access of `operator` for a given `tokenId`, disallowing it to transfer `tokenId` on behalf of its owner. See also {isOperatorFor}.\",\"params\":{\"notify\":\"Boolean indicating whether to notify the operator or not\",\"operator\":\"The address to revoke as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The tokenId `operator` is revoked from operating on.\"}},\"setData(bytes32,bytes)\":{\"custom:events\":\"{DataChanged} event.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner}.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, if the function is not intended to receive value (= native tokens), **an additional check should be implemented to ensure that `msg.value` sent was equal to 0**.\",\"details\":\"Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`. The function is marked as payable to enable flexibility on child contracts. For instance to implement a fee mechanism for setting specific data.\",\"params\":{\"dataKey\":\"The data key for which to set a new value.\",\"dataValue\":\"The new bytes value to set.\"}},\"setDataBatch(bytes32[],bytes[])\":{\"custom:events\":\"{DataChanged} event **for each data key/value pair set**.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner} of the contract.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, if the function is not intended to receive value (= native tokens), **an additional check should be implemented to ensure that `msg.value` sent was equal to 0**.\",\"details\":\"Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\",\"params\":{\"dataKeys\":\"An array of data keys to set bytes values for.\",\"dataValues\":\"An array of bytes values to set for each `dataKeys`.\"}},\"setDataBatchForTokenIds(bytes32[],bytes32[],bytes[])\":{\"params\":{\"dataKeys\":\"An array of data keys corresponding to the token IDs.\",\"dataValues\":\"An array of values to set for the given data keys.\",\"tokenIds\":\"An array of token IDs.\"}},\"setDataForTokenId(bytes32,bytes32,bytes)\":{\"params\":{\"dataKey\":\"The key for the data to set.\",\"dataValue\":\"The value to set for the given data key.\",\"tokenId\":\"The unique identifier for a token.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"tokenIdsOf(address)\":{\"details\":\"Returns the list of token IDs that the `tokenOwner` address owns.\",\"params\":{\"tokenOwner\":\"The address that we want to get the list of token IDs for.\"},\"returns\":{\"_0\":\"An array of `bytes32[] tokenIds` owned by `tokenOwner`.\"}},\"tokenOwnerOf(bytes32)\":{\"details\":\"Returns the list of `tokenIds` for the `tokenOwner` address.\",\"params\":{\"tokenId\":\"tokenOwner The address to query owned tokens\"},\"returns\":{\"_0\":\"The owner address of the given `tokenId`.\"}},\"totalSupply()\":{\"details\":\"Returns the number of existing tokens that have been minted in this contract.\",\"returns\":{\"_0\":\"The number of existing tokens.\"}},\"transfer(address,address,bytes32,bool,bytes)\":{\"details\":\"Transfer a given `tokenId` token from the `from` address to the `to` address. If operators are set for a specific `tokenId`, all the operators are revoked after the tokenId have been transferred. The `force` parameter MUST be set to `true` when transferring tokens to Externally Owned Accounts (EOAs) or contracts that do not implement the LSP1 standard.\",\"params\":{\"data\":\"Any additional data the caller wants included in the emitted event, and sent in the hooks of the `from` and `to` addresses.\",\"force\":\"When set to `true`, the `to` address CAN be any addres. When set to `false`, the `to` address MUST be a contract that supports the LSP1 UniversalReceiver standard.\",\"from\":\"The address that owns the given `tokenId`.\",\"to\":\"The address that will receive the `tokenId`.\",\"tokenId\":\"The token ID to transfer.\"}},\"transferBatch(address[],address[],bytes32[],bool[],bytes[])\":{\"details\":\"Transfers multiple tokens at once based on the arrays of `from`, `to` and `tokenId`. If any transfer fails, the whole call will revert.\",\"params\":{\"data\":\"Any additional data the caller wants included in the emitted event, and sent in the hooks to the `from` and `to` addresses.\",\"force\":\"When set to `true`, `to` may be any address. When set to `false`, `to` must be a contract that supports the LSP1 standard and not revert.\",\"from\":\"An array of sending addresses.\",\"to\":\"An array of recipient addresses.\",\"tokenId\":\"An array of token IDs to transfer.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"LSP8IdentifiableDigitalAsset contract\",\"version\":1},\"userdoc\":{\"errors\":{\"LSP8BatchCallFailed(uint256)\":[{\"notice\":\"Batch call failed.\"}]},\"events\":{\"DataChanged(bytes32,bytes)\":{\"notice\":\"The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\"}},\"kind\":\"user\",\"methods\":{\"batchCalls(bytes[])\":{\"notice\":\"Executing the following batch of abi-encoded function calls on the contract: `data`.\"},\"getData(bytes32)\":{\"notice\":\"Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\"},\"getDataBatch(bytes32[])\":{\"notice\":\"Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\"},\"getDataBatchForTokenIds(bytes32[],bytes32[])\":{\"notice\":\"Retrieves data in batch for multiple `tokenId` and `dataKey` pairs.\"},\"getDataForTokenId(bytes32,bytes32)\":{\"notice\":\"Retrieves data for a specific `tokenId` and `dataKey`.\"},\"setData(bytes32,bytes)\":{\"notice\":\"Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\"},\"setDataBatch(bytes32[],bytes[])\":{\"notice\":\"Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\"},\"setDataBatchForTokenIds(bytes32[],bytes32[],bytes[])\":{\"notice\":\"Sets data in batch for multiple `tokenId` and `dataKey` pairs.\"},\"setDataForTokenId(bytes32,bytes32,bytes)\":{\"notice\":\"Sets data for a specific `tokenId` and `dataKey`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAssetCore.sol\":\"LSP8IdentifiableDigitalAssetCore\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts/contracts/ERC725YCore.sol\":{\"keccak256\":\"0x90670a99b91307ed47851fcc72cee06f246f49a1810307c9e2f978116bbabfc4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://06a94fdd05c104d4d1368398ed4b00926d27c1485a5130aeb257bc904671bcc0\",\"dweb:/ipfs/Qmdsph9AnSiAvYpmgVXfy3Do5dCWKBVL3xWMeGaT7qjte2\"]},\"@erc725/smart-contracts/contracts/constants.sol\":{\"keccak256\":\"0x37da1619e580b6af6a68e91b4784f7945ee2344fad3a96b6dfb2592e35fedb60\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fb9436bd587d7b38c532f317dbd4bc5f178b50906b1a5e29adf24908f27b2c47\",\"dweb:/ipfs/QmW2vTCNM7Mr4vW5t9yBK7Zmh1FtaVjPwdAbyFcPNBSZYL\"]},\"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol\":{\"keccak256\":\"0xa9c83adb0239b86c0ff6251a03bc70115470c7ae10eb99276d6dd33636054b36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95a0109837bdffe887b6568b7f9bbde2b20cfd0c4db638805cf61ada5743b24d\",\"dweb:/ipfs/QmYH2erMtqiEYjRznWnc6NbBbwxvy6ArE45jtXYEyWi3Bc\"]},\"@erc725/smart-contracts/contracts/errors.sol\":{\"keccak256\":\"0xaafdb4370450b8874224b3c0b2b712149da97a50c9a47f56e4b654aa57eb87c5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a4e40b0f64613e5bbd62575facc72d2bcad249595e9397b5bff063dc5a81e757\",\"dweb:/ipfs/QmXx5yDvPxWzKXFYK7HDAbSNDBKRskYLoDwgrThmAimzDL\"]},\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/ILSP1UniversalReceiver.sol\":{\"keccak256\":\"0x5b8764a678dc9d6673eafa8ad0ee6053cdea30acb58015bdf9c93f9f1788b49b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0e26dcf5d66120b7a0895ddcaec92207e17c63344fca885d2b7e3fe953ec027c\",\"dweb:/ipfs/QmetAuz9etfz9BG9oPJCwMthnhfd8XvZYLBmMfrPNUm3qV\"]},\"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/LSP1Constants.sol\":{\"keccak256\":\"0x0f87fc38243fc70316e22814f5a79d9c0770a39f64077cbc6fb5fddfa1d4c23c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c7d83f054b71dfa5ca48a9a811e6a985ff6b38a9e5f4c220ea2ec3a322cce7cf\",\"dweb:/ipfs/QmaehpHpqc5dtRCm9BoU8vCY59AeEnmGvmmwPirVr47oGp\"]},\"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/LSP1Utils.sol\":{\"keccak256\":\"0x15fca4c3d6bfaec5d1a144762f1e160c6b82e7abb5e5c0ca8fcc5f4301b0c45e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ceb307c243e6439d5be18263f75c2ada73d70c5b0480dfd8b12315cacc81fa62\",\"dweb:/ipfs/QmVPwVhL6NAvUgAWQmV964tEHNWbXY6uej5VLpDorqBVhd\"]},\"@lukso/lsp-smart-contracts/contracts/LSP2ERC725YJSONSchema/LSP2Utils.sol\":{\"keccak256\":\"0x86ce8a85d12c79b76db5413b05b9bff16cd865b395efdc0e85b06b3b5e17219b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7ebb6d1152f88b459b9e8fc3ef6361a9fb9d03bfa994148e6b125a2ee4025487\",\"dweb:/ipfs/QmX18bCecAtrjqKTyCPqRrUuvVYSW1XZZJUgvjfYnqfmEH\"]},\"@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4Constants.sol\":{\"keccak256\":\"0xdf9b7c688d39a92cb3238136a9f56554245d5ae9b6568dcd6164d0e15c6f56c7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bb36a427cdfa0f394d2d78014f85152ab383499fc3c3d6285d4b801c656e7c3f\",\"dweb:/ipfs/QmZJehfeWKfHLyZLufhs9u4ZyVztGCUNWXzFgfZSU837vU\"]},\"@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadataCore.sol\":{\"keccak256\":\"0xc442e52d34bb98acc1494675856b1f1d124af1375d8e23a9bfcc3b6c1865e1fc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://84254359ed929c1991136f9c3e934ddfa74cd85684de6c44cb70afa70d12f837\",\"dweb:/ipfs/QmWfmionUJJYyYDoeSQLGUHhou2sWxhWzwtU5GVjpumiSS\"]},\"@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4Errors.sol\":{\"keccak256\":\"0x3db7fd252ed02ce27686141125c3d65d3ff682a32601e1e8611becd9357a57b5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5aded62a160ed7f9860996004d1656e8592b3f97d478d8597f8ad6afbe4f34b7\",\"dweb:/ipfs/QmcnmLVt8cmz1iRNaX5c6iNYckRgUXGz8YkjHW9T1KNB5A\"]},\"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/ILSP8IdentifiableDigitalAsset.sol\":{\"keccak256\":\"0x8fc467010034709cda26f5b4c82a8297a3d3b70e53f76c15f17169196748671f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ae752bf829815fa6a31afc29ad5c392835172cf9ad13ad33f50a382ac65a9302\",\"dweb:/ipfs/QmZc3ojmFoVX5nGtRG3JNMoRsM7AAE12iFy9XCJT2a2iBC\"]},\"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8Constants.sol\":{\"keccak256\":\"0x2372e7ec422a13ce3e7968e5fbb081b67816b5de974bd76ec61cfed787abbe1b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6d147e2f290ed60e36e9187dc7cce7d7ee1a62eee1c25c761e6090d88e3fa383\",\"dweb:/ipfs/Qmf9HEYCCjx2xBopvq7WhhtjvL9AEihvNcZ512751Wg6LN\"]},\"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8Errors.sol\":{\"keccak256\":\"0x0dfadefc7641592a03a9ab346c3b994e467add0905849d921a2587f8044d7539\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://eaab1079fb0779921eb8abff8c811adc838c3a0bf82e6d1536dc2211cf8e197c\",\"dweb:/ipfs/QmaPYBRREJmru8iTVTw2mnEePyV8heUFGE7sVx41r5EzNb\"]},\"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAssetCore.sol\":{\"keccak256\":\"0x3a735a26db14a7b51a064558df64b140d0a781a6534b3dca1609b01099cccb51\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3e8900d7844a1e249b7cac32036c5fe3ce0eed90af249705ef9dd4027f17849c\",\"dweb:/ipfs/QmaiDJaFjocmG99yJyXj3kX1kj9Rh2YaMM9WfsL1Hmz9QH\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0x5a08ad61f4e82b8a3323562661a86fb10b10190848073fdc13d4ac43710ffba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f7bb74cf88fd88daa34e118bc6e363381d05044f34f391d39a10c0c9dac3ebd\",\"dweb:/ipfs/QmNbQ3v8v4zuDtg7VeLAbdhAm3tCzUodNoDZZ8ekmCHWZX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]}},\"version\":1}"}},"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/presets/ILSP8Mintable.sol":{"ILSP8Mintable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"DataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"tokenOwner","type":"address"},{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"OperatorAuthorizationChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"tokenOwner","type":"address"},{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":false,"internalType":"bool","name":"notified","type":"bool"},{"indexed":false,"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"OperatorRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"TokenIdDataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":false,"internalType":"bool","name":"force","type":"bool"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"authorizeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"batchCalls","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getData","outputs":[{"internalType":"bytes","name":"dataValue","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatch","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"tokenIds","type":"bytes32[]"},{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatchForTokenIds","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getDataForTokenId","outputs":[{"internalType":"bytes","name":"dataValues","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"getOperatorsOf","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"isOperatorFor","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bool","name":"force","type":"bool"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bool","name":"notify","type":"bool"},{"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"revokeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setData","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatch","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"tokenIds","type":"bytes32[]"},{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatchForTokenIds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setDataForTokenId","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"}],"name":"tokenIdsOf","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"tokenOwnerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bool","name":"force","type":"bool"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"from","type":"address[]"},{"internalType":"address[]","name":"to","type":"address[]"},{"internalType":"bytes32[]","name":"tokenId","type":"bytes32[]"},{"internalType":"bool[]","name":"force","type":"bool[]"},{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"transferBatch","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"authorizeOperator(address,bytes32,bytes)":"86a10ddd","balanceOf(address)":"70a08231","batchCalls(bytes[])":"6963d438","getData(bytes32)":"54f6127f","getDataBatch(bytes32[])":"dedff9c6","getDataBatchForTokenIds(bytes32[],bytes32[])":"1d26fce6","getDataForTokenId(bytes32,bytes32)":"16e023b3","getOperatorsOf(bytes32)":"49a6078d","isOperatorFor(address,bytes32)":"2a3654a4","mint(address,bytes32,bool,bytes)":"af255b61","revokeOperator(address,bytes32,bool,bytes)":"db8c9663","setData(bytes32,bytes)":"7f23690c","setDataBatch(bytes32[],bytes[])":"97902421","setDataBatchForTokenIds(bytes32[],bytes32[],bytes[])":"be9f0e6f","setDataForTokenId(bytes32,bytes32,bytes)":"d6c1407c","supportsInterface(bytes4)":"01ffc9a7","tokenIdsOf(address)":"a3b261f2","tokenOwnerOf(bytes32)":"217b2270","totalSupply()":"18160ddd","transfer(address,address,bytes32,bool,bytes)":"511b6952","transferBatch(address[],address[],bytes32[],bool[],bytes[])":"7e87632c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"OperatorAuthorizationChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"notified\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"OperatorRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"TokenIdDataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"batchCalls\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"tokenIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatchForTokenIds\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getDataForTokenId\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValues\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"getOperatorsOf\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"notify\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"tokenIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatchForTokenIds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setDataForTokenId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"tokenIdsOf\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"tokenOwnerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"from\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"tokenId\",\"type\":\"bytes32[]\"},{\"internalType\":\"bool[]\",\"name\":\"force\",\"type\":\"bool[]\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"transferBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"LSP8 extension, mintable.\",\"kind\":\"dev\",\"methods\":{\"authorizeOperator(address,bytes32,bytes)\":{\"custom:events\":\"{OperatorAuthorizationChanged} event.\",\"custom:requirements\":\"- `tokenId` must exist. - caller MUST be the {tokenOwnerOf} `tokenId`. - the owner of a `tokenId` cannot grant itself as an `operator` (`operator` cannot be the calling address). - `operator` cannot be the zero address.\",\"details\":\"Allow an `operator` address to transfer or burn a specific `tokenId` on behalf of its token owner. See {isOperatorFor}. Notify the operator based on the LSP1-UniversalReceiver standard\",\"params\":{\"operator\":\"The address to authorize as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The token ID operator has access to.\"}},\"balanceOf(address)\":{\"details\":\"Get the number of token IDs owned by `tokenOwner`.\",\"params\":{\"tokenOwner\":\"The address to query     *\"},\"returns\":{\"_0\":\"The total number of token IDs that `tokenOwner` owns.\"}},\"batchCalls(bytes[])\":{\"details\":\"Allows a caller to batch different function calls in one call. Perform a `delegatecall` on self, to call different functions with preserving the context.\",\"params\":{\"data\":\"An array of ABI encoded function calls to be called on the contract.\"},\"returns\":{\"results\":\"An array of abi-encoded data returned by the functions executed.\"}},\"getData(bytes32)\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\",\"params\":{\"dataKey\":\"The data key for which to retrieve the value.\"},\"returns\":{\"dataValue\":\"The bytes value stored under the specified data key.\"}},\"getDataBatch(bytes32[])\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\",\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"getDataBatchForTokenIds(bytes32[],bytes32[])\":{\"params\":{\"dataKeys\":\"An array of data keys corresponding to the token IDs.\",\"tokenIds\":\"An array of token IDs.\"},\"returns\":{\"dataValues\":\"An array of data values for each pair of `tokenId` and `dataKey`.\"}},\"getDataForTokenId(bytes32,bytes32)\":{\"params\":{\"dataKey\":\"The key for the data to retrieve.\",\"tokenId\":\"The unique identifier for a token.\"},\"returns\":{\"dataValues\":\"The data value associated with the given `tokenId` and `dataKey`.\"}},\"getOperatorsOf(bytes32)\":{\"details\":\"Returns all `operator` addresses that are allowed to transfer or burn a specific `tokenId` on behalf of its owner.\",\"params\":{\"tokenId\":\"The token ID to get the operators for.\"},\"returns\":{\"_0\":\"An array of operators allowed to transfer or burn a specific `tokenId`. Requirements - `tokenId` must exist.\"}},\"isOperatorFor(address,bytes32)\":{\"custom:info\":\"The tokenOwner is its own operator.\",\"custom:requirements\":\"- `tokenId` must exist. - caller must be the current {tokenOwnerOf} `tokenId`.\",\"details\":\"Returns whether `operator` address is an operator for a given `tokenId`.\",\"params\":{\"operator\":\"The address to query operator status for.\",\"tokenId\":\"The token ID to check if `operator` is allowed to operate on.\"},\"returns\":{\"_0\":\"`true` if `operator` is an operator for `tokenId`, `false` otherwise.\"}},\"mint(address,bytes32,bool,bytes)\":{\"details\":\"Mints `amount` tokens and transfers it to `to`. Requirements: - `to` cannot be the zero address. Emits a {Transfer} event.\",\"params\":{\"data\":\"Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.\",\"force\":\"When set to TRUE, to may be any address but when set to FALSE to must be a contract that supports LSP1 UniversalReceiver\",\"to\":\"The address to mint tokens\",\"tokenId\":\"The tokenId to mint\"}},\"revokeOperator(address,bytes32,bool,bytes)\":{\"custom:events\":\"{OperatorRevoked} event with address of the operator being revoked for the caller (token owner)..\",\"custom:requirements\":\"- `tokenId` must exist. - caller must be the {tokenOwnerOf} `tokenId`. - the owner of a `tokenId` cannot grant revoke itself as an `operator` (`operator` cannot be the calling address). - `operator` cannot be the zero address.\",\"details\":\"Remove access of `operator` for a given `tokenId`, disallowing it to transfer `tokenId` on behalf of its owner. See also {isOperatorFor}.\",\"params\":{\"notify\":\"Boolean indicating whether to notify the operator or not\",\"operator\":\"The address to revoke as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The tokenId `operator` is revoked from operating on.\"}},\"setData(bytes32,bytes)\":{\"details\":\"Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`. The function is marked as payable to enable flexibility on child contracts. For instance to implement a fee mechanism for setting specific data.\",\"params\":{\"dataKey\":\"The data key for which to set a new value.\",\"dataValue\":\"The new bytes value to set.\"}},\"setDataBatch(bytes32[],bytes[])\":{\"details\":\"Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\",\"params\":{\"dataKeys\":\"An array of data keys to set bytes values for.\",\"dataValues\":\"An array of bytes values to set for each `dataKeys`.\"}},\"setDataBatchForTokenIds(bytes32[],bytes32[],bytes[])\":{\"custom:events\":\"{TokenIdDataChanged} event for each pair.\",\"params\":{\"dataKeys\":\"An array of data keys corresponding to the token IDs.\",\"dataValues\":\"An array of values to set for the given data keys.\",\"tokenIds\":\"An array of token IDs.\"}},\"setDataForTokenId(bytes32,bytes32,bytes)\":{\"custom:events\":\"{TokenIdDataChanged} event.\",\"params\":{\"dataKey\":\"The key for the data to set.\",\"dataValue\":\"The value to set for the given data key.\",\"tokenId\":\"The unique identifier for a token.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenIdsOf(address)\":{\"details\":\"Returns the list of token IDs that the `tokenOwner` address owns.\",\"params\":{\"tokenOwner\":\"The address that we want to get the list of token IDs for.\"},\"returns\":{\"_0\":\"An array of `bytes32[] tokenIds` owned by `tokenOwner`.\"}},\"tokenOwnerOf(bytes32)\":{\"custom:info\":\"if the `tokenId` is not owned by any address, the returned address will be `address(0)`\",\"custom:requirements\":\"`tokenId` must exist.\",\"details\":\"Returns the list of `tokenIds` for the `tokenOwner` address.\",\"params\":{\"tokenId\":\"tokenOwner The address to query owned tokens\"},\"returns\":{\"_0\":\"The owner address of the given `tokenId`.\"}},\"totalSupply()\":{\"details\":\"Returns the number of existing tokens that have been minted in this contract.\",\"returns\":{\"_0\":\"The number of existing tokens.\"}},\"transfer(address,address,bytes32,bool,bytes)\":{\"custom:events\":\"- {Transfer} event when the `tokenId` is successfully transferred.\",\"custom:hint\":\"The `force` parameter **MUST be set to `true`** to transfer tokens to Externally Owned Accounts (EOAs) or contracts that do not implement the LSP1 Universal Receiver Standard. Otherwise the function will revert making the transfer fail.\",\"custom:info\":\"if the `to` address is a contract that implements LSP1, it will always be notified via its `universalReceiver(...)` function, regardless if `force` is set to `true` or `false`.\",\"custom:requirements\":\"- `from` cannot be the zero address. - `to` cannot be the zero address. - `from` and `to` cannot be the same address (`from` cannot send the `tokenId` to itself). - `from` must own the given `tokenId`. - If the caller is not `from`, it must be an operator for the `tokenId`.\",\"custom:warning\":\"Be aware that when either the sender or the recipient can have logic that revert in their `universalReceiver(...)` function when being notified. This even if the `force` was set to `true`.\",\"details\":\"Transfer a given `tokenId` token from the `from` address to the `to` address. If operators are set for a specific `tokenId`, all the operators are revoked after the tokenId have been transferred. The `force` parameter MUST be set to `true` when transferring tokens to Externally Owned Accounts (EOAs) or contracts that do not implement the LSP1 standard.\",\"params\":{\"data\":\"Any additional data the caller wants included in the emitted event, and sent in the hooks of the `from` and `to` addresses.\",\"force\":\"When set to `true`, the `to` address CAN be any addres. When set to `false`, the `to` address MUST be a contract that supports the LSP1 UniversalReceiver standard.\",\"from\":\"The address that owns the given `tokenId`.\",\"to\":\"The address that will receive the `tokenId`.\",\"tokenId\":\"The token ID to transfer.\"}},\"transferBatch(address[],address[],bytes32[],bool[],bytes[])\":{\"custom:events\":\"- {Transfer} events on each successful token transfer.\",\"custom:requirements\":\"- The arrays of `from`, `to` and `tokenId` must have the same length. - no values in the `from` array can be the zero address. - no values in the `to` array can be the zero address. - `from` and `to` cannot be the same address at the same index on each arrays. - each `tokenId` must be owned by `from`. - If the caller is not `from`, it must be an operator of each `tokenId`.\",\"details\":\"Transfers multiple tokens at once based on the arrays of `from`, `to` and `tokenId`. If any transfer fails, the whole call will revert.\",\"params\":{\"data\":\"Any additional data the caller wants included in the emitted event, and sent in the hooks to the `from` and `to` addresses.\",\"force\":\"When set to `true`, `to` may be any address. When set to `false`, `to` must be a contract that supports the LSP1 standard and not revert.\",\"from\":\"An array of sending addresses.\",\"to\":\"An array of recipient addresses.\",\"tokenId\":\"An array of token IDs to transfer.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"DataChanged(bytes32,bytes)\":{\"notice\":\"The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\"}},\"kind\":\"user\",\"methods\":{\"batchCalls(bytes[])\":{\"notice\":\"Executing the following batch of abi-encoded function calls on the contract: `data`.\"},\"getData(bytes32)\":{\"notice\":\"Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\"},\"getDataBatch(bytes32[])\":{\"notice\":\"Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\"},\"getDataBatchForTokenIds(bytes32[],bytes32[])\":{\"notice\":\"Retrieves data in batch for multiple `tokenId` and `dataKey` pairs.\"},\"getDataForTokenId(bytes32,bytes32)\":{\"notice\":\"Retrieves data for a specific `tokenId` and `dataKey`.\"},\"setData(bytes32,bytes)\":{\"notice\":\"Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\"},\"setDataBatch(bytes32[],bytes[])\":{\"notice\":\"Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\"},\"setDataBatchForTokenIds(bytes32[],bytes32[],bytes[])\":{\"notice\":\"Sets data in batch for multiple `tokenId` and `dataKey` pairs.\"},\"setDataForTokenId(bytes32,bytes32,bytes)\":{\"notice\":\"Sets data for a specific `tokenId` and `dataKey`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/presets/ILSP8Mintable.sol\":\"ILSP8Mintable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/ILSP8IdentifiableDigitalAsset.sol\":{\"keccak256\":\"0x8fc467010034709cda26f5b4c82a8297a3d3b70e53f76c15f17169196748671f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ae752bf829815fa6a31afc29ad5c392835172cf9ad13ad33f50a382ac65a9302\",\"dweb:/ipfs/QmZc3ojmFoVX5nGtRG3JNMoRsM7AAE12iFy9XCJT2a2iBC\"]},\"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/presets/ILSP8Mintable.sol\":{\"keccak256\":\"0x499210945e303045882e430a5dcc5d3c7b11b19c8ebc7669e60f1c596dfd6aee\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a8c51df853d003fbf7d5018fe664238ce8435720ec278f7a0ff8c44eb6071409\",\"dweb:/ipfs/QmVEcwpgCzvecaYqbaYVpK8xT4HbTGQwpYvnSn3WnMSc7K\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/presets/LSP8Mintable.sol":{"LSP8Mintable":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"},{"internalType":"address","name":"newOwner_","type":"address"},{"internalType":"uint256","name":"lsp4TokenType_","type":"uint256"},{"internalType":"uint256","name":"lsp8TokenIdFormat_","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ERC725Y_DataKeysValuesEmptyArray","type":"error"},{"inputs":[],"name":"ERC725Y_DataKeysValuesLengthMismatch","type":"error"},{"inputs":[],"name":"ERC725Y_MsgValueDisallowed","type":"error"},{"inputs":[{"internalType":"bytes","name":"storedData","type":"bytes"}],"name":"InvalidExtensionAddress","type":"error"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"name":"InvalidFunctionSelector","type":"error"},{"inputs":[],"name":"LSP4TokenNameNotEditable","type":"error"},{"inputs":[],"name":"LSP4TokenSymbolNotEditable","type":"error"},{"inputs":[],"name":"LSP4TokenTypeNotEditable","type":"error"},{"inputs":[{"internalType":"uint256","name":"callIndex","type":"uint256"}],"name":"LSP8BatchCallFailed","type":"error"},{"inputs":[],"name":"LSP8CannotSendToAddressZero","type":"error"},{"inputs":[],"name":"LSP8CannotSendToSelf","type":"error"},{"inputs":[],"name":"LSP8CannotUseAddressZeroAsOperator","type":"error"},{"inputs":[],"name":"LSP8InvalidTransferBatch","type":"error"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"LSP8NonExistentTokenId","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"LSP8NonExistingOperator","type":"error"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"address","name":"caller","type":"address"}],"name":"LSP8NotTokenOperator","type":"error"},{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"address","name":"caller","type":"address"}],"name":"LSP8NotTokenOwner","type":"error"},{"inputs":[{"internalType":"address","name":"tokenReceiver","type":"address"}],"name":"LSP8NotifyTokenReceiverContractMissingLSP1Interface","type":"error"},{"inputs":[{"internalType":"address","name":"tokenReceiver","type":"address"}],"name":"LSP8NotifyTokenReceiverIsEOA","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"LSP8OperatorAlreadyAuthorized","type":"error"},{"inputs":[],"name":"LSP8TokenContractCannotHoldValue","type":"error"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"LSP8TokenIdAlreadyMinted","type":"error"},{"inputs":[],"name":"LSP8TokenIdFormatNotEditable","type":"error"},{"inputs":[],"name":"LSP8TokenIdsDataEmptyArray","type":"error"},{"inputs":[],"name":"LSP8TokenIdsDataLengthMismatch","type":"error"},{"inputs":[],"name":"LSP8TokenOwnerCannotBeOperator","type":"error"},{"inputs":[{"internalType":"bytes4","name":"functionSelector","type":"bytes4"}],"name":"NoExtensionFoundForFunctionSelector","type":"error"},{"inputs":[{"internalType":"address","name":"callerAddress","type":"address"}],"name":"OwnableCallerNotTheOwner","type":"error"},{"inputs":[],"name":"OwnableCannotSetZeroAddressAsOwner","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"DataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"tokenOwner","type":"address"},{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"OperatorAuthorizationChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"tokenOwner","type":"address"},{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":false,"internalType":"bool","name":"notified","type":"bool"},{"indexed":false,"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"OperatorRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"TokenIdDataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":false,"internalType":"bool","name":"force","type":"bool"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"Transfer","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"authorizeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"batchCalls","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getData","outputs":[{"internalType":"bytes","name":"dataValue","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatch","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"tokenIds","type":"bytes32[]"},{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatchForTokenIds","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getDataForTokenId","outputs":[{"internalType":"bytes","name":"dataValue","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"getOperatorsOf","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"isOperatorFor","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bool","name":"force","type":"bool"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bool","name":"notify","type":"bool"},{"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"revokeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setData","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatch","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"tokenIds","type":"bytes32[]"},{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatchForTokenIds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setDataForTokenId","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"}],"name":"tokenIdsOf","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"tokenOwnerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bool","name":"force","type":"bool"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"from","type":"address[]"},{"internalType":"address[]","name":"to","type":"address[]"},{"internalType":"bytes32[]","name":"tokenId","type":"bytes32[]"},{"internalType":"bool[]","name":"force","type":"bool[]"},{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"transferBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_1637":{"entryPoint":null,"id":1637,"parameterSlots":4,"returnSlots":0},"@_2154":{"entryPoint":null,"id":2154,"parameterSlots":5,"returnSlots":0},"@_34":{"entryPoint":null,"id":34,"parameterSlots":1,"returnSlots":0},"@_3748":{"entryPoint":null,"id":3748,"parameterSlots":5,"returnSlots":0},"@_setData_1656":{"entryPoint":982,"id":1656,"parameterSlots":2,"returnSlots":0},"@_setData_1718":{"entryPoint":1050,"id":1718,"parameterSlots":2,"returnSlots":0},"@_setData_248":{"entryPoint":878,"id":248,"parameterSlots":2,"returnSlots":0},"@_setOwner_401":{"entryPoint":621,"id":401,"parameterSlots":1,"returnSlots":0},"@owner_316":{"entryPoint":1009,"id":316,"parameterSlots":0,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":1899,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":2103,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":1974,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":2162,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_uint256t_uint256_fromMemory":{"entryPoint":2185,"id":null,"parameterSlots":2,"returnSlots":5},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":2457,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2383,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":2522,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":2400,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":1760,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":1612,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":1791,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":2429,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":2440,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2057,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2025,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2126,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":1845,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":2605,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":1706,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x22":{"entryPoint":2558,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1659,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":1632,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":1637,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":1627,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1622,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":1642,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":2077,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2136,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:6745:29","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:29","statements":[{"nodeType":"YulAssignment","src":"57:19:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:29","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:29"},"nodeType":"YulFunctionCall","src":"67:9:29"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:29"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:29","type":""}],"src":"7:75:29"},{"body":{"nodeType":"YulBlock","src":"177:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:29"},"nodeType":"YulFunctionCall","src":"187:12:29"},"nodeType":"YulExpressionStatement","src":"187:12:29"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:29"},{"body":{"nodeType":"YulBlock","src":"300:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:29"},"nodeType":"YulFunctionCall","src":"310:12:29"},"nodeType":"YulExpressionStatement","src":"310:12:29"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:29"},{"body":{"nodeType":"YulBlock","src":"423:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:29"},"nodeType":"YulFunctionCall","src":"433:12:29"},"nodeType":"YulExpressionStatement","src":"433:12:29"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:29"},{"body":{"nodeType":"YulBlock","src":"546:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:29"},"nodeType":"YulFunctionCall","src":"556:12:29"},"nodeType":"YulExpressionStatement","src":"556:12:29"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:29"},{"body":{"nodeType":"YulBlock","src":"628:54:29","statements":[{"nodeType":"YulAssignment","src":"638:38:29","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:29"},"nodeType":"YulFunctionCall","src":"652:14:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:29","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:29"},"nodeType":"YulFunctionCall","src":"668:7:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:29"},"nodeType":"YulFunctionCall","src":"648:28:29"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:29"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:29","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:29","type":""}],"src":"580:102:29"},{"body":{"nodeType":"YulBlock","src":"716:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:29"},"nodeType":"YulFunctionCall","src":"726:88:29"},"nodeType":"YulExpressionStatement","src":"726:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:29","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:29"},"nodeType":"YulFunctionCall","src":"823:15:29"},"nodeType":"YulExpressionStatement","src":"823:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:29"},"nodeType":"YulFunctionCall","src":"847:15:29"},"nodeType":"YulExpressionStatement","src":"847:15:29"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:29"},{"body":{"nodeType":"YulBlock","src":"917:238:29","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:29","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:29"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:29"},"nodeType":"YulFunctionCall","src":"957:27:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:29"},"nodeType":"YulFunctionCall","src":"945:40:29"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:29"},"nodeType":"YulFunctionCall","src":"1098:18:29"},"nodeType":"YulExpressionStatement","src":"1098:18:29"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:29"},"nodeType":"YulFunctionCall","src":"1036:34:29"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:29"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:29"},"nodeType":"YulFunctionCall","src":"1072:22:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:29"},"nodeType":"YulFunctionCall","src":"1033:62:29"},"nodeType":"YulIf","src":"1030:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:29","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:29"},"nodeType":"YulFunctionCall","src":"1127:22:29"},"nodeType":"YulExpressionStatement","src":"1127:22:29"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:29","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:29","type":""}],"src":"874:281:29"},{"body":{"nodeType":"YulBlock","src":"1202:88:29","statements":[{"nodeType":"YulAssignment","src":"1212:30:29","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:29"},"nodeType":"YulFunctionCall","src":"1222:20:29"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:29"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:29"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:29"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:29"},"nodeType":"YulFunctionCall","src":"1251:33:29"},"nodeType":"YulExpressionStatement","src":"1251:33:29"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:29","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:29","type":""}],"src":"1161:129:29"},{"body":{"nodeType":"YulBlock","src":"1363:241:29","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:29"},"nodeType":"YulFunctionCall","src":"1470:18:29"},"nodeType":"YulExpressionStatement","src":"1470:18:29"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:29"},"nodeType":"YulFunctionCall","src":"1437:30:29"},"nodeType":"YulIf","src":"1434:56:29"},{"nodeType":"YulAssignment","src":"1500:37:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:29"},"nodeType":"YulFunctionCall","src":"1508:29:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:29"}]},{"nodeType":"YulAssignment","src":"1574:23:29","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:29"},"nodeType":"YulFunctionCall","src":"1582:15:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:29"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:29","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:29","type":""}],"src":"1296:308:29"},{"body":{"nodeType":"YulBlock","src":"1659:258:29","statements":[{"nodeType":"YulVariableDeclaration","src":"1669:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"1678:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1673:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"1738:63:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1763:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"1768:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1759:3:29"},"nodeType":"YulFunctionCall","src":"1759:11:29"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1782:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"1787:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1778:3:29"},"nodeType":"YulFunctionCall","src":"1778:11:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1772:5:29"},"nodeType":"YulFunctionCall","src":"1772:18:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1752:6:29"},"nodeType":"YulFunctionCall","src":"1752:39:29"},"nodeType":"YulExpressionStatement","src":"1752:39:29"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1699:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"1702:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1696:2:29"},"nodeType":"YulFunctionCall","src":"1696:13:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1710:19:29","statements":[{"nodeType":"YulAssignment","src":"1712:15:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1721:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"1724:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1717:3:29"},"nodeType":"YulFunctionCall","src":"1717:10:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"1692:3:29","statements":[]},"src":"1688:113:29"},{"body":{"nodeType":"YulBlock","src":"1835:76:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1885:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"1890:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1881:3:29"},"nodeType":"YulFunctionCall","src":"1881:16:29"},{"kind":"number","nodeType":"YulLiteral","src":"1899:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1874:6:29"},"nodeType":"YulFunctionCall","src":"1874:27:29"},"nodeType":"YulExpressionStatement","src":"1874:27:29"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1816:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"1819:6:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1813:2:29"},"nodeType":"YulFunctionCall","src":"1813:13:29"},"nodeType":"YulIf","src":"1810:101:29"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1641:3:29","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1646:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"1651:6:29","type":""}],"src":"1610:307:29"},{"body":{"nodeType":"YulBlock","src":"2018:326:29","statements":[{"nodeType":"YulAssignment","src":"2028:75:29","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2095:6:29"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2053:41:29"},"nodeType":"YulFunctionCall","src":"2053:49:29"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2037:15:29"},"nodeType":"YulFunctionCall","src":"2037:66:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2028:5:29"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2119:5:29"},{"name":"length","nodeType":"YulIdentifier","src":"2126:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2112:6:29"},"nodeType":"YulFunctionCall","src":"2112:21:29"},"nodeType":"YulExpressionStatement","src":"2112:21:29"},{"nodeType":"YulVariableDeclaration","src":"2142:27:29","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2157:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"2164:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2153:3:29"},"nodeType":"YulFunctionCall","src":"2153:16:29"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2146:3:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"2207:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2209:77:29"},"nodeType":"YulFunctionCall","src":"2209:79:29"},"nodeType":"YulExpressionStatement","src":"2209:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2188:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"2193:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2184:3:29"},"nodeType":"YulFunctionCall","src":"2184:16:29"},{"name":"end","nodeType":"YulIdentifier","src":"2202:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2181:2:29"},"nodeType":"YulFunctionCall","src":"2181:25:29"},"nodeType":"YulIf","src":"2178:112:29"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2321:3:29"},{"name":"dst","nodeType":"YulIdentifier","src":"2326:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"2331:6:29"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2299:21:29"},"nodeType":"YulFunctionCall","src":"2299:39:29"},"nodeType":"YulExpressionStatement","src":"2299:39:29"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1991:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"1996:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"2004:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2012:5:29","type":""}],"src":"1923:421:29"},{"body":{"nodeType":"YulBlock","src":"2437:282:29","statements":[{"body":{"nodeType":"YulBlock","src":"2486:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2488:77:29"},"nodeType":"YulFunctionCall","src":"2488:79:29"},"nodeType":"YulExpressionStatement","src":"2488:79:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2465:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"2473:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2461:3:29"},"nodeType":"YulFunctionCall","src":"2461:17:29"},{"name":"end","nodeType":"YulIdentifier","src":"2480:3:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2457:3:29"},"nodeType":"YulFunctionCall","src":"2457:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2450:6:29"},"nodeType":"YulFunctionCall","src":"2450:35:29"},"nodeType":"YulIf","src":"2447:122:29"},{"nodeType":"YulVariableDeclaration","src":"2578:27:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2598:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2592:5:29"},"nodeType":"YulFunctionCall","src":"2592:13:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2582:6:29","type":""}]},{"nodeType":"YulAssignment","src":"2614:99:29","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2686:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"2694:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2682:3:29"},"nodeType":"YulFunctionCall","src":"2682:17:29"},{"name":"length","nodeType":"YulIdentifier","src":"2701:6:29"},{"name":"end","nodeType":"YulIdentifier","src":"2709:3:29"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2623:58:29"},"nodeType":"YulFunctionCall","src":"2623:90:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2614:5:29"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2415:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"2423:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2431:5:29","type":""}],"src":"2364:355:29"},{"body":{"nodeType":"YulBlock","src":"2770:81:29","statements":[{"nodeType":"YulAssignment","src":"2780:65:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2795:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"2802:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2791:3:29"},"nodeType":"YulFunctionCall","src":"2791:54:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2780:7:29"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2752:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2762:7:29","type":""}],"src":"2725:126:29"},{"body":{"nodeType":"YulBlock","src":"2902:51:29","statements":[{"nodeType":"YulAssignment","src":"2912:35:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2941:5:29"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2923:17:29"},"nodeType":"YulFunctionCall","src":"2923:24:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2912:7:29"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2884:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2894:7:29","type":""}],"src":"2857:96:29"},{"body":{"nodeType":"YulBlock","src":"3002:79:29","statements":[{"body":{"nodeType":"YulBlock","src":"3059:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3068:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3071:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3061:6:29"},"nodeType":"YulFunctionCall","src":"3061:12:29"},"nodeType":"YulExpressionStatement","src":"3061:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3025:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3050:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3032:17:29"},"nodeType":"YulFunctionCall","src":"3032:24:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3022:2:29"},"nodeType":"YulFunctionCall","src":"3022:35:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3015:6:29"},"nodeType":"YulFunctionCall","src":"3015:43:29"},"nodeType":"YulIf","src":"3012:63:29"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2995:5:29","type":""}],"src":"2959:122:29"},{"body":{"nodeType":"YulBlock","src":"3150:80:29","statements":[{"nodeType":"YulAssignment","src":"3160:22:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3175:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3169:5:29"},"nodeType":"YulFunctionCall","src":"3169:13:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3160:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3218:5:29"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"3191:26:29"},"nodeType":"YulFunctionCall","src":"3191:33:29"},"nodeType":"YulExpressionStatement","src":"3191:33:29"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3128:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"3136:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3144:5:29","type":""}],"src":"3087:143:29"},{"body":{"nodeType":"YulBlock","src":"3281:32:29","statements":[{"nodeType":"YulAssignment","src":"3291:16:29","value":{"name":"value","nodeType":"YulIdentifier","src":"3302:5:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3291:7:29"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3263:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3273:7:29","type":""}],"src":"3236:77:29"},{"body":{"nodeType":"YulBlock","src":"3362:79:29","statements":[{"body":{"nodeType":"YulBlock","src":"3419:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3428:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3431:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3421:6:29"},"nodeType":"YulFunctionCall","src":"3421:12:29"},"nodeType":"YulExpressionStatement","src":"3421:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3385:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3410:5:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3392:17:29"},"nodeType":"YulFunctionCall","src":"3392:24:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3382:2:29"},"nodeType":"YulFunctionCall","src":"3382:35:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3375:6:29"},"nodeType":"YulFunctionCall","src":"3375:43:29"},"nodeType":"YulIf","src":"3372:63:29"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3355:5:29","type":""}],"src":"3319:122:29"},{"body":{"nodeType":"YulBlock","src":"3510:80:29","statements":[{"nodeType":"YulAssignment","src":"3520:22:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3535:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3529:5:29"},"nodeType":"YulFunctionCall","src":"3529:13:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3520:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3578:5:29"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3551:26:29"},"nodeType":"YulFunctionCall","src":"3551:33:29"},"nodeType":"YulExpressionStatement","src":"3551:33:29"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3488:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"3496:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3504:5:29","type":""}],"src":"3447:143:29"},{"body":{"nodeType":"YulBlock","src":"3761:1158:29","statements":[{"body":{"nodeType":"YulBlock","src":"3808:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3810:77:29"},"nodeType":"YulFunctionCall","src":"3810:79:29"},"nodeType":"YulExpressionStatement","src":"3810:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3782:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"3791:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3778:3:29"},"nodeType":"YulFunctionCall","src":"3778:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"3803:3:29","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3774:3:29"},"nodeType":"YulFunctionCall","src":"3774:33:29"},"nodeType":"YulIf","src":"3771:120:29"},{"nodeType":"YulBlock","src":"3901:291:29","statements":[{"nodeType":"YulVariableDeclaration","src":"3916:38:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3940:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3951:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3936:3:29"},"nodeType":"YulFunctionCall","src":"3936:17:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3930:5:29"},"nodeType":"YulFunctionCall","src":"3930:24:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3920:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"4001:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"4003:77:29"},"nodeType":"YulFunctionCall","src":"4003:79:29"},"nodeType":"YulExpressionStatement","src":"4003:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3973:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"3981:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3970:2:29"},"nodeType":"YulFunctionCall","src":"3970:30:29"},"nodeType":"YulIf","src":"3967:117:29"},{"nodeType":"YulAssignment","src":"4098:84:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4154:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"4165:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4150:3:29"},"nodeType":"YulFunctionCall","src":"4150:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4174:7:29"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"4108:41:29"},"nodeType":"YulFunctionCall","src":"4108:74:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4098:6:29"}]}]},{"nodeType":"YulBlock","src":"4202:292:29","statements":[{"nodeType":"YulVariableDeclaration","src":"4217:39:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4241:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4252:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4237:3:29"},"nodeType":"YulFunctionCall","src":"4237:18:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4231:5:29"},"nodeType":"YulFunctionCall","src":"4231:25:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4221:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"4303:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"4305:77:29"},"nodeType":"YulFunctionCall","src":"4305:79:29"},"nodeType":"YulExpressionStatement","src":"4305:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4275:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"4283:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4272:2:29"},"nodeType":"YulFunctionCall","src":"4272:30:29"},"nodeType":"YulIf","src":"4269:117:29"},{"nodeType":"YulAssignment","src":"4400:84:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4456:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"4467:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4452:3:29"},"nodeType":"YulFunctionCall","src":"4452:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4476:7:29"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"4410:41:29"},"nodeType":"YulFunctionCall","src":"4410:74:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4400:6:29"}]}]},{"nodeType":"YulBlock","src":"4504:129:29","statements":[{"nodeType":"YulVariableDeclaration","src":"4519:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"4533:2:29","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4523:6:29","type":""}]},{"nodeType":"YulAssignment","src":"4549:74:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4595:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"4606:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4591:3:29"},"nodeType":"YulFunctionCall","src":"4591:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4615:7:29"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"4559:31:29"},"nodeType":"YulFunctionCall","src":"4559:64:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4549:6:29"}]}]},{"nodeType":"YulBlock","src":"4643:129:29","statements":[{"nodeType":"YulVariableDeclaration","src":"4658:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"4672:2:29","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4662:6:29","type":""}]},{"nodeType":"YulAssignment","src":"4688:74:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4734:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"4745:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4730:3:29"},"nodeType":"YulFunctionCall","src":"4730:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4754:7:29"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"4698:31:29"},"nodeType":"YulFunctionCall","src":"4698:64:29"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4688:6:29"}]}]},{"nodeType":"YulBlock","src":"4782:130:29","statements":[{"nodeType":"YulVariableDeclaration","src":"4797:17:29","value":{"kind":"number","nodeType":"YulLiteral","src":"4811:3:29","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4801:6:29","type":""}]},{"nodeType":"YulAssignment","src":"4828:74:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4874:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"4885:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4870:3:29"},"nodeType":"YulFunctionCall","src":"4870:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4894:7:29"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"4838:31:29"},"nodeType":"YulFunctionCall","src":"4838:64:29"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"4828:6:29"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_uint256t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3699:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3710:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3722:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3730:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3738:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3746:6:29","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3754:6:29","type":""}],"src":"3596:1323:29"},{"body":{"nodeType":"YulBlock","src":"4990:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5007:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5030:5:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5012:17:29"},"nodeType":"YulFunctionCall","src":"5012:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5000:6:29"},"nodeType":"YulFunctionCall","src":"5000:37:29"},"nodeType":"YulExpressionStatement","src":"5000:37:29"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4978:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4985:3:29","type":""}],"src":"4925:118:29"},{"body":{"nodeType":"YulBlock","src":"5147:124:29","statements":[{"nodeType":"YulAssignment","src":"5157:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5169:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5180:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5165:3:29"},"nodeType":"YulFunctionCall","src":"5165:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5157:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5237:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5250:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5261:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5246:3:29"},"nodeType":"YulFunctionCall","src":"5246:17:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5193:43:29"},"nodeType":"YulFunctionCall","src":"5193:71:29"},"nodeType":"YulExpressionStatement","src":"5193:71:29"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5119:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5131:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5142:4:29","type":""}],"src":"5049:222:29"},{"body":{"nodeType":"YulBlock","src":"5335:40:29","statements":[{"nodeType":"YulAssignment","src":"5346:22:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5362:5:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5356:5:29"},"nodeType":"YulFunctionCall","src":"5356:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5346:6:29"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5318:5:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5328:6:29","type":""}],"src":"5277:98:29"},{"body":{"nodeType":"YulBlock","src":"5476:73:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5493:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"5498:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5486:6:29"},"nodeType":"YulFunctionCall","src":"5486:19:29"},"nodeType":"YulExpressionStatement","src":"5486:19:29"},{"nodeType":"YulAssignment","src":"5514:29:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5533:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"5538:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5529:3:29"},"nodeType":"YulFunctionCall","src":"5529:14:29"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"5514:11:29"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5448:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"5453:6:29","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"5464:11:29","type":""}],"src":"5381:168:29"},{"body":{"nodeType":"YulBlock","src":"5645:270:29","statements":[{"nodeType":"YulVariableDeclaration","src":"5655:52:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5701:5:29"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"5669:31:29"},"nodeType":"YulFunctionCall","src":"5669:38:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5659:6:29","type":""}]},{"nodeType":"YulAssignment","src":"5716:77:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5781:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"5786:6:29"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5723:57:29"},"nodeType":"YulFunctionCall","src":"5723:70:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5716:3:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5828:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"5835:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5824:3:29"},"nodeType":"YulFunctionCall","src":"5824:16:29"},{"name":"pos","nodeType":"YulIdentifier","src":"5842:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"5847:6:29"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"5802:21:29"},"nodeType":"YulFunctionCall","src":"5802:52:29"},"nodeType":"YulExpressionStatement","src":"5802:52:29"},{"nodeType":"YulAssignment","src":"5863:46:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5874:3:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5901:6:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5879:21:29"},"nodeType":"YulFunctionCall","src":"5879:29:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5870:3:29"},"nodeType":"YulFunctionCall","src":"5870:39:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5863:3:29"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5626:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5633:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5641:3:29","type":""}],"src":"5555:360:29"},{"body":{"nodeType":"YulBlock","src":"6037:193:29","statements":[{"nodeType":"YulAssignment","src":"6047:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6059:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6070:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6055:3:29"},"nodeType":"YulFunctionCall","src":"6055:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6047:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6094:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6105:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6090:3:29"},"nodeType":"YulFunctionCall","src":"6090:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6113:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"6119:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6109:3:29"},"nodeType":"YulFunctionCall","src":"6109:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6083:6:29"},"nodeType":"YulFunctionCall","src":"6083:47:29"},"nodeType":"YulExpressionStatement","src":"6083:47:29"},{"nodeType":"YulAssignment","src":"6139:84:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6209:6:29"},{"name":"tail","nodeType":"YulIdentifier","src":"6218:4:29"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6147:61:29"},"nodeType":"YulFunctionCall","src":"6147:76:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6139:4:29"}]}]},"name":"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6009:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6021:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6032:4:29","type":""}],"src":"5921:309:29"},{"body":{"nodeType":"YulBlock","src":"6264:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6281:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6284:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6274:6:29"},"nodeType":"YulFunctionCall","src":"6274:88:29"},"nodeType":"YulExpressionStatement","src":"6274:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6378:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6381:4:29","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6371:6:29"},"nodeType":"YulFunctionCall","src":"6371:15:29"},"nodeType":"YulExpressionStatement","src":"6371:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6402:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6405:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6395:6:29"},"nodeType":"YulFunctionCall","src":"6395:15:29"},"nodeType":"YulExpressionStatement","src":"6395:15:29"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"6236:180:29"},{"body":{"nodeType":"YulBlock","src":"6473:269:29","statements":[{"nodeType":"YulAssignment","src":"6483:22:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6497:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"6503:1:29","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6493:3:29"},"nodeType":"YulFunctionCall","src":"6493:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6483:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"6514:38:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6544:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"6550:1:29","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6540:3:29"},"nodeType":"YulFunctionCall","src":"6540:12:29"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"6518:18:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"6591:51:29","statements":[{"nodeType":"YulAssignment","src":"6605:27:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6619:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"6627:4:29","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6615:3:29"},"nodeType":"YulFunctionCall","src":"6615:17:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6605:6:29"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6571:18:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6564:6:29"},"nodeType":"YulFunctionCall","src":"6564:26:29"},"nodeType":"YulIf","src":"6561:81:29"},{"body":{"nodeType":"YulBlock","src":"6694:42:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"6708:16:29"},"nodeType":"YulFunctionCall","src":"6708:18:29"},"nodeType":"YulExpressionStatement","src":"6708:18:29"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6658:18:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6681:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"6689:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6678:2:29"},"nodeType":"YulFunctionCall","src":"6678:14:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6655:2:29"},"nodeType":"YulFunctionCall","src":"6655:38:29"},"nodeType":"YulIf","src":"6652:84:29"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6457:4:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"6466:6:29","type":""}],"src":"6422:320:29"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n","id":29,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b506040516200524838038062005248833981810160405281019062000037919062000889565b84848484848484848481600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415620000a9576040517f1ad8836c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b620000bf816200026d60201b620016391760201c565b506200012f7feafec4d89fa9619884b60000a4d96624a38f7ac2d8d9a604ecf07c12c77e480c60001b6040518060400160405280600481526020017fa4d96624000000000000000000000000000000000000000000000000000000008152506200036e60201b620017311760201c565b620001697fdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af160001b856200036e60201b620017311760201c565b620001a37f2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db93275660001b846200036e60201b620017311760201c565b620001fe7fe0261fa95db2eb3b5439bd033cda66d56b96f92f243a8228fd87550ed7bdfdb360001b82604051602001620001de919062000960565b6040516020818303038152906040526200036e60201b620017311760201c565b505050506200025d7ff675e9361af1c1664c1868cfa3eb97672d6b1a513aa5b81dec34c9ee330e818d60001b826040516020016200023d919062000960565b604051602081830303815290604052620003d660201b620017951760201c565b5050505050505050505062000a63565b6200027d620003f160201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146200036b578073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b80600160008481526020019081526020016000209080519060200190620003979291906200059c565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b282604051620003ca9190620009da565b60405180910390a25050565b620003ed82826200041a60201b620017a31760201c565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7fdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af160001b82141562000478576040517f85c169bd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db93275660001b821415620004d6576040517f76755b3800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fe0261fa95db2eb3b5439bd033cda66d56b96f92f243a8228fd87550ed7bdfdb360001b82141562000534576040517f4ef6d7fb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806001600084815260200190815260200160002090805190602001906200055d9291906200059c565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b282604051620005909190620009da565b60405180910390a25050565b828054620005aa9062000a2d565b90600052602060002090601f016020900481019282620005ce57600085556200061a565b82601f10620005e957805160ff19168380011785556200061a565b828001600101855582156200061a579182015b8281111562000619578251825591602001919060010190620005fc565b5b5090506200062991906200062d565b5090565b5b80821115620006485760008160009055506001016200062e565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620006b5826200066a565b810181811067ffffffffffffffff82111715620006d757620006d66200067b565b5b80604052505050565b6000620006ec6200064c565b9050620006fa8282620006aa565b919050565b600067ffffffffffffffff8211156200071d576200071c6200067b565b5b62000728826200066a565b9050602081019050919050565b60005b838110156200075557808201518184015260208101905062000738565b8381111562000765576000848401525b50505050565b6000620007826200077c84620006ff565b620006e0565b905082815260208101848484011115620007a157620007a062000665565b5b620007ae84828562000735565b509392505050565b600082601f830112620007ce57620007cd62000660565b5b8151620007e08482602086016200076b565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200081682620007e9565b9050919050565b620008288162000809565b81146200083457600080fd5b50565b60008151905062000848816200081d565b92915050565b6000819050919050565b62000863816200084e565b81146200086f57600080fd5b50565b600081519050620008838162000858565b92915050565b600080600080600060a08688031215620008a857620008a762000656565b5b600086015167ffffffffffffffff811115620008c957620008c86200065b565b5b620008d788828901620007b6565b955050602086015167ffffffffffffffff811115620008fb57620008fa6200065b565b5b6200090988828901620007b6565b94505060406200091c8882890162000837565b93505060606200092f8882890162000872565b9250506080620009428882890162000872565b9150509295509295909350565b6200095a816200084e565b82525050565b60006020820190506200097760008301846200094f565b92915050565b600081519050919050565b600082825260208201905092915050565b6000620009a6826200097d565b620009b2818562000988565b9350620009c481856020860162000735565b620009cf816200066a565b840191505092915050565b60006020820190508181036000830152620009f6818462000999565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168062000a4657607f821691505b6020821081141562000a5d5762000a5c620009fe565b5b50919050565b6147d58062000a736000396000f3fe60806040526004361061014f5760003560e01c80637e87632c116100b6578063af255b611161006f578063af255b61146105b4578063be9f0e6f146105dd578063d6c1407c14610606578063db8c96631461062f578063dedff9c614610658578063f2fde38b14610695576101ca565b80637e87632c146104c25780637f23690c146104eb57806386a10ddd146105075780638da5cb5b14610530578063979024211461055b578063a3b261f214610577576101ca565b806349a6078d1161010857806349a6078d1461038e578063511b6952146103cb57806354f6127f146103f45780636963d4381461043157806370a082311461046e578063715018a6146104ab576101ca565b806301ffc9a71461023257806316e023b31461026f57806318160ddd146102ac5780631d26fce6146102d7578063217b2270146103145780632a3654a414610351576101ca565b366101ca576000341415610198576040517fe5099ee300000000000000000000000000000000000000000000000000000000815260040161018f90612e16565b60405180910390fd5b6040517f61f4944200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600036606060046000369050101561021b5782826040517fe5099ee3000000000000000000000000000000000000000000000000000000008152600401610212929190612e83565b60405180910390fd5b61022583836106be565b9050915050805190602001f35b34801561023e57600080fd5b5061025960048036038101906102549190612f13565b61083d565b6040516102669190612f5b565b60405180910390f35b34801561027b57600080fd5b5061029660048036038101906102919190612fac565b6108ae565b6040516102a39190613063565b60405180910390f35b3480156102b857600080fd5b506102c16108c2565b6040516102ce919061309e565b60405180910390f35b3480156102e357600080fd5b506102fe60048036038101906102f99190613201565b6108cc565b60405161030b9190613385565b60405180910390f35b34801561032057600080fd5b5061033b600480360381019061033691906133a7565b610999565b6040516103489190613415565b60405180910390f35b34801561035d57600080fd5b506103786004803603810190610373919061345c565b610a4d565b6040516103859190612f5b565b60405180910390f35b34801561039a57600080fd5b506103b560048036038101906103b091906133a7565b610a6a565b6040516103c2919061355a565b60405180910390f35b3480156103d757600080fd5b506103f260048036038101906103ed919061364e565b610a97565b005b34801561040057600080fd5b5061041b600480360381019061041691906133a7565b610af8565b6040516104289190613063565b60405180910390f35b34801561043d57600080fd5b5061045860048036038101906104539190613740565b610b0a565b6040516104659190613385565b60405180910390f35b34801561047a57600080fd5b506104956004803603810190610490919061378d565b610c86565b6040516104a2919061309e565b60405180910390f35b3480156104b757600080fd5b506104c0610cd6565b005b3480156104ce57600080fd5b506104e960048036038101906104e49190613a21565b610cea565b005b61050560048036038101906105009190613b28565b610dfe565b005b34801561051357600080fd5b5061052e60048036038101906105299190613b84565b610e4e565b005b34801561053c57600080fd5b506105456110ac565b6040516105529190613415565b60405180910390f35b61057560048036038101906105709190613bf3565b6110d5565b005b34801561058357600080fd5b5061059e6004803603810190610599919061378d565b6111e8565b6040516105ab9190613d29565b60405180910390f35b3480156105c057600080fd5b506105db60048036038101906105d69190613d4b565b611238565b005b3480156105e957600080fd5b5061060460048036038101906105ff9190613dce565b611252565b005b34801561061257600080fd5b5061062d60048036038101906106289190613e75565b611356565b005b34801561063b57600080fd5b5061065660048036038101906106519190613d4b565b61136e565b005b34801561066457600080fd5b5061067f600480360381019061067a9190613ee4565b61150d565b60405161068c9190613385565b60405180910390f35b3480156106a157600080fd5b506106bc60048036038101906106b7919061378d565b6115be565b005b606060006106ef6000357fffffffff000000000000000000000000000000000000000000000000000000001661191e565b509050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610788576000357fffffffff00000000000000000000000000000000000000000000000000000000166040517fbb370b2b00000000000000000000000000000000000000000000000000000000815260040161077f9190613f3c565b60405180910390fd5b6000808273ffffffffffffffffffffffffffffffffffffffff1634878733346040516020016107ba9493929190613ff0565b6040516020818303038152906040526040516107d6919061405c565b60006040518083038185875af1925050503d8060008114610813576040519150601f19603f3d011682016040523d82523d6000602084013e610818565b606091505b5091509150811561082e57809350505050610837565b80518060208301fd5b92915050565b6000633a27170660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806108975750610896826119d8565b5b806108a757506108a682611a39565b5b9050919050565b60606108ba8383611aa1565b905092915050565b6000600254905090565b6060825167ffffffffffffffff8111156108e9576108e86130be565b5b60405190808252806020026020018201604052801561091c57816020015b60608152602001906001900390816109075790505b50905060005b83518110156109925761096984828151811061094157610940614073565b5b602002602001015184838151811061095c5761095b614073565b5b6020026020010151611aa1565b82828151811061097c5761097b614073565b5b6020026020010181905250806001019050610922565b5092915050565b6000806003600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a4457826040517fae8f9a36000000000000000000000000000000000000000000000000000000008152600401610a3b91906140b1565b60405180910390fd5b80915050919050565b6000610a5882611b6f565b610a628383611bbc565b905092915050565b6060610a7582611b6f565b610a9060056000848152602001908152602001600020611c29565b9050919050565b610aa13384611bbc565b610ae45782336040517f1294d2a9000000000000000000000000000000000000000000000000000000008152600401610adb9291906140cc565b60405180910390fd5b610af18585858585611c4a565b5050505050565b6060610b0382611f6f565b9050919050565b60608282905067ffffffffffffffff811115610b2957610b286130be565b5b604051908082528060200260200182016040528015610b5c57816020015b6060815260200190600190039081610b475790505b50905060005b83839050811015610c7f576000803073ffffffffffffffffffffffffffffffffffffffff16868685818110610b9a57610b99614073565b5b9050602002810190610bac9190614104565b604051610bba929190614167565b600060405180830381855af49150503d8060008114610bf5576040519150601f19603f3d011682016040523d82523d6000602084013e610bfa565b606091505b509150915081610c53576000815114610c165780518082602001fd5b826040517f234eb819000000000000000000000000000000000000000000000000000000008152600401610c4a919061309e565b60405180910390fd5b80848481518110610c6757610c66614073565b5b60200260200101819052508260010192505050610b62565b5092915050565b6000610ccf600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612014565b9050919050565b610cde612029565b610ce86000611639565b565b600085519050845181141580610d01575083518114155b80610d0d575082518114155b80610d19575081518114155b15610d50576040517f93a8311900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b81811015610df557610dea878281518110610d7157610d70614073565b5b6020026020010151878381518110610d8c57610d8b614073565b5b6020026020010151878481518110610da757610da6614073565b5b6020026020010151878581518110610dc257610dc1614073565b5b6020026020010151878681518110610ddd57610ddc614073565b5b6020026020010151610a97565b806001019050610d53565b50505050505050565b610e06612029565b60003414610e40576040517ff36ba73700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e4a82826120a2565b5050565b6000610e5983610999565b90503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610ecf578083336040517f5b271ea2000000000000000000000000000000000000000000000000000000008152600401610ec693929190614180565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610f36576040517f9577b8b300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610f9c576040517f89fdad6200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610fc3856005600087815260200190815260200160002061210d90919063ffffffff16565b9050806110095784846040517fa7626b680000000000000000000000000000000000000000000000000000000081526004016110009291906141b7565b60405180910390fd5b838273ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167f1b1b58aa2ec0cec2228b2d37124556d41f5a1f7b12f089171f896cc236671215866040516110679190613063565b60405180910390a46000338560018660405160200161108994939291906141e0565b60405160208183030381529060405290506110a4868261213d565b505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6110dd612029565b60003414611117576040517ff36ba73700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8051825114611152576040517f3bcc897900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008251141561118e576040517f97da5f9500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b82518110156111e3576111d88382815181106111b0576111af614073565b5b60200260200101518383815181106111cb576111ca614073565b5b60200260200101516120a2565b806001019050611191565b505050565b6060611231600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061216f565b9050919050565b611240612029565b61124c84848484612190565b50505050565b61125a612029565b8151835114158061126d57508051825114155b156112a4576040517f2fa71dfe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000835114156112e0576040517f80c9830500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b83518110156113505761134584828151811061130257611301614073565b5b602002602001015184838151811061131d5761131c614073565b5b602002602001015184848151811061133857611337614073565b5b60200260200101516123c0565b8060010190506112e3565b50505050565b61135e612029565b6113698383836123c0565b505050565b600061137984610999565b90503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146113ef578084336040517f5b271ea20000000000000000000000000000000000000000000000000000000081526004016113e693929190614180565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415611456576040517f9577b8b300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156114bc576040517f89fdad6200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6114c9858286868661244e565b821561150657600033856000856040516020016114e994939291906141e0565b6040516020818303038152906040529050611504868261213d565b505b5050505050565b6060815167ffffffffffffffff81111561152a576115296130be565b5b60405190808252806020026020018201604052801561155d57816020015b60608152602001906001900390816115485790505b50905060005b82518110156115b85761158f83828151811061158257611581614073565b5b6020026020010151611f6f565b8282815181106115a2576115a1614073565b5b6020026020010181905250806001019050611563565b50919050565b6115c6612029565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561162d576040517f1ad8836c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61163681611639565b50565b6116416110ac565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461172e578073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b80600160008481526020019081526020016000209080519060200190611758929190612d36565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b2826040516117899190613063565b60405180910390a25050565b61179f82826117a3565b5050565b7fdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af160001b821415611800576040517f85c169bd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db93275660001b82141561185d576040517f76755b3800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fe0261fa95db2eb3b5439bd033cda66d56b96f92f243a8228fd87550ed7bdfdb360001b8214156118ba576040517f4ef6d7fb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806001600084815260200190815260200160002090805190602001906118e1929190612d36565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b2826040516119129190613063565b60405180910390a25050565b600080600061195969cee78b4094da8601109660b01b857bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191661252b565b9050600061196682611f6f565b9050601481511415801561197c57506000815114155b156119be57806040517f42bfe79f0000000000000000000000000000000000000000000000000000000081526004016119b59190613063565b60405180910390fd5b806119c89061428a565b60601c6001935093505050915091565b600063a918fa6b60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480611a325750611a318261256b565b5b9050919050565b600080611a4c6301ffc9a760e01b61191e565b509050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611a8e576000915050611a9c565b611a9881846125cc565b9150505b919050565b6060600160008484604051602001611aba929190614312565b6040516020818303038152906040528051906020012081526020019081526020016000208054611ae99061436d565b80601f0160208091040260200160405190810160405280929190818152602001828054611b159061436d565b8015611b625780601f10611b3757610100808354040283529160200191611b62565b820191906000526020600020905b815481529060010190602001808311611b4557829003601f168201915b5050505050905092915050565b611b788161268b565b611bb957806040517fae8f9a36000000000000000000000000000000000000000000000000000000008152600401611bb091906140b1565b60405180910390fd5b50565b6000611bc782610999565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161480611c215750611c2083600560008581526020019081526020016000206126f790919063ffffffff16565b5b905092915050565b60606000611c3983600001612727565b905060608190508092505050919050565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415611cb0576040517f5d67d6c100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611cbb84610999565b90508573ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611d31578084876040517f5b271ea2000000000000000000000000000000000000000000000000000000008152600401611d2893929190614180565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415611d98576040517f24ecef4d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611da486868685612783565b611dad84610999565b9050611db98685612789565b611e0a84600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206127ff90919063ffffffff16565b50611e5c84600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061281690919063ffffffff16565b50846003600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf338787604051611f119392919061439f565b60405180910390a4611f258686868561282d565b60003387878786604051602001611f409594939291906143dd565b6040516020818303038152906040529050611f5b8782612833565b611f66868583612865565b50505050505050565b6060600160008381526020019081526020016000208054611f8f9061436d565b80601f0160208091040260200160405190810160405280929190818152602001828054611fbb9061436d565b80156120085780601f10611fdd57610100808354040283529160200191612008565b820191906000526020600020905b815481529060010190602001808311611feb57829003601f168201915b50505050509050919050565b6000612022826000016129cb565b9050919050565b3373ffffffffffffffffffffffffffffffffffffffff166120486110ac565b73ffffffffffffffffffffffffffffffffffffffff16146120a057336040517fbf1169c50000000000000000000000000000000000000000000000000000000081526004016120979190613415565b60405180910390fd5b565b7ff675e9361af1c1664c1868cfa3eb97672d6b1a513aa5b81dec34c9ee330e818d60001b8214156120ff576040517f3664800a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6121098282611795565b5050565b6000612135836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6129dc565b905092915050565b61216b827f8a1c15a8799f71b547e08e2bcb2e85257e81b0a07eee2ce6712549eef1f0097060001b83612a4c565b5050565b6060600061217f83600001612727565b905060608190508092505050919050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156121f7576040517f24ecef4d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6122046000858584612783565b61220d8361268b565b1561224f57826040517f34c7b51100000000000000000000000000000000000000000000000000000000815260040161224691906140b1565b60405180910390fd5b60026000815461225e90614466565b919050819055506122b683600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061281690919063ffffffff16565b50836003600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828473ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf33868660405161236c9392919061439f565b60405180910390a4612381600085858461282d565b600033600086868560405160200161239d9594939291906143dd565b60405160208183030381529060405290506123b9858483612865565b5050505050565b806001600085856040516020016123d8929190614312565b604051602081830303815290604052805190602001208152602001908152602001600020908051906020019061240f929190612d36565b5081837fa6e4251f855f750545fe414f120db91c76b88def14d120969e5bb2d3f05debbb836040516124419190613063565b60405180910390a3505050565b60006124758660056000878152602001908152602001600020612b0b90919063ffffffff16565b9050806124bb5785846040517f4aa31a8c0000000000000000000000000000000000000000000000000000000081526004016124b29291906141b7565b60405180910390fd5b838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fc78cd419d6136f9f1c1c6aec1d3fae098cffaf8bc86314a8f2685e32fe574e3c868660405161251b9291906144af565b60405180910390a4505050505050565b60008083600060f01b846040516020016125479392919061459a565b604051602081830303815290604052905080612562906145ec565b91505092915050565b600063629aa69460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806125c557506125c482612b3b565b5b9050919050565b6000806301ffc9a760e01b836040516024016125e89190613f3c565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506000806000602060008551602087018a617530fa92503d91506000519050828015612673575060208210155b801561267f5750600081115b94505050505092915050565b60008073ffffffffffffffffffffffffffffffffffffffff166003600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600061271f836000018373ffffffffffffffffffffffffffffffffffffffff1660001b612ba5565b905092915050565b60608160000180548060200260200160405190810160405280929190818152602001828054801561277757602002820191906000526020600020905b815481526020019060010190808311612763575b50505050509050919050565b50505050565b600060056000838152602001908152602001600020905060006127ab82612bc8565b90506000805b828110156127f7576127cd600085612bdd90919063ffffffff16565b91506127ec82878760006040518060200160405280600081525061244e565b8060010190506127b1565b505050505050565b600061280e8360000183612bf7565b905092915050565b600061282583600001836129dc565b905092915050565b50505050565b612861827fb23eae7e6d1564b295b4c3e3be402d9a2f0776c57bdf365903496f6fa481ab0060001b83612a4c565b5050565b61287683636bb56a1460e01b6125cc565b15612927578273ffffffffffffffffffffffffffffffffffffffff16636bb56a147f0b084a55ebf70fd3c06fd755269dac2212c4d3f0f4d09079780bfa50c1b2984d60001b836040518363ffffffff1660e01b81526004016128d9929190614653565b6000604051808303816000875af11580156128f8573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061292191906146f3565b506129c6565b816129c55760008373ffffffffffffffffffffffffffffffffffffffff163b1461298857826040517f4349776d00000000000000000000000000000000000000000000000000000000815260040161297f9190613415565b60405180910390fd5b826040517f031731370000000000000000000000000000000000000000000000000000000081526004016129bc9190613415565b60405180910390fd5b5b505050565b600081600001805490509050919050565b60006129e88383612ba5565b612a41578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050612a46565b600090505b92915050565b612a7c636bb56a1460e01b8473ffffffffffffffffffffffffffffffffffffffff166125cc90919063ffffffff16565b15612b06578273ffffffffffffffffffffffffffffffffffffffff16636bb56a1483836040518363ffffffff1660e01b8152600401612abc929190614653565b6000604051808303816000875af1158015612adb573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190612b0491906146f3565b505b505050565b6000612b33836000018373ffffffffffffffffffffffffffffffffffffffff1660001b612bf7565b905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600080836001016000848152602001908152602001600020541415905092915050565b6000612bd6826000016129cb565b9050919050565b6000612bec8360000183612d0b565b60001c905092915050565b60008083600101600084815260200190815260200160002054905060008114612cff576000600182612c29919061473c565b9050600060018660000180549050612c41919061473c565b9050818114612cb0576000866000018281548110612c6257612c61614073565b5b9060005260206000200154905080876000018481548110612c8657612c85614073565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b85600001805480612cc457612cc3614770565b5b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050612d05565b60009150505b92915050565b6000826000018281548110612d2357612d22614073565b5b9060005260206000200154905092915050565b828054612d429061436d565b90600052602060002090601f016020900481019282612d645760008555612dab565b82601f10612d7d57805160ff1916838001178555612dab565b82800160010185558215612dab579182015b82811115612daa578251825591602001919060010190612d8f565b5b509050612db89190612dbc565b5090565b5b80821115612dd5576000816000905550600101612dbd565b5090565b600082825260208201905092915050565b60008082015250565b6000612e00600483612dd9565b9150612e0b82612dea565b602082019050919050565b60006020820190508181036000830152612e2f81612df3565b9050919050565b82818337600083830152505050565b6000601f19601f8301169050919050565b6000612e628385612dd9565b9350612e6f838584612e36565b612e7883612e45565b840190509392505050565b60006020820190508181036000830152612e9e818486612e56565b90509392505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b612ef081612ebb565b8114612efb57600080fd5b50565b600081359050612f0d81612ee7565b92915050565b600060208284031215612f2957612f28612eb1565b5b6000612f3784828501612efe565b91505092915050565b60008115159050919050565b612f5581612f40565b82525050565b6000602082019050612f706000830184612f4c565b92915050565b6000819050919050565b612f8981612f76565b8114612f9457600080fd5b50565b600081359050612fa681612f80565b92915050565b60008060408385031215612fc357612fc2612eb1565b5b6000612fd185828601612f97565b9250506020612fe285828601612f97565b9150509250929050565b600081519050919050565b60005b83811015613015578082015181840152602081019050612ffa565b83811115613024576000848401525b50505050565b600061303582612fec565b61303f8185612dd9565b935061304f818560208601612ff7565b61305881612e45565b840191505092915050565b6000602082019050818103600083015261307d818461302a565b905092915050565b6000819050919050565b61309881613085565b82525050565b60006020820190506130b3600083018461308f565b92915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6130f682612e45565b810181811067ffffffffffffffff82111715613115576131146130be565b5b80604052505050565b6000613128612ea7565b905061313482826130ed565b919050565b600067ffffffffffffffff821115613154576131536130be565b5b602082029050602081019050919050565b600080fd5b600061317d61317884613139565b61311e565b905080838252602082019050602084028301858111156131a05761319f613165565b5b835b818110156131c957806131b58882612f97565b8452602084019350506020810190506131a2565b5050509392505050565b600082601f8301126131e8576131e76130b9565b5b81356131f884826020860161316a565b91505092915050565b6000806040838503121561321857613217612eb1565b5b600083013567ffffffffffffffff81111561323657613235612eb6565b5b613242858286016131d3565b925050602083013567ffffffffffffffff81111561326357613262612eb6565b5b61326f858286016131d3565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b60006132c182612fec565b6132cb81856132a5565b93506132db818560208601612ff7565b6132e481612e45565b840191505092915050565b60006132fb83836132b6565b905092915050565b6000602082019050919050565b600061331b82613279565b6133258185613284565b93508360208202850161333785613295565b8060005b85811015613373578484038952815161335485826132ef565b945061335f83613303565b925060208a0199505060018101905061333b565b50829750879550505050505092915050565b6000602082019050818103600083015261339f8184613310565b905092915050565b6000602082840312156133bd576133bc612eb1565b5b60006133cb84828501612f97565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006133ff826133d4565b9050919050565b61340f816133f4565b82525050565b600060208201905061342a6000830184613406565b92915050565b613439816133f4565b811461344457600080fd5b50565b60008135905061345681613430565b92915050565b6000806040838503121561347357613472612eb1565b5b600061348185828601613447565b925050602061349285828601612f97565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6134d1816133f4565b82525050565b60006134e383836134c8565b60208301905092915050565b6000602082019050919050565b60006135078261349c565b61351181856134a7565b935061351c836134b8565b8060005b8381101561354d57815161353488826134d7565b975061353f836134ef565b925050600181019050613520565b5085935050505092915050565b6000602082019050818103600083015261357481846134fc565b905092915050565b61358581612f40565b811461359057600080fd5b50565b6000813590506135a28161357c565b92915050565b600080fd5b600067ffffffffffffffff8211156135c8576135c76130be565b5b6135d182612e45565b9050602081019050919050565b60006135f16135ec846135ad565b61311e565b90508281526020810184848401111561360d5761360c6135a8565b5b613618848285612e36565b509392505050565b600082601f830112613635576136346130b9565b5b81356136458482602086016135de565b91505092915050565b600080600080600060a0868803121561366a57613669612eb1565b5b600061367888828901613447565b955050602061368988828901613447565b945050604061369a88828901612f97565b93505060606136ab88828901613593565b925050608086013567ffffffffffffffff8111156136cc576136cb612eb6565b5b6136d888828901613620565b9150509295509295909350565b600080fd5b60008083601f840112613700576136ff6130b9565b5b8235905067ffffffffffffffff81111561371d5761371c6136e5565b5b60208301915083602082028301111561373957613738613165565b5b9250929050565b6000806020838503121561375757613756612eb1565b5b600083013567ffffffffffffffff81111561377557613774612eb6565b5b613781858286016136ea565b92509250509250929050565b6000602082840312156137a3576137a2612eb1565b5b60006137b184828501613447565b91505092915050565b600067ffffffffffffffff8211156137d5576137d46130be565b5b602082029050602081019050919050565b60006137f96137f4846137ba565b61311e565b9050808382526020820190506020840283018581111561381c5761381b613165565b5b835b8181101561384557806138318882613447565b84526020840193505060208101905061381e565b5050509392505050565b600082601f830112613864576138636130b9565b5b81356138748482602086016137e6565b91505092915050565b600067ffffffffffffffff821115613898576138976130be565b5b602082029050602081019050919050565b60006138bc6138b78461387d565b61311e565b905080838252602082019050602084028301858111156138df576138de613165565b5b835b8181101561390857806138f48882613593565b8452602084019350506020810190506138e1565b5050509392505050565b600082601f830112613927576139266130b9565b5b81356139378482602086016138a9565b91505092915050565b600067ffffffffffffffff82111561395b5761395a6130be565b5b602082029050602081019050919050565b600061397f61397a84613940565b61311e565b905080838252602082019050602084028301858111156139a2576139a1613165565b5b835b818110156139e957803567ffffffffffffffff8111156139c7576139c66130b9565b5b8086016139d48982613620565b855260208501945050506020810190506139a4565b5050509392505050565b600082601f830112613a0857613a076130b9565b5b8135613a1884826020860161396c565b91505092915050565b600080600080600060a08688031215613a3d57613a3c612eb1565b5b600086013567ffffffffffffffff811115613a5b57613a5a612eb6565b5b613a678882890161384f565b955050602086013567ffffffffffffffff811115613a8857613a87612eb6565b5b613a948882890161384f565b945050604086013567ffffffffffffffff811115613ab557613ab4612eb6565b5b613ac1888289016131d3565b935050606086013567ffffffffffffffff811115613ae257613ae1612eb6565b5b613aee88828901613912565b925050608086013567ffffffffffffffff811115613b0f57613b0e612eb6565b5b613b1b888289016139f3565b9150509295509295909350565b60008060408385031215613b3f57613b3e612eb1565b5b6000613b4d85828601612f97565b925050602083013567ffffffffffffffff811115613b6e57613b6d612eb6565b5b613b7a85828601613620565b9150509250929050565b600080600060608486031215613b9d57613b9c612eb1565b5b6000613bab86828701613447565b9350506020613bbc86828701612f97565b925050604084013567ffffffffffffffff811115613bdd57613bdc612eb6565b5b613be986828701613620565b9150509250925092565b60008060408385031215613c0a57613c09612eb1565b5b600083013567ffffffffffffffff811115613c2857613c27612eb6565b5b613c34858286016131d3565b925050602083013567ffffffffffffffff811115613c5557613c54612eb6565b5b613c61858286016139f3565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b613ca081612f76565b82525050565b6000613cb28383613c97565b60208301905092915050565b6000602082019050919050565b6000613cd682613c6b565b613ce08185613c76565b9350613ceb83613c87565b8060005b83811015613d1c578151613d038882613ca6565b9750613d0e83613cbe565b925050600181019050613cef565b5085935050505092915050565b60006020820190508181036000830152613d438184613ccb565b905092915050565b60008060008060808587031215613d6557613d64612eb1565b5b6000613d7387828801613447565b9450506020613d8487828801612f97565b9350506040613d9587828801613593565b925050606085013567ffffffffffffffff811115613db657613db5612eb6565b5b613dc287828801613620565b91505092959194509250565b600080600060608486031215613de757613de6612eb1565b5b600084013567ffffffffffffffff811115613e0557613e04612eb6565b5b613e11868287016131d3565b935050602084013567ffffffffffffffff811115613e3257613e31612eb6565b5b613e3e868287016131d3565b925050604084013567ffffffffffffffff811115613e5f57613e5e612eb6565b5b613e6b868287016139f3565b9150509250925092565b600080600060608486031215613e8e57613e8d612eb1565b5b6000613e9c86828701612f97565b9350506020613ead86828701612f97565b925050604084013567ffffffffffffffff811115613ece57613ecd612eb6565b5b613eda86828701613620565b9150509250925092565b600060208284031215613efa57613ef9612eb1565b5b600082013567ffffffffffffffff811115613f1857613f17612eb6565b5b613f24848285016131d3565b91505092915050565b613f3681612ebb565b82525050565b6000602082019050613f516000830184613f2d565b92915050565b600081905092915050565b6000613f6e8385613f57565b9350613f7b838584612e36565b82840190509392505050565b60008160601b9050919050565b6000613f9f82613f87565b9050919050565b6000613fb182613f94565b9050919050565b613fc9613fc4826133f4565b613fa6565b82525050565b6000819050919050565b613fea613fe582613085565b613fcf565b82525050565b6000613ffd828688613f62565b91506140098285613fb8565b6014820191506140198284613fd9565b60208201915081905095945050505050565b600061403682612fec565b6140408185613f57565b9350614050818560208601612ff7565b80840191505092915050565b6000614068828461402b565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6140ab81612f76565b82525050565b60006020820190506140c660008301846140a2565b92915050565b60006040820190506140e160008301856140a2565b6140ee6020830184613406565b9392505050565b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112614121576141206140f5565b5b80840192508235915067ffffffffffffffff821115614143576141426140fa565b5b60208301925060018202360383131561415f5761415e6140ff565b5b509250929050565b6000614174828486613f62565b91508190509392505050565b60006060820190506141956000830186613406565b6141a260208301856140a2565b6141af6040830184613406565b949350505050565b60006040820190506141cc6000830185613406565b6141d960208301846140a2565b9392505050565b60006080820190506141f56000830187613406565b61420260208301866140a2565b61420f6040830185612f4c565b8181036060830152614221818461302a565b905095945050505050565b6000819050602082019050919050565b60007fffffffffffffffffffffffffffffffffffffffff00000000000000000000000082169050919050565b6000614274825161423c565b80915050919050565b600082821b905092915050565b600061429582612fec565b8261429f8461422c565b90506142aa81614268565b925060148210156142ea576142e57fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008360140360080261427d565b831692505b5050919050565b6000819050919050565b61430c61430782612f76565b6142f1565b82525050565b600061431e82856142fb565b60208201915061432e82846142fb565b6020820191508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061438557607f821691505b602082108114156143995761439861433e565b5b50919050565b60006060820190506143b46000830186613406565b6143c16020830185612f4c565b81810360408301526143d3818461302a565b9050949350505050565b600060a0820190506143f26000830188613406565b6143ff6020830187613406565b61440c6040830186613406565b61441960608301856140a2565b818103608083015261442b818461302a565b90509695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061447182613085565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156144a4576144a3614437565b5b600182019050919050565b60006040820190506144c46000830185612f4c565b81810360208301526144d6818461302a565b90509392505050565b60007fffffffffffffffffffff0000000000000000000000000000000000000000000082169050919050565b6000819050919050565b614526614521826144df565b61450b565b82525050565b60007fffff00000000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b61457361456e8261452c565b614558565b82525050565b6000819050919050565b61459461458f8261423c565b614579565b82525050565b60006145a68286614515565b600a820191506145b68285614562565b6002820191506145c68284614583565b601482019150819050949350505050565b60006145e38251612f76565b80915050919050565b60006145f782612fec565b826146018461422c565b905061460c816145d7565b9250602082101561464c576146477fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8360200360080261427d565b831692505b5050919050565b600060408201905061466860008301856140a2565b818103602083015261467a818461302a565b90509392505050565b6000614696614691846135ad565b61311e565b9050828152602081018484840111156146b2576146b16135a8565b5b6146bd848285612ff7565b509392505050565b600082601f8301126146da576146d96130b9565b5b81516146ea848260208601614683565b91505092915050565b60006020828403121561470957614708612eb1565b5b600082015167ffffffffffffffff81111561472757614726612eb6565b5b614733848285016146c5565b91505092915050565b600061474782613085565b915061475283613085565b92508282101561476557614764614437565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220ee93ac96567b7722af642a85c7ed6e46a9f01d0bc021f987228a2246309fb90664736f6c634300080c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x5248 CODESIZE SUB DUP1 PUSH3 0x5248 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x889 JUMP JUMPDEST DUP5 DUP5 DUP5 DUP5 DUP5 DUP5 DUP5 DUP5 DUP5 DUP2 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH3 0xA9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1AD8836C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xBF DUP2 PUSH3 0x26D PUSH1 0x20 SHL PUSH3 0x1639 OR PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x12F PUSH32 0xEAFEC4D89FA9619884B60000A4D96624A38F7AC2D8D9A604ECF07C12C77E480C PUSH1 0x0 SHL PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0xA4D9662400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH3 0x36E PUSH1 0x20 SHL PUSH3 0x1731 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x169 PUSH32 0xDEBA1E292F8BA88238E10AB3C7F88BD4BE4FAC56CAD5194B6ECCEAF653468AF1 PUSH1 0x0 SHL DUP6 PUSH3 0x36E PUSH1 0x20 SHL PUSH3 0x1731 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1A3 PUSH32 0x2F0A68AB07768E01943A599E73362A0E17A63A72E94DD2E384D2C1D4DB932756 PUSH1 0x0 SHL DUP5 PUSH3 0x36E PUSH1 0x20 SHL PUSH3 0x1731 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1FE PUSH32 0xE0261FA95DB2EB3B5439BD033CDA66D56B96F92F243A8228FD87550ED7BDFDB3 PUSH1 0x0 SHL DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x1DE SWAP2 SWAP1 PUSH3 0x960 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH3 0x36E PUSH1 0x20 SHL PUSH3 0x1731 OR PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP PUSH3 0x25D PUSH32 0xF675E9361AF1C1664C1868CFA3EB97672D6B1A513AA5B81DEC34C9EE330E818D PUSH1 0x0 SHL DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x23D SWAP2 SWAP1 PUSH3 0x960 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH3 0x3D6 PUSH1 0x20 SHL PUSH3 0x1795 OR PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP PUSH3 0xA63 JUMP JUMPDEST PUSH3 0x27D PUSH3 0x3F1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x36B JUMPI DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x397 SWAP3 SWAP2 SWAP1 PUSH3 0x59C JUMP JUMPDEST POP DUP2 PUSH32 0xECE574603820D07BC9B91F2A932BAADF4628AABCB8AFBA49776529C14A6104B2 DUP3 PUSH1 0x40 MLOAD PUSH3 0x3CA SWAP2 SWAP1 PUSH3 0x9DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH3 0x3ED DUP3 DUP3 PUSH3 0x41A PUSH1 0x20 SHL PUSH3 0x17A3 OR PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0xDEBA1E292F8BA88238E10AB3C7F88BD4BE4FAC56CAD5194B6ECCEAF653468AF1 PUSH1 0x0 SHL DUP3 EQ ISZERO PUSH3 0x478 JUMPI PUSH1 0x40 MLOAD PUSH32 0x85C169BD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x2F0A68AB07768E01943A599E73362A0E17A63A72E94DD2E384D2C1D4DB932756 PUSH1 0x0 SHL DUP3 EQ ISZERO PUSH3 0x4D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x76755B3800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xE0261FA95DB2EB3B5439BD033CDA66D56B96F92F243A8228FD87550ED7BDFDB3 PUSH1 0x0 SHL DUP3 EQ ISZERO PUSH3 0x534 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4EF6D7FB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x55D SWAP3 SWAP2 SWAP1 PUSH3 0x59C JUMP JUMPDEST POP DUP2 PUSH32 0xECE574603820D07BC9B91F2A932BAADF4628AABCB8AFBA49776529C14A6104B2 DUP3 PUSH1 0x40 MLOAD PUSH3 0x590 SWAP2 SWAP1 PUSH3 0x9DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x5AA SWAP1 PUSH3 0xA2D JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x5CE JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x61A JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x5E9 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x61A JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x61A JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x619 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x5FC JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x629 SWAP2 SWAP1 PUSH3 0x62D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x648 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x62E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x6B5 DUP3 PUSH3 0x66A JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x6D7 JUMPI PUSH3 0x6D6 PUSH3 0x67B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6EC PUSH3 0x64C JUMP JUMPDEST SWAP1 POP PUSH3 0x6FA DUP3 DUP3 PUSH3 0x6AA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x71D JUMPI PUSH3 0x71C PUSH3 0x67B JUMP JUMPDEST JUMPDEST PUSH3 0x728 DUP3 PUSH3 0x66A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x755 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x738 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x765 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x782 PUSH3 0x77C DUP5 PUSH3 0x6FF JUMP JUMPDEST PUSH3 0x6E0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x7A1 JUMPI PUSH3 0x7A0 PUSH3 0x665 JUMP JUMPDEST JUMPDEST PUSH3 0x7AE DUP5 DUP3 DUP6 PUSH3 0x735 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x7CE JUMPI PUSH3 0x7CD PUSH3 0x660 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x7E0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x76B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x816 DUP3 PUSH3 0x7E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x828 DUP2 PUSH3 0x809 JUMP JUMPDEST DUP2 EQ PUSH3 0x834 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x848 DUP2 PUSH3 0x81D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x863 DUP2 PUSH3 0x84E JUMP JUMPDEST DUP2 EQ PUSH3 0x86F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x883 DUP2 PUSH3 0x858 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0x8A8 JUMPI PUSH3 0x8A7 PUSH3 0x656 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP7 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x8C9 JUMPI PUSH3 0x8C8 PUSH3 0x65B JUMP JUMPDEST JUMPDEST PUSH3 0x8D7 DUP9 DUP3 DUP10 ADD PUSH3 0x7B6 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x8FB JUMPI PUSH3 0x8FA PUSH3 0x65B JUMP JUMPDEST JUMPDEST PUSH3 0x909 DUP9 DUP3 DUP10 ADD PUSH3 0x7B6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH3 0x91C DUP9 DUP3 DUP10 ADD PUSH3 0x837 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH3 0x92F DUP9 DUP3 DUP10 ADD PUSH3 0x872 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH3 0x942 DUP9 DUP3 DUP10 ADD PUSH3 0x872 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH3 0x95A DUP2 PUSH3 0x84E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x977 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x94F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x9A6 DUP3 PUSH3 0x97D JUMP JUMPDEST PUSH3 0x9B2 DUP2 DUP6 PUSH3 0x988 JUMP JUMPDEST SWAP4 POP PUSH3 0x9C4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x735 JUMP JUMPDEST PUSH3 0x9CF DUP2 PUSH3 0x66A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x9F6 DUP2 DUP5 PUSH3 0x999 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0xA46 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0xA5D JUMPI PUSH3 0xA5C PUSH3 0x9FE JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x47D5 DUP1 PUSH3 0xA73 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7E87632C GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xAF255B61 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xAF255B61 EQ PUSH2 0x5B4 JUMPI DUP1 PUSH4 0xBE9F0E6F EQ PUSH2 0x5DD JUMPI DUP1 PUSH4 0xD6C1407C EQ PUSH2 0x606 JUMPI DUP1 PUSH4 0xDB8C9663 EQ PUSH2 0x62F JUMPI DUP1 PUSH4 0xDEDFF9C6 EQ PUSH2 0x658 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x695 JUMPI PUSH2 0x1CA JUMP JUMPDEST DUP1 PUSH4 0x7E87632C EQ PUSH2 0x4C2 JUMPI DUP1 PUSH4 0x7F23690C EQ PUSH2 0x4EB JUMPI DUP1 PUSH4 0x86A10DDD EQ PUSH2 0x507 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x530 JUMPI DUP1 PUSH4 0x97902421 EQ PUSH2 0x55B JUMPI DUP1 PUSH4 0xA3B261F2 EQ PUSH2 0x577 JUMPI PUSH2 0x1CA JUMP JUMPDEST DUP1 PUSH4 0x49A6078D GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x49A6078D EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0x511B6952 EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0x54F6127F EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0x6963D438 EQ PUSH2 0x431 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x46E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4AB JUMPI PUSH2 0x1CA JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x16E023B3 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x1D26FCE6 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x217B2270 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x2A3654A4 EQ PUSH2 0x351 JUMPI PUSH2 0x1CA JUMP JUMPDEST CALLDATASIZE PUSH2 0x1CA JUMPI PUSH1 0x0 CALLVALUE EQ ISZERO PUSH2 0x198 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE5099EE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18F SWAP1 PUSH2 0x2E16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x61F4944200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLDATASIZE PUSH1 0x60 PUSH1 0x4 PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO PUSH2 0x21B JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE5099EE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x212 SWAP3 SWAP2 SWAP1 PUSH2 0x2E83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x225 DUP4 DUP4 PUSH2 0x6BE JUMP JUMPDEST SWAP1 POP SWAP2 POP POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x259 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x2F13 JUMP JUMPDEST PUSH2 0x83D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x2F5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x296 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x2FAC JUMP JUMPDEST PUSH2 0x8AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x3063 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x8C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0x309E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x3201 JUMP JUMPDEST PUSH2 0x8CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x3385 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x336 SWAP2 SWAP1 PUSH2 0x33A7 JUMP JUMPDEST PUSH2 0x999 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x3415 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x378 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x373 SWAP2 SWAP1 PUSH2 0x345C JUMP JUMPDEST PUSH2 0xA4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x385 SWAP2 SWAP1 PUSH2 0x2F5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x33A7 JUMP JUMPDEST PUSH2 0xA6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C2 SWAP2 SWAP1 PUSH2 0x355A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3ED SWAP2 SWAP1 PUSH2 0x364E JUMP JUMPDEST PUSH2 0xA97 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x400 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x416 SWAP2 SWAP1 PUSH2 0x33A7 JUMP JUMPDEST PUSH2 0xAF8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x428 SWAP2 SWAP1 PUSH2 0x3063 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x458 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x453 SWAP2 SWAP1 PUSH2 0x3740 JUMP JUMPDEST PUSH2 0xB0A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x465 SWAP2 SWAP1 PUSH2 0x3385 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x495 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x490 SWAP2 SWAP1 PUSH2 0x378D JUMP JUMPDEST PUSH2 0xC86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A2 SWAP2 SWAP1 PUSH2 0x309E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C0 PUSH2 0xCD6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E4 SWAP2 SWAP1 PUSH2 0x3A21 JUMP JUMPDEST PUSH2 0xCEA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x505 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x500 SWAP2 SWAP1 PUSH2 0x3B28 JUMP JUMPDEST PUSH2 0xDFE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x513 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x52E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x529 SWAP2 SWAP1 PUSH2 0x3B84 JUMP JUMPDEST PUSH2 0xE4E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x545 PUSH2 0x10AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x552 SWAP2 SWAP1 PUSH2 0x3415 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x575 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x570 SWAP2 SWAP1 PUSH2 0x3BF3 JUMP JUMPDEST PUSH2 0x10D5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x599 SWAP2 SWAP1 PUSH2 0x378D JUMP JUMPDEST PUSH2 0x11E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5AB SWAP2 SWAP1 PUSH2 0x3D29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D6 SWAP2 SWAP1 PUSH2 0x3D4B JUMP JUMPDEST PUSH2 0x1238 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x604 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5FF SWAP2 SWAP1 PUSH2 0x3DCE JUMP JUMPDEST PUSH2 0x1252 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x612 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x62D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x628 SWAP2 SWAP1 PUSH2 0x3E75 JUMP JUMPDEST PUSH2 0x1356 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x656 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x651 SWAP2 SWAP1 PUSH2 0x3D4B JUMP JUMPDEST PUSH2 0x136E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x664 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x67F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x67A SWAP2 SWAP1 PUSH2 0x3EE4 JUMP JUMPDEST PUSH2 0x150D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x68C SWAP2 SWAP1 PUSH2 0x3385 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6B7 SWAP2 SWAP1 PUSH2 0x378D JUMP JUMPDEST PUSH2 0x15BE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x6EF PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x191E JUMP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x788 JUMPI PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH1 0x40 MLOAD PUSH32 0xBB370B2B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77F SWAP2 SWAP1 PUSH2 0x3F3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLVALUE DUP8 DUP8 CALLER CALLVALUE PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7BA SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3FF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x7D6 SWAP2 SWAP1 PUSH2 0x405C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x813 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x818 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x82E JUMPI DUP1 SWAP4 POP POP POP POP PUSH2 0x837 JUMP JUMPDEST DUP1 MLOAD DUP1 PUSH1 0x20 DUP4 ADD REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x3A271706 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x897 JUMPI POP PUSH2 0x896 DUP3 PUSH2 0x19D8 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x8A7 JUMPI POP PUSH2 0x8A6 DUP3 PUSH2 0x1A39 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x8BA DUP4 DUP4 PUSH2 0x1AA1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8E9 JUMPI PUSH2 0x8E8 PUSH2 0x30BE JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x91C JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x907 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x992 JUMPI PUSH2 0x969 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x941 JUMPI PUSH2 0x940 PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x95C JUMPI PUSH2 0x95B PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1AA1 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x97C JUMPI PUSH2 0x97B PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x922 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA44 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xAE8F9A3600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3B SWAP2 SWAP1 PUSH2 0x40B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA58 DUP3 PUSH2 0x1B6F JUMP JUMPDEST PUSH2 0xA62 DUP4 DUP4 PUSH2 0x1BBC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA75 DUP3 PUSH2 0x1B6F JUMP JUMPDEST PUSH2 0xA90 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1C29 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAA1 CALLER DUP5 PUSH2 0x1BBC JUMP JUMPDEST PUSH2 0xAE4 JUMPI DUP3 CALLER PUSH1 0x40 MLOAD PUSH32 0x1294D2A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xADB SWAP3 SWAP2 SWAP1 PUSH2 0x40CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAF1 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1C4A JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB03 DUP3 PUSH2 0x1F6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP3 DUP3 SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB29 JUMPI PUSH2 0xB28 PUSH2 0x30BE JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB5C JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xB47 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0xC7F JUMPI PUSH1 0x0 DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0xB9A JUMPI PUSH2 0xB99 PUSH2 0x4073 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0xBAC SWAP2 SWAP1 PUSH2 0x4104 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBBA SWAP3 SWAP2 SWAP1 PUSH2 0x4167 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xBF5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBFA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0xC53 JUMPI PUSH1 0x0 DUP2 MLOAD EQ PUSH2 0xC16 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH32 0x234EB81900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC4A SWAP2 SWAP1 PUSH2 0x309E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xC67 JUMPI PUSH2 0xC66 PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP3 PUSH1 0x1 ADD SWAP3 POP POP POP PUSH2 0xB62 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCCF PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2014 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCDE PUSH2 0x2029 JUMP JUMPDEST PUSH2 0xCE8 PUSH1 0x0 PUSH2 0x1639 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP6 MLOAD SWAP1 POP DUP5 MLOAD DUP2 EQ ISZERO DUP1 PUSH2 0xD01 JUMPI POP DUP4 MLOAD DUP2 EQ ISZERO JUMPDEST DUP1 PUSH2 0xD0D JUMPI POP DUP3 MLOAD DUP2 EQ ISZERO JUMPDEST DUP1 PUSH2 0xD19 JUMPI POP DUP2 MLOAD DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0xD50 JUMPI PUSH1 0x40 MLOAD PUSH32 0x93A8311900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xDF5 JUMPI PUSH2 0xDEA DUP8 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD71 JUMPI PUSH2 0xD70 PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xD8C JUMPI PUSH2 0xD8B PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xDA7 JUMPI PUSH2 0xDA6 PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xDC2 JUMPI PUSH2 0xDC1 PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0xDDD JUMPI PUSH2 0xDDC PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xA97 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0xD53 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE06 PUSH2 0x2029 JUMP JUMPDEST PUSH1 0x0 CALLVALUE EQ PUSH2 0xE40 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF36BA73700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE4A DUP3 DUP3 PUSH2 0x20A2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE59 DUP4 PUSH2 0x999 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xECF JUMPI DUP1 DUP4 CALLER PUSH1 0x40 MLOAD PUSH32 0x5B271EA200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEC6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4180 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF36 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9577B8B300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF9C JUMPI PUSH1 0x40 MLOAD PUSH32 0x89FDAD6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFC3 DUP6 PUSH1 0x5 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x210D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1009 JUMPI DUP5 DUP5 PUSH1 0x40 MLOAD PUSH32 0xA7626B6800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1000 SWAP3 SWAP2 SWAP1 PUSH2 0x41B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1B1B58AA2EC0CEC2228B2D37124556D41F5A1F7B12F089171F896CC236671215 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1067 SWAP2 SWAP1 PUSH2 0x3063 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x0 CALLER DUP6 PUSH1 0x1 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1089 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x41E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x10A4 DUP7 DUP3 PUSH2 0x213D JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x10DD PUSH2 0x2029 JUMP JUMPDEST PUSH1 0x0 CALLVALUE EQ PUSH2 0x1117 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF36BA73700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x1152 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3BCC897900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ ISZERO PUSH2 0x118E JUMPI PUSH1 0x40 MLOAD PUSH32 0x97DA5F9500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x11E3 JUMPI PUSH2 0x11D8 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x11B0 JUMPI PUSH2 0x11AF PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x11CB JUMPI PUSH2 0x11CA PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x20A2 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1191 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1231 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x216F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1240 PUSH2 0x2029 JUMP JUMPDEST PUSH2 0x124C DUP5 DUP5 DUP5 DUP5 PUSH2 0x2190 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x125A PUSH2 0x2029 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ ISZERO DUP1 PUSH2 0x126D JUMPI POP DUP1 MLOAD DUP3 MLOAD EQ ISZERO JUMPDEST ISZERO PUSH2 0x12A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2FA71DFE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD EQ ISZERO PUSH2 0x12E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x80C9830500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1350 JUMPI PUSH2 0x1345 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1302 JUMPI PUSH2 0x1301 PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x131D JUMPI PUSH2 0x131C PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1338 JUMPI PUSH2 0x1337 PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x23C0 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x12E3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x135E PUSH2 0x2029 JUMP JUMPDEST PUSH2 0x1369 DUP4 DUP4 DUP4 PUSH2 0x23C0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1379 DUP5 PUSH2 0x999 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13EF JUMPI DUP1 DUP5 CALLER PUSH1 0x40 MLOAD PUSH32 0x5B271EA200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4180 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1456 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9577B8B300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x14BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x89FDAD6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14C9 DUP6 DUP3 DUP7 DUP7 DUP7 PUSH2 0x244E JUMP JUMPDEST DUP3 ISZERO PUSH2 0x1506 JUMPI PUSH1 0x0 CALLER DUP6 PUSH1 0x0 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x14E9 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x41E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x1504 DUP7 DUP3 PUSH2 0x213D JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x152A JUMPI PUSH2 0x1529 PUSH2 0x30BE JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x155D JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1548 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x15B8 JUMPI PUSH2 0x158F DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1582 JUMPI PUSH2 0x1581 PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1F6F JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x15A2 JUMPI PUSH2 0x15A1 PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1563 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15C6 PUSH2 0x2029 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x162D JUMPI PUSH1 0x40 MLOAD PUSH32 0x1AD8836C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1636 DUP2 PUSH2 0x1639 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1641 PUSH2 0x10AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x172E JUMPI DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1758 SWAP3 SWAP2 SWAP1 PUSH2 0x2D36 JUMP JUMPDEST POP DUP2 PUSH32 0xECE574603820D07BC9B91F2A932BAADF4628AABCB8AFBA49776529C14A6104B2 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1789 SWAP2 SWAP1 PUSH2 0x3063 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x179F DUP3 DUP3 PUSH2 0x17A3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0xDEBA1E292F8BA88238E10AB3C7F88BD4BE4FAC56CAD5194B6ECCEAF653468AF1 PUSH1 0x0 SHL DUP3 EQ ISZERO PUSH2 0x1800 JUMPI PUSH1 0x40 MLOAD PUSH32 0x85C169BD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x2F0A68AB07768E01943A599E73362A0E17A63A72E94DD2E384D2C1D4DB932756 PUSH1 0x0 SHL DUP3 EQ ISZERO PUSH2 0x185D JUMPI PUSH1 0x40 MLOAD PUSH32 0x76755B3800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xE0261FA95DB2EB3B5439BD033CDA66D56B96F92F243A8228FD87550ED7BDFDB3 PUSH1 0x0 SHL DUP3 EQ ISZERO PUSH2 0x18BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x4EF6D7FB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x18E1 SWAP3 SWAP2 SWAP1 PUSH2 0x2D36 JUMP JUMPDEST POP DUP2 PUSH32 0xECE574603820D07BC9B91F2A932BAADF4628AABCB8AFBA49776529C14A6104B2 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1912 SWAP2 SWAP1 PUSH2 0x3063 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1959 PUSH10 0xCEE78B4094DA86011096 PUSH1 0xB0 SHL DUP6 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH2 0x252B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1966 DUP3 PUSH2 0x1F6F JUMP JUMPDEST SWAP1 POP PUSH1 0x14 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x197C JUMPI POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO JUMPDEST ISZERO PUSH2 0x19BE JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x42BFE79F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19B5 SWAP2 SWAP1 PUSH2 0x3063 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x19C8 SWAP1 PUSH2 0x428A JUMP JUMPDEST PUSH1 0x60 SHR PUSH1 0x1 SWAP4 POP SWAP4 POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xA918FA6B PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x1A32 JUMPI POP PUSH2 0x1A31 DUP3 PUSH2 0x256B JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1A4C PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH2 0x191E JUMP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1A8E JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x1A9C JUMP JUMPDEST PUSH2 0x1A98 DUP2 DUP5 PUSH2 0x25CC JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x0 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1ABA SWAP3 SWAP2 SWAP1 PUSH2 0x4312 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x1AE9 SWAP1 PUSH2 0x436D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1B15 SWAP1 PUSH2 0x436D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B62 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1B37 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B62 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B45 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B78 DUP2 PUSH2 0x268B JUMP JUMPDEST PUSH2 0x1BB9 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAE8F9A3600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BB0 SWAP2 SWAP1 PUSH2 0x40B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BC7 DUP3 PUSH2 0x999 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1C21 JUMPI POP PUSH2 0x1C20 DUP4 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x26F7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1C39 DUP4 PUSH1 0x0 ADD PUSH2 0x2727 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 DUP2 SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1CB0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5D67D6C100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1CBB DUP5 PUSH2 0x999 JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D31 JUMPI DUP1 DUP5 DUP8 PUSH1 0x40 MLOAD PUSH32 0x5B271EA200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D28 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4180 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1D98 JUMPI PUSH1 0x40 MLOAD PUSH32 0x24ECEF4D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1DA4 DUP7 DUP7 DUP7 DUP6 PUSH2 0x2783 JUMP JUMPDEST PUSH2 0x1DAD DUP5 PUSH2 0x999 JUMP JUMPDEST SWAP1 POP PUSH2 0x1DB9 DUP7 DUP6 PUSH2 0x2789 JUMP JUMPDEST PUSH2 0x1E0A DUP5 PUSH1 0x4 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x27FF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x1E5C DUP5 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2816 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP DUP5 PUSH1 0x3 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB333C813A7426A7A11E2B190CAD52C44119421594B47F6F32ACE6D8C7207B2BF CALLER DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1F11 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x439F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1F25 DUP7 DUP7 DUP7 DUP6 PUSH2 0x282D JUMP JUMPDEST PUSH1 0x0 CALLER DUP8 DUP8 DUP8 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1F40 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x43DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x1F5B DUP8 DUP3 PUSH2 0x2833 JUMP JUMPDEST PUSH2 0x1F66 DUP7 DUP6 DUP4 PUSH2 0x2865 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x1F8F SWAP1 PUSH2 0x436D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1FBB SWAP1 PUSH2 0x436D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2008 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FDD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2008 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1FEB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2022 DUP3 PUSH1 0x0 ADD PUSH2 0x29CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2048 PUSH2 0x10AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x20A0 JUMPI CALLER PUSH1 0x40 MLOAD PUSH32 0xBF1169C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2097 SWAP2 SWAP1 PUSH2 0x3415 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH32 0xF675E9361AF1C1664C1868CFA3EB97672D6B1A513AA5B81DEC34C9EE330E818D PUSH1 0x0 SHL DUP3 EQ ISZERO PUSH2 0x20FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x3664800A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2109 DUP3 DUP3 PUSH2 0x1795 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2135 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x29DC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x216B DUP3 PUSH32 0x8A1C15A8799F71B547E08E2BCB2E85257E81B0A07EEE2CE6712549EEF1F00970 PUSH1 0x0 SHL DUP4 PUSH2 0x2A4C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x217F DUP4 PUSH1 0x0 ADD PUSH2 0x2727 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 DUP2 SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x21F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x24ECEF4D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2204 PUSH1 0x0 DUP6 DUP6 DUP5 PUSH2 0x2783 JUMP JUMPDEST PUSH2 0x220D DUP4 PUSH2 0x268B JUMP JUMPDEST ISZERO PUSH2 0x224F JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x34C7B51100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2246 SWAP2 SWAP1 PUSH2 0x40B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD PUSH2 0x225E SWAP1 PUSH2 0x4466 JUMP JUMPDEST SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH2 0x22B6 DUP4 PUSH1 0x4 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2816 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP DUP4 PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB333C813A7426A7A11E2B190CAD52C44119421594B47F6F32ACE6D8C7207B2BF CALLER DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x236C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x439F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x2381 PUSH1 0x0 DUP6 DUP6 DUP5 PUSH2 0x282D JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x0 DUP7 DUP7 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x239D SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x43DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x23B9 DUP6 DUP5 DUP4 PUSH2 0x2865 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x23D8 SWAP3 SWAP2 SWAP1 PUSH2 0x4312 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x240F SWAP3 SWAP2 SWAP1 PUSH2 0x2D36 JUMP JUMPDEST POP DUP2 DUP4 PUSH32 0xA6E4251F855F750545FE414F120DB91C76B88DEF14D120969E5BB2D3F05DEBBB DUP4 PUSH1 0x40 MLOAD PUSH2 0x2441 SWAP2 SWAP1 PUSH2 0x3063 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2475 DUP7 PUSH1 0x5 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2B0B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x24BB JUMPI DUP6 DUP5 PUSH1 0x40 MLOAD PUSH32 0x4AA31A8C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24B2 SWAP3 SWAP2 SWAP1 PUSH2 0x41B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC78CD419D6136F9F1C1C6AEC1D3FAE098CFFAF8BC86314A8F2685E32FE574E3C DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x251B SWAP3 SWAP2 SWAP1 PUSH2 0x44AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x0 PUSH1 0xF0 SHL DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2547 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x459A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 PUSH2 0x2562 SWAP1 PUSH2 0x45EC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x629AA694 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x25C5 JUMPI POP PUSH2 0x25C4 DUP3 PUSH2 0x2B3B JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP4 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x25E8 SWAP2 SWAP1 PUSH2 0x3F3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 PUSH1 0x0 DUP6 MLOAD PUSH1 0x20 DUP8 ADD DUP11 PUSH2 0x7530 STATICCALL SWAP3 POP RETURNDATASIZE SWAP2 POP PUSH1 0x0 MLOAD SWAP1 POP DUP3 DUP1 ISZERO PUSH2 0x2673 JUMPI POP PUSH1 0x20 DUP3 LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x267F JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x271F DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x2BA5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x2777 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x2763 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x27AB DUP3 PUSH2 0x2BC8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x27F7 JUMPI PUSH2 0x27CD PUSH1 0x0 DUP6 PUSH2 0x2BDD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0x27EC DUP3 DUP8 DUP8 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x244E JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x27B1 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x280E DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x2BF7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2825 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x29DC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2861 DUP3 PUSH32 0xB23EAE7E6D1564B295B4C3E3BE402D9A2F0776C57BDF365903496F6FA481AB00 PUSH1 0x0 SHL DUP4 PUSH2 0x2A4C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x2876 DUP4 PUSH4 0x6BB56A14 PUSH1 0xE0 SHL PUSH2 0x25CC JUMP JUMPDEST ISZERO PUSH2 0x2927 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6BB56A14 PUSH32 0xB084A55EBF70FD3C06FD755269DAC2212C4D3F0F4D09079780BFA50C1B2984D PUSH1 0x0 SHL DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28D9 SWAP3 SWAP2 SWAP1 PUSH2 0x4653 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x28F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2921 SWAP2 SWAP1 PUSH2 0x46F3 JUMP JUMPDEST POP PUSH2 0x29C6 JUMP JUMPDEST DUP2 PUSH2 0x29C5 JUMPI PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ PUSH2 0x2988 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x4349776D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x297F SWAP2 SWAP1 PUSH2 0x3415 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH32 0x317313700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29BC SWAP2 SWAP1 PUSH2 0x3415 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29E8 DUP4 DUP4 PUSH2 0x2BA5 JUMP JUMPDEST PUSH2 0x2A41 JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x2A46 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A7C PUSH4 0x6BB56A14 PUSH1 0xE0 SHL DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x25CC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x2B06 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6BB56A14 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2ABC SWAP3 SWAP2 SWAP1 PUSH2 0x4653 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2ADB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B04 SWAP2 SWAP1 PUSH2 0x46F3 JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B33 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x2BF7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BD6 DUP3 PUSH1 0x0 ADD PUSH2 0x29CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BEC DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x2D0B JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x2CFF JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x2C29 SWAP2 SWAP1 PUSH2 0x473C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x2C41 SWAP2 SWAP1 PUSH2 0x473C JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x2CB0 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2C62 JUMPI PUSH2 0x2C61 PUSH2 0x4073 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2C86 JUMPI PUSH2 0x2C85 PUSH2 0x4073 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x2CC4 JUMPI PUSH2 0x2CC3 PUSH2 0x4770 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x2D05 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2D23 JUMPI PUSH2 0x2D22 PUSH2 0x4073 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x2D42 SWAP1 PUSH2 0x436D JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x2D64 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x2DAB JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x2D7D JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x2DAB JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x2DAB JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2DAA JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2D8F JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x2DB8 SWAP2 SWAP1 PUSH2 0x2DBC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2DD5 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x2DBD JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E00 PUSH1 0x4 DUP4 PUSH2 0x2DD9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E0B DUP3 PUSH2 0x2DEA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E2F DUP2 PUSH2 0x2DF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E62 DUP4 DUP6 PUSH2 0x2DD9 JUMP JUMPDEST SWAP4 POP PUSH2 0x2E6F DUP4 DUP6 DUP5 PUSH2 0x2E36 JUMP JUMPDEST PUSH2 0x2E78 DUP4 PUSH2 0x2E45 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E9E DUP2 DUP5 DUP7 PUSH2 0x2E56 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2EF0 DUP2 PUSH2 0x2EBB JUMP JUMPDEST DUP2 EQ PUSH2 0x2EFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2F0D DUP2 PUSH2 0x2EE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F29 JUMPI PUSH2 0x2F28 PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F37 DUP5 DUP3 DUP6 ADD PUSH2 0x2EFE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F55 DUP2 PUSH2 0x2F40 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2F70 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2F4C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F89 DUP2 PUSH2 0x2F76 JUMP JUMPDEST DUP2 EQ PUSH2 0x2F94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2FA6 DUP2 PUSH2 0x2F80 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2FC3 JUMPI PUSH2 0x2FC2 PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2FD1 DUP6 DUP3 DUP7 ADD PUSH2 0x2F97 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2FE2 DUP6 DUP3 DUP7 ADD PUSH2 0x2F97 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3015 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2FFA JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3024 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3035 DUP3 PUSH2 0x2FEC JUMP JUMPDEST PUSH2 0x303F DUP2 DUP6 PUSH2 0x2DD9 JUMP JUMPDEST SWAP4 POP PUSH2 0x304F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2FF7 JUMP JUMPDEST PUSH2 0x3058 DUP2 PUSH2 0x2E45 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x307D DUP2 DUP5 PUSH2 0x302A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3098 DUP2 PUSH2 0x3085 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x30B3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x308F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x30F6 DUP3 PUSH2 0x2E45 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3115 JUMPI PUSH2 0x3114 PUSH2 0x30BE JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3128 PUSH2 0x2EA7 JUMP JUMPDEST SWAP1 POP PUSH2 0x3134 DUP3 DUP3 PUSH2 0x30ED JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3154 JUMPI PUSH2 0x3153 PUSH2 0x30BE JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x317D PUSH2 0x3178 DUP5 PUSH2 0x3139 JUMP JUMPDEST PUSH2 0x311E JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x31A0 JUMPI PUSH2 0x319F PUSH2 0x3165 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x31C9 JUMPI DUP1 PUSH2 0x31B5 DUP9 DUP3 PUSH2 0x2F97 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x31A2 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x31E8 JUMPI PUSH2 0x31E7 PUSH2 0x30B9 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x31F8 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x316A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3218 JUMPI PUSH2 0x3217 PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3236 JUMPI PUSH2 0x3235 PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3242 DUP6 DUP3 DUP7 ADD PUSH2 0x31D3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3263 JUMPI PUSH2 0x3262 PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x326F DUP6 DUP3 DUP7 ADD PUSH2 0x31D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32C1 DUP3 PUSH2 0x2FEC JUMP JUMPDEST PUSH2 0x32CB DUP2 DUP6 PUSH2 0x32A5 JUMP JUMPDEST SWAP4 POP PUSH2 0x32DB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2FF7 JUMP JUMPDEST PUSH2 0x32E4 DUP2 PUSH2 0x2E45 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32FB DUP4 DUP4 PUSH2 0x32B6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x331B DUP3 PUSH2 0x3279 JUMP JUMPDEST PUSH2 0x3325 DUP2 DUP6 PUSH2 0x3284 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x3337 DUP6 PUSH2 0x3295 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3373 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x3354 DUP6 DUP3 PUSH2 0x32EF JUMP JUMPDEST SWAP5 POP PUSH2 0x335F DUP4 PUSH2 0x3303 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x333B JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x339F DUP2 DUP5 PUSH2 0x3310 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33BD JUMPI PUSH2 0x33BC PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x33CB DUP5 DUP3 DUP6 ADD PUSH2 0x2F97 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33FF DUP3 PUSH2 0x33D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x340F DUP2 PUSH2 0x33F4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x342A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3406 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3439 DUP2 PUSH2 0x33F4 JUMP JUMPDEST DUP2 EQ PUSH2 0x3444 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3456 DUP2 PUSH2 0x3430 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3473 JUMPI PUSH2 0x3472 PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3481 DUP6 DUP3 DUP7 ADD PUSH2 0x3447 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3492 DUP6 DUP3 DUP7 ADD PUSH2 0x2F97 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x34D1 DUP2 PUSH2 0x33F4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34E3 DUP4 DUP4 PUSH2 0x34C8 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3507 DUP3 PUSH2 0x349C JUMP JUMPDEST PUSH2 0x3511 DUP2 DUP6 PUSH2 0x34A7 JUMP JUMPDEST SWAP4 POP PUSH2 0x351C DUP4 PUSH2 0x34B8 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x354D JUMPI DUP2 MLOAD PUSH2 0x3534 DUP9 DUP3 PUSH2 0x34D7 JUMP JUMPDEST SWAP8 POP PUSH2 0x353F DUP4 PUSH2 0x34EF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3520 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3574 DUP2 DUP5 PUSH2 0x34FC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3585 DUP2 PUSH2 0x2F40 JUMP JUMPDEST DUP2 EQ PUSH2 0x3590 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x35A2 DUP2 PUSH2 0x357C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x35C8 JUMPI PUSH2 0x35C7 PUSH2 0x30BE JUMP JUMPDEST JUMPDEST PUSH2 0x35D1 DUP3 PUSH2 0x2E45 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35F1 PUSH2 0x35EC DUP5 PUSH2 0x35AD JUMP JUMPDEST PUSH2 0x311E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x360D JUMPI PUSH2 0x360C PUSH2 0x35A8 JUMP JUMPDEST JUMPDEST PUSH2 0x3618 DUP5 DUP3 DUP6 PUSH2 0x2E36 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3635 JUMPI PUSH2 0x3634 PUSH2 0x30B9 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3645 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x35DE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x366A JUMPI PUSH2 0x3669 PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3678 DUP9 DUP3 DUP10 ADD PUSH2 0x3447 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x3689 DUP9 DUP3 DUP10 ADD PUSH2 0x3447 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x369A DUP9 DUP3 DUP10 ADD PUSH2 0x2F97 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x36AB DUP9 DUP3 DUP10 ADD PUSH2 0x3593 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x36CC JUMPI PUSH2 0x36CB PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x36D8 DUP9 DUP3 DUP10 ADD PUSH2 0x3620 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x3700 JUMPI PUSH2 0x36FF PUSH2 0x30B9 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x371D JUMPI PUSH2 0x371C PUSH2 0x36E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x3739 JUMPI PUSH2 0x3738 PUSH2 0x3165 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3757 JUMPI PUSH2 0x3756 PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3775 JUMPI PUSH2 0x3774 PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3781 DUP6 DUP3 DUP7 ADD PUSH2 0x36EA JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37A3 JUMPI PUSH2 0x37A2 PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x37B1 DUP5 DUP3 DUP6 ADD PUSH2 0x3447 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x37D5 JUMPI PUSH2 0x37D4 PUSH2 0x30BE JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37F9 PUSH2 0x37F4 DUP5 PUSH2 0x37BA JUMP JUMPDEST PUSH2 0x311E JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x381C JUMPI PUSH2 0x381B PUSH2 0x3165 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3845 JUMPI DUP1 PUSH2 0x3831 DUP9 DUP3 PUSH2 0x3447 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x381E JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3864 JUMPI PUSH2 0x3863 PUSH2 0x30B9 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3874 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x37E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3898 JUMPI PUSH2 0x3897 PUSH2 0x30BE JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38BC PUSH2 0x38B7 DUP5 PUSH2 0x387D JUMP JUMPDEST PUSH2 0x311E JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x38DF JUMPI PUSH2 0x38DE PUSH2 0x3165 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3908 JUMPI DUP1 PUSH2 0x38F4 DUP9 DUP3 PUSH2 0x3593 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x38E1 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3927 JUMPI PUSH2 0x3926 PUSH2 0x30B9 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3937 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x38A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x395B JUMPI PUSH2 0x395A PUSH2 0x30BE JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x397F PUSH2 0x397A DUP5 PUSH2 0x3940 JUMP JUMPDEST PUSH2 0x311E JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x39A2 JUMPI PUSH2 0x39A1 PUSH2 0x3165 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x39E9 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x39C7 JUMPI PUSH2 0x39C6 PUSH2 0x30B9 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x39D4 DUP10 DUP3 PUSH2 0x3620 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x39A4 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3A08 JUMPI PUSH2 0x3A07 PUSH2 0x30B9 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3A18 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x396C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3A3D JUMPI PUSH2 0x3A3C PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3A5B JUMPI PUSH2 0x3A5A PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3A67 DUP9 DUP3 DUP10 ADD PUSH2 0x384F JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3A88 JUMPI PUSH2 0x3A87 PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3A94 DUP9 DUP3 DUP10 ADD PUSH2 0x384F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3AB5 JUMPI PUSH2 0x3AB4 PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3AC1 DUP9 DUP3 DUP10 ADD PUSH2 0x31D3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3AE2 JUMPI PUSH2 0x3AE1 PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3AEE DUP9 DUP3 DUP10 ADD PUSH2 0x3912 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3B0F JUMPI PUSH2 0x3B0E PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3B1B DUP9 DUP3 DUP10 ADD PUSH2 0x39F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3B3F JUMPI PUSH2 0x3B3E PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3B4D DUP6 DUP3 DUP7 ADD PUSH2 0x2F97 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3B6E JUMPI PUSH2 0x3B6D PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3B7A DUP6 DUP3 DUP7 ADD PUSH2 0x3620 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3B9D JUMPI PUSH2 0x3B9C PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3BAB DUP7 DUP3 DUP8 ADD PUSH2 0x3447 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3BBC DUP7 DUP3 DUP8 ADD PUSH2 0x2F97 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3BDD JUMPI PUSH2 0x3BDC PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3BE9 DUP7 DUP3 DUP8 ADD PUSH2 0x3620 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3C0A JUMPI PUSH2 0x3C09 PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3C28 JUMPI PUSH2 0x3C27 PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3C34 DUP6 DUP3 DUP7 ADD PUSH2 0x31D3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3C55 JUMPI PUSH2 0x3C54 PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3C61 DUP6 DUP3 DUP7 ADD PUSH2 0x39F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3CA0 DUP2 PUSH2 0x2F76 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CB2 DUP4 DUP4 PUSH2 0x3C97 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CD6 DUP3 PUSH2 0x3C6B JUMP JUMPDEST PUSH2 0x3CE0 DUP2 DUP6 PUSH2 0x3C76 JUMP JUMPDEST SWAP4 POP PUSH2 0x3CEB DUP4 PUSH2 0x3C87 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3D1C JUMPI DUP2 MLOAD PUSH2 0x3D03 DUP9 DUP3 PUSH2 0x3CA6 JUMP JUMPDEST SWAP8 POP PUSH2 0x3D0E DUP4 PUSH2 0x3CBE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3CEF JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D43 DUP2 DUP5 PUSH2 0x3CCB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3D65 JUMPI PUSH2 0x3D64 PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3D73 DUP8 DUP3 DUP9 ADD PUSH2 0x3447 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3D84 DUP8 DUP3 DUP9 ADD PUSH2 0x2F97 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x3D95 DUP8 DUP3 DUP9 ADD PUSH2 0x3593 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3DB6 JUMPI PUSH2 0x3DB5 PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3DC2 DUP8 DUP3 DUP9 ADD PUSH2 0x3620 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3DE7 JUMPI PUSH2 0x3DE6 PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3E05 JUMPI PUSH2 0x3E04 PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3E11 DUP7 DUP3 DUP8 ADD PUSH2 0x31D3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3E32 JUMPI PUSH2 0x3E31 PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3E3E DUP7 DUP3 DUP8 ADD PUSH2 0x31D3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3E5F JUMPI PUSH2 0x3E5E PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3E6B DUP7 DUP3 DUP8 ADD PUSH2 0x39F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3E8E JUMPI PUSH2 0x3E8D PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3E9C DUP7 DUP3 DUP8 ADD PUSH2 0x2F97 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3EAD DUP7 DUP3 DUP8 ADD PUSH2 0x2F97 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3ECE JUMPI PUSH2 0x3ECD PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3EDA DUP7 DUP3 DUP8 ADD PUSH2 0x3620 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3EFA JUMPI PUSH2 0x3EF9 PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3F18 JUMPI PUSH2 0x3F17 PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3F24 DUP5 DUP3 DUP6 ADD PUSH2 0x31D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3F36 DUP2 PUSH2 0x2EBB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3F51 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3F2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F6E DUP4 DUP6 PUSH2 0x3F57 JUMP JUMPDEST SWAP4 POP PUSH2 0x3F7B DUP4 DUP6 DUP5 PUSH2 0x2E36 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F9F DUP3 PUSH2 0x3F87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FB1 DUP3 PUSH2 0x3F94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3FC9 PUSH2 0x3FC4 DUP3 PUSH2 0x33F4 JUMP JUMPDEST PUSH2 0x3FA6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3FEA PUSH2 0x3FE5 DUP3 PUSH2 0x3085 JUMP JUMPDEST PUSH2 0x3FCF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FFD DUP3 DUP7 DUP9 PUSH2 0x3F62 JUMP JUMPDEST SWAP2 POP PUSH2 0x4009 DUP3 DUP6 PUSH2 0x3FB8 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x4019 DUP3 DUP5 PUSH2 0x3FD9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4036 DUP3 PUSH2 0x2FEC JUMP JUMPDEST PUSH2 0x4040 DUP2 DUP6 PUSH2 0x3F57 JUMP JUMPDEST SWAP4 POP PUSH2 0x4050 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2FF7 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4068 DUP3 DUP5 PUSH2 0x402B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x40AB DUP2 PUSH2 0x2F76 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x40C6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x40A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x40E1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x40A2 JUMP JUMPDEST PUSH2 0x40EE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3406 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x4121 JUMPI PUSH2 0x4120 PUSH2 0x40F5 JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4143 JUMPI PUSH2 0x4142 PUSH2 0x40FA JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x415F JUMPI PUSH2 0x415E PUSH2 0x40FF JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4174 DUP3 DUP5 DUP7 PUSH2 0x3F62 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x4195 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3406 JUMP JUMPDEST PUSH2 0x41A2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x40A2 JUMP JUMPDEST PUSH2 0x41AF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3406 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x41CC PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3406 JUMP JUMPDEST PUSH2 0x41D9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x40A2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x41F5 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3406 JUMP JUMPDEST PUSH2 0x4202 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x40A2 JUMP JUMPDEST PUSH2 0x420F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2F4C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x4221 DUP2 DUP5 PUSH2 0x302A JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4274 DUP3 MLOAD PUSH2 0x423C JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4295 DUP3 PUSH2 0x2FEC JUMP JUMPDEST DUP3 PUSH2 0x429F DUP5 PUSH2 0x422C JUMP JUMPDEST SWAP1 POP PUSH2 0x42AA DUP2 PUSH2 0x4268 JUMP JUMPDEST SWAP3 POP PUSH1 0x14 DUP3 LT ISZERO PUSH2 0x42EA JUMPI PUSH2 0x42E5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP4 PUSH1 0x14 SUB PUSH1 0x8 MUL PUSH2 0x427D JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x430C PUSH2 0x4307 DUP3 PUSH2 0x2F76 JUMP JUMPDEST PUSH2 0x42F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x431E DUP3 DUP6 PUSH2 0x42FB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x432E DUP3 DUP5 PUSH2 0x42FB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x4385 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x4399 JUMPI PUSH2 0x4398 PUSH2 0x433E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x43B4 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3406 JUMP JUMPDEST PUSH2 0x43C1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2F4C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x43D3 DUP2 DUP5 PUSH2 0x302A JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x43F2 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x3406 JUMP JUMPDEST PUSH2 0x43FF PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x3406 JUMP JUMPDEST PUSH2 0x440C PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x3406 JUMP JUMPDEST PUSH2 0x4419 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x40A2 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x442B DUP2 DUP5 PUSH2 0x302A JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4471 DUP3 PUSH2 0x3085 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x44A4 JUMPI PUSH2 0x44A3 PUSH2 0x4437 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x44C4 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2F4C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x44D6 DUP2 DUP5 PUSH2 0x302A JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4526 PUSH2 0x4521 DUP3 PUSH2 0x44DF JUMP JUMPDEST PUSH2 0x450B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFF000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4573 PUSH2 0x456E DUP3 PUSH2 0x452C JUMP JUMPDEST PUSH2 0x4558 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4594 PUSH2 0x458F DUP3 PUSH2 0x423C JUMP JUMPDEST PUSH2 0x4579 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45A6 DUP3 DUP7 PUSH2 0x4515 JUMP JUMPDEST PUSH1 0xA DUP3 ADD SWAP2 POP PUSH2 0x45B6 DUP3 DUP6 PUSH2 0x4562 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP2 POP PUSH2 0x45C6 DUP3 DUP5 PUSH2 0x4583 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45E3 DUP3 MLOAD PUSH2 0x2F76 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45F7 DUP3 PUSH2 0x2FEC JUMP JUMPDEST DUP3 PUSH2 0x4601 DUP5 PUSH2 0x422C JUMP JUMPDEST SWAP1 POP PUSH2 0x460C DUP2 PUSH2 0x45D7 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH2 0x464C JUMPI PUSH2 0x4647 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH2 0x427D JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4668 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x40A2 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x467A DUP2 DUP5 PUSH2 0x302A JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4696 PUSH2 0x4691 DUP5 PUSH2 0x35AD JUMP JUMPDEST PUSH2 0x311E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x46B2 JUMPI PUSH2 0x46B1 PUSH2 0x35A8 JUMP JUMPDEST JUMPDEST PUSH2 0x46BD DUP5 DUP3 DUP6 PUSH2 0x2FF7 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x46DA JUMPI PUSH2 0x46D9 PUSH2 0x30B9 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x46EA DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4683 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4709 JUMPI PUSH2 0x4708 PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4727 JUMPI PUSH2 0x4726 PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x4733 DUP5 DUP3 DUP6 ADD PUSH2 0x46C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4747 DUP3 PUSH2 0x3085 JUMP JUMPDEST SWAP2 POP PUSH2 0x4752 DUP4 PUSH2 0x3085 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x4765 JUMPI PUSH2 0x4764 PUSH2 0x4437 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE SWAP4 0xAC SWAP7 JUMP PUSH28 0x7722AF642A85C7ED6E46A9F01D0BC021F987228A2246309FB9066473 PUSH16 0x6C634300080C00330000000000000000 ","sourceMap":"374:1762:23:-:0;;;1017:349;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1240:5;1259:7;1280:9;1303:14;1331:18;3063:5:20;3070:7;3079:9;3090:14;1393:13:14;1133:1:0;1109:26;;:12;:26;;;1105:100;;;1158:36;;;;;;;;;;;;;;1105:100;1214:36;1237:12;1214:22;;;;;:36;;:::i;:::-;1053:204;1478:118:14::1;388:66:13;1512:29:14;;1555:31;;;;;;;;;;;;;;;;::::0;1478:20:::1;;;;;:118;;:::i;:::-;1607:56;633:66:13;1628:20:14;;1656:5;1607:20;;;;;:56;;:::i;:::-;1673:60;776:66:13;1694:22:14;;1724:7;1673:20;;;;;:60;;:::i;:::-;1743:70;915:66:13;1764:20:14;;1797:14;1786:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;1743:20;;;;;:70;;:::i;:::-;1244:576:::0;;;;3116:125:20::1;245:66:18;3163:24:20;;3212:18;3201:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;3116:33;;;;;:125;;:::i;:::-;2865:383:::0;;;;;1017:349:23;;;;;374:1762;;2133:194:3;2213:7;:5;;;:7;;:::i;:::-;2201:19;;:8;:19;;;2197:124;;2270:8;2241:38;;2262:6;;;;;;;;;;2241:38;;;;;;;;;;;;2302:8;2293:6;;:17;;;;;;;;;;;;;;;;;;2197:124;2133:194;:::o;5032:188:1:-;5158:9;5140:6;:15;5147:7;5140:15;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;5194:7;5182:31;5203:9;5182:31;;;;;;:::i;:::-;;;;;;;;5032:188;;:::o;2008:224:14:-;2168:57;2206:7;2215:9;2168:37;;;;;:57;;:::i;:::-;2008:224;;:::o;736:85:3:-;782:7;808:6;;;;;;;;;;;801:13;;736:85;:::o;930:533:15:-;633:66:13;1062:20:15;;1051:7;:31;1047:410;;;1105:26;;;;;;;;;;;;;;1047:410;776:66:13;1163:22:15;;1152:7;:33;1148:309;;;1208:28;;;;;;;;;;;;;;1148:309;915:66:13;1268:20:15;;1257:7;:31;1253:204;;;1311:26;;;;;;;;;;;;;;1253:204;1386:9;1368:6;:15;1375:7;1368:15;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;1427:7;1415:31;1436:9;1415:31;;;;;;:::i;:::-;;;;;;;;930:533;;:::o;374:1762:23:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:29:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:307::-;1678:1;1688:113;1702:6;1699:1;1696:13;1688:113;;;1787:1;1782:3;1778:11;1772:18;1768:1;1763:3;1759:11;1752:39;1724:2;1721:1;1717:10;1712:15;;1688:113;;;1819:6;1816:1;1813:13;1810:101;;;1899:1;1890:6;1885:3;1881:16;1874:27;1810:101;1659:258;1610:307;;;:::o;1923:421::-;2012:5;2037:66;2053:49;2095:6;2053:49;:::i;:::-;2037:66;:::i;:::-;2028:75;;2126:6;2119:5;2112:21;2164:4;2157:5;2153:16;2202:3;2193:6;2188:3;2184:16;2181:25;2178:112;;;2209:79;;:::i;:::-;2178:112;2299:39;2331:6;2326:3;2321;2299:39;:::i;:::-;2018:326;1923:421;;;;;:::o;2364:355::-;2431:5;2480:3;2473:4;2465:6;2461:17;2457:27;2447:122;;2488:79;;:::i;:::-;2447:122;2598:6;2592:13;2623:90;2709:3;2701:6;2694:4;2686:6;2682:17;2623:90;:::i;:::-;2614:99;;2437:282;2364:355;;;;:::o;2725:126::-;2762:7;2802:42;2795:5;2791:54;2780:65;;2725:126;;;:::o;2857:96::-;2894:7;2923:24;2941:5;2923:24;:::i;:::-;2912:35;;2857:96;;;:::o;2959:122::-;3032:24;3050:5;3032:24;:::i;:::-;3025:5;3022:35;3012:63;;3071:1;3068;3061:12;3012:63;2959:122;:::o;3087:143::-;3144:5;3175:6;3169:13;3160:22;;3191:33;3218:5;3191:33;:::i;:::-;3087:143;;;;:::o;3236:77::-;3273:7;3302:5;3291:16;;3236:77;;;:::o;3319:122::-;3392:24;3410:5;3392:24;:::i;:::-;3385:5;3382:35;3372:63;;3431:1;3428;3421:12;3372:63;3319:122;:::o;3447:143::-;3504:5;3535:6;3529:13;3520:22;;3551:33;3578:5;3551:33;:::i;:::-;3447:143;;;;:::o;3596:1323::-;3722:6;3730;3738;3746;3754;3803:3;3791:9;3782:7;3778:23;3774:33;3771:120;;;3810:79;;:::i;:::-;3771:120;3951:1;3940:9;3936:17;3930:24;3981:18;3973:6;3970:30;3967:117;;;4003:79;;:::i;:::-;3967:117;4108:74;4174:7;4165:6;4154:9;4150:22;4108:74;:::i;:::-;4098:84;;3901:291;4252:2;4241:9;4237:18;4231:25;4283:18;4275:6;4272:30;4269:117;;;4305:79;;:::i;:::-;4269:117;4410:74;4476:7;4467:6;4456:9;4452:22;4410:74;:::i;:::-;4400:84;;4202:292;4533:2;4559:64;4615:7;4606:6;4595:9;4591:22;4559:64;:::i;:::-;4549:74;;4504:129;4672:2;4698:64;4754:7;4745:6;4734:9;4730:22;4698:64;:::i;:::-;4688:74;;4643:129;4811:3;4838:64;4894:7;4885:6;4874:9;4870:22;4838:64;:::i;:::-;4828:74;;4782:130;3596:1323;;;;;;;;:::o;4925:118::-;5012:24;5030:5;5012:24;:::i;:::-;5007:3;5000:37;4925:118;;:::o;5049:222::-;5142:4;5180:2;5169:9;5165:18;5157:26;;5193:71;5261:1;5250:9;5246:17;5237:6;5193:71;:::i;:::-;5049:222;;;;:::o;5277:98::-;5328:6;5362:5;5356:12;5346:22;;5277:98;;;:::o;5381:168::-;5464:11;5498:6;5493:3;5486:19;5538:4;5533:3;5529:14;5514:29;;5381:168;;;;:::o;5555:360::-;5641:3;5669:38;5701:5;5669:38;:::i;:::-;5723:70;5786:6;5781:3;5723:70;:::i;:::-;5716:77;;5802:52;5847:6;5842:3;5835:4;5828:5;5824:16;5802:52;:::i;:::-;5879:29;5901:6;5879:29;:::i;:::-;5874:3;5870:39;5863:46;;5645:270;5555:360;;;;:::o;5921:309::-;6032:4;6070:2;6059:9;6055:18;6047:26;;6119:9;6113:4;6109:20;6105:1;6094:9;6090:17;6083:47;6147:76;6218:4;6209:6;6147:76;:::i;:::-;6139:84;;5921:309;;;;:::o;6236:180::-;6284:77;6281:1;6274:88;6381:4;6378:1;6371:15;6405:4;6402:1;6395:15;6422:320;6466:6;6503:1;6497:4;6493:12;6483:22;;6550:1;6544:4;6540:12;6571:18;6561:81;;6627:4;6619:6;6615:17;6605:27;;6561:81;6689:2;6681:6;6678:14;6658:18;6655:38;6652:84;;;6708:18;;:::i;:::-;6652:84;6473:269;6422:320;;;:::o;374:1762:23:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_2178":{"entryPoint":null,"id":2178,"parameterSlots":2,"returnSlots":1},"@_2196":{"entryPoint":null,"id":2196,"parameterSlots":0,"returnSlots":0},"@_add_4055":{"entryPoint":10716,"id":4055,"parameterSlots":2,"returnSlots":1},"@_afterTokenTransfer_3614":{"entryPoint":10285,"id":3614,"parameterSlots":4,"returnSlots":0},"@_at_4189":{"entryPoint":11531,"id":4189,"parameterSlots":2,"returnSlots":1},"@_beforeTokenTransfer_3601":{"entryPoint":10115,"id":3601,"parameterSlots":4,"returnSlots":0},"@_checkOwner_379":{"entryPoint":8233,"id":379,"parameterSlots":0,"returnSlots":0},"@_clearOperators_3175":{"entryPoint":10121,"id":3175,"parameterSlots":2,"returnSlots":0},"@_contains_4158":{"entryPoint":11173,"id":4158,"parameterSlots":2,"returnSlots":1},"@_existsOrError_3210":{"entryPoint":7023,"id":3210,"parameterSlots":1,"returnSlots":0},"@_exists_3193":{"entryPoint":9867,"id":3193,"parameterSlots":1,"returnSlots":1},"@_fallbackLSP17Extendable_2251":{"entryPoint":1726,"id":2251,"parameterSlots":2,"returnSlots":1},"@_getDataForTokenId_3588":{"entryPoint":6817,"id":3588,"parameterSlots":2,"returnSlots":1},"@_getData_228":{"entryPoint":8047,"id":228,"parameterSlots":1,"returnSlots":1},"@_getExtensionAndForwardValue_2302":{"entryPoint":6430,"id":2302,"parameterSlots":1,"returnSlots":2},"@_isOperatorOrOwner_2963":{"entryPoint":7100,"id":2963,"parameterSlots":2,"returnSlots":1},"@_length_4172":{"entryPoint":10699,"id":4172,"parameterSlots":1,"returnSlots":1},"@_mint_3313":{"entryPoint":8592,"id":3313,"parameterSlots":4,"returnSlots":0},"@_notifyTokenOperator_3631":{"entryPoint":8509,"id":3631,"parameterSlots":2,"returnSlots":0},"@_notifyTokenReceiver_3694":{"entryPoint":10341,"id":3694,"parameterSlots":3,"returnSlots":0},"@_notifyTokenSender_3648":{"entryPoint":10291,"id":3648,"parameterSlots":2,"returnSlots":0},"@_remove_4139":{"entryPoint":11255,"id":4139,"parameterSlots":2,"returnSlots":1},"@_revokeOperator_3121":{"entryPoint":9294,"id":3121,"parameterSlots":5,"returnSlots":0},"@_setDataForTokenId_3566":{"entryPoint":9152,"id":3566,"parameterSlots":3,"returnSlots":0},"@_setData_1656":{"entryPoint":6037,"id":1656,"parameterSlots":2,"returnSlots":0},"@_setData_1718":{"entryPoint":6051,"id":1718,"parameterSlots":2,"returnSlots":0},"@_setData_2356":{"entryPoint":8354,"id":2356,"parameterSlots":2,"returnSlots":0},"@_setData_248":{"entryPoint":5937,"id":248,"parameterSlots":2,"returnSlots":0},"@_setOwner_401":{"entryPoint":5689,"id":401,"parameterSlots":1,"returnSlots":0},"@_supportsInterfaceInERC165Extension_597":{"entryPoint":6713,"id":597,"parameterSlots":1,"returnSlots":1},"@_transfer_3536":{"entryPoint":7242,"id":3536,"parameterSlots":5,"returnSlots":0},"@_values_4203":{"entryPoint":10023,"id":4203,"parameterSlots":1,"returnSlots":1},"@add_4225":{"entryPoint":10262,"id":4225,"parameterSlots":2,"returnSlots":1},"@add_4355":{"entryPoint":8461,"id":4355,"parameterSlots":2,"returnSlots":1},"@at_4451":{"entryPoint":11229,"id":4451,"parameterSlots":2,"returnSlots":1},"@authorizeOperator_2817":{"entryPoint":3662,"id":2817,"parameterSlots":3,"returnSlots":0},"@balanceOf_2454":{"entryPoint":3206,"id":2454,"parameterSlots":1,"returnSlots":1},"@batchCalls_2727":{"entryPoint":2826,"id":2727,"parameterSlots":2,"returnSlots":1},"@contains_4409":{"entryPoint":9975,"id":4409,"parameterSlots":2,"returnSlots":1},"@generateMappingKey_1020":{"entryPoint":9515,"id":1020,"parameterSlots":2,"returnSlots":1},"@getDataBatchForTokenIds_2570":{"entryPoint":2252,"id":2570,"parameterSlots":2,"returnSlots":1},"@getDataBatch_126":{"entryPoint":5389,"id":126,"parameterSlots":1,"returnSlots":1},"@getDataForTokenId_2518":{"entryPoint":2222,"id":2518,"parameterSlots":2,"returnSlots":1},"@getData_79":{"entryPoint":2808,"id":79,"parameterSlots":1,"returnSlots":1},"@getOperatorsOf_2938":{"entryPoint":2666,"id":2938,"parameterSlots":1,"returnSlots":1},"@isOperatorFor_2917":{"entryPoint":2637,"id":2917,"parameterSlots":2,"returnSlots":1},"@length_4276":{"entryPoint":8212,"id":4276,"parameterSlots":1,"returnSlots":1},"@length_4424":{"entryPoint":11208,"id":4424,"parameterSlots":1,"returnSlots":1},"@mint_3771":{"entryPoint":4664,"id":3771,"parameterSlots":4,"returnSlots":0},"@notifyUniversalReceiver_749":{"entryPoint":10828,"id":749,"parameterSlots":3,"returnSlots":0},"@owner_316":{"entryPoint":4268,"id":316,"parameterSlots":0,"returnSlots":1},"@remove_4243":{"entryPoint":10239,"id":4243,"parameterSlots":2,"returnSlots":1},"@remove_4382":{"entryPoint":11019,"id":4382,"parameterSlots":2,"returnSlots":1},"@renounceOwnership_338":{"entryPoint":3286,"id":338,"parameterSlots":0,"returnSlots":0},"@revokeOperator_2896":{"entryPoint":4974,"id":2896,"parameterSlots":4,"returnSlots":0},"@setDataBatchForTokenIds_2657":{"entryPoint":4690,"id":2657,"parameterSlots":3,"returnSlots":0},"@setDataBatch_215":{"entryPoint":4309,"id":215,"parameterSlots":2,"returnSlots":0},"@setDataForTokenId_2590":{"entryPoint":4950,"id":2590,"parameterSlots":3,"returnSlots":0},"@setData_151":{"entryPoint":3582,"id":151,"parameterSlots":2,"returnSlots":0},"@supportsERC165InterfaceUnchecked_3989":{"entryPoint":9676,"id":3989,"parameterSlots":2,"returnSlots":1},"@supportsInterface_2329":{"entryPoint":2109,"id":2329,"parameterSlots":1,"returnSlots":1},"@supportsInterface_269":{"entryPoint":9579,"id":269,"parameterSlots":1,"returnSlots":1},"@supportsInterface_3795":{"entryPoint":11067,"id":3795,"parameterSlots":1,"returnSlots":1},"@supportsInterface_565":{"entryPoint":6616,"id":565,"parameterSlots":1,"returnSlots":1},"@tokenIdsOf_2501":{"entryPoint":4584,"id":2501,"parameterSlots":1,"returnSlots":1},"@tokenOwnerOf_2484":{"entryPoint":2457,"id":2484,"parameterSlots":1,"returnSlots":1},"@totalSupply_2438":{"entryPoint":2242,"id":2438,"parameterSlots":0,"returnSlots":1},"@transferBatch_3081":{"entryPoint":3306,"id":3081,"parameterSlots":5,"returnSlots":0},"@transferOwnership_362":{"entryPoint":5566,"id":362,"parameterSlots":1,"returnSlots":0},"@transfer_3001":{"entryPoint":2711,"id":3001,"parameterSlots":5,"returnSlots":0},"@values_4324":{"entryPoint":8559,"id":4324,"parameterSlots":1,"returnSlots":1},"@values_4481":{"entryPoint":7209,"id":4481,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":14310,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_array$_t_bool_$dyn_memory_ptr":{"entryPoint":14505,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":12650,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":14700,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":13790,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr_fromMemory":{"entryPoint":18051,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":13383,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":14415,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_bool_$dyn_memory_ptr":{"entryPoint":14610,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":12755,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr":{"entryPoint":14058,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":14835,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":13715,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":12183,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":12030,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":13856,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr_fromMemory":{"entryPoint":18117,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":14221,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_bytes32t_boolt_bytes_memory_ptr":{"entryPoint":13902,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_bytes32":{"entryPoint":13404,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_bytes32t_boolt_bytes_memory_ptr":{"entryPoint":15691,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bytes32t_bytes_memory_ptr":{"entryPoint":15236,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bool_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":14881,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":16100,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":12801,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":15822,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":15347,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr":{"entryPoint":14144,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":13223,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_bytes32":{"entryPoint":12204,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_bytes32t_bytes_memory_ptr":{"entryPoint":15989,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bytes32t_bytes_memory_ptr":{"entryPoint":15144,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":12051,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes_memory_ptr_fromMemory":{"entryPoint":18163,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_address_to_t_address":{"entryPoint":13527,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_bytes32_to_t_bytes32":{"entryPoint":15526,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr":{"entryPoint":13039,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address":{"entryPoint":13512,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":13318,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack":{"entryPoint":16312,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":13564,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack":{"entryPoint":15563,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":13072,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":12108,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes10_to_t_bytes10_nonPadded_inplace_fromStack":{"entryPoint":17685,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes20_to_t_bytes20_nonPadded_inplace_fromStack":{"entryPoint":17795,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes2_to_t_bytes2_nonPadded_inplace_fromStack":{"entryPoint":17762,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32":{"entryPoint":15511,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":16546,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack":{"entryPoint":17147,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes4_to_t_bytes4_fromStack":{"entryPoint":16173,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":11862,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":16226,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr":{"entryPoint":12982,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":12330,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":16427,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c_to_t_bytes_memory_ptr_fromStack":{"entryPoint":11763,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":12431,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack":{"entryPoint":16345,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes10_t_bytes2_t_bytes20__to_t_bytes10_t_bytes2_t_bytes20__nonPadded_inplace_fromStack_reversed":{"entryPoint":17818,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_packed_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":17170,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":16743,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_calldata_ptr_t_address_t_uint256__to_t_bytes_memory_ptr_t_address_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":16368,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":16476,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":13333,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_address_t_bytes32_t_bytes_memory_ptr__to_t_address_t_address_t_address_t_bytes32_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":17373,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_bool_t_bytes_memory_ptr__to_t_address_t_bool_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":17311,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed":{"entryPoint":16823,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32_t_address__to_t_address_t_bytes32_t_address__fromStack_reversed":{"entryPoint":16768,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32_t_bool_t_bytes_memory_ptr__to_t_address_t_bytes32_t_bool_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":16864,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":13658,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":15657,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":13189,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":12123,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":17583,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":16561,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed":{"entryPoint":16588,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":18003,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed":{"entryPoint":16188,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":11907,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":12387,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":11798,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":12446,"id":null,"parameterSlots":2,"returnSlots":1},"access_calldata_tail_t_bytes_calldata_ptr":{"entryPoint":16644,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":12574,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":11943,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":14266,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_array$_t_bool_$dyn_memory_ptr":{"entryPoint":14461,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":12601,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":14656,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":13741,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":13496,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":15495,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":12949,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_bytes_memory_ptr":{"entryPoint":16940,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":13468,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":15467,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":12921,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":12268,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":13551,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":15550,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":13059,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":13479,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack":{"entryPoint":15478,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":12932,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr":{"entryPoint":12965,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":11737,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":16215,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":18236,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":13300,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":12096,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes10":{"entryPoint":17631,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes2":{"entryPoint":17708,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes20":{"entryPoint":16956,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":12150,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":11963,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":13268,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":12421,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes20":{"entryPoint":17034,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":17900,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":11830,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":12279,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":17261,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":12525,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":17510,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_address":{"entryPoint":16294,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_bytes10":{"entryPoint":17675,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_bytes2":{"entryPoint":17752,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_bytes20":{"entryPoint":17785,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_bytes32":{"entryPoint":17137,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint160":{"entryPoint":16276,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint256":{"entryPoint":16335,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":17463,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":17214,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":18288,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":16499,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":12478,"id":null,"parameterSlots":0,"returnSlots":0},"read_from_memoryt_bytes20":{"entryPoint":17000,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bytes32":{"entryPoint":17879,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":14053,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":12473,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a":{"entryPoint":16634,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad":{"entryPoint":16629,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":12645,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e":{"entryPoint":16639,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":13736,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":11958,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":11953,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":11845,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_96":{"entryPoint":16263,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":17021,"id":null,"parameterSlots":2,"returnSlots":1},"store_literal_in_memory_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c":{"entryPoint":11754,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":13360,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":13692,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":12160,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":12007,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:49724:29","statements":[{"body":{"nodeType":"YulBlock","src":"102:73:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"119:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"124:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"112:6:29"},"nodeType":"YulFunctionCall","src":"112:19:29"},"nodeType":"YulExpressionStatement","src":"112:19:29"},{"nodeType":"YulAssignment","src":"140:29:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"159:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"164:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"155:3:29"},"nodeType":"YulFunctionCall","src":"155:14:29"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"140:11:29"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"74:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"79:6:29","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"90:11:29","type":""}],"src":"7:168:29"},{"body":{"nodeType":"YulBlock","src":"287:108:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"309:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"317:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"305:3:29"},"nodeType":"YulFunctionCall","src":"305:14:29"},{"kind":"number","nodeType":"YulLiteral","src":"321:66:29","type":"","value":"0x0000000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"298:6:29"},"nodeType":"YulFunctionCall","src":"298:90:29"},"nodeType":"YulExpressionStatement","src":"298:90:29"}]},"name":"store_literal_in_memory_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"279:6:29","type":""}],"src":"181:214:29"},{"body":{"nodeType":"YulBlock","src":"546:218:29","statements":[{"nodeType":"YulAssignment","src":"556:72:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"621:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"626:1:29","type":"","value":"4"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"563:57:29"},"nodeType":"YulFunctionCall","src":"563:65:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"556:3:29"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"726:3:29"}],"functionName":{"name":"store_literal_in_memory_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c","nodeType":"YulIdentifier","src":"637:88:29"},"nodeType":"YulFunctionCall","src":"637:93:29"},"nodeType":"YulExpressionStatement","src":"637:93:29"},{"nodeType":"YulAssignment","src":"739:19:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"750:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"755:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"746:3:29"},"nodeType":"YulFunctionCall","src":"746:12:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"739:3:29"}]}]},"name":"abi_encode_t_stringliteral_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"534:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"542:3:29","type":""}],"src":"401:363:29"},{"body":{"nodeType":"YulBlock","src":"940:247:29","statements":[{"nodeType":"YulAssignment","src":"950:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"962:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"973:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"958:3:29"},"nodeType":"YulFunctionCall","src":"958:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"950:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"997:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1008:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"993:3:29"},"nodeType":"YulFunctionCall","src":"993:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1016:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"1022:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1012:3:29"},"nodeType":"YulFunctionCall","src":"1012:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"986:6:29"},"nodeType":"YulFunctionCall","src":"986:47:29"},"nodeType":"YulExpressionStatement","src":"986:47:29"},{"nodeType":"YulAssignment","src":"1042:138:29","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1175:4:29"}],"functionName":{"name":"abi_encode_t_stringliteral_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1050:123:29"},"nodeType":"YulFunctionCall","src":"1050:130:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1042:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"920:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"935:4:29","type":""}],"src":"770:417:29"},{"body":{"nodeType":"YulBlock","src":"1244:103:29","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1267:3:29"},{"name":"src","nodeType":"YulIdentifier","src":"1272:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"1277:6:29"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"1254:12:29"},"nodeType":"YulFunctionCall","src":"1254:30:29"},"nodeType":"YulExpressionStatement","src":"1254:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1325:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"1330:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1321:3:29"},"nodeType":"YulFunctionCall","src":"1321:16:29"},{"kind":"number","nodeType":"YulLiteral","src":"1339:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1314:6:29"},"nodeType":"YulFunctionCall","src":"1314:27:29"},"nodeType":"YulExpressionStatement","src":"1314:27:29"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1226:3:29","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1231:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"1236:6:29","type":""}],"src":"1193:154:29"},{"body":{"nodeType":"YulBlock","src":"1401:54:29","statements":[{"nodeType":"YulAssignment","src":"1411:38:29","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1429:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"1436:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1425:3:29"},"nodeType":"YulFunctionCall","src":"1425:14:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1445:2:29","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1441:3:29"},"nodeType":"YulFunctionCall","src":"1441:7:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1421:3:29"},"nodeType":"YulFunctionCall","src":"1421:28:29"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1411:6:29"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1384:5:29","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1394:6:29","type":""}],"src":"1353:102:29"},{"body":{"nodeType":"YulBlock","src":"1583:201:29","statements":[{"nodeType":"YulAssignment","src":"1593:77:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1658:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"1663:6:29"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1600:57:29"},"nodeType":"YulFunctionCall","src":"1600:70:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1593:3:29"}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1704:5:29"},{"name":"pos","nodeType":"YulIdentifier","src":"1711:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"1716:6:29"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"1680:23:29"},"nodeType":"YulFunctionCall","src":"1680:43:29"},"nodeType":"YulExpressionStatement","src":"1680:43:29"},{"nodeType":"YulAssignment","src":"1732:46:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1743:3:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1770:6:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1748:21:29"},"nodeType":"YulFunctionCall","src":"1748:29:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1739:3:29"},"nodeType":"YulFunctionCall","src":"1739:39:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1732:3:29"}]}]},"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"1556:5:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"1563:6:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1571:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1579:3:29","type":""}],"src":"1483:301:29"},{"body":{"nodeType":"YulBlock","src":"1916:203:29","statements":[{"nodeType":"YulAssignment","src":"1926:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1938:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1949:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1934:3:29"},"nodeType":"YulFunctionCall","src":"1934:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1926:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1973:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1984:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1969:3:29"},"nodeType":"YulFunctionCall","src":"1969:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1992:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"1998:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1988:3:29"},"nodeType":"YulFunctionCall","src":"1988:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1962:6:29"},"nodeType":"YulFunctionCall","src":"1962:47:29"},"nodeType":"YulExpressionStatement","src":"1962:47:29"},{"nodeType":"YulAssignment","src":"2018:94:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2090:6:29"},{"name":"value1","nodeType":"YulIdentifier","src":"2098:6:29"},{"name":"tail","nodeType":"YulIdentifier","src":"2107:4:29"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2026:63:29"},"nodeType":"YulFunctionCall","src":"2026:86:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2018:4:29"}]}]},"name":"abi_encode_tuple_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1880:9:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1892:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1900:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1911:4:29","type":""}],"src":"1790:329:29"},{"body":{"nodeType":"YulBlock","src":"2165:35:29","statements":[{"nodeType":"YulAssignment","src":"2175:19:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2191:2:29","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2185:5:29"},"nodeType":"YulFunctionCall","src":"2185:9:29"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2175:6:29"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2158:6:29","type":""}],"src":"2125:75:29"},{"body":{"nodeType":"YulBlock","src":"2295:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2312:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2315:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2305:6:29"},"nodeType":"YulFunctionCall","src":"2305:12:29"},"nodeType":"YulExpressionStatement","src":"2305:12:29"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"2206:117:29"},{"body":{"nodeType":"YulBlock","src":"2418:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2435:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2438:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2428:6:29"},"nodeType":"YulFunctionCall","src":"2428:12:29"},"nodeType":"YulExpressionStatement","src":"2428:12:29"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"2329:117:29"},{"body":{"nodeType":"YulBlock","src":"2496:105:29","statements":[{"nodeType":"YulAssignment","src":"2506:89:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2521:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"2528:66:29","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2517:3:29"},"nodeType":"YulFunctionCall","src":"2517:78:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2506:7:29"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2478:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2488:7:29","type":""}],"src":"2452:149:29"},{"body":{"nodeType":"YulBlock","src":"2649:78:29","statements":[{"body":{"nodeType":"YulBlock","src":"2705:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2714:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2717:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2707:6:29"},"nodeType":"YulFunctionCall","src":"2707:12:29"},"nodeType":"YulExpressionStatement","src":"2707:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2672:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2696:5:29"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"2679:16:29"},"nodeType":"YulFunctionCall","src":"2679:23:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2669:2:29"},"nodeType":"YulFunctionCall","src":"2669:34:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2662:6:29"},"nodeType":"YulFunctionCall","src":"2662:42:29"},"nodeType":"YulIf","src":"2659:62:29"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2642:5:29","type":""}],"src":"2607:120:29"},{"body":{"nodeType":"YulBlock","src":"2784:86:29","statements":[{"nodeType":"YulAssignment","src":"2794:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2816:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2803:12:29"},"nodeType":"YulFunctionCall","src":"2803:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2794:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2858:5:29"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"2832:25:29"},"nodeType":"YulFunctionCall","src":"2832:32:29"},"nodeType":"YulExpressionStatement","src":"2832:32:29"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2762:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"2770:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2778:5:29","type":""}],"src":"2733:137:29"},{"body":{"nodeType":"YulBlock","src":"2941:262:29","statements":[{"body":{"nodeType":"YulBlock","src":"2987:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2989:77:29"},"nodeType":"YulFunctionCall","src":"2989:79:29"},"nodeType":"YulExpressionStatement","src":"2989:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2962:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"2971:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2958:3:29"},"nodeType":"YulFunctionCall","src":"2958:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"2983:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2954:3:29"},"nodeType":"YulFunctionCall","src":"2954:32:29"},"nodeType":"YulIf","src":"2951:119:29"},{"nodeType":"YulBlock","src":"3080:116:29","statements":[{"nodeType":"YulVariableDeclaration","src":"3095:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"3109:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3099:6:29","type":""}]},{"nodeType":"YulAssignment","src":"3124:62:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3158:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"3169:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3154:3:29"},"nodeType":"YulFunctionCall","src":"3154:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3178:7:29"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"3134:19:29"},"nodeType":"YulFunctionCall","src":"3134:52:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3124:6:29"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2911:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2922:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2934:6:29","type":""}],"src":"2876:327:29"},{"body":{"nodeType":"YulBlock","src":"3251:48:29","statements":[{"nodeType":"YulAssignment","src":"3261:32:29","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3286:5:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3279:6:29"},"nodeType":"YulFunctionCall","src":"3279:13:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3272:6:29"},"nodeType":"YulFunctionCall","src":"3272:21:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3261:7:29"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3233:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3243:7:29","type":""}],"src":"3209:90:29"},{"body":{"nodeType":"YulBlock","src":"3364:50:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3381:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3401:5:29"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3386:14:29"},"nodeType":"YulFunctionCall","src":"3386:21:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3374:6:29"},"nodeType":"YulFunctionCall","src":"3374:34:29"},"nodeType":"YulExpressionStatement","src":"3374:34:29"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3352:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3359:3:29","type":""}],"src":"3305:109:29"},{"body":{"nodeType":"YulBlock","src":"3512:118:29","statements":[{"nodeType":"YulAssignment","src":"3522:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3534:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3545:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3530:3:29"},"nodeType":"YulFunctionCall","src":"3530:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3522:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3596:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3609:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3620:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3605:3:29"},"nodeType":"YulFunctionCall","src":"3605:17:29"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3558:37:29"},"nodeType":"YulFunctionCall","src":"3558:65:29"},"nodeType":"YulExpressionStatement","src":"3558:65:29"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3484:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3496:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3507:4:29","type":""}],"src":"3420:210:29"},{"body":{"nodeType":"YulBlock","src":"3681:32:29","statements":[{"nodeType":"YulAssignment","src":"3691:16:29","value":{"name":"value","nodeType":"YulIdentifier","src":"3702:5:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3691:7:29"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3663:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3673:7:29","type":""}],"src":"3636:77:29"},{"body":{"nodeType":"YulBlock","src":"3762:79:29","statements":[{"body":{"nodeType":"YulBlock","src":"3819:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3828:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3831:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3821:6:29"},"nodeType":"YulFunctionCall","src":"3821:12:29"},"nodeType":"YulExpressionStatement","src":"3821:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3785:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3810:5:29"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"3792:17:29"},"nodeType":"YulFunctionCall","src":"3792:24:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3782:2:29"},"nodeType":"YulFunctionCall","src":"3782:35:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3775:6:29"},"nodeType":"YulFunctionCall","src":"3775:43:29"},"nodeType":"YulIf","src":"3772:63:29"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3755:5:29","type":""}],"src":"3719:122:29"},{"body":{"nodeType":"YulBlock","src":"3899:87:29","statements":[{"nodeType":"YulAssignment","src":"3909:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3931:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3918:12:29"},"nodeType":"YulFunctionCall","src":"3918:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3909:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3974:5:29"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"3947:26:29"},"nodeType":"YulFunctionCall","src":"3947:33:29"},"nodeType":"YulExpressionStatement","src":"3947:33:29"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3877:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"3885:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3893:5:29","type":""}],"src":"3847:139:29"},{"body":{"nodeType":"YulBlock","src":"4075:391:29","statements":[{"body":{"nodeType":"YulBlock","src":"4121:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4123:77:29"},"nodeType":"YulFunctionCall","src":"4123:79:29"},"nodeType":"YulExpressionStatement","src":"4123:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4096:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"4105:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4092:3:29"},"nodeType":"YulFunctionCall","src":"4092:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"4117:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4088:3:29"},"nodeType":"YulFunctionCall","src":"4088:32:29"},"nodeType":"YulIf","src":"4085:119:29"},{"nodeType":"YulBlock","src":"4214:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"4229:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"4243:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4233:6:29","type":""}]},{"nodeType":"YulAssignment","src":"4258:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4293:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"4304:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4289:3:29"},"nodeType":"YulFunctionCall","src":"4289:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4313:7:29"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"4268:20:29"},"nodeType":"YulFunctionCall","src":"4268:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4258:6:29"}]}]},{"nodeType":"YulBlock","src":"4341:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"4356:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"4370:2:29","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4360:6:29","type":""}]},{"nodeType":"YulAssignment","src":"4386:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4421:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"4432:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4417:3:29"},"nodeType":"YulFunctionCall","src":"4417:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4441:7:29"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"4396:20:29"},"nodeType":"YulFunctionCall","src":"4396:53:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4386:6:29"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4037:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4048:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4060:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4068:6:29","type":""}],"src":"3992:474:29"},{"body":{"nodeType":"YulBlock","src":"4530:40:29","statements":[{"nodeType":"YulAssignment","src":"4541:22:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4557:5:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4551:5:29"},"nodeType":"YulFunctionCall","src":"4551:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4541:6:29"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4513:5:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4523:6:29","type":""}],"src":"4472:98:29"},{"body":{"nodeType":"YulBlock","src":"4625:258:29","statements":[{"nodeType":"YulVariableDeclaration","src":"4635:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"4644:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4639:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"4704:63:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4729:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"4734:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4725:3:29"},"nodeType":"YulFunctionCall","src":"4725:11:29"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4748:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"4753:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4744:3:29"},"nodeType":"YulFunctionCall","src":"4744:11:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4738:5:29"},"nodeType":"YulFunctionCall","src":"4738:18:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4718:6:29"},"nodeType":"YulFunctionCall","src":"4718:39:29"},"nodeType":"YulExpressionStatement","src":"4718:39:29"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4665:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"4668:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4662:2:29"},"nodeType":"YulFunctionCall","src":"4662:13:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4676:19:29","statements":[{"nodeType":"YulAssignment","src":"4678:15:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4687:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"4690:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4683:3:29"},"nodeType":"YulFunctionCall","src":"4683:10:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4678:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"4658:3:29","statements":[]},"src":"4654:113:29"},{"body":{"nodeType":"YulBlock","src":"4801:76:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4851:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"4856:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4847:3:29"},"nodeType":"YulFunctionCall","src":"4847:16:29"},{"kind":"number","nodeType":"YulLiteral","src":"4865:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4840:6:29"},"nodeType":"YulFunctionCall","src":"4840:27:29"},"nodeType":"YulExpressionStatement","src":"4840:27:29"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4782:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"4785:6:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4779:2:29"},"nodeType":"YulFunctionCall","src":"4779:13:29"},"nodeType":"YulIf","src":"4776:101:29"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4607:3:29","type":""},{"name":"dst","nodeType":"YulTypedName","src":"4612:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"4617:6:29","type":""}],"src":"4576:307:29"},{"body":{"nodeType":"YulBlock","src":"4979:270:29","statements":[{"nodeType":"YulVariableDeclaration","src":"4989:52:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5035:5:29"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"5003:31:29"},"nodeType":"YulFunctionCall","src":"5003:38:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4993:6:29","type":""}]},{"nodeType":"YulAssignment","src":"5050:77:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5115:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"5120:6:29"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5057:57:29"},"nodeType":"YulFunctionCall","src":"5057:70:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5050:3:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5162:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"5169:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5158:3:29"},"nodeType":"YulFunctionCall","src":"5158:16:29"},{"name":"pos","nodeType":"YulIdentifier","src":"5176:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"5181:6:29"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"5136:21:29"},"nodeType":"YulFunctionCall","src":"5136:52:29"},"nodeType":"YulExpressionStatement","src":"5136:52:29"},{"nodeType":"YulAssignment","src":"5197:46:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5208:3:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5235:6:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5213:21:29"},"nodeType":"YulFunctionCall","src":"5213:29:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5204:3:29"},"nodeType":"YulFunctionCall","src":"5204:39:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5197:3:29"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4960:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4967:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4975:3:29","type":""}],"src":"4889:360:29"},{"body":{"nodeType":"YulBlock","src":"5371:193:29","statements":[{"nodeType":"YulAssignment","src":"5381:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5393:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5404:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5389:3:29"},"nodeType":"YulFunctionCall","src":"5389:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5381:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5428:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5439:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5424:3:29"},"nodeType":"YulFunctionCall","src":"5424:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5447:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"5453:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5443:3:29"},"nodeType":"YulFunctionCall","src":"5443:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5417:6:29"},"nodeType":"YulFunctionCall","src":"5417:47:29"},"nodeType":"YulExpressionStatement","src":"5417:47:29"},{"nodeType":"YulAssignment","src":"5473:84:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5543:6:29"},{"name":"tail","nodeType":"YulIdentifier","src":"5552:4:29"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5481:61:29"},"nodeType":"YulFunctionCall","src":"5481:76:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5473:4:29"}]}]},"name":"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5343:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5355:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5366:4:29","type":""}],"src":"5255:309:29"},{"body":{"nodeType":"YulBlock","src":"5615:32:29","statements":[{"nodeType":"YulAssignment","src":"5625:16:29","value":{"name":"value","nodeType":"YulIdentifier","src":"5636:5:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5625:7:29"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5597:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5607:7:29","type":""}],"src":"5570:77:29"},{"body":{"nodeType":"YulBlock","src":"5718:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5735:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5758:5:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5740:17:29"},"nodeType":"YulFunctionCall","src":"5740:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5728:6:29"},"nodeType":"YulFunctionCall","src":"5728:37:29"},"nodeType":"YulExpressionStatement","src":"5728:37:29"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5706:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5713:3:29","type":""}],"src":"5653:118:29"},{"body":{"nodeType":"YulBlock","src":"5875:124:29","statements":[{"nodeType":"YulAssignment","src":"5885:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5897:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5908:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5893:3:29"},"nodeType":"YulFunctionCall","src":"5893:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5885:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5965:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5978:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5989:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5974:3:29"},"nodeType":"YulFunctionCall","src":"5974:17:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5921:43:29"},"nodeType":"YulFunctionCall","src":"5921:71:29"},"nodeType":"YulExpressionStatement","src":"5921:71:29"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5847:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5859:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5870:4:29","type":""}],"src":"5777:222:29"},{"body":{"nodeType":"YulBlock","src":"6094:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6111:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6114:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6104:6:29"},"nodeType":"YulFunctionCall","src":"6104:12:29"},"nodeType":"YulExpressionStatement","src":"6104:12:29"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"6005:117:29"},{"body":{"nodeType":"YulBlock","src":"6156:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6173:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6176:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6166:6:29"},"nodeType":"YulFunctionCall","src":"6166:88:29"},"nodeType":"YulExpressionStatement","src":"6166:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6270:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6273:4:29","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6263:6:29"},"nodeType":"YulFunctionCall","src":"6263:15:29"},"nodeType":"YulExpressionStatement","src":"6263:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6294:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6297:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6287:6:29"},"nodeType":"YulFunctionCall","src":"6287:15:29"},"nodeType":"YulExpressionStatement","src":"6287:15:29"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"6128:180:29"},{"body":{"nodeType":"YulBlock","src":"6357:238:29","statements":[{"nodeType":"YulVariableDeclaration","src":"6367:58:29","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6389:6:29"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"6419:4:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6397:21:29"},"nodeType":"YulFunctionCall","src":"6397:27:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6385:3:29"},"nodeType":"YulFunctionCall","src":"6385:40:29"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"6371:10:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"6536:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6538:16:29"},"nodeType":"YulFunctionCall","src":"6538:18:29"},"nodeType":"YulExpressionStatement","src":"6538:18:29"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6479:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"6491:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6476:2:29"},"nodeType":"YulFunctionCall","src":"6476:34:29"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6515:10:29"},{"name":"memPtr","nodeType":"YulIdentifier","src":"6527:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6512:2:29"},"nodeType":"YulFunctionCall","src":"6512:22:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6473:2:29"},"nodeType":"YulFunctionCall","src":"6473:62:29"},"nodeType":"YulIf","src":"6470:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6574:2:29","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6578:10:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6567:6:29"},"nodeType":"YulFunctionCall","src":"6567:22:29"},"nodeType":"YulExpressionStatement","src":"6567:22:29"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6343:6:29","type":""},{"name":"size","nodeType":"YulTypedName","src":"6351:4:29","type":""}],"src":"6314:281:29"},{"body":{"nodeType":"YulBlock","src":"6642:88:29","statements":[{"nodeType":"YulAssignment","src":"6652:30:29","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"6662:18:29"},"nodeType":"YulFunctionCall","src":"6662:20:29"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6652:6:29"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6711:6:29"},{"name":"size","nodeType":"YulIdentifier","src":"6719:4:29"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"6691:19:29"},"nodeType":"YulFunctionCall","src":"6691:33:29"},"nodeType":"YulExpressionStatement","src":"6691:33:29"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"6626:4:29","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"6635:6:29","type":""}],"src":"6601:129:29"},{"body":{"nodeType":"YulBlock","src":"6818:229:29","statements":[{"body":{"nodeType":"YulBlock","src":"6923:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6925:16:29"},"nodeType":"YulFunctionCall","src":"6925:18:29"},"nodeType":"YulExpressionStatement","src":"6925:18:29"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6895:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"6903:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6892:2:29"},"nodeType":"YulFunctionCall","src":"6892:30:29"},"nodeType":"YulIf","src":"6889:56:29"},{"nodeType":"YulAssignment","src":"6955:25:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6967:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"6975:4:29","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6963:3:29"},"nodeType":"YulFunctionCall","src":"6963:17:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6955:4:29"}]},{"nodeType":"YulAssignment","src":"7017:23:29","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7029:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"7035:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7025:3:29"},"nodeType":"YulFunctionCall","src":"7025:15:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"7017:4:29"}]}]},"name":"array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"6802:6:29","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"6813:4:29","type":""}],"src":"6736:311:29"},{"body":{"nodeType":"YulBlock","src":"7142:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7159:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7162:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7152:6:29"},"nodeType":"YulFunctionCall","src":"7152:12:29"},"nodeType":"YulExpressionStatement","src":"7152:12:29"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"7053:117:29"},{"body":{"nodeType":"YulBlock","src":"7295:608:29","statements":[{"nodeType":"YulAssignment","src":"7305:90:29","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7387:6:29"}],"functionName":{"name":"array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7330:56:29"},"nodeType":"YulFunctionCall","src":"7330:64:29"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"7314:15:29"},"nodeType":"YulFunctionCall","src":"7314:81:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7305:5:29"}]},{"nodeType":"YulVariableDeclaration","src":"7404:16:29","value":{"name":"array","nodeType":"YulIdentifier","src":"7415:5:29"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"7408:3:29","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7437:5:29"},{"name":"length","nodeType":"YulIdentifier","src":"7444:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7430:6:29"},"nodeType":"YulFunctionCall","src":"7430:21:29"},"nodeType":"YulExpressionStatement","src":"7430:21:29"},{"nodeType":"YulAssignment","src":"7460:23:29","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7471:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"7478:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7467:3:29"},"nodeType":"YulFunctionCall","src":"7467:16:29"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"7460:3:29"}]},{"nodeType":"YulVariableDeclaration","src":"7493:44:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7511:6:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7523:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"7531:4:29","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7519:3:29"},"nodeType":"YulFunctionCall","src":"7519:17:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7507:3:29"},"nodeType":"YulFunctionCall","src":"7507:30:29"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"7497:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"7565:103:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"7579:77:29"},"nodeType":"YulFunctionCall","src":"7579:79:29"},"nodeType":"YulExpressionStatement","src":"7579:79:29"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"7552:6:29"},{"name":"end","nodeType":"YulIdentifier","src":"7560:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7549:2:29"},"nodeType":"YulFunctionCall","src":"7549:15:29"},"nodeType":"YulIf","src":"7546:122:29"},{"body":{"nodeType":"YulBlock","src":"7753:144:29","statements":[{"nodeType":"YulVariableDeclaration","src":"7768:21:29","value":{"name":"src","nodeType":"YulIdentifier","src":"7786:3:29"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"7772:10:29","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7810:3:29"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"7836:10:29"},{"name":"end","nodeType":"YulIdentifier","src":"7848:3:29"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"7815:20:29"},"nodeType":"YulFunctionCall","src":"7815:37:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7803:6:29"},"nodeType":"YulFunctionCall","src":"7803:50:29"},"nodeType":"YulExpressionStatement","src":"7803:50:29"},{"nodeType":"YulAssignment","src":"7866:21:29","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7877:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"7882:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7873:3:29"},"nodeType":"YulFunctionCall","src":"7873:14:29"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"7866:3:29"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7706:3:29"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"7711:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7703:2:29"},"nodeType":"YulFunctionCall","src":"7703:15:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7719:25:29","statements":[{"nodeType":"YulAssignment","src":"7721:21:29","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7732:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"7737:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7728:3:29"},"nodeType":"YulFunctionCall","src":"7728:14:29"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"7721:3:29"}]}]},"pre":{"nodeType":"YulBlock","src":"7681:21:29","statements":[{"nodeType":"YulVariableDeclaration","src":"7683:17:29","value":{"name":"offset","nodeType":"YulIdentifier","src":"7694:6:29"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"7687:3:29","type":""}]}]},"src":"7677:220:29"}]},"name":"abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7265:6:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"7273:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"7281:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7289:5:29","type":""}],"src":"7193:710:29"},{"body":{"nodeType":"YulBlock","src":"8003:293:29","statements":[{"body":{"nodeType":"YulBlock","src":"8052:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8054:77:29"},"nodeType":"YulFunctionCall","src":"8054:79:29"},"nodeType":"YulExpressionStatement","src":"8054:79:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8031:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"8039:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8027:3:29"},"nodeType":"YulFunctionCall","src":"8027:17:29"},{"name":"end","nodeType":"YulIdentifier","src":"8046:3:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8023:3:29"},"nodeType":"YulFunctionCall","src":"8023:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8016:6:29"},"nodeType":"YulFunctionCall","src":"8016:35:29"},"nodeType":"YulIf","src":"8013:122:29"},{"nodeType":"YulVariableDeclaration","src":"8144:34:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8171:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8158:12:29"},"nodeType":"YulFunctionCall","src":"8158:20:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8148:6:29","type":""}]},{"nodeType":"YulAssignment","src":"8187:103:29","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8263:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"8271:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8259:3:29"},"nodeType":"YulFunctionCall","src":"8259:17:29"},{"name":"length","nodeType":"YulIdentifier","src":"8278:6:29"},{"name":"end","nodeType":"YulIdentifier","src":"8286:3:29"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8196:62:29"},"nodeType":"YulFunctionCall","src":"8196:94:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8187:5:29"}]}]},"name":"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7981:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"7989:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7997:5:29","type":""}],"src":"7926:370:29"},{"body":{"nodeType":"YulBlock","src":"8435:761:29","statements":[{"body":{"nodeType":"YulBlock","src":"8481:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8483:77:29"},"nodeType":"YulFunctionCall","src":"8483:79:29"},"nodeType":"YulExpressionStatement","src":"8483:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8456:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"8465:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8452:3:29"},"nodeType":"YulFunctionCall","src":"8452:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"8477:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8448:3:29"},"nodeType":"YulFunctionCall","src":"8448:32:29"},"nodeType":"YulIf","src":"8445:119:29"},{"nodeType":"YulBlock","src":"8574:302:29","statements":[{"nodeType":"YulVariableDeclaration","src":"8589:45:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8620:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8631:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8616:3:29"},"nodeType":"YulFunctionCall","src":"8616:17:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8603:12:29"},"nodeType":"YulFunctionCall","src":"8603:31:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8593:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"8681:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"8683:77:29"},"nodeType":"YulFunctionCall","src":"8683:79:29"},"nodeType":"YulExpressionStatement","src":"8683:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8653:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"8661:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8650:2:29"},"nodeType":"YulFunctionCall","src":"8650:30:29"},"nodeType":"YulIf","src":"8647:117:29"},{"nodeType":"YulAssignment","src":"8778:88:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8838:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"8849:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8834:3:29"},"nodeType":"YulFunctionCall","src":"8834:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8858:7:29"}],"functionName":{"name":"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8788:45:29"},"nodeType":"YulFunctionCall","src":"8788:78:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8778:6:29"}]}]},{"nodeType":"YulBlock","src":"8886:303:29","statements":[{"nodeType":"YulVariableDeclaration","src":"8901:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8932:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8943:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8928:3:29"},"nodeType":"YulFunctionCall","src":"8928:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8915:12:29"},"nodeType":"YulFunctionCall","src":"8915:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8905:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"8994:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"8996:77:29"},"nodeType":"YulFunctionCall","src":"8996:79:29"},"nodeType":"YulExpressionStatement","src":"8996:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8966:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"8974:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8963:2:29"},"nodeType":"YulFunctionCall","src":"8963:30:29"},"nodeType":"YulIf","src":"8960:117:29"},{"nodeType":"YulAssignment","src":"9091:88:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9151:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"9162:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9147:3:29"},"nodeType":"YulFunctionCall","src":"9147:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9171:7:29"}],"functionName":{"name":"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"9101:45:29"},"nodeType":"YulFunctionCall","src":"9101:78:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9091:6:29"}]}]}]},"name":"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8397:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8408:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8420:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8428:6:29","type":""}],"src":"8302:894:29"},{"body":{"nodeType":"YulBlock","src":"9285:40:29","statements":[{"nodeType":"YulAssignment","src":"9296:22:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9312:5:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9306:5:29"},"nodeType":"YulFunctionCall","src":"9306:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"9296:6:29"}]}]},"name":"array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9268:5:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"9278:6:29","type":""}],"src":"9202:123:29"},{"body":{"nodeType":"YulBlock","src":"9451:73:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9468:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"9473:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9461:6:29"},"nodeType":"YulFunctionCall","src":"9461:19:29"},"nodeType":"YulExpressionStatement","src":"9461:19:29"},{"nodeType":"YulAssignment","src":"9489:29:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9508:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"9513:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9504:3:29"},"nodeType":"YulFunctionCall","src":"9504:14:29"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"9489:11:29"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9423:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"9428:6:29","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"9439:11:29","type":""}],"src":"9331:193:29"},{"body":{"nodeType":"YulBlock","src":"9611:60:29","statements":[{"nodeType":"YulAssignment","src":"9621:11:29","value":{"name":"ptr","nodeType":"YulIdentifier","src":"9629:3:29"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"9621:4:29"}]},{"nodeType":"YulAssignment","src":"9642:22:29","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"9654:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"9659:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9650:3:29"},"nodeType":"YulFunctionCall","src":"9650:14:29"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"9642:4:29"}]}]},"name":"array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"9598:3:29","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"9606:4:29","type":""}],"src":"9530:141:29"},{"body":{"nodeType":"YulBlock","src":"9762:73:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9779:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"9784:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9772:6:29"},"nodeType":"YulFunctionCall","src":"9772:19:29"},"nodeType":"YulExpressionStatement","src":"9772:19:29"},{"nodeType":"YulAssignment","src":"9800:29:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9819:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"9824:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9815:3:29"},"nodeType":"YulFunctionCall","src":"9815:14:29"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"9800:11:29"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9734:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"9739:6:29","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"9750:11:29","type":""}],"src":"9677:158:29"},{"body":{"nodeType":"YulBlock","src":"9921:260:29","statements":[{"nodeType":"YulVariableDeclaration","src":"9931:52:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9977:5:29"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9945:31:29"},"nodeType":"YulFunctionCall","src":"9945:38:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9935:6:29","type":""}]},{"nodeType":"YulAssignment","src":"9992:67:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10047:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"10052:6:29"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9999:47:29"},"nodeType":"YulFunctionCall","src":"9999:60:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9992:3:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10094:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"10101:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10090:3:29"},"nodeType":"YulFunctionCall","src":"10090:16:29"},{"name":"pos","nodeType":"YulIdentifier","src":"10108:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"10113:6:29"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"10068:21:29"},"nodeType":"YulFunctionCall","src":"10068:52:29"},"nodeType":"YulExpressionStatement","src":"10068:52:29"},{"nodeType":"YulAssignment","src":"10129:46:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10140:3:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10167:6:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"10145:21:29"},"nodeType":"YulFunctionCall","src":"10145:29:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10136:3:29"},"nodeType":"YulFunctionCall","src":"10136:39:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10129:3:29"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9902:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9909:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9917:3:29","type":""}],"src":"9841:340:29"},{"body":{"nodeType":"YulBlock","src":"10285:94:29","statements":[{"nodeType":"YulAssignment","src":"10295:78:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10361:6:29"},{"name":"pos","nodeType":"YulIdentifier","src":"10369:3:29"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"10309:51:29"},"nodeType":"YulFunctionCall","src":"10309:64:29"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"10295:10:29"}]}]},"name":"abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"10258:6:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10266:3:29","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"10274:10:29","type":""}],"src":"10187:192:29"},{"body":{"nodeType":"YulBlock","src":"10469:38:29","statements":[{"nodeType":"YulAssignment","src":"10479:22:29","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"10491:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"10496:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10487:3:29"},"nodeType":"YulFunctionCall","src":"10487:14:29"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"10479:4:29"}]}]},"name":"array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"10456:3:29","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"10464:4:29","type":""}],"src":"10385:122:29"},{"body":{"nodeType":"YulBlock","src":"10681:841:29","statements":[{"nodeType":"YulVariableDeclaration","src":"10691:77:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10762:5:29"}],"functionName":{"name":"array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10705:56:29"},"nodeType":"YulFunctionCall","src":"10705:63:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"10695:6:29","type":""}]},{"nodeType":"YulAssignment","src":"10777:102:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10867:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"10872:6:29"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10784:82:29"},"nodeType":"YulFunctionCall","src":"10784:95:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10777:3:29"}]},{"nodeType":"YulVariableDeclaration","src":"10888:20:29","value":{"name":"pos","nodeType":"YulIdentifier","src":"10905:3:29"},"variables":[{"name":"headStart","nodeType":"YulTypedName","src":"10892:9:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10917:39:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10933:3:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10942:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"10950:4:29","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"10938:3:29"},"nodeType":"YulFunctionCall","src":"10938:17:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10929:3:29"},"nodeType":"YulFunctionCall","src":"10929:27:29"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"10921:4:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10965:80:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11039:5:29"}],"functionName":{"name":"array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10980:58:29"},"nodeType":"YulFunctionCall","src":"10980:65:29"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"10969:7:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11054:21:29","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"11068:7:29"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"11058:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"11144:333:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11165:3:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11174:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"11180:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11170:3:29"},"nodeType":"YulFunctionCall","src":"11170:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11158:6:29"},"nodeType":"YulFunctionCall","src":"11158:33:29"},"nodeType":"YulExpressionStatement","src":"11158:33:29"},{"nodeType":"YulVariableDeclaration","src":"11204:34:29","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"11231:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11225:5:29"},"nodeType":"YulFunctionCall","src":"11225:13:29"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"11208:13:29","type":""}]},{"nodeType":"YulAssignment","src":"11251:90:29","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"11321:13:29"},{"name":"tail","nodeType":"YulIdentifier","src":"11336:4:29"}],"functionName":{"name":"abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"11259:61:29"},"nodeType":"YulFunctionCall","src":"11259:82:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11251:4:29"}]},{"nodeType":"YulAssignment","src":"11354:79:29","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"11426:6:29"}],"functionName":{"name":"array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"11364:61:29"},"nodeType":"YulFunctionCall","src":"11364:69:29"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"11354:6:29"}]},{"nodeType":"YulAssignment","src":"11446:21:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11457:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"11462:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11453:3:29"},"nodeType":"YulFunctionCall","src":"11453:14:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11446:3:29"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11106:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"11109:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11103:2:29"},"nodeType":"YulFunctionCall","src":"11103:13:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11117:18:29","statements":[{"nodeType":"YulAssignment","src":"11119:14:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11128:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"11131:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11124:3:29"},"nodeType":"YulFunctionCall","src":"11124:9:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"11119:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"11088:14:29","statements":[{"nodeType":"YulVariableDeclaration","src":"11090:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"11099:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"11094:1:29","type":""}]}]},"src":"11084:393:29"},{"nodeType":"YulAssignment","src":"11486:11:29","value":{"name":"tail","nodeType":"YulIdentifier","src":"11493:4:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11486:3:29"}]},{"nodeType":"YulAssignment","src":"11506:10:29","value":{"name":"pos","nodeType":"YulIdentifier","src":"11513:3:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11506:3:29"}]}]},"name":"abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10660:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10667:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10676:3:29","type":""}],"src":"10539:983:29"},{"body":{"nodeType":"YulBlock","src":"11694:243:29","statements":[{"nodeType":"YulAssignment","src":"11704:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11716:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"11727:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11712:3:29"},"nodeType":"YulFunctionCall","src":"11712:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11704:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11751:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"11762:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11747:3:29"},"nodeType":"YulFunctionCall","src":"11747:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11770:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"11776:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11766:3:29"},"nodeType":"YulFunctionCall","src":"11766:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11740:6:29"},"nodeType":"YulFunctionCall","src":"11740:47:29"},"nodeType":"YulExpressionStatement","src":"11740:47:29"},{"nodeType":"YulAssignment","src":"11796:134:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11916:6:29"},{"name":"tail","nodeType":"YulIdentifier","src":"11925:4:29"}],"functionName":{"name":"abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11804:111:29"},"nodeType":"YulFunctionCall","src":"11804:126:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11796:4:29"}]}]},"name":"abi_encode_tuple_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11666:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11678:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11689:4:29","type":""}],"src":"11528:409:29"},{"body":{"nodeType":"YulBlock","src":"12009:263:29","statements":[{"body":{"nodeType":"YulBlock","src":"12055:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12057:77:29"},"nodeType":"YulFunctionCall","src":"12057:79:29"},"nodeType":"YulExpressionStatement","src":"12057:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12030:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"12039:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12026:3:29"},"nodeType":"YulFunctionCall","src":"12026:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"12051:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12022:3:29"},"nodeType":"YulFunctionCall","src":"12022:32:29"},"nodeType":"YulIf","src":"12019:119:29"},{"nodeType":"YulBlock","src":"12148:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"12163:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"12177:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12167:6:29","type":""}]},{"nodeType":"YulAssignment","src":"12192:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12227:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"12238:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12223:3:29"},"nodeType":"YulFunctionCall","src":"12223:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12247:7:29"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"12202:20:29"},"nodeType":"YulFunctionCall","src":"12202:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12192:6:29"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11979:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11990:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12002:6:29","type":""}],"src":"11943:329:29"},{"body":{"nodeType":"YulBlock","src":"12323:81:29","statements":[{"nodeType":"YulAssignment","src":"12333:65:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12348:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"12355:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12344:3:29"},"nodeType":"YulFunctionCall","src":"12344:54:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"12333:7:29"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12305:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"12315:7:29","type":""}],"src":"12278:126:29"},{"body":{"nodeType":"YulBlock","src":"12455:51:29","statements":[{"nodeType":"YulAssignment","src":"12465:35:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12494:5:29"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"12476:17:29"},"nodeType":"YulFunctionCall","src":"12476:24:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"12465:7:29"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12437:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"12447:7:29","type":""}],"src":"12410:96:29"},{"body":{"nodeType":"YulBlock","src":"12577:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12594:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12617:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"12599:17:29"},"nodeType":"YulFunctionCall","src":"12599:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12587:6:29"},"nodeType":"YulFunctionCall","src":"12587:37:29"},"nodeType":"YulExpressionStatement","src":"12587:37:29"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12565:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12572:3:29","type":""}],"src":"12512:118:29"},{"body":{"nodeType":"YulBlock","src":"12734:124:29","statements":[{"nodeType":"YulAssignment","src":"12744:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12756:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"12767:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12752:3:29"},"nodeType":"YulFunctionCall","src":"12752:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12744:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12824:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12837:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"12848:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12833:3:29"},"nodeType":"YulFunctionCall","src":"12833:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12780:43:29"},"nodeType":"YulFunctionCall","src":"12780:71:29"},"nodeType":"YulExpressionStatement","src":"12780:71:29"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12706:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12718:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12729:4:29","type":""}],"src":"12636:222:29"},{"body":{"nodeType":"YulBlock","src":"12907:79:29","statements":[{"body":{"nodeType":"YulBlock","src":"12964:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12973:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12976:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12966:6:29"},"nodeType":"YulFunctionCall","src":"12966:12:29"},"nodeType":"YulExpressionStatement","src":"12966:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12930:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12955:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"12937:17:29"},"nodeType":"YulFunctionCall","src":"12937:24:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12927:2:29"},"nodeType":"YulFunctionCall","src":"12927:35:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12920:6:29"},"nodeType":"YulFunctionCall","src":"12920:43:29"},"nodeType":"YulIf","src":"12917:63:29"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12900:5:29","type":""}],"src":"12864:122:29"},{"body":{"nodeType":"YulBlock","src":"13044:87:29","statements":[{"nodeType":"YulAssignment","src":"13054:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13076:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13063:12:29"},"nodeType":"YulFunctionCall","src":"13063:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"13054:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13119:5:29"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"13092:26:29"},"nodeType":"YulFunctionCall","src":"13092:33:29"},"nodeType":"YulExpressionStatement","src":"13092:33:29"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"13022:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"13030:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"13038:5:29","type":""}],"src":"12992:139:29"},{"body":{"nodeType":"YulBlock","src":"13220:391:29","statements":[{"body":{"nodeType":"YulBlock","src":"13266:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13268:77:29"},"nodeType":"YulFunctionCall","src":"13268:79:29"},"nodeType":"YulExpressionStatement","src":"13268:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13241:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"13250:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13237:3:29"},"nodeType":"YulFunctionCall","src":"13237:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"13262:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13233:3:29"},"nodeType":"YulFunctionCall","src":"13233:32:29"},"nodeType":"YulIf","src":"13230:119:29"},{"nodeType":"YulBlock","src":"13359:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"13374:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"13388:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13378:6:29","type":""}]},{"nodeType":"YulAssignment","src":"13403:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13438:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"13449:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13434:3:29"},"nodeType":"YulFunctionCall","src":"13434:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13458:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"13413:20:29"},"nodeType":"YulFunctionCall","src":"13413:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13403:6:29"}]}]},{"nodeType":"YulBlock","src":"13486:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"13501:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"13515:2:29","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13505:6:29","type":""}]},{"nodeType":"YulAssignment","src":"13531:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13566:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"13577:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13562:3:29"},"nodeType":"YulFunctionCall","src":"13562:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13586:7:29"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"13541:20:29"},"nodeType":"YulFunctionCall","src":"13541:53:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13531:6:29"}]}]}]},"name":"abi_decode_tuple_t_addresst_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13182:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13193:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13205:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13213:6:29","type":""}],"src":"13137:474:29"},{"body":{"nodeType":"YulBlock","src":"13691:40:29","statements":[{"nodeType":"YulAssignment","src":"13702:22:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13718:5:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13712:5:29"},"nodeType":"YulFunctionCall","src":"13712:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"13702:6:29"}]}]},"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13674:5:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"13684:6:29","type":""}],"src":"13617:114:29"},{"body":{"nodeType":"YulBlock","src":"13848:73:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13865:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"13870:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13858:6:29"},"nodeType":"YulFunctionCall","src":"13858:19:29"},"nodeType":"YulExpressionStatement","src":"13858:19:29"},{"nodeType":"YulAssignment","src":"13886:29:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13905:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"13910:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13901:3:29"},"nodeType":"YulFunctionCall","src":"13901:14:29"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"13886:11:29"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13820:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"13825:6:29","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"13836:11:29","type":""}],"src":"13737:184:29"},{"body":{"nodeType":"YulBlock","src":"13999:60:29","statements":[{"nodeType":"YulAssignment","src":"14009:11:29","value":{"name":"ptr","nodeType":"YulIdentifier","src":"14017:3:29"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"14009:4:29"}]},{"nodeType":"YulAssignment","src":"14030:22:29","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"14042:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"14047:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14038:3:29"},"nodeType":"YulFunctionCall","src":"14038:14:29"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"14030:4:29"}]}]},"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"13986:3:29","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"13994:4:29","type":""}],"src":"13927:132:29"},{"body":{"nodeType":"YulBlock","src":"14120:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14137:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14160:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"14142:17:29"},"nodeType":"YulFunctionCall","src":"14142:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14130:6:29"},"nodeType":"YulFunctionCall","src":"14130:37:29"},"nodeType":"YulExpressionStatement","src":"14130:37:29"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14108:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14115:3:29","type":""}],"src":"14065:108:29"},{"body":{"nodeType":"YulBlock","src":"14259:99:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14303:6:29"},{"name":"pos","nodeType":"YulIdentifier","src":"14311:3:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"14269:33:29"},"nodeType":"YulFunctionCall","src":"14269:46:29"},"nodeType":"YulExpressionStatement","src":"14269:46:29"},{"nodeType":"YulAssignment","src":"14324:28:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14342:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"14347:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14338:3:29"},"nodeType":"YulFunctionCall","src":"14338:14:29"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"14324:10:29"}]}]},"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"14232:6:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14240:3:29","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"14248:10:29","type":""}],"src":"14179:179:29"},{"body":{"nodeType":"YulBlock","src":"14439:38:29","statements":[{"nodeType":"YulAssignment","src":"14449:22:29","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"14461:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"14466:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14457:3:29"},"nodeType":"YulFunctionCall","src":"14457:14:29"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"14449:4:29"}]}]},"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"14426:3:29","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"14434:4:29","type":""}],"src":"14364:113:29"},{"body":{"nodeType":"YulBlock","src":"14637:608:29","statements":[{"nodeType":"YulVariableDeclaration","src":"14647:68:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14709:5:29"}],"functionName":{"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"14661:47:29"},"nodeType":"YulFunctionCall","src":"14661:54:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"14651:6:29","type":""}]},{"nodeType":"YulAssignment","src":"14724:93:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14805:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"14810:6:29"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14731:73:29"},"nodeType":"YulFunctionCall","src":"14731:86:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14724:3:29"}]},{"nodeType":"YulVariableDeclaration","src":"14826:71:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14891:5:29"}],"functionName":{"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"14841:49:29"},"nodeType":"YulFunctionCall","src":"14841:56:29"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"14830:7:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14906:21:29","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"14920:7:29"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"14910:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"14996:224:29","statements":[{"nodeType":"YulVariableDeclaration","src":"15010:34:29","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"15037:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15031:5:29"},"nodeType":"YulFunctionCall","src":"15031:13:29"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"15014:13:29","type":""}]},{"nodeType":"YulAssignment","src":"15057:70:29","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"15108:13:29"},{"name":"pos","nodeType":"YulIdentifier","src":"15123:3:29"}],"functionName":{"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulIdentifier","src":"15064:43:29"},"nodeType":"YulFunctionCall","src":"15064:63:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15057:3:29"}]},{"nodeType":"YulAssignment","src":"15140:70:29","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"15203:6:29"}],"functionName":{"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"15150:52:29"},"nodeType":"YulFunctionCall","src":"15150:60:29"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"15140:6:29"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"14958:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"14961:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14955:2:29"},"nodeType":"YulFunctionCall","src":"14955:13:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"14969:18:29","statements":[{"nodeType":"YulAssignment","src":"14971:14:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"14980:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"14983:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14976:3:29"},"nodeType":"YulFunctionCall","src":"14976:9:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"14971:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"14940:14:29","statements":[{"nodeType":"YulVariableDeclaration","src":"14942:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"14951:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"14946:1:29","type":""}]}]},"src":"14936:284:29"},{"nodeType":"YulAssignment","src":"15229:10:29","value":{"name":"pos","nodeType":"YulIdentifier","src":"15236:3:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15229:3:29"}]}]},"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14616:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14623:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14632:3:29","type":""}],"src":"14513:732:29"},{"body":{"nodeType":"YulBlock","src":"15399:225:29","statements":[{"nodeType":"YulAssignment","src":"15409:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15421:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"15432:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15417:3:29"},"nodeType":"YulFunctionCall","src":"15417:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15409:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15456:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"15467:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15452:3:29"},"nodeType":"YulFunctionCall","src":"15452:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15475:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"15481:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15471:3:29"},"nodeType":"YulFunctionCall","src":"15471:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15445:6:29"},"nodeType":"YulFunctionCall","src":"15445:47:29"},"nodeType":"YulExpressionStatement","src":"15445:47:29"},{"nodeType":"YulAssignment","src":"15501:116:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15603:6:29"},{"name":"tail","nodeType":"YulIdentifier","src":"15612:4:29"}],"functionName":{"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15509:93:29"},"nodeType":"YulFunctionCall","src":"15509:108:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15501:4:29"}]}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15371:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15383:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15394:4:29","type":""}],"src":"15251:373:29"},{"body":{"nodeType":"YulBlock","src":"15670:76:29","statements":[{"body":{"nodeType":"YulBlock","src":"15724:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15733:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15736:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15726:6:29"},"nodeType":"YulFunctionCall","src":"15726:12:29"},"nodeType":"YulExpressionStatement","src":"15726:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15693:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15715:5:29"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"15700:14:29"},"nodeType":"YulFunctionCall","src":"15700:21:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15690:2:29"},"nodeType":"YulFunctionCall","src":"15690:32:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15683:6:29"},"nodeType":"YulFunctionCall","src":"15683:40:29"},"nodeType":"YulIf","src":"15680:60:29"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15663:5:29","type":""}],"src":"15630:116:29"},{"body":{"nodeType":"YulBlock","src":"15801:84:29","statements":[{"nodeType":"YulAssignment","src":"15811:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15833:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15820:12:29"},"nodeType":"YulFunctionCall","src":"15820:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"15811:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15873:5:29"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"15849:23:29"},"nodeType":"YulFunctionCall","src":"15849:30:29"},"nodeType":"YulExpressionStatement","src":"15849:30:29"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"15779:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"15787:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"15795:5:29","type":""}],"src":"15752:133:29"},{"body":{"nodeType":"YulBlock","src":"15980:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15997:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16000:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15990:6:29"},"nodeType":"YulFunctionCall","src":"15990:12:29"},"nodeType":"YulExpressionStatement","src":"15990:12:29"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"15891:117:29"},{"body":{"nodeType":"YulBlock","src":"16080:241:29","statements":[{"body":{"nodeType":"YulBlock","src":"16185:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"16187:16:29"},"nodeType":"YulFunctionCall","src":"16187:18:29"},"nodeType":"YulExpressionStatement","src":"16187:18:29"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16157:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"16165:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16154:2:29"},"nodeType":"YulFunctionCall","src":"16154:30:29"},"nodeType":"YulIf","src":"16151:56:29"},{"nodeType":"YulAssignment","src":"16217:37:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16247:6:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"16225:21:29"},"nodeType":"YulFunctionCall","src":"16225:29:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"16217:4:29"}]},{"nodeType":"YulAssignment","src":"16291:23:29","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"16303:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"16309:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16299:3:29"},"nodeType":"YulFunctionCall","src":"16299:15:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"16291:4:29"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"16064:6:29","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"16075:4:29","type":""}],"src":"16014:307:29"},{"body":{"nodeType":"YulBlock","src":"16410:327:29","statements":[{"nodeType":"YulAssignment","src":"16420:74:29","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16486:6:29"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"16445:40:29"},"nodeType":"YulFunctionCall","src":"16445:48:29"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"16429:15:29"},"nodeType":"YulFunctionCall","src":"16429:65:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"16420:5:29"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"16510:5:29"},{"name":"length","nodeType":"YulIdentifier","src":"16517:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16503:6:29"},"nodeType":"YulFunctionCall","src":"16503:21:29"},"nodeType":"YulExpressionStatement","src":"16503:21:29"},{"nodeType":"YulVariableDeclaration","src":"16533:27:29","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"16548:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"16555:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16544:3:29"},"nodeType":"YulFunctionCall","src":"16544:16:29"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"16537:3:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"16598:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"16600:77:29"},"nodeType":"YulFunctionCall","src":"16600:79:29"},"nodeType":"YulExpressionStatement","src":"16600:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"16579:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"16584:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16575:3:29"},"nodeType":"YulFunctionCall","src":"16575:16:29"},{"name":"end","nodeType":"YulIdentifier","src":"16593:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16572:2:29"},"nodeType":"YulFunctionCall","src":"16572:25:29"},"nodeType":"YulIf","src":"16569:112:29"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"16714:3:29"},{"name":"dst","nodeType":"YulIdentifier","src":"16719:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"16724:6:29"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"16690:23:29"},"nodeType":"YulFunctionCall","src":"16690:41:29"},"nodeType":"YulExpressionStatement","src":"16690:41:29"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"16383:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"16388:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"16396:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"16404:5:29","type":""}],"src":"16327:410:29"},{"body":{"nodeType":"YulBlock","src":"16817:277:29","statements":[{"body":{"nodeType":"YulBlock","src":"16866:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"16868:77:29"},"nodeType":"YulFunctionCall","src":"16868:79:29"},"nodeType":"YulExpressionStatement","src":"16868:79:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"16845:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"16853:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16841:3:29"},"nodeType":"YulFunctionCall","src":"16841:17:29"},{"name":"end","nodeType":"YulIdentifier","src":"16860:3:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"16837:3:29"},"nodeType":"YulFunctionCall","src":"16837:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16830:6:29"},"nodeType":"YulFunctionCall","src":"16830:35:29"},"nodeType":"YulIf","src":"16827:122:29"},{"nodeType":"YulVariableDeclaration","src":"16958:34:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"16985:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"16972:12:29"},"nodeType":"YulFunctionCall","src":"16972:20:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"16962:6:29","type":""}]},{"nodeType":"YulAssignment","src":"17001:87:29","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"17061:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"17069:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17057:3:29"},"nodeType":"YulFunctionCall","src":"17057:17:29"},{"name":"length","nodeType":"YulIdentifier","src":"17076:6:29"},{"name":"end","nodeType":"YulIdentifier","src":"17084:3:29"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"17010:46:29"},"nodeType":"YulFunctionCall","src":"17010:78:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"17001:5:29"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"16795:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"16803:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"16811:5:29","type":""}],"src":"16756:338:29"},{"body":{"nodeType":"YulBlock","src":"17240:943:29","statements":[{"body":{"nodeType":"YulBlock","src":"17287:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"17289:77:29"},"nodeType":"YulFunctionCall","src":"17289:79:29"},"nodeType":"YulExpressionStatement","src":"17289:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"17261:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"17270:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17257:3:29"},"nodeType":"YulFunctionCall","src":"17257:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"17282:3:29","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"17253:3:29"},"nodeType":"YulFunctionCall","src":"17253:33:29"},"nodeType":"YulIf","src":"17250:120:29"},{"nodeType":"YulBlock","src":"17380:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"17395:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"17409:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17399:6:29","type":""}]},{"nodeType":"YulAssignment","src":"17424:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17459:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"17470:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17455:3:29"},"nodeType":"YulFunctionCall","src":"17455:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17479:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"17434:20:29"},"nodeType":"YulFunctionCall","src":"17434:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"17424:6:29"}]}]},{"nodeType":"YulBlock","src":"17507:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"17522:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"17536:2:29","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17526:6:29","type":""}]},{"nodeType":"YulAssignment","src":"17552:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17587:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"17598:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17583:3:29"},"nodeType":"YulFunctionCall","src":"17583:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17607:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"17562:20:29"},"nodeType":"YulFunctionCall","src":"17562:53:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"17552:6:29"}]}]},{"nodeType":"YulBlock","src":"17635:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"17650:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"17664:2:29","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17654:6:29","type":""}]},{"nodeType":"YulAssignment","src":"17680:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17715:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"17726:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17711:3:29"},"nodeType":"YulFunctionCall","src":"17711:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17735:7:29"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"17690:20:29"},"nodeType":"YulFunctionCall","src":"17690:53:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"17680:6:29"}]}]},{"nodeType":"YulBlock","src":"17763:115:29","statements":[{"nodeType":"YulVariableDeclaration","src":"17778:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"17792:2:29","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17782:6:29","type":""}]},{"nodeType":"YulAssignment","src":"17808:60:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17840:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"17851:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17836:3:29"},"nodeType":"YulFunctionCall","src":"17836:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17860:7:29"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"17818:17:29"},"nodeType":"YulFunctionCall","src":"17818:50:29"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"17808:6:29"}]}]},{"nodeType":"YulBlock","src":"17888:288:29","statements":[{"nodeType":"YulVariableDeclaration","src":"17903:47:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17934:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"17945:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17930:3:29"},"nodeType":"YulFunctionCall","src":"17930:19:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17917:12:29"},"nodeType":"YulFunctionCall","src":"17917:33:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17907:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"17997:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"17999:77:29"},"nodeType":"YulFunctionCall","src":"17999:79:29"},"nodeType":"YulExpressionStatement","src":"17999:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"17969:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"17977:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17966:2:29"},"nodeType":"YulFunctionCall","src":"17966:30:29"},"nodeType":"YulIf","src":"17963:117:29"},{"nodeType":"YulAssignment","src":"18094:72:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18138:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"18149:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18134:3:29"},"nodeType":"YulFunctionCall","src":"18134:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18158:7:29"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"18104:29:29"},"nodeType":"YulFunctionCall","src":"18104:62:29"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"18094:6:29"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_bytes32t_boolt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17178:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"17189:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"17201:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17209:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17217:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"17225:6:29","type":""},{"name":"value4","nodeType":"YulTypedName","src":"17233:6:29","type":""}],"src":"17100:1083:29"},{"body":{"nodeType":"YulBlock","src":"18278:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18295:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18298:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18288:6:29"},"nodeType":"YulFunctionCall","src":"18288:12:29"},"nodeType":"YulExpressionStatement","src":"18288:12:29"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"18189:117:29"},{"body":{"nodeType":"YulBlock","src":"18428:478:29","statements":[{"body":{"nodeType":"YulBlock","src":"18477:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"18479:77:29"},"nodeType":"YulFunctionCall","src":"18479:79:29"},"nodeType":"YulExpressionStatement","src":"18479:79:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18456:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"18464:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18452:3:29"},"nodeType":"YulFunctionCall","src":"18452:17:29"},{"name":"end","nodeType":"YulIdentifier","src":"18471:3:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"18448:3:29"},"nodeType":"YulFunctionCall","src":"18448:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18441:6:29"},"nodeType":"YulFunctionCall","src":"18441:35:29"},"nodeType":"YulIf","src":"18438:122:29"},{"nodeType":"YulAssignment","src":"18569:30:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18592:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"18579:12:29"},"nodeType":"YulFunctionCall","src":"18579:20:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"18569:6:29"}]},{"body":{"nodeType":"YulBlock","src":"18642:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"18644:77:29"},"nodeType":"YulFunctionCall","src":"18644:79:29"},"nodeType":"YulExpressionStatement","src":"18644:79:29"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18614:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"18622:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18611:2:29"},"nodeType":"YulFunctionCall","src":"18611:30:29"},"nodeType":"YulIf","src":"18608:117:29"},{"nodeType":"YulAssignment","src":"18734:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18750:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"18758:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18746:3:29"},"nodeType":"YulFunctionCall","src":"18746:17:29"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"18734:8:29"}]},{"body":{"nodeType":"YulBlock","src":"18817:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"18819:77:29"},"nodeType":"YulFunctionCall","src":"18819:79:29"},"nodeType":"YulExpressionStatement","src":"18819:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"18782:8:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18796:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"18804:4:29","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"18792:3:29"},"nodeType":"YulFunctionCall","src":"18792:17:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18778:3:29"},"nodeType":"YulFunctionCall","src":"18778:32:29"},{"name":"end","nodeType":"YulIdentifier","src":"18812:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18775:2:29"},"nodeType":"YulFunctionCall","src":"18775:41:29"},"nodeType":"YulIf","src":"18772:128:29"}]},"name":"abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"18395:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"18403:3:29","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"18411:8:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"18421:6:29","type":""}],"src":"18327:579:29"},{"body":{"nodeType":"YulBlock","src":"19024:469:29","statements":[{"body":{"nodeType":"YulBlock","src":"19070:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"19072:77:29"},"nodeType":"YulFunctionCall","src":"19072:79:29"},"nodeType":"YulExpressionStatement","src":"19072:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"19045:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"19054:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19041:3:29"},"nodeType":"YulFunctionCall","src":"19041:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"19066:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19037:3:29"},"nodeType":"YulFunctionCall","src":"19037:32:29"},"nodeType":"YulIf","src":"19034:119:29"},{"nodeType":"YulBlock","src":"19163:323:29","statements":[{"nodeType":"YulVariableDeclaration","src":"19178:45:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19209:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"19220:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19205:3:29"},"nodeType":"YulFunctionCall","src":"19205:17:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"19192:12:29"},"nodeType":"YulFunctionCall","src":"19192:31:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19182:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"19270:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"19272:77:29"},"nodeType":"YulFunctionCall","src":"19272:79:29"},"nodeType":"YulExpressionStatement","src":"19272:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19242:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"19250:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19239:2:29"},"nodeType":"YulFunctionCall","src":"19239:30:29"},"nodeType":"YulIf","src":"19236:117:29"},{"nodeType":"YulAssignment","src":"19367:109:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19448:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"19459:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19444:3:29"},"nodeType":"YulFunctionCall","src":"19444:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19468:7:29"}],"functionName":{"name":"abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"19385:58:29"},"nodeType":"YulFunctionCall","src":"19385:91:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"19367:6:29"},{"name":"value1","nodeType":"YulIdentifier","src":"19375:6:29"}]}]}]},"name":"abi_decode_tuple_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18986:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"18997:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"19009:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19017:6:29","type":""}],"src":"18912:581:29"},{"body":{"nodeType":"YulBlock","src":"19565:263:29","statements":[{"body":{"nodeType":"YulBlock","src":"19611:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"19613:77:29"},"nodeType":"YulFunctionCall","src":"19613:79:29"},"nodeType":"YulExpressionStatement","src":"19613:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"19586:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"19595:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19582:3:29"},"nodeType":"YulFunctionCall","src":"19582:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"19607:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19578:3:29"},"nodeType":"YulFunctionCall","src":"19578:32:29"},"nodeType":"YulIf","src":"19575:119:29"},{"nodeType":"YulBlock","src":"19704:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"19719:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"19733:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19723:6:29","type":""}]},{"nodeType":"YulAssignment","src":"19748:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19783:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"19794:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19779:3:29"},"nodeType":"YulFunctionCall","src":"19779:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19803:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"19758:20:29"},"nodeType":"YulFunctionCall","src":"19758:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"19748:6:29"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19535:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"19546:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"19558:6:29","type":""}],"src":"19499:329:29"},{"body":{"nodeType":"YulBlock","src":"19916:229:29","statements":[{"body":{"nodeType":"YulBlock","src":"20021:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"20023:16:29"},"nodeType":"YulFunctionCall","src":"20023:18:29"},"nodeType":"YulExpressionStatement","src":"20023:18:29"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"19993:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"20001:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19990:2:29"},"nodeType":"YulFunctionCall","src":"19990:30:29"},"nodeType":"YulIf","src":"19987:56:29"},{"nodeType":"YulAssignment","src":"20053:25:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"20065:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"20073:4:29","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"20061:3:29"},"nodeType":"YulFunctionCall","src":"20061:17:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"20053:4:29"}]},{"nodeType":"YulAssignment","src":"20115:23:29","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"20127:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"20133:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20123:3:29"},"nodeType":"YulFunctionCall","src":"20123:15:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"20115:4:29"}]}]},"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"19900:6:29","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"19911:4:29","type":""}],"src":"19834:311:29"},{"body":{"nodeType":"YulBlock","src":"20270:608:29","statements":[{"nodeType":"YulAssignment","src":"20280:90:29","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"20362:6:29"}],"functionName":{"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"20305:56:29"},"nodeType":"YulFunctionCall","src":"20305:64:29"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"20289:15:29"},"nodeType":"YulFunctionCall","src":"20289:81:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"20280:5:29"}]},{"nodeType":"YulVariableDeclaration","src":"20379:16:29","value":{"name":"array","nodeType":"YulIdentifier","src":"20390:5:29"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"20383:3:29","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"20412:5:29"},{"name":"length","nodeType":"YulIdentifier","src":"20419:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20405:6:29"},"nodeType":"YulFunctionCall","src":"20405:21:29"},"nodeType":"YulExpressionStatement","src":"20405:21:29"},{"nodeType":"YulAssignment","src":"20435:23:29","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"20446:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"20453:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20442:3:29"},"nodeType":"YulFunctionCall","src":"20442:16:29"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"20435:3:29"}]},{"nodeType":"YulVariableDeclaration","src":"20468:44:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"20486:6:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"20498:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"20506:4:29","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"20494:3:29"},"nodeType":"YulFunctionCall","src":"20494:17:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20482:3:29"},"nodeType":"YulFunctionCall","src":"20482:30:29"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"20472:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"20540:103:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"20554:77:29"},"nodeType":"YulFunctionCall","src":"20554:79:29"},"nodeType":"YulExpressionStatement","src":"20554:79:29"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"20527:6:29"},{"name":"end","nodeType":"YulIdentifier","src":"20535:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20524:2:29"},"nodeType":"YulFunctionCall","src":"20524:15:29"},"nodeType":"YulIf","src":"20521:122:29"},{"body":{"nodeType":"YulBlock","src":"20728:144:29","statements":[{"nodeType":"YulVariableDeclaration","src":"20743:21:29","value":{"name":"src","nodeType":"YulIdentifier","src":"20761:3:29"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"20747:10:29","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"20785:3:29"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"20811:10:29"},{"name":"end","nodeType":"YulIdentifier","src":"20823:3:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"20790:20:29"},"nodeType":"YulFunctionCall","src":"20790:37:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20778:6:29"},"nodeType":"YulFunctionCall","src":"20778:50:29"},"nodeType":"YulExpressionStatement","src":"20778:50:29"},{"nodeType":"YulAssignment","src":"20841:21:29","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"20852:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"20857:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20848:3:29"},"nodeType":"YulFunctionCall","src":"20848:14:29"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"20841:3:29"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"20681:3:29"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"20686:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"20678:2:29"},"nodeType":"YulFunctionCall","src":"20678:15:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"20694:25:29","statements":[{"nodeType":"YulAssignment","src":"20696:21:29","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"20707:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"20712:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20703:3:29"},"nodeType":"YulFunctionCall","src":"20703:14:29"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"20696:3:29"}]}]},"pre":{"nodeType":"YulBlock","src":"20656:21:29","statements":[{"nodeType":"YulVariableDeclaration","src":"20658:17:29","value":{"name":"offset","nodeType":"YulIdentifier","src":"20669:6:29"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"20662:3:29","type":""}]}]},"src":"20652:220:29"}]},"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"20240:6:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"20248:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"20256:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"20264:5:29","type":""}],"src":"20168:710:29"},{"body":{"nodeType":"YulBlock","src":"20978:293:29","statements":[{"body":{"nodeType":"YulBlock","src":"21027:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"21029:77:29"},"nodeType":"YulFunctionCall","src":"21029:79:29"},"nodeType":"YulExpressionStatement","src":"21029:79:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"21006:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"21014:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21002:3:29"},"nodeType":"YulFunctionCall","src":"21002:17:29"},{"name":"end","nodeType":"YulIdentifier","src":"21021:3:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20998:3:29"},"nodeType":"YulFunctionCall","src":"20998:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20991:6:29"},"nodeType":"YulFunctionCall","src":"20991:35:29"},"nodeType":"YulIf","src":"20988:122:29"},{"nodeType":"YulVariableDeclaration","src":"21119:34:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"21146:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"21133:12:29"},"nodeType":"YulFunctionCall","src":"21133:20:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"21123:6:29","type":""}]},{"nodeType":"YulAssignment","src":"21162:103:29","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"21238:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"21246:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21234:3:29"},"nodeType":"YulFunctionCall","src":"21234:17:29"},{"name":"length","nodeType":"YulIdentifier","src":"21253:6:29"},{"name":"end","nodeType":"YulIdentifier","src":"21261:3:29"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"21171:62:29"},"nodeType":"YulFunctionCall","src":"21171:94:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"21162:5:29"}]}]},"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"20956:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"20964:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"20972:5:29","type":""}],"src":"20901:370:29"},{"body":{"nodeType":"YulBlock","src":"21356:229:29","statements":[{"body":{"nodeType":"YulBlock","src":"21461:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"21463:16:29"},"nodeType":"YulFunctionCall","src":"21463:18:29"},"nodeType":"YulExpressionStatement","src":"21463:18:29"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"21433:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"21441:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21430:2:29"},"nodeType":"YulFunctionCall","src":"21430:30:29"},"nodeType":"YulIf","src":"21427:56:29"},{"nodeType":"YulAssignment","src":"21493:25:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"21505:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"21513:4:29","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"21501:3:29"},"nodeType":"YulFunctionCall","src":"21501:17:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"21493:4:29"}]},{"nodeType":"YulAssignment","src":"21555:23:29","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"21567:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"21573:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21563:3:29"},"nodeType":"YulFunctionCall","src":"21563:15:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"21555:4:29"}]}]},"name":"array_allocation_size_t_array$_t_bool_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"21340:6:29","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"21351:4:29","type":""}],"src":"21277:308:29"},{"body":{"nodeType":"YulBlock","src":"21704:602:29","statements":[{"nodeType":"YulAssignment","src":"21714:87:29","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"21793:6:29"}],"functionName":{"name":"array_allocation_size_t_array$_t_bool_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"21739:53:29"},"nodeType":"YulFunctionCall","src":"21739:61:29"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"21723:15:29"},"nodeType":"YulFunctionCall","src":"21723:78:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"21714:5:29"}]},{"nodeType":"YulVariableDeclaration","src":"21810:16:29","value":{"name":"array","nodeType":"YulIdentifier","src":"21821:5:29"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"21814:3:29","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"21843:5:29"},{"name":"length","nodeType":"YulIdentifier","src":"21850:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21836:6:29"},"nodeType":"YulFunctionCall","src":"21836:21:29"},"nodeType":"YulExpressionStatement","src":"21836:21:29"},{"nodeType":"YulAssignment","src":"21866:23:29","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"21877:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"21884:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21873:3:29"},"nodeType":"YulFunctionCall","src":"21873:16:29"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"21866:3:29"}]},{"nodeType":"YulVariableDeclaration","src":"21899:44:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"21917:6:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"21929:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"21937:4:29","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"21925:3:29"},"nodeType":"YulFunctionCall","src":"21925:17:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21913:3:29"},"nodeType":"YulFunctionCall","src":"21913:30:29"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"21903:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"21971:103:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"21985:77:29"},"nodeType":"YulFunctionCall","src":"21985:79:29"},"nodeType":"YulExpressionStatement","src":"21985:79:29"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"21958:6:29"},{"name":"end","nodeType":"YulIdentifier","src":"21966:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21955:2:29"},"nodeType":"YulFunctionCall","src":"21955:15:29"},"nodeType":"YulIf","src":"21952:122:29"},{"body":{"nodeType":"YulBlock","src":"22159:141:29","statements":[{"nodeType":"YulVariableDeclaration","src":"22174:21:29","value":{"name":"src","nodeType":"YulIdentifier","src":"22192:3:29"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"22178:10:29","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"22216:3:29"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"22239:10:29"},{"name":"end","nodeType":"YulIdentifier","src":"22251:3:29"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"22221:17:29"},"nodeType":"YulFunctionCall","src":"22221:34:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22209:6:29"},"nodeType":"YulFunctionCall","src":"22209:47:29"},"nodeType":"YulExpressionStatement","src":"22209:47:29"},{"nodeType":"YulAssignment","src":"22269:21:29","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"22280:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"22285:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22276:3:29"},"nodeType":"YulFunctionCall","src":"22276:14:29"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"22269:3:29"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"22112:3:29"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"22117:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"22109:2:29"},"nodeType":"YulFunctionCall","src":"22109:15:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"22125:25:29","statements":[{"nodeType":"YulAssignment","src":"22127:21:29","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"22138:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"22143:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22134:3:29"},"nodeType":"YulFunctionCall","src":"22134:14:29"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"22127:3:29"}]}]},"pre":{"nodeType":"YulBlock","src":"22087:21:29","statements":[{"nodeType":"YulVariableDeclaration","src":"22089:17:29","value":{"name":"offset","nodeType":"YulIdentifier","src":"22100:6:29"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"22093:3:29","type":""}]}]},"src":"22083:217:29"}]},"name":"abi_decode_available_length_t_array$_t_bool_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"21674:6:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"21682:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"21690:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"21698:5:29","type":""}],"src":"21605:701:29"},{"body":{"nodeType":"YulBlock","src":"22400:290:29","statements":[{"body":{"nodeType":"YulBlock","src":"22449:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"22451:77:29"},"nodeType":"YulFunctionCall","src":"22451:79:29"},"nodeType":"YulExpressionStatement","src":"22451:79:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22428:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"22436:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22424:3:29"},"nodeType":"YulFunctionCall","src":"22424:17:29"},{"name":"end","nodeType":"YulIdentifier","src":"22443:3:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"22420:3:29"},"nodeType":"YulFunctionCall","src":"22420:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22413:6:29"},"nodeType":"YulFunctionCall","src":"22413:35:29"},"nodeType":"YulIf","src":"22410:122:29"},{"nodeType":"YulVariableDeclaration","src":"22541:34:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22568:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"22555:12:29"},"nodeType":"YulFunctionCall","src":"22555:20:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"22545:6:29","type":""}]},{"nodeType":"YulAssignment","src":"22584:100:29","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22657:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"22665:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22653:3:29"},"nodeType":"YulFunctionCall","src":"22653:17:29"},{"name":"length","nodeType":"YulIdentifier","src":"22672:6:29"},{"name":"end","nodeType":"YulIdentifier","src":"22680:3:29"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_bool_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"22593:59:29"},"nodeType":"YulFunctionCall","src":"22593:91:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"22584:5:29"}]}]},"name":"abi_decode_t_array$_t_bool_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"22378:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"22386:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"22394:5:29","type":""}],"src":"22326:364:29"},{"body":{"nodeType":"YulBlock","src":"22787:229:29","statements":[{"body":{"nodeType":"YulBlock","src":"22892:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"22894:16:29"},"nodeType":"YulFunctionCall","src":"22894:18:29"},"nodeType":"YulExpressionStatement","src":"22894:18:29"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"22864:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"22872:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22861:2:29"},"nodeType":"YulFunctionCall","src":"22861:30:29"},"nodeType":"YulIf","src":"22858:56:29"},{"nodeType":"YulAssignment","src":"22924:25:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"22936:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"22944:4:29","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"22932:3:29"},"nodeType":"YulFunctionCall","src":"22932:17:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"22924:4:29"}]},{"nodeType":"YulAssignment","src":"22986:23:29","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"22998:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"23004:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22994:3:29"},"nodeType":"YulFunctionCall","src":"22994:15:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"22986:4:29"}]}]},"name":"array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"22771:6:29","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"22782:4:29","type":""}],"src":"22696:320:29"},{"body":{"nodeType":"YulBlock","src":"23148:831:29","statements":[{"nodeType":"YulAssignment","src":"23158:99:29","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"23249:6:29"}],"functionName":{"name":"array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"23183:65:29"},"nodeType":"YulFunctionCall","src":"23183:73:29"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"23167:15:29"},"nodeType":"YulFunctionCall","src":"23167:90:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"23158:5:29"}]},{"nodeType":"YulVariableDeclaration","src":"23266:16:29","value":{"name":"array","nodeType":"YulIdentifier","src":"23277:5:29"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"23270:3:29","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"23299:5:29"},{"name":"length","nodeType":"YulIdentifier","src":"23306:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23292:6:29"},"nodeType":"YulFunctionCall","src":"23292:21:29"},"nodeType":"YulExpressionStatement","src":"23292:21:29"},{"nodeType":"YulAssignment","src":"23322:23:29","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"23333:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"23340:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23329:3:29"},"nodeType":"YulFunctionCall","src":"23329:16:29"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"23322:3:29"}]},{"nodeType":"YulVariableDeclaration","src":"23355:44:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"23373:6:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"23385:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"23393:4:29","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"23381:3:29"},"nodeType":"YulFunctionCall","src":"23381:17:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23369:3:29"},"nodeType":"YulFunctionCall","src":"23369:30:29"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"23359:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"23427:103:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"23441:77:29"},"nodeType":"YulFunctionCall","src":"23441:79:29"},"nodeType":"YulExpressionStatement","src":"23441:79:29"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"23414:6:29"},{"name":"end","nodeType":"YulIdentifier","src":"23422:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23411:2:29"},"nodeType":"YulFunctionCall","src":"23411:15:29"},"nodeType":"YulIf","src":"23408:122:29"},{"body":{"nodeType":"YulBlock","src":"23615:358:29","statements":[{"nodeType":"YulVariableDeclaration","src":"23630:36:29","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"23662:3:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"23649:12:29"},"nodeType":"YulFunctionCall","src":"23649:17:29"},"variables":[{"name":"innerOffset","nodeType":"YulTypedName","src":"23634:11:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"23718:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"23720:77:29"},"nodeType":"YulFunctionCall","src":"23720:79:29"},"nodeType":"YulExpressionStatement","src":"23720:79:29"}]},"condition":{"arguments":[{"name":"innerOffset","nodeType":"YulIdentifier","src":"23685:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"23698:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23682:2:29"},"nodeType":"YulFunctionCall","src":"23682:35:29"},"nodeType":"YulIf","src":"23679:122:29"},{"nodeType":"YulVariableDeclaration","src":"23814:42:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"23836:6:29"},{"name":"innerOffset","nodeType":"YulIdentifier","src":"23844:11:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23832:3:29"},"nodeType":"YulFunctionCall","src":"23832:24:29"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"23818:10:29","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"23877:3:29"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"23912:10:29"},{"name":"end","nodeType":"YulIdentifier","src":"23924:3:29"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"23882:29:29"},"nodeType":"YulFunctionCall","src":"23882:46:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23870:6:29"},"nodeType":"YulFunctionCall","src":"23870:59:29"},"nodeType":"YulExpressionStatement","src":"23870:59:29"},{"nodeType":"YulAssignment","src":"23942:21:29","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"23953:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"23958:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23949:3:29"},"nodeType":"YulFunctionCall","src":"23949:14:29"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"23942:3:29"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"23568:3:29"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"23573:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"23565:2:29"},"nodeType":"YulFunctionCall","src":"23565:15:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"23581:25:29","statements":[{"nodeType":"YulAssignment","src":"23583:21:29","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"23594:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"23599:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23590:3:29"},"nodeType":"YulFunctionCall","src":"23590:14:29"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"23583:3:29"}]}]},"pre":{"nodeType":"YulBlock","src":"23543:21:29","statements":[{"nodeType":"YulVariableDeclaration","src":"23545:17:29","value":{"name":"offset","nodeType":"YulIdentifier","src":"23556:6:29"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"23549:3:29","type":""}]}]},"src":"23539:434:29"}]},"name":"abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"23118:6:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"23126:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"23134:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"23142:5:29","type":""}],"src":"23037:942:29"},{"body":{"nodeType":"YulBlock","src":"24086:302:29","statements":[{"body":{"nodeType":"YulBlock","src":"24135:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"24137:77:29"},"nodeType":"YulFunctionCall","src":"24137:79:29"},"nodeType":"YulExpressionStatement","src":"24137:79:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"24114:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"24122:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24110:3:29"},"nodeType":"YulFunctionCall","src":"24110:17:29"},{"name":"end","nodeType":"YulIdentifier","src":"24129:3:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"24106:3:29"},"nodeType":"YulFunctionCall","src":"24106:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24099:6:29"},"nodeType":"YulFunctionCall","src":"24099:35:29"},"nodeType":"YulIf","src":"24096:122:29"},{"nodeType":"YulVariableDeclaration","src":"24227:34:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"24254:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"24241:12:29"},"nodeType":"YulFunctionCall","src":"24241:20:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"24231:6:29","type":""}]},{"nodeType":"YulAssignment","src":"24270:112:29","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"24355:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"24363:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24351:3:29"},"nodeType":"YulFunctionCall","src":"24351:17:29"},{"name":"length","nodeType":"YulIdentifier","src":"24370:6:29"},{"name":"end","nodeType":"YulIdentifier","src":"24378:3:29"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"24279:71:29"},"nodeType":"YulFunctionCall","src":"24279:103:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"24270:5:29"}]}]},"name":"abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"24064:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"24072:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"24080:5:29","type":""}],"src":"24000:388:29"},{"body":{"nodeType":"YulBlock","src":"24659:1708:29","statements":[{"body":{"nodeType":"YulBlock","src":"24706:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"24708:77:29"},"nodeType":"YulFunctionCall","src":"24708:79:29"},"nodeType":"YulExpressionStatement","src":"24708:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"24680:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"24689:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24676:3:29"},"nodeType":"YulFunctionCall","src":"24676:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"24701:3:29","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"24672:3:29"},"nodeType":"YulFunctionCall","src":"24672:33:29"},"nodeType":"YulIf","src":"24669:120:29"},{"nodeType":"YulBlock","src":"24799:302:29","statements":[{"nodeType":"YulVariableDeclaration","src":"24814:45:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24845:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"24856:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24841:3:29"},"nodeType":"YulFunctionCall","src":"24841:17:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"24828:12:29"},"nodeType":"YulFunctionCall","src":"24828:31:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"24818:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"24906:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"24908:77:29"},"nodeType":"YulFunctionCall","src":"24908:79:29"},"nodeType":"YulExpressionStatement","src":"24908:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"24878:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"24886:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24875:2:29"},"nodeType":"YulFunctionCall","src":"24875:30:29"},"nodeType":"YulIf","src":"24872:117:29"},{"nodeType":"YulAssignment","src":"25003:88:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25063:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"25074:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25059:3:29"},"nodeType":"YulFunctionCall","src":"25059:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"25083:7:29"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"25013:45:29"},"nodeType":"YulFunctionCall","src":"25013:78:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"25003:6:29"}]}]},{"nodeType":"YulBlock","src":"25111:303:29","statements":[{"nodeType":"YulVariableDeclaration","src":"25126:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25157:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"25168:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25153:3:29"},"nodeType":"YulFunctionCall","src":"25153:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"25140:12:29"},"nodeType":"YulFunctionCall","src":"25140:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"25130:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"25219:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"25221:77:29"},"nodeType":"YulFunctionCall","src":"25221:79:29"},"nodeType":"YulExpressionStatement","src":"25221:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"25191:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"25199:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25188:2:29"},"nodeType":"YulFunctionCall","src":"25188:30:29"},"nodeType":"YulIf","src":"25185:117:29"},{"nodeType":"YulAssignment","src":"25316:88:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25376:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"25387:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25372:3:29"},"nodeType":"YulFunctionCall","src":"25372:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"25396:7:29"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"25326:45:29"},"nodeType":"YulFunctionCall","src":"25326:78:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"25316:6:29"}]}]},{"nodeType":"YulBlock","src":"25424:303:29","statements":[{"nodeType":"YulVariableDeclaration","src":"25439:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25470:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"25481:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25466:3:29"},"nodeType":"YulFunctionCall","src":"25466:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"25453:12:29"},"nodeType":"YulFunctionCall","src":"25453:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"25443:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"25532:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"25534:77:29"},"nodeType":"YulFunctionCall","src":"25534:79:29"},"nodeType":"YulExpressionStatement","src":"25534:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"25504:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"25512:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25501:2:29"},"nodeType":"YulFunctionCall","src":"25501:30:29"},"nodeType":"YulIf","src":"25498:117:29"},{"nodeType":"YulAssignment","src":"25629:88:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25689:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"25700:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25685:3:29"},"nodeType":"YulFunctionCall","src":"25685:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"25709:7:29"}],"functionName":{"name":"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"25639:45:29"},"nodeType":"YulFunctionCall","src":"25639:78:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"25629:6:29"}]}]},{"nodeType":"YulBlock","src":"25737:300:29","statements":[{"nodeType":"YulVariableDeclaration","src":"25752:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25783:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"25794:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25779:3:29"},"nodeType":"YulFunctionCall","src":"25779:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"25766:12:29"},"nodeType":"YulFunctionCall","src":"25766:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"25756:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"25845:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"25847:77:29"},"nodeType":"YulFunctionCall","src":"25847:79:29"},"nodeType":"YulExpressionStatement","src":"25847:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"25817:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"25825:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25814:2:29"},"nodeType":"YulFunctionCall","src":"25814:30:29"},"nodeType":"YulIf","src":"25811:117:29"},{"nodeType":"YulAssignment","src":"25942:85:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25999:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"26010:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25995:3:29"},"nodeType":"YulFunctionCall","src":"25995:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"26019:7:29"}],"functionName":{"name":"abi_decode_t_array$_t_bool_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"25952:42:29"},"nodeType":"YulFunctionCall","src":"25952:75:29"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"25942:6:29"}]}]},{"nodeType":"YulBlock","src":"26047:313:29","statements":[{"nodeType":"YulVariableDeclaration","src":"26062:47:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26093:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"26104:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26089:3:29"},"nodeType":"YulFunctionCall","src":"26089:19:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"26076:12:29"},"nodeType":"YulFunctionCall","src":"26076:33:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"26066:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"26156:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"26158:77:29"},"nodeType":"YulFunctionCall","src":"26158:79:29"},"nodeType":"YulExpressionStatement","src":"26158:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"26128:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"26136:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"26125:2:29"},"nodeType":"YulFunctionCall","src":"26125:30:29"},"nodeType":"YulIf","src":"26122:117:29"},{"nodeType":"YulAssignment","src":"26253:97:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26322:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"26333:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26318:3:29"},"nodeType":"YulFunctionCall","src":"26318:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"26342:7:29"}],"functionName":{"name":"abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"26263:54:29"},"nodeType":"YulFunctionCall","src":"26263:87:29"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"26253:6:29"}]}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bool_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24597:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"24608:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"24620:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24628:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"24636:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"24644:6:29","type":""},{"name":"value4","nodeType":"YulTypedName","src":"24652:6:29","type":""}],"src":"24394:1973:29"},{"body":{"nodeType":"YulBlock","src":"26465:560:29","statements":[{"body":{"nodeType":"YulBlock","src":"26511:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"26513:77:29"},"nodeType":"YulFunctionCall","src":"26513:79:29"},"nodeType":"YulExpressionStatement","src":"26513:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"26486:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"26495:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26482:3:29"},"nodeType":"YulFunctionCall","src":"26482:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"26507:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"26478:3:29"},"nodeType":"YulFunctionCall","src":"26478:32:29"},"nodeType":"YulIf","src":"26475:119:29"},{"nodeType":"YulBlock","src":"26604:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"26619:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"26633:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"26623:6:29","type":""}]},{"nodeType":"YulAssignment","src":"26648:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26683:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"26694:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26679:3:29"},"nodeType":"YulFunctionCall","src":"26679:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"26703:7:29"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"26658:20:29"},"nodeType":"YulFunctionCall","src":"26658:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"26648:6:29"}]}]},{"nodeType":"YulBlock","src":"26731:287:29","statements":[{"nodeType":"YulVariableDeclaration","src":"26746:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26777:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"26788:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26773:3:29"},"nodeType":"YulFunctionCall","src":"26773:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"26760:12:29"},"nodeType":"YulFunctionCall","src":"26760:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"26750:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"26839:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"26841:77:29"},"nodeType":"YulFunctionCall","src":"26841:79:29"},"nodeType":"YulExpressionStatement","src":"26841:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"26811:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"26819:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"26808:2:29"},"nodeType":"YulFunctionCall","src":"26808:30:29"},"nodeType":"YulIf","src":"26805:117:29"},{"nodeType":"YulAssignment","src":"26936:72:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26980:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"26991:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26976:3:29"},"nodeType":"YulFunctionCall","src":"26976:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"27000:7:29"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"26946:29:29"},"nodeType":"YulFunctionCall","src":"26946:62:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"26936:6:29"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26427:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"26438:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"26450:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26458:6:29","type":""}],"src":"26373:652:29"},{"body":{"nodeType":"YulBlock","src":"27140:688:29","statements":[{"body":{"nodeType":"YulBlock","src":"27186:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"27188:77:29"},"nodeType":"YulFunctionCall","src":"27188:79:29"},"nodeType":"YulExpressionStatement","src":"27188:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"27161:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"27170:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27157:3:29"},"nodeType":"YulFunctionCall","src":"27157:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"27182:2:29","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"27153:3:29"},"nodeType":"YulFunctionCall","src":"27153:32:29"},"nodeType":"YulIf","src":"27150:119:29"},{"nodeType":"YulBlock","src":"27279:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"27294:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"27308:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"27298:6:29","type":""}]},{"nodeType":"YulAssignment","src":"27323:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27358:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"27369:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27354:3:29"},"nodeType":"YulFunctionCall","src":"27354:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"27378:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"27333:20:29"},"nodeType":"YulFunctionCall","src":"27333:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"27323:6:29"}]}]},{"nodeType":"YulBlock","src":"27406:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"27421:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"27435:2:29","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"27425:6:29","type":""}]},{"nodeType":"YulAssignment","src":"27451:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27486:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"27497:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27482:3:29"},"nodeType":"YulFunctionCall","src":"27482:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"27506:7:29"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"27461:20:29"},"nodeType":"YulFunctionCall","src":"27461:53:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"27451:6:29"}]}]},{"nodeType":"YulBlock","src":"27534:287:29","statements":[{"nodeType":"YulVariableDeclaration","src":"27549:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27580:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"27591:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27576:3:29"},"nodeType":"YulFunctionCall","src":"27576:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"27563:12:29"},"nodeType":"YulFunctionCall","src":"27563:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"27553:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"27642:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"27644:77:29"},"nodeType":"YulFunctionCall","src":"27644:79:29"},"nodeType":"YulExpressionStatement","src":"27644:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"27614:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"27622:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"27611:2:29"},"nodeType":"YulFunctionCall","src":"27611:30:29"},"nodeType":"YulIf","src":"27608:117:29"},{"nodeType":"YulAssignment","src":"27739:72:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27783:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"27794:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27779:3:29"},"nodeType":"YulFunctionCall","src":"27779:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"27803:7:29"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"27749:29:29"},"nodeType":"YulFunctionCall","src":"27749:62:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"27739:6:29"}]}]}]},"name":"abi_decode_tuple_t_addresst_bytes32t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27094:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"27105:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"27117:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"27125:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"27133:6:29","type":""}],"src":"27031:797:29"},{"body":{"nodeType":"YulBlock","src":"27976:770:29","statements":[{"body":{"nodeType":"YulBlock","src":"28022:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"28024:77:29"},"nodeType":"YulFunctionCall","src":"28024:79:29"},"nodeType":"YulExpressionStatement","src":"28024:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"27997:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"28006:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27993:3:29"},"nodeType":"YulFunctionCall","src":"27993:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"28018:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"27989:3:29"},"nodeType":"YulFunctionCall","src":"27989:32:29"},"nodeType":"YulIf","src":"27986:119:29"},{"nodeType":"YulBlock","src":"28115:302:29","statements":[{"nodeType":"YulVariableDeclaration","src":"28130:45:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28161:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"28172:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28157:3:29"},"nodeType":"YulFunctionCall","src":"28157:17:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"28144:12:29"},"nodeType":"YulFunctionCall","src":"28144:31:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"28134:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"28222:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"28224:77:29"},"nodeType":"YulFunctionCall","src":"28224:79:29"},"nodeType":"YulExpressionStatement","src":"28224:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"28194:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"28202:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"28191:2:29"},"nodeType":"YulFunctionCall","src":"28191:30:29"},"nodeType":"YulIf","src":"28188:117:29"},{"nodeType":"YulAssignment","src":"28319:88:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28379:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"28390:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28375:3:29"},"nodeType":"YulFunctionCall","src":"28375:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"28399:7:29"}],"functionName":{"name":"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"28329:45:29"},"nodeType":"YulFunctionCall","src":"28329:78:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"28319:6:29"}]}]},{"nodeType":"YulBlock","src":"28427:312:29","statements":[{"nodeType":"YulVariableDeclaration","src":"28442:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28473:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"28484:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28469:3:29"},"nodeType":"YulFunctionCall","src":"28469:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"28456:12:29"},"nodeType":"YulFunctionCall","src":"28456:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"28446:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"28535:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"28537:77:29"},"nodeType":"YulFunctionCall","src":"28537:79:29"},"nodeType":"YulExpressionStatement","src":"28537:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"28507:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"28515:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"28504:2:29"},"nodeType":"YulFunctionCall","src":"28504:30:29"},"nodeType":"YulIf","src":"28501:117:29"},{"nodeType":"YulAssignment","src":"28632:97:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28701:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"28712:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28697:3:29"},"nodeType":"YulFunctionCall","src":"28697:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"28721:7:29"}],"functionName":{"name":"abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"28642:54:29"},"nodeType":"YulFunctionCall","src":"28642:87:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"28632:6:29"}]}]}]},"name":"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27938:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"27949:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"27961:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"27969:6:29","type":""}],"src":"27834:912:29"},{"body":{"nodeType":"YulBlock","src":"28826:40:29","statements":[{"nodeType":"YulAssignment","src":"28837:22:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28853:5:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"28847:5:29"},"nodeType":"YulFunctionCall","src":"28847:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"28837:6:29"}]}]},"name":"array_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28809:5:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"28819:6:29","type":""}],"src":"28752:114:29"},{"body":{"nodeType":"YulBlock","src":"28983:73:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29000:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"29005:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28993:6:29"},"nodeType":"YulFunctionCall","src":"28993:19:29"},"nodeType":"YulExpressionStatement","src":"28993:19:29"},{"nodeType":"YulAssignment","src":"29021:29:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29040:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"29045:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29036:3:29"},"nodeType":"YulFunctionCall","src":"29036:14:29"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"29021:11:29"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28955:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"28960:6:29","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"28971:11:29","type":""}],"src":"28872:184:29"},{"body":{"nodeType":"YulBlock","src":"29134:60:29","statements":[{"nodeType":"YulAssignment","src":"29144:11:29","value":{"name":"ptr","nodeType":"YulIdentifier","src":"29152:3:29"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"29144:4:29"}]},{"nodeType":"YulAssignment","src":"29165:22:29","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"29177:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"29182:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29173:3:29"},"nodeType":"YulFunctionCall","src":"29173:14:29"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"29165:4:29"}]}]},"name":"array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"29121:3:29","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"29129:4:29","type":""}],"src":"29062:132:29"},{"body":{"nodeType":"YulBlock","src":"29255:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29272:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29295:5:29"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"29277:17:29"},"nodeType":"YulFunctionCall","src":"29277:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29265:6:29"},"nodeType":"YulFunctionCall","src":"29265:37:29"},"nodeType":"YulExpressionStatement","src":"29265:37:29"}]},"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29243:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"29250:3:29","type":""}],"src":"29200:108:29"},{"body":{"nodeType":"YulBlock","src":"29394:99:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"29438:6:29"},{"name":"pos","nodeType":"YulIdentifier","src":"29446:3:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulIdentifier","src":"29404:33:29"},"nodeType":"YulFunctionCall","src":"29404:46:29"},"nodeType":"YulExpressionStatement","src":"29404:46:29"},{"nodeType":"YulAssignment","src":"29459:28:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29477:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"29482:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29473:3:29"},"nodeType":"YulFunctionCall","src":"29473:14:29"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"29459:10:29"}]}]},"name":"abi_encodeUpdatedPos_t_bytes32_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"29367:6:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"29375:3:29","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"29383:10:29","type":""}],"src":"29314:179:29"},{"body":{"nodeType":"YulBlock","src":"29574:38:29","statements":[{"nodeType":"YulAssignment","src":"29584:22:29","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"29596:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"29601:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29592:3:29"},"nodeType":"YulFunctionCall","src":"29592:14:29"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"29584:4:29"}]}]},"name":"array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"29561:3:29","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"29569:4:29","type":""}],"src":"29499:113:29"},{"body":{"nodeType":"YulBlock","src":"29772:608:29","statements":[{"nodeType":"YulVariableDeclaration","src":"29782:68:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29844:5:29"}],"functionName":{"name":"array_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"29796:47:29"},"nodeType":"YulFunctionCall","src":"29796:54:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"29786:6:29","type":""}]},{"nodeType":"YulAssignment","src":"29859:93:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29940:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"29945:6:29"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29866:73:29"},"nodeType":"YulFunctionCall","src":"29866:86:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29859:3:29"}]},{"nodeType":"YulVariableDeclaration","src":"29961:71:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30026:5:29"}],"functionName":{"name":"array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"29976:49:29"},"nodeType":"YulFunctionCall","src":"29976:56:29"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"29965:7:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"30041:21:29","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"30055:7:29"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"30045:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"30131:224:29","statements":[{"nodeType":"YulVariableDeclaration","src":"30145:34:29","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"30172:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"30166:5:29"},"nodeType":"YulFunctionCall","src":"30166:13:29"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"30149:13:29","type":""}]},{"nodeType":"YulAssignment","src":"30192:70:29","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"30243:13:29"},{"name":"pos","nodeType":"YulIdentifier","src":"30258:3:29"}],"functionName":{"name":"abi_encodeUpdatedPos_t_bytes32_to_t_bytes32","nodeType":"YulIdentifier","src":"30199:43:29"},"nodeType":"YulFunctionCall","src":"30199:63:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30192:3:29"}]},{"nodeType":"YulAssignment","src":"30275:70:29","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"30338:6:29"}],"functionName":{"name":"array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"30285:52:29"},"nodeType":"YulFunctionCall","src":"30285:60:29"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"30275:6:29"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"30093:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"30096:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"30090:2:29"},"nodeType":"YulFunctionCall","src":"30090:13:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"30104:18:29","statements":[{"nodeType":"YulAssignment","src":"30106:14:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"30115:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"30118:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30111:3:29"},"nodeType":"YulFunctionCall","src":"30111:9:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"30106:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"30075:14:29","statements":[{"nodeType":"YulVariableDeclaration","src":"30077:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"30086:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"30081:1:29","type":""}]}]},"src":"30071:284:29"},{"nodeType":"YulAssignment","src":"30364:10:29","value":{"name":"pos","nodeType":"YulIdentifier","src":"30371:3:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30364:3:29"}]}]},"name":"abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29751:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"29758:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29767:3:29","type":""}],"src":"29648:732:29"},{"body":{"nodeType":"YulBlock","src":"30534:225:29","statements":[{"nodeType":"YulAssignment","src":"30544:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30556:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"30567:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30552:3:29"},"nodeType":"YulFunctionCall","src":"30552:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30544:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30591:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"30602:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30587:3:29"},"nodeType":"YulFunctionCall","src":"30587:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30610:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"30616:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30606:3:29"},"nodeType":"YulFunctionCall","src":"30606:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30580:6:29"},"nodeType":"YulFunctionCall","src":"30580:47:29"},"nodeType":"YulExpressionStatement","src":"30580:47:29"},{"nodeType":"YulAssignment","src":"30636:116:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"30738:6:29"},{"name":"tail","nodeType":"YulIdentifier","src":"30747:4:29"}],"functionName":{"name":"abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30644:93:29"},"nodeType":"YulFunctionCall","src":"30644:108:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30636:4:29"}]}]},"name":"abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30506:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"30518:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30529:4:29","type":""}],"src":"30386:373:29"},{"body":{"nodeType":"YulBlock","src":"30888:814:29","statements":[{"body":{"nodeType":"YulBlock","src":"30935:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"30937:77:29"},"nodeType":"YulFunctionCall","src":"30937:79:29"},"nodeType":"YulExpressionStatement","src":"30937:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"30909:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"30918:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30905:3:29"},"nodeType":"YulFunctionCall","src":"30905:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"30930:3:29","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"30901:3:29"},"nodeType":"YulFunctionCall","src":"30901:33:29"},"nodeType":"YulIf","src":"30898:120:29"},{"nodeType":"YulBlock","src":"31028:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"31043:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"31057:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"31047:6:29","type":""}]},{"nodeType":"YulAssignment","src":"31072:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31107:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"31118:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31103:3:29"},"nodeType":"YulFunctionCall","src":"31103:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"31127:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"31082:20:29"},"nodeType":"YulFunctionCall","src":"31082:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"31072:6:29"}]}]},{"nodeType":"YulBlock","src":"31155:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"31170:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"31184:2:29","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"31174:6:29","type":""}]},{"nodeType":"YulAssignment","src":"31200:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31235:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"31246:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31231:3:29"},"nodeType":"YulFunctionCall","src":"31231:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"31255:7:29"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"31210:20:29"},"nodeType":"YulFunctionCall","src":"31210:53:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"31200:6:29"}]}]},{"nodeType":"YulBlock","src":"31283:115:29","statements":[{"nodeType":"YulVariableDeclaration","src":"31298:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"31312:2:29","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"31302:6:29","type":""}]},{"nodeType":"YulAssignment","src":"31328:60:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31360:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"31371:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31356:3:29"},"nodeType":"YulFunctionCall","src":"31356:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"31380:7:29"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"31338:17:29"},"nodeType":"YulFunctionCall","src":"31338:50:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"31328:6:29"}]}]},{"nodeType":"YulBlock","src":"31408:287:29","statements":[{"nodeType":"YulVariableDeclaration","src":"31423:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31454:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"31465:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31450:3:29"},"nodeType":"YulFunctionCall","src":"31450:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"31437:12:29"},"nodeType":"YulFunctionCall","src":"31437:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"31427:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"31516:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"31518:77:29"},"nodeType":"YulFunctionCall","src":"31518:79:29"},"nodeType":"YulExpressionStatement","src":"31518:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"31488:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"31496:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"31485:2:29"},"nodeType":"YulFunctionCall","src":"31485:30:29"},"nodeType":"YulIf","src":"31482:117:29"},{"nodeType":"YulAssignment","src":"31613:72:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31657:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"31668:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31653:3:29"},"nodeType":"YulFunctionCall","src":"31653:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"31677:7:29"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"31623:29:29"},"nodeType":"YulFunctionCall","src":"31623:62:29"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"31613:6:29"}]}]}]},"name":"abi_decode_tuple_t_addresst_bytes32t_boolt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30834:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"30845:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"30857:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"30865:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"30873:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"30881:6:29","type":""}],"src":"30765:937:29"},{"body":{"nodeType":"YulBlock","src":"31892:1083:29","statements":[{"body":{"nodeType":"YulBlock","src":"31938:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"31940:77:29"},"nodeType":"YulFunctionCall","src":"31940:79:29"},"nodeType":"YulExpressionStatement","src":"31940:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"31913:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"31922:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31909:3:29"},"nodeType":"YulFunctionCall","src":"31909:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"31934:2:29","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"31905:3:29"},"nodeType":"YulFunctionCall","src":"31905:32:29"},"nodeType":"YulIf","src":"31902:119:29"},{"nodeType":"YulBlock","src":"32031:302:29","statements":[{"nodeType":"YulVariableDeclaration","src":"32046:45:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32077:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"32088:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32073:3:29"},"nodeType":"YulFunctionCall","src":"32073:17:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"32060:12:29"},"nodeType":"YulFunctionCall","src":"32060:31:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"32050:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"32138:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"32140:77:29"},"nodeType":"YulFunctionCall","src":"32140:79:29"},"nodeType":"YulExpressionStatement","src":"32140:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"32110:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"32118:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"32107:2:29"},"nodeType":"YulFunctionCall","src":"32107:30:29"},"nodeType":"YulIf","src":"32104:117:29"},{"nodeType":"YulAssignment","src":"32235:88:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32295:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"32306:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32291:3:29"},"nodeType":"YulFunctionCall","src":"32291:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"32315:7:29"}],"functionName":{"name":"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"32245:45:29"},"nodeType":"YulFunctionCall","src":"32245:78:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"32235:6:29"}]}]},{"nodeType":"YulBlock","src":"32343:303:29","statements":[{"nodeType":"YulVariableDeclaration","src":"32358:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32389:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"32400:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32385:3:29"},"nodeType":"YulFunctionCall","src":"32385:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"32372:12:29"},"nodeType":"YulFunctionCall","src":"32372:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"32362:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"32451:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"32453:77:29"},"nodeType":"YulFunctionCall","src":"32453:79:29"},"nodeType":"YulExpressionStatement","src":"32453:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"32423:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"32431:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"32420:2:29"},"nodeType":"YulFunctionCall","src":"32420:30:29"},"nodeType":"YulIf","src":"32417:117:29"},{"nodeType":"YulAssignment","src":"32548:88:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32608:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"32619:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32604:3:29"},"nodeType":"YulFunctionCall","src":"32604:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"32628:7:29"}],"functionName":{"name":"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"32558:45:29"},"nodeType":"YulFunctionCall","src":"32558:78:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"32548:6:29"}]}]},{"nodeType":"YulBlock","src":"32656:312:29","statements":[{"nodeType":"YulVariableDeclaration","src":"32671:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32702:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"32713:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32698:3:29"},"nodeType":"YulFunctionCall","src":"32698:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"32685:12:29"},"nodeType":"YulFunctionCall","src":"32685:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"32675:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"32764:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"32766:77:29"},"nodeType":"YulFunctionCall","src":"32766:79:29"},"nodeType":"YulExpressionStatement","src":"32766:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"32736:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"32744:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"32733:2:29"},"nodeType":"YulFunctionCall","src":"32733:30:29"},"nodeType":"YulIf","src":"32730:117:29"},{"nodeType":"YulAssignment","src":"32861:97:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32930:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"32941:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32926:3:29"},"nodeType":"YulFunctionCall","src":"32926:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"32950:7:29"}],"functionName":{"name":"abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"32871:54:29"},"nodeType":"YulFunctionCall","src":"32871:87:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"32861:6:29"}]}]}]},"name":"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31846:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"31857:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"31869:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"31877:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"31885:6:29","type":""}],"src":"31708:1267:29"},{"body":{"nodeType":"YulBlock","src":"33090:688:29","statements":[{"body":{"nodeType":"YulBlock","src":"33136:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"33138:77:29"},"nodeType":"YulFunctionCall","src":"33138:79:29"},"nodeType":"YulExpressionStatement","src":"33138:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"33111:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"33120:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33107:3:29"},"nodeType":"YulFunctionCall","src":"33107:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"33132:2:29","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"33103:3:29"},"nodeType":"YulFunctionCall","src":"33103:32:29"},"nodeType":"YulIf","src":"33100:119:29"},{"nodeType":"YulBlock","src":"33229:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"33244:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"33258:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"33248:6:29","type":""}]},{"nodeType":"YulAssignment","src":"33273:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33308:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"33319:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33304:3:29"},"nodeType":"YulFunctionCall","src":"33304:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"33328:7:29"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"33283:20:29"},"nodeType":"YulFunctionCall","src":"33283:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"33273:6:29"}]}]},{"nodeType":"YulBlock","src":"33356:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"33371:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"33385:2:29","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"33375:6:29","type":""}]},{"nodeType":"YulAssignment","src":"33401:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33436:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"33447:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33432:3:29"},"nodeType":"YulFunctionCall","src":"33432:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"33456:7:29"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"33411:20:29"},"nodeType":"YulFunctionCall","src":"33411:53:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"33401:6:29"}]}]},{"nodeType":"YulBlock","src":"33484:287:29","statements":[{"nodeType":"YulVariableDeclaration","src":"33499:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33530:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"33541:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33526:3:29"},"nodeType":"YulFunctionCall","src":"33526:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"33513:12:29"},"nodeType":"YulFunctionCall","src":"33513:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"33503:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"33592:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"33594:77:29"},"nodeType":"YulFunctionCall","src":"33594:79:29"},"nodeType":"YulExpressionStatement","src":"33594:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"33564:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"33572:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"33561:2:29"},"nodeType":"YulFunctionCall","src":"33561:30:29"},"nodeType":"YulIf","src":"33558:117:29"},{"nodeType":"YulAssignment","src":"33689:72:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33733:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"33744:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33729:3:29"},"nodeType":"YulFunctionCall","src":"33729:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"33753:7:29"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"33699:29:29"},"nodeType":"YulFunctionCall","src":"33699:62:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"33689:6:29"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_bytes32t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33044:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"33055:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"33067:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"33075:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"33083:6:29","type":""}],"src":"32981:797:29"},{"body":{"nodeType":"YulBlock","src":"33875:448:29","statements":[{"body":{"nodeType":"YulBlock","src":"33921:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"33923:77:29"},"nodeType":"YulFunctionCall","src":"33923:79:29"},"nodeType":"YulExpressionStatement","src":"33923:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"33896:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"33905:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33892:3:29"},"nodeType":"YulFunctionCall","src":"33892:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"33917:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"33888:3:29"},"nodeType":"YulFunctionCall","src":"33888:32:29"},"nodeType":"YulIf","src":"33885:119:29"},{"nodeType":"YulBlock","src":"34014:302:29","statements":[{"nodeType":"YulVariableDeclaration","src":"34029:45:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34060:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"34071:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34056:3:29"},"nodeType":"YulFunctionCall","src":"34056:17:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"34043:12:29"},"nodeType":"YulFunctionCall","src":"34043:31:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"34033:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"34121:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"34123:77:29"},"nodeType":"YulFunctionCall","src":"34123:79:29"},"nodeType":"YulExpressionStatement","src":"34123:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"34093:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"34101:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"34090:2:29"},"nodeType":"YulFunctionCall","src":"34090:30:29"},"nodeType":"YulIf","src":"34087:117:29"},{"nodeType":"YulAssignment","src":"34218:88:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34278:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"34289:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34274:3:29"},"nodeType":"YulFunctionCall","src":"34274:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"34298:7:29"}],"functionName":{"name":"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"34228:45:29"},"nodeType":"YulFunctionCall","src":"34228:78:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"34218:6:29"}]}]}]},"name":"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33845:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"33856:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"33868:6:29","type":""}],"src":"33784:539:29"},{"body":{"nodeType":"YulBlock","src":"34392:52:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34409:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34431:5:29"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"34414:16:29"},"nodeType":"YulFunctionCall","src":"34414:23:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34402:6:29"},"nodeType":"YulFunctionCall","src":"34402:36:29"},"nodeType":"YulExpressionStatement","src":"34402:36:29"}]},"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34380:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"34387:3:29","type":""}],"src":"34329:115:29"},{"body":{"nodeType":"YulBlock","src":"34546:122:29","statements":[{"nodeType":"YulAssignment","src":"34556:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34568:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"34579:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34564:3:29"},"nodeType":"YulFunctionCall","src":"34564:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34556:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"34634:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34647:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"34658:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34643:3:29"},"nodeType":"YulFunctionCall","src":"34643:17:29"}],"functionName":{"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nodeType":"YulIdentifier","src":"34592:41:29"},"nodeType":"YulFunctionCall","src":"34592:69:29"},"nodeType":"YulExpressionStatement","src":"34592:69:29"}]},"name":"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34518:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"34530:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34541:4:29","type":""}],"src":"34450:218:29"},{"body":{"nodeType":"YulBlock","src":"34787:34:29","statements":[{"nodeType":"YulAssignment","src":"34797:18:29","value":{"name":"pos","nodeType":"YulIdentifier","src":"34812:3:29"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"34797:11:29"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"34759:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"34764:6:29","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"34775:11:29","type":""}],"src":"34674:147:29"},{"body":{"nodeType":"YulBlock","src":"34967:196:29","statements":[{"nodeType":"YulAssignment","src":"34977:95:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35060:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"35065:6:29"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"34984:75:29"},"nodeType":"YulFunctionCall","src":"34984:88:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"34977:3:29"}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"35106:5:29"},{"name":"pos","nodeType":"YulIdentifier","src":"35113:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"35118:6:29"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"35082:23:29"},"nodeType":"YulFunctionCall","src":"35082:43:29"},"nodeType":"YulExpressionStatement","src":"35082:43:29"},{"nodeType":"YulAssignment","src":"35134:23:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35145:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"35150:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35141:3:29"},"nodeType":"YulFunctionCall","src":"35141:16:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"35134:3:29"}]}]},"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"34940:5:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"34947:6:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"34955:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"34963:3:29","type":""}],"src":"34849:314:29"},{"body":{"nodeType":"YulBlock","src":"35211:52:29","statements":[{"nodeType":"YulAssignment","src":"35221:35:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"35246:2:29","type":"","value":"96"},{"name":"value","nodeType":"YulIdentifier","src":"35250:5:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"35242:3:29"},"nodeType":"YulFunctionCall","src":"35242:14:29"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"35221:8:29"}]}]},"name":"shift_left_96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35192:5:29","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"35202:8:29","type":""}],"src":"35169:94:29"},{"body":{"nodeType":"YulBlock","src":"35316:47:29","statements":[{"nodeType":"YulAssignment","src":"35326:31:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35351:5:29"}],"functionName":{"name":"shift_left_96","nodeType":"YulIdentifier","src":"35337:13:29"},"nodeType":"YulFunctionCall","src":"35337:20:29"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"35326:7:29"}]}]},"name":"leftAlign_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35298:5:29","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"35308:7:29","type":""}],"src":"35269:94:29"},{"body":{"nodeType":"YulBlock","src":"35416:53:29","statements":[{"nodeType":"YulAssignment","src":"35426:37:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35457:5:29"}],"functionName":{"name":"leftAlign_t_uint160","nodeType":"YulIdentifier","src":"35437:19:29"},"nodeType":"YulFunctionCall","src":"35437:26:29"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"35426:7:29"}]}]},"name":"leftAlign_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35398:5:29","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"35408:7:29","type":""}],"src":"35369:100:29"},{"body":{"nodeType":"YulBlock","src":"35558:74:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35575:3:29"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35618:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"35600:17:29"},"nodeType":"YulFunctionCall","src":"35600:24:29"}],"functionName":{"name":"leftAlign_t_address","nodeType":"YulIdentifier","src":"35580:19:29"},"nodeType":"YulFunctionCall","src":"35580:45:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35568:6:29"},"nodeType":"YulFunctionCall","src":"35568:58:29"},"nodeType":"YulExpressionStatement","src":"35568:58:29"}]},"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35546:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"35553:3:29","type":""}],"src":"35475:157:29"},{"body":{"nodeType":"YulBlock","src":"35685:32:29","statements":[{"nodeType":"YulAssignment","src":"35695:16:29","value":{"name":"value","nodeType":"YulIdentifier","src":"35706:5:29"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"35695:7:29"}]}]},"name":"leftAlign_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35667:5:29","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"35677:7:29","type":""}],"src":"35638:79:29"},{"body":{"nodeType":"YulBlock","src":"35806:74:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35823:3:29"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35866:5:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"35848:17:29"},"nodeType":"YulFunctionCall","src":"35848:24:29"}],"functionName":{"name":"leftAlign_t_uint256","nodeType":"YulIdentifier","src":"35828:19:29"},"nodeType":"YulFunctionCall","src":"35828:45:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35816:6:29"},"nodeType":"YulFunctionCall","src":"35816:58:29"},"nodeType":"YulExpressionStatement","src":"35816:58:29"}]},"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35794:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"35801:3:29","type":""}],"src":"35723:157:29"},{"body":{"nodeType":"YulBlock","src":"36086:373:29","statements":[{"nodeType":"YulAssignment","src":"36097:110:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"36186:6:29"},{"name":"value1","nodeType":"YulIdentifier","src":"36194:6:29"},{"name":"pos","nodeType":"YulIdentifier","src":"36203:3:29"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"36104:81:29"},"nodeType":"YulFunctionCall","src":"36104:103:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36097:3:29"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"36279:6:29"},{"name":"pos","nodeType":"YulIdentifier","src":"36288:3:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"36217:61:29"},"nodeType":"YulFunctionCall","src":"36217:75:29"},"nodeType":"YulExpressionStatement","src":"36217:75:29"},{"nodeType":"YulAssignment","src":"36301:19:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36312:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"36317:2:29","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36308:3:29"},"nodeType":"YulFunctionCall","src":"36308:12:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36301:3:29"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"36392:6:29"},{"name":"pos","nodeType":"YulIdentifier","src":"36401:3:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"36330:61:29"},"nodeType":"YulFunctionCall","src":"36330:75:29"},"nodeType":"YulExpressionStatement","src":"36330:75:29"},{"nodeType":"YulAssignment","src":"36414:19:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36425:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"36430:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36421:3:29"},"nodeType":"YulFunctionCall","src":"36421:12:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36414:3:29"}]},{"nodeType":"YulAssignment","src":"36443:10:29","value":{"name":"pos","nodeType":"YulIdentifier","src":"36450:3:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"36443:3:29"}]}]},"name":"abi_encode_tuple_packed_t_bytes_calldata_ptr_t_address_t_uint256__to_t_bytes_memory_ptr_t_address_t_uint256__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"36041:3:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"36047:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"36055:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"36063:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"36071:6:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"36082:3:29","type":""}],"src":"35886:573:29"},{"body":{"nodeType":"YulBlock","src":"36573:265:29","statements":[{"nodeType":"YulVariableDeclaration","src":"36583:52:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36629:5:29"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"36597:31:29"},"nodeType":"YulFunctionCall","src":"36597:38:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"36587:6:29","type":""}]},{"nodeType":"YulAssignment","src":"36644:95:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36727:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"36732:6:29"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"36651:75:29"},"nodeType":"YulFunctionCall","src":"36651:88:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36644:3:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36774:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"36781:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36770:3:29"},"nodeType":"YulFunctionCall","src":"36770:16:29"},{"name":"pos","nodeType":"YulIdentifier","src":"36788:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"36793:6:29"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"36748:21:29"},"nodeType":"YulFunctionCall","src":"36748:52:29"},"nodeType":"YulExpressionStatement","src":"36748:52:29"},{"nodeType":"YulAssignment","src":"36809:23:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36820:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"36825:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36816:3:29"},"nodeType":"YulFunctionCall","src":"36816:16:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"36809:3:29"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"36554:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"36561:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"36569:3:29","type":""}],"src":"36465:373:29"},{"body":{"nodeType":"YulBlock","src":"36978:137:29","statements":[{"nodeType":"YulAssignment","src":"36989:100:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"37076:6:29"},{"name":"pos","nodeType":"YulIdentifier","src":"37085:3:29"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"36996:79:29"},"nodeType":"YulFunctionCall","src":"36996:93:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36989:3:29"}]},{"nodeType":"YulAssignment","src":"37099:10:29","value":{"name":"pos","nodeType":"YulIdentifier","src":"37106:3:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"37099:3:29"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"36957:3:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"36963:6:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"36974:3:29","type":""}],"src":"36844:271:29"},{"body":{"nodeType":"YulBlock","src":"37149:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37166:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"37169:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37159:6:29"},"nodeType":"YulFunctionCall","src":"37159:88:29"},"nodeType":"YulExpressionStatement","src":"37159:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37263:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"37266:4:29","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37256:6:29"},"nodeType":"YulFunctionCall","src":"37256:15:29"},"nodeType":"YulExpressionStatement","src":"37256:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37287:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"37290:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"37280:6:29"},"nodeType":"YulFunctionCall","src":"37280:15:29"},"nodeType":"YulExpressionStatement","src":"37280:15:29"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"37121:180:29"},{"body":{"nodeType":"YulBlock","src":"37372:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37389:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37412:5:29"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"37394:17:29"},"nodeType":"YulFunctionCall","src":"37394:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37382:6:29"},"nodeType":"YulFunctionCall","src":"37382:37:29"},"nodeType":"YulExpressionStatement","src":"37382:37:29"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"37360:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"37367:3:29","type":""}],"src":"37307:118:29"},{"body":{"nodeType":"YulBlock","src":"37529:124:29","statements":[{"nodeType":"YulAssignment","src":"37539:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37551:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"37562:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37547:3:29"},"nodeType":"YulFunctionCall","src":"37547:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37539:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"37619:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37632:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"37643:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37628:3:29"},"nodeType":"YulFunctionCall","src":"37628:17:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"37575:43:29"},"nodeType":"YulFunctionCall","src":"37575:71:29"},"nodeType":"YulExpressionStatement","src":"37575:71:29"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37501:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"37513:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37524:4:29","type":""}],"src":"37431:222:29"},{"body":{"nodeType":"YulBlock","src":"37785:206:29","statements":[{"nodeType":"YulAssignment","src":"37795:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37807:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"37818:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37803:3:29"},"nodeType":"YulFunctionCall","src":"37803:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37795:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"37875:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37888:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"37899:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37884:3:29"},"nodeType":"YulFunctionCall","src":"37884:17:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"37831:43:29"},"nodeType":"YulFunctionCall","src":"37831:71:29"},"nodeType":"YulExpressionStatement","src":"37831:71:29"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"37956:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37969:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"37980:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37965:3:29"},"nodeType":"YulFunctionCall","src":"37965:18:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"37912:43:29"},"nodeType":"YulFunctionCall","src":"37912:72:29"},"nodeType":"YulExpressionStatement","src":"37912:72:29"}]},"name":"abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37749:9:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"37761:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"37769:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37780:4:29","type":""}],"src":"37659:332:29"},{"body":{"nodeType":"YulBlock","src":"38086:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38103:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"38106:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"38096:6:29"},"nodeType":"YulFunctionCall","src":"38096:12:29"},"nodeType":"YulExpressionStatement","src":"38096:12:29"}]},"name":"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad","nodeType":"YulFunctionDefinition","src":"37997:117:29"},{"body":{"nodeType":"YulBlock","src":"38209:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38226:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"38229:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"38219:6:29"},"nodeType":"YulFunctionCall","src":"38219:12:29"},"nodeType":"YulExpressionStatement","src":"38219:12:29"}]},"name":"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a","nodeType":"YulFunctionDefinition","src":"38120:117:29"},{"body":{"nodeType":"YulBlock","src":"38332:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38349:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"38352:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"38342:6:29"},"nodeType":"YulFunctionCall","src":"38342:12:29"},"nodeType":"YulExpressionStatement","src":"38342:12:29"}]},"name":"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e","nodeType":"YulFunctionDefinition","src":"38243:117:29"},{"body":{"nodeType":"YulBlock","src":"38456:634:29","statements":[{"nodeType":"YulVariableDeclaration","src":"38466:51:29","value":{"arguments":[{"name":"ptr_to_tail","nodeType":"YulIdentifier","src":"38505:11:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"38492:12:29"},"nodeType":"YulFunctionCall","src":"38492:25:29"},"variables":[{"name":"rel_offset_of_tail","nodeType":"YulTypedName","src":"38470:18:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"38611:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad","nodeType":"YulIdentifier","src":"38613:77:29"},"nodeType":"YulFunctionCall","src":"38613:79:29"},"nodeType":"YulExpressionStatement","src":"38613:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"38540:18:29"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"38568:12:29"},"nodeType":"YulFunctionCall","src":"38568:14:29"},{"name":"base_ref","nodeType":"YulIdentifier","src":"38584:8:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38564:3:29"},"nodeType":"YulFunctionCall","src":"38564:29:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38599:4:29","type":"","value":"0x20"},{"kind":"number","nodeType":"YulLiteral","src":"38605:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38595:3:29"},"nodeType":"YulFunctionCall","src":"38595:12:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38560:3:29"},"nodeType":"YulFunctionCall","src":"38560:48:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"38536:3:29"},"nodeType":"YulFunctionCall","src":"38536:73:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"38529:6:29"},"nodeType":"YulFunctionCall","src":"38529:81:29"},"nodeType":"YulIf","src":"38526:168:29"},{"nodeType":"YulAssignment","src":"38703:41:29","value":{"arguments":[{"name":"base_ref","nodeType":"YulIdentifier","src":"38715:8:29"},{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"38725:18:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38711:3:29"},"nodeType":"YulFunctionCall","src":"38711:33:29"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"38703:4:29"}]},{"nodeType":"YulAssignment","src":"38754:28:29","value":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"38777:4:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"38764:12:29"},"nodeType":"YulFunctionCall","src":"38764:18:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"38754:6:29"}]},{"body":{"nodeType":"YulBlock","src":"38825:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a","nodeType":"YulIdentifier","src":"38827:77:29"},"nodeType":"YulFunctionCall","src":"38827:79:29"},"nodeType":"YulExpressionStatement","src":"38827:79:29"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"38797:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"38805:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"38794:2:29"},"nodeType":"YulFunctionCall","src":"38794:30:29"},"nodeType":"YulIf","src":"38791:117:29"},{"nodeType":"YulAssignment","src":"38917:21:29","value":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"38929:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"38935:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38925:3:29"},"nodeType":"YulFunctionCall","src":"38925:13:29"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"38917:4:29"}]},{"body":{"nodeType":"YulBlock","src":"39000:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e","nodeType":"YulIdentifier","src":"39002:77:29"},"nodeType":"YulFunctionCall","src":"39002:79:29"},"nodeType":"YulExpressionStatement","src":"39002:79:29"}]},"condition":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"38954:4:29"},{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"38964:12:29"},"nodeType":"YulFunctionCall","src":"38964:14:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"38984:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"38992:4:29","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"38980:3:29"},"nodeType":"YulFunctionCall","src":"38980:17:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38960:3:29"},"nodeType":"YulFunctionCall","src":"38960:38:29"}],"functionName":{"name":"sgt","nodeType":"YulIdentifier","src":"38950:3:29"},"nodeType":"YulFunctionCall","src":"38950:49:29"},"nodeType":"YulIf","src":"38947:136:29"}]},"name":"access_calldata_tail_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nodeType":"YulTypedName","src":"38417:8:29","type":""},{"name":"ptr_to_tail","nodeType":"YulTypedName","src":"38427:11:29","type":""}],"returnVariables":[{"name":"addr","nodeType":"YulTypedName","src":"38443:4:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"38449:6:29","type":""}],"src":"38366:724:29"},{"body":{"nodeType":"YulBlock","src":"39240:147:29","statements":[{"nodeType":"YulAssignment","src":"39251:110:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"39340:6:29"},{"name":"value1","nodeType":"YulIdentifier","src":"39348:6:29"},{"name":"pos","nodeType":"YulIdentifier","src":"39357:3:29"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"39258:81:29"},"nodeType":"YulFunctionCall","src":"39258:103:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"39251:3:29"}]},{"nodeType":"YulAssignment","src":"39371:10:29","value":{"name":"pos","nodeType":"YulIdentifier","src":"39378:3:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"39371:3:29"}]}]},"name":"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"39211:3:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"39217:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"39225:6:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"39236:3:29","type":""}],"src":"39096:291:29"},{"body":{"nodeType":"YulBlock","src":"39547:288:29","statements":[{"nodeType":"YulAssignment","src":"39557:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39569:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"39580:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39565:3:29"},"nodeType":"YulFunctionCall","src":"39565:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39557:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"39637:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39650:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"39661:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39646:3:29"},"nodeType":"YulFunctionCall","src":"39646:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"39593:43:29"},"nodeType":"YulFunctionCall","src":"39593:71:29"},"nodeType":"YulExpressionStatement","src":"39593:71:29"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"39718:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39731:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"39742:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39727:3:29"},"nodeType":"YulFunctionCall","src":"39727:18:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"39674:43:29"},"nodeType":"YulFunctionCall","src":"39674:72:29"},"nodeType":"YulExpressionStatement","src":"39674:72:29"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"39800:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39813:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"39824:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39809:3:29"},"nodeType":"YulFunctionCall","src":"39809:18:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"39756:43:29"},"nodeType":"YulFunctionCall","src":"39756:72:29"},"nodeType":"YulExpressionStatement","src":"39756:72:29"}]},"name":"abi_encode_tuple_t_address_t_bytes32_t_address__to_t_address_t_bytes32_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39503:9:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"39515:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"39523:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"39531:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39542:4:29","type":""}],"src":"39393:442:29"},{"body":{"nodeType":"YulBlock","src":"39967:206:29","statements":[{"nodeType":"YulAssignment","src":"39977:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39989:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"40000:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39985:3:29"},"nodeType":"YulFunctionCall","src":"39985:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39977:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"40057:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40070:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"40081:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40066:3:29"},"nodeType":"YulFunctionCall","src":"40066:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"40013:43:29"},"nodeType":"YulFunctionCall","src":"40013:71:29"},"nodeType":"YulExpressionStatement","src":"40013:71:29"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"40138:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40151:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"40162:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40147:3:29"},"nodeType":"YulFunctionCall","src":"40147:18:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"40094:43:29"},"nodeType":"YulFunctionCall","src":"40094:72:29"},"nodeType":"YulExpressionStatement","src":"40094:72:29"}]},"name":"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39931:9:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"39943:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"39951:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39962:4:29","type":""}],"src":"39841:332:29"},{"body":{"nodeType":"YulBlock","src":"40373:434:29","statements":[{"nodeType":"YulAssignment","src":"40383:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40395:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"40406:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40391:3:29"},"nodeType":"YulFunctionCall","src":"40391:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40383:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"40464:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40477:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"40488:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40473:3:29"},"nodeType":"YulFunctionCall","src":"40473:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"40420:43:29"},"nodeType":"YulFunctionCall","src":"40420:71:29"},"nodeType":"YulExpressionStatement","src":"40420:71:29"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"40545:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40558:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"40569:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40554:3:29"},"nodeType":"YulFunctionCall","src":"40554:18:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"40501:43:29"},"nodeType":"YulFunctionCall","src":"40501:72:29"},"nodeType":"YulExpressionStatement","src":"40501:72:29"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"40621:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40634:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"40645:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40630:3:29"},"nodeType":"YulFunctionCall","src":"40630:18:29"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"40583:37:29"},"nodeType":"YulFunctionCall","src":"40583:66:29"},"nodeType":"YulExpressionStatement","src":"40583:66:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40670:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"40681:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40666:3:29"},"nodeType":"YulFunctionCall","src":"40666:18:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"40690:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"40696:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"40686:3:29"},"nodeType":"YulFunctionCall","src":"40686:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40659:6:29"},"nodeType":"YulFunctionCall","src":"40659:48:29"},"nodeType":"YulExpressionStatement","src":"40659:48:29"},{"nodeType":"YulAssignment","src":"40716:84:29","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"40786:6:29"},{"name":"tail","nodeType":"YulIdentifier","src":"40795:4:29"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40724:61:29"},"nodeType":"YulFunctionCall","src":"40724:76:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40716:4:29"}]}]},"name":"abi_encode_tuple_t_address_t_bytes32_t_bool_t_bytes_memory_ptr__to_t_address_t_bytes32_t_bool_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40321:9:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"40333:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"40341:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"40349:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"40357:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"40368:4:29","type":""}],"src":"40179:628:29"},{"body":{"nodeType":"YulBlock","src":"40869:60:29","statements":[{"nodeType":"YulAssignment","src":"40879:11:29","value":{"name":"ptr","nodeType":"YulIdentifier","src":"40887:3:29"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"40879:4:29"}]},{"nodeType":"YulAssignment","src":"40900:22:29","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"40912:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"40917:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40908:3:29"},"nodeType":"YulFunctionCall","src":"40908:14:29"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"40900:4:29"}]}]},"name":"array_dataslot_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"40856:3:29","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"40864:4:29","type":""}],"src":"40813:116:29"},{"body":{"nodeType":"YulBlock","src":"40980:105:29","statements":[{"nodeType":"YulAssignment","src":"40990:89:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"41005:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"41012:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"41001:3:29"},"nodeType":"YulFunctionCall","src":"41001:78:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"40990:7:29"}]}]},"name":"cleanup_t_bytes20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"40962:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"40972:7:29","type":""}],"src":"40935:150:29"},{"body":{"nodeType":"YulBlock","src":"41146:99:29","statements":[{"nodeType":"YulVariableDeclaration","src":"41157:42:29","value":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"41194:3:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"41188:5:29"},"nodeType":"YulFunctionCall","src":"41188:10:29"}],"functionName":{"name":"cleanup_t_bytes20","nodeType":"YulIdentifier","src":"41170:17:29"},"nodeType":"YulFunctionCall","src":"41170:29:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"41161:5:29","type":""}]},{"nodeType":"YulAssignment","src":"41209:29:29","value":{"name":"value","nodeType":"YulIdentifier","src":"41233:5:29"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"41209:11:29"}]}]},"name":"read_from_memoryt_bytes20","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"41126:3:29","type":""}],"returnVariables":[{"name":"returnValue","nodeType":"YulTypedName","src":"41134:11:29","type":""}],"src":"41091:154:29"},{"body":{"nodeType":"YulBlock","src":"41304:54:29","statements":[{"nodeType":"YulAssignment","src":"41314:37:29","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"41339:4:29"},{"name":"value","nodeType":"YulIdentifier","src":"41345:5:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"41335:3:29"},"nodeType":"YulFunctionCall","src":"41335:16:29"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"41314:8:29"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"41279:4:29","type":""},{"name":"value","nodeType":"YulTypedName","src":"41285:5:29","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"41295:8:29","type":""}],"src":"41251:107:29"},{"body":{"nodeType":"YulBlock","src":"41454:504:29","statements":[{"nodeType":"YulVariableDeclaration","src":"41465:52:29","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"41511:5:29"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"41479:31:29"},"nodeType":"YulFunctionCall","src":"41479:38:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"41469:6:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"41526:21:29","value":{"name":"array","nodeType":"YulIdentifier","src":"41542:5:29"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"41530:8:29","type":""}]},{"nodeType":"YulAssignment","src":"41557:52:29","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"41603:5:29"}],"functionName":{"name":"array_dataslot_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"41569:33:29"},"nodeType":"YulFunctionCall","src":"41569:40:29"},"variableNames":[{"name":"dataArea","nodeType":"YulIdentifier","src":"41557:8:29"}]},{"nodeType":"YulAssignment","src":"41619:44:29","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"41654:8:29"}],"functionName":{"name":"read_from_memoryt_bytes20","nodeType":"YulIdentifier","src":"41628:25:29"},"nodeType":"YulFunctionCall","src":"41628:35:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"41619:5:29"}]},{"body":{"nodeType":"YulBlock","src":"41691:260:29","statements":[{"nodeType":"YulAssignment","src":"41705:236:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"41735:5:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"41802:1:29","type":"","value":"8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"41809:2:29","type":"","value":"20"},{"name":"length","nodeType":"YulIdentifier","src":"41813:6:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"41805:3:29"},"nodeType":"YulFunctionCall","src":"41805:15:29"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"41798:3:29"},"nodeType":"YulFunctionCall","src":"41798:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"41843:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"41758:18:29"},"nodeType":"YulFunctionCall","src":"41758:169:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"41714:3:29"},"nodeType":"YulFunctionCall","src":"41714:227:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"41705:5:29"}]}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"41679:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"41687:2:29","type":"","value":"20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"41676:2:29"},"nodeType":"YulFunctionCall","src":"41676:14:29"},"nodeType":"YulIf","src":"41673:278:29"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes20","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"41438:5:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"41448:5:29","type":""}],"src":"41364:594:29"},{"body":{"nodeType":"YulBlock","src":"42011:32:29","statements":[{"nodeType":"YulAssignment","src":"42021:16:29","value":{"name":"value","nodeType":"YulIdentifier","src":"42032:5:29"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"42021:7:29"}]}]},"name":"leftAlign_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"41993:5:29","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"42003:7:29","type":""}],"src":"41964:79:29"},{"body":{"nodeType":"YulBlock","src":"42132:74:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42149:3:29"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"42192:5:29"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"42174:17:29"},"nodeType":"YulFunctionCall","src":"42174:24:29"}],"functionName":{"name":"leftAlign_t_bytes32","nodeType":"YulIdentifier","src":"42154:19:29"},"nodeType":"YulFunctionCall","src":"42154:45:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42142:6:29"},"nodeType":"YulFunctionCall","src":"42142:58:29"},"nodeType":"YulExpressionStatement","src":"42142:58:29"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"42120:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"42127:3:29","type":""}],"src":"42049:157:29"},{"body":{"nodeType":"YulBlock","src":"42356:253:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"42429:6:29"},{"name":"pos","nodeType":"YulIdentifier","src":"42438:3:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"42367:61:29"},"nodeType":"YulFunctionCall","src":"42367:75:29"},"nodeType":"YulExpressionStatement","src":"42367:75:29"},{"nodeType":"YulAssignment","src":"42451:19:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42462:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"42467:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42458:3:29"},"nodeType":"YulFunctionCall","src":"42458:12:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"42451:3:29"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"42542:6:29"},{"name":"pos","nodeType":"YulIdentifier","src":"42551:3:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"42480:61:29"},"nodeType":"YulFunctionCall","src":"42480:75:29"},"nodeType":"YulExpressionStatement","src":"42480:75:29"},{"nodeType":"YulAssignment","src":"42564:19:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42575:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"42580:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42571:3:29"},"nodeType":"YulFunctionCall","src":"42571:12:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"42564:3:29"}]},{"nodeType":"YulAssignment","src":"42593:10:29","value":{"name":"pos","nodeType":"YulIdentifier","src":"42600:3:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"42593:3:29"}]}]},"name":"abi_encode_tuple_packed_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"42327:3:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"42333:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"42341:6:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"42352:3:29","type":""}],"src":"42212:397:29"},{"body":{"nodeType":"YulBlock","src":"42643:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"42660:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"42663:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42653:6:29"},"nodeType":"YulFunctionCall","src":"42653:88:29"},"nodeType":"YulExpressionStatement","src":"42653:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"42757:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"42760:4:29","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42750:6:29"},"nodeType":"YulFunctionCall","src":"42750:15:29"},"nodeType":"YulExpressionStatement","src":"42750:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"42781:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"42784:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"42774:6:29"},"nodeType":"YulFunctionCall","src":"42774:15:29"},"nodeType":"YulExpressionStatement","src":"42774:15:29"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"42615:180:29"},{"body":{"nodeType":"YulBlock","src":"42852:269:29","statements":[{"nodeType":"YulAssignment","src":"42862:22:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"42876:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"42882:1:29","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"42872:3:29"},"nodeType":"YulFunctionCall","src":"42872:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"42862:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"42893:38:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"42923:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"42929:1:29","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"42919:3:29"},"nodeType":"YulFunctionCall","src":"42919:12:29"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"42897:18:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"42970:51:29","statements":[{"nodeType":"YulAssignment","src":"42984:27:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"42998:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"43006:4:29","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"42994:3:29"},"nodeType":"YulFunctionCall","src":"42994:17:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"42984:6:29"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"42950:18:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"42943:6:29"},"nodeType":"YulFunctionCall","src":"42943:26:29"},"nodeType":"YulIf","src":"42940:81:29"},{"body":{"nodeType":"YulBlock","src":"43073:42:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"43087:16:29"},"nodeType":"YulFunctionCall","src":"43087:18:29"},"nodeType":"YulExpressionStatement","src":"43087:18:29"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"43037:18:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"43060:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"43068:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"43057:2:29"},"nodeType":"YulFunctionCall","src":"43057:14:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"43034:2:29"},"nodeType":"YulFunctionCall","src":"43034:38:29"},"nodeType":"YulIf","src":"43031:84:29"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"42836:4:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"42845:6:29","type":""}],"src":"42801:320:29"},{"body":{"nodeType":"YulBlock","src":"43293:351:29","statements":[{"nodeType":"YulAssignment","src":"43303:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43315:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"43326:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43311:3:29"},"nodeType":"YulFunctionCall","src":"43311:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43303:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"43383:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43396:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"43407:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43392:3:29"},"nodeType":"YulFunctionCall","src":"43392:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"43339:43:29"},"nodeType":"YulFunctionCall","src":"43339:71:29"},"nodeType":"YulExpressionStatement","src":"43339:71:29"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"43458:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43471:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"43482:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43467:3:29"},"nodeType":"YulFunctionCall","src":"43467:18:29"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"43420:37:29"},"nodeType":"YulFunctionCall","src":"43420:66:29"},"nodeType":"YulExpressionStatement","src":"43420:66:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43507:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"43518:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43503:3:29"},"nodeType":"YulFunctionCall","src":"43503:18:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"43527:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"43533:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"43523:3:29"},"nodeType":"YulFunctionCall","src":"43523:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43496:6:29"},"nodeType":"YulFunctionCall","src":"43496:48:29"},"nodeType":"YulExpressionStatement","src":"43496:48:29"},{"nodeType":"YulAssignment","src":"43553:84:29","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"43623:6:29"},{"name":"tail","nodeType":"YulIdentifier","src":"43632:4:29"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"43561:61:29"},"nodeType":"YulFunctionCall","src":"43561:76:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43553:4:29"}]}]},"name":"abi_encode_tuple_t_address_t_bool_t_bytes_memory_ptr__to_t_address_t_bool_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"43249:9:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"43261:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"43269:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"43277:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"43288:4:29","type":""}],"src":"43127:517:29"},{"body":{"nodeType":"YulBlock","src":"43878:523:29","statements":[{"nodeType":"YulAssignment","src":"43888:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43900:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"43911:3:29","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43896:3:29"},"nodeType":"YulFunctionCall","src":"43896:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43888:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"43969:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43982:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"43993:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43978:3:29"},"nodeType":"YulFunctionCall","src":"43978:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"43925:43:29"},"nodeType":"YulFunctionCall","src":"43925:71:29"},"nodeType":"YulExpressionStatement","src":"43925:71:29"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"44050:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44063:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"44074:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44059:3:29"},"nodeType":"YulFunctionCall","src":"44059:18:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"44006:43:29"},"nodeType":"YulFunctionCall","src":"44006:72:29"},"nodeType":"YulExpressionStatement","src":"44006:72:29"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"44132:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44145:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"44156:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44141:3:29"},"nodeType":"YulFunctionCall","src":"44141:18:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"44088:43:29"},"nodeType":"YulFunctionCall","src":"44088:72:29"},"nodeType":"YulExpressionStatement","src":"44088:72:29"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"44214:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44227:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"44238:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44223:3:29"},"nodeType":"YulFunctionCall","src":"44223:18:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"44170:43:29"},"nodeType":"YulFunctionCall","src":"44170:72:29"},"nodeType":"YulExpressionStatement","src":"44170:72:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44263:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"44274:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44259:3:29"},"nodeType":"YulFunctionCall","src":"44259:19:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"44284:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"44290:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"44280:3:29"},"nodeType":"YulFunctionCall","src":"44280:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44252:6:29"},"nodeType":"YulFunctionCall","src":"44252:49:29"},"nodeType":"YulExpressionStatement","src":"44252:49:29"},{"nodeType":"YulAssignment","src":"44310:84:29","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"44380:6:29"},{"name":"tail","nodeType":"YulIdentifier","src":"44389:4:29"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"44318:61:29"},"nodeType":"YulFunctionCall","src":"44318:76:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"44310:4:29"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_address_t_bytes32_t_bytes_memory_ptr__to_t_address_t_address_t_address_t_bytes32_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"43818:9:29","type":""},{"name":"value4","nodeType":"YulTypedName","src":"43830:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"43838:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"43846:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"43854:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"43862:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"43873:4:29","type":""}],"src":"43650:751:29"},{"body":{"nodeType":"YulBlock","src":"44435:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44452:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"44455:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44445:6:29"},"nodeType":"YulFunctionCall","src":"44445:88:29"},"nodeType":"YulExpressionStatement","src":"44445:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44549:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"44552:4:29","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44542:6:29"},"nodeType":"YulFunctionCall","src":"44542:15:29"},"nodeType":"YulExpressionStatement","src":"44542:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44573:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"44576:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"44566:6:29"},"nodeType":"YulFunctionCall","src":"44566:15:29"},"nodeType":"YulExpressionStatement","src":"44566:15:29"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"44407:180:29"},{"body":{"nodeType":"YulBlock","src":"44636:190:29","statements":[{"nodeType":"YulAssignment","src":"44646:33:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"44673:5:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"44655:17:29"},"nodeType":"YulFunctionCall","src":"44655:24:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"44646:5:29"}]},{"body":{"nodeType":"YulBlock","src":"44769:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"44771:16:29"},"nodeType":"YulFunctionCall","src":"44771:18:29"},"nodeType":"YulExpressionStatement","src":"44771:18:29"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"44694:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"44701:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"44691:2:29"},"nodeType":"YulFunctionCall","src":"44691:77:29"},"nodeType":"YulIf","src":"44688:103:29"},{"nodeType":"YulAssignment","src":"44800:20:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"44811:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"44818:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44807:3:29"},"nodeType":"YulFunctionCall","src":"44807:13:29"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"44800:3:29"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"44622:5:29","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"44632:3:29","type":""}],"src":"44593:233:29"},{"body":{"nodeType":"YulBlock","src":"44970:269:29","statements":[{"nodeType":"YulAssignment","src":"44980:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44992:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"45003:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44988:3:29"},"nodeType":"YulFunctionCall","src":"44988:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"44980:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"45054:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45067:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"45078:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45063:3:29"},"nodeType":"YulFunctionCall","src":"45063:17:29"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"45016:37:29"},"nodeType":"YulFunctionCall","src":"45016:65:29"},"nodeType":"YulExpressionStatement","src":"45016:65:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45102:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"45113:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45098:3:29"},"nodeType":"YulFunctionCall","src":"45098:18:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"45122:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"45128:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"45118:3:29"},"nodeType":"YulFunctionCall","src":"45118:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45091:6:29"},"nodeType":"YulFunctionCall","src":"45091:48:29"},"nodeType":"YulExpressionStatement","src":"45091:48:29"},{"nodeType":"YulAssignment","src":"45148:84:29","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"45218:6:29"},{"name":"tail","nodeType":"YulIdentifier","src":"45227:4:29"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"45156:61:29"},"nodeType":"YulFunctionCall","src":"45156:76:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"45148:4:29"}]}]},"name":"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"44934:9:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"44946:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"44954:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"44965:4:29","type":""}],"src":"44832:407:29"},{"body":{"nodeType":"YulBlock","src":"45290:105:29","statements":[{"nodeType":"YulAssignment","src":"45300:89:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"45315:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"45322:66:29","type":"","value":"0xffffffffffffffffffff00000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"45311:3:29"},"nodeType":"YulFunctionCall","src":"45311:78:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"45300:7:29"}]}]},"name":"cleanup_t_bytes10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"45272:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"45282:7:29","type":""}],"src":"45245:150:29"},{"body":{"nodeType":"YulBlock","src":"45448:32:29","statements":[{"nodeType":"YulAssignment","src":"45458:16:29","value":{"name":"value","nodeType":"YulIdentifier","src":"45469:5:29"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"45458:7:29"}]}]},"name":"leftAlign_t_bytes10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"45430:5:29","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"45440:7:29","type":""}],"src":"45401:79:29"},{"body":{"nodeType":"YulBlock","src":"45569:74:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45586:3:29"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"45629:5:29"}],"functionName":{"name":"cleanup_t_bytes10","nodeType":"YulIdentifier","src":"45611:17:29"},"nodeType":"YulFunctionCall","src":"45611:24:29"}],"functionName":{"name":"leftAlign_t_bytes10","nodeType":"YulIdentifier","src":"45591:19:29"},"nodeType":"YulFunctionCall","src":"45591:45:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45579:6:29"},"nodeType":"YulFunctionCall","src":"45579:58:29"},"nodeType":"YulExpressionStatement","src":"45579:58:29"}]},"name":"abi_encode_t_bytes10_to_t_bytes10_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"45557:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"45564:3:29","type":""}],"src":"45486:157:29"},{"body":{"nodeType":"YulBlock","src":"45693:105:29","statements":[{"nodeType":"YulAssignment","src":"45703:89:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"45718:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"45725:66:29","type":"","value":"0xffff000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"45714:3:29"},"nodeType":"YulFunctionCall","src":"45714:78:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"45703:7:29"}]}]},"name":"cleanup_t_bytes2","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"45675:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"45685:7:29","type":""}],"src":"45649:149:29"},{"body":{"nodeType":"YulBlock","src":"45850:32:29","statements":[{"nodeType":"YulAssignment","src":"45860:16:29","value":{"name":"value","nodeType":"YulIdentifier","src":"45871:5:29"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"45860:7:29"}]}]},"name":"leftAlign_t_bytes2","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"45832:5:29","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"45842:7:29","type":""}],"src":"45804:78:29"},{"body":{"nodeType":"YulBlock","src":"45969:72:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45986:3:29"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"46027:5:29"}],"functionName":{"name":"cleanup_t_bytes2","nodeType":"YulIdentifier","src":"46010:16:29"},"nodeType":"YulFunctionCall","src":"46010:23:29"}],"functionName":{"name":"leftAlign_t_bytes2","nodeType":"YulIdentifier","src":"45991:18:29"},"nodeType":"YulFunctionCall","src":"45991:43:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45979:6:29"},"nodeType":"YulFunctionCall","src":"45979:56:29"},"nodeType":"YulExpressionStatement","src":"45979:56:29"}]},"name":"abi_encode_t_bytes2_to_t_bytes2_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"45957:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"45964:3:29","type":""}],"src":"45888:153:29"},{"body":{"nodeType":"YulBlock","src":"46094:32:29","statements":[{"nodeType":"YulAssignment","src":"46104:16:29","value":{"name":"value","nodeType":"YulIdentifier","src":"46115:5:29"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"46104:7:29"}]}]},"name":"leftAlign_t_bytes20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"46076:5:29","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"46086:7:29","type":""}],"src":"46047:79:29"},{"body":{"nodeType":"YulBlock","src":"46215:74:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46232:3:29"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"46275:5:29"}],"functionName":{"name":"cleanup_t_bytes20","nodeType":"YulIdentifier","src":"46257:17:29"},"nodeType":"YulFunctionCall","src":"46257:24:29"}],"functionName":{"name":"leftAlign_t_bytes20","nodeType":"YulIdentifier","src":"46237:19:29"},"nodeType":"YulFunctionCall","src":"46237:45:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46225:6:29"},"nodeType":"YulFunctionCall","src":"46225:58:29"},"nodeType":"YulExpressionStatement","src":"46225:58:29"}]},"name":"abi_encode_t_bytes20_to_t_bytes20_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"46203:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"46210:3:29","type":""}],"src":"46132:157:29"},{"body":{"nodeType":"YulBlock","src":"46465:363:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"46538:6:29"},{"name":"pos","nodeType":"YulIdentifier","src":"46547:3:29"}],"functionName":{"name":"abi_encode_t_bytes10_to_t_bytes10_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"46476:61:29"},"nodeType":"YulFunctionCall","src":"46476:75:29"},"nodeType":"YulExpressionStatement","src":"46476:75:29"},{"nodeType":"YulAssignment","src":"46560:19:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46571:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"46576:2:29","type":"","value":"10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46567:3:29"},"nodeType":"YulFunctionCall","src":"46567:12:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"46560:3:29"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"46649:6:29"},{"name":"pos","nodeType":"YulIdentifier","src":"46658:3:29"}],"functionName":{"name":"abi_encode_t_bytes2_to_t_bytes2_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"46589:59:29"},"nodeType":"YulFunctionCall","src":"46589:73:29"},"nodeType":"YulExpressionStatement","src":"46589:73:29"},{"nodeType":"YulAssignment","src":"46671:18:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46682:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"46687:1:29","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46678:3:29"},"nodeType":"YulFunctionCall","src":"46678:11:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"46671:3:29"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"46761:6:29"},{"name":"pos","nodeType":"YulIdentifier","src":"46770:3:29"}],"functionName":{"name":"abi_encode_t_bytes20_to_t_bytes20_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"46699:61:29"},"nodeType":"YulFunctionCall","src":"46699:75:29"},"nodeType":"YulExpressionStatement","src":"46699:75:29"},{"nodeType":"YulAssignment","src":"46783:19:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46794:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"46799:2:29","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46790:3:29"},"nodeType":"YulFunctionCall","src":"46790:12:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"46783:3:29"}]},{"nodeType":"YulAssignment","src":"46812:10:29","value":{"name":"pos","nodeType":"YulIdentifier","src":"46819:3:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"46812:3:29"}]}]},"name":"abi_encode_tuple_packed_t_bytes10_t_bytes2_t_bytes20__to_t_bytes10_t_bytes2_t_bytes20__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"46428:3:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"46434:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"46442:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"46450:6:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"46461:3:29","type":""}],"src":"46295:533:29"},{"body":{"nodeType":"YulBlock","src":"46889:99:29","statements":[{"nodeType":"YulVariableDeclaration","src":"46900:42:29","value":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"46937:3:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"46931:5:29"},"nodeType":"YulFunctionCall","src":"46931:10:29"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"46913:17:29"},"nodeType":"YulFunctionCall","src":"46913:29:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"46904:5:29","type":""}]},{"nodeType":"YulAssignment","src":"46952:29:29","value":{"name":"value","nodeType":"YulIdentifier","src":"46976:5:29"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"46952:11:29"}]}]},"name":"read_from_memoryt_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"46869:3:29","type":""}],"returnVariables":[{"name":"returnValue","nodeType":"YulTypedName","src":"46877:11:29","type":""}],"src":"46834:154:29"},{"body":{"nodeType":"YulBlock","src":"47084:504:29","statements":[{"nodeType":"YulVariableDeclaration","src":"47095:52:29","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"47141:5:29"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"47109:31:29"},"nodeType":"YulFunctionCall","src":"47109:38:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"47099:6:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"47156:21:29","value":{"name":"array","nodeType":"YulIdentifier","src":"47172:5:29"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"47160:8:29","type":""}]},{"nodeType":"YulAssignment","src":"47187:52:29","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"47233:5:29"}],"functionName":{"name":"array_dataslot_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"47199:33:29"},"nodeType":"YulFunctionCall","src":"47199:40:29"},"variableNames":[{"name":"dataArea","nodeType":"YulIdentifier","src":"47187:8:29"}]},{"nodeType":"YulAssignment","src":"47249:44:29","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"47284:8:29"}],"functionName":{"name":"read_from_memoryt_bytes32","nodeType":"YulIdentifier","src":"47258:25:29"},"nodeType":"YulFunctionCall","src":"47258:35:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"47249:5:29"}]},{"body":{"nodeType":"YulBlock","src":"47321:260:29","statements":[{"nodeType":"YulAssignment","src":"47335:236:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"47365:5:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"47432:1:29","type":"","value":"8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"47439:2:29","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"47443:6:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"47435:3:29"},"nodeType":"YulFunctionCall","src":"47435:15:29"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"47428:3:29"},"nodeType":"YulFunctionCall","src":"47428:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"47473:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"47388:18:29"},"nodeType":"YulFunctionCall","src":"47388:169:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"47344:3:29"},"nodeType":"YulFunctionCall","src":"47344:227:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"47335:5:29"}]}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"47309:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"47317:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"47306:2:29"},"nodeType":"YulFunctionCall","src":"47306:14:29"},"nodeType":"YulIf","src":"47303:278:29"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"47068:5:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"47078:5:29","type":""}],"src":"46994:594:29"},{"body":{"nodeType":"YulBlock","src":"47738:275:29","statements":[{"nodeType":"YulAssignment","src":"47748:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47760:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"47771:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47756:3:29"},"nodeType":"YulFunctionCall","src":"47756:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"47748:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"47828:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47841:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"47852:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47837:3:29"},"nodeType":"YulFunctionCall","src":"47837:17:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"47784:43:29"},"nodeType":"YulFunctionCall","src":"47784:71:29"},"nodeType":"YulExpressionStatement","src":"47784:71:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47876:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"47887:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47872:3:29"},"nodeType":"YulFunctionCall","src":"47872:18:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"47896:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"47902:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"47892:3:29"},"nodeType":"YulFunctionCall","src":"47892:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47865:6:29"},"nodeType":"YulFunctionCall","src":"47865:48:29"},"nodeType":"YulExpressionStatement","src":"47865:48:29"},{"nodeType":"YulAssignment","src":"47922:84:29","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"47992:6:29"},{"name":"tail","nodeType":"YulIdentifier","src":"48001:4:29"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"47930:61:29"},"nodeType":"YulFunctionCall","src":"47930:76:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"47922:4:29"}]}]},"name":"abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"47702:9:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"47714:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"47722:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"47733:4:29","type":""}],"src":"47594:419:29"},{"body":{"nodeType":"YulBlock","src":"48113:325:29","statements":[{"nodeType":"YulAssignment","src":"48123:74:29","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"48189:6:29"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"48148:40:29"},"nodeType":"YulFunctionCall","src":"48148:48:29"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"48132:15:29"},"nodeType":"YulFunctionCall","src":"48132:65:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"48123:5:29"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"48213:5:29"},{"name":"length","nodeType":"YulIdentifier","src":"48220:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48206:6:29"},"nodeType":"YulFunctionCall","src":"48206:21:29"},"nodeType":"YulExpressionStatement","src":"48206:21:29"},{"nodeType":"YulVariableDeclaration","src":"48236:27:29","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"48251:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"48258:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48247:3:29"},"nodeType":"YulFunctionCall","src":"48247:16:29"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"48240:3:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"48301:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"48303:77:29"},"nodeType":"YulFunctionCall","src":"48303:79:29"},"nodeType":"YulExpressionStatement","src":"48303:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"48282:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"48287:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48278:3:29"},"nodeType":"YulFunctionCall","src":"48278:16:29"},{"name":"end","nodeType":"YulIdentifier","src":"48296:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"48275:2:29"},"nodeType":"YulFunctionCall","src":"48275:25:29"},"nodeType":"YulIf","src":"48272:112:29"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"48415:3:29"},{"name":"dst","nodeType":"YulIdentifier","src":"48420:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"48425:6:29"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"48393:21:29"},"nodeType":"YulFunctionCall","src":"48393:39:29"},"nodeType":"YulExpressionStatement","src":"48393:39:29"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"48086:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"48091:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"48099:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"48107:5:29","type":""}],"src":"48019:419:29"},{"body":{"nodeType":"YulBlock","src":"48529:281:29","statements":[{"body":{"nodeType":"YulBlock","src":"48578:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"48580:77:29"},"nodeType":"YulFunctionCall","src":"48580:79:29"},"nodeType":"YulExpressionStatement","src":"48580:79:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"48557:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"48565:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48553:3:29"},"nodeType":"YulFunctionCall","src":"48553:17:29"},{"name":"end","nodeType":"YulIdentifier","src":"48572:3:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"48549:3:29"},"nodeType":"YulFunctionCall","src":"48549:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"48542:6:29"},"nodeType":"YulFunctionCall","src":"48542:35:29"},"nodeType":"YulIf","src":"48539:122:29"},{"nodeType":"YulVariableDeclaration","src":"48670:27:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"48690:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"48684:5:29"},"nodeType":"YulFunctionCall","src":"48684:13:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"48674:6:29","type":""}]},{"nodeType":"YulAssignment","src":"48706:98:29","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"48777:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"48785:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48773:3:29"},"nodeType":"YulFunctionCall","src":"48773:17:29"},{"name":"length","nodeType":"YulIdentifier","src":"48792:6:29"},{"name":"end","nodeType":"YulIdentifier","src":"48800:3:29"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"48715:57:29"},"nodeType":"YulFunctionCall","src":"48715:89:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"48706:5:29"}]}]},"name":"abi_decode_t_bytes_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"48507:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"48515:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"48523:5:29","type":""}],"src":"48457:353:29"},{"body":{"nodeType":"YulBlock","src":"48902:436:29","statements":[{"body":{"nodeType":"YulBlock","src":"48948:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"48950:77:29"},"nodeType":"YulFunctionCall","src":"48950:79:29"},"nodeType":"YulExpressionStatement","src":"48950:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"48923:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"48932:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"48919:3:29"},"nodeType":"YulFunctionCall","src":"48919:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"48944:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"48915:3:29"},"nodeType":"YulFunctionCall","src":"48915:32:29"},"nodeType":"YulIf","src":"48912:119:29"},{"nodeType":"YulBlock","src":"49041:290:29","statements":[{"nodeType":"YulVariableDeclaration","src":"49056:38:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49080:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"49091:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49076:3:29"},"nodeType":"YulFunctionCall","src":"49076:17:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"49070:5:29"},"nodeType":"YulFunctionCall","src":"49070:24:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"49060:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"49141:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"49143:77:29"},"nodeType":"YulFunctionCall","src":"49143:79:29"},"nodeType":"YulExpressionStatement","src":"49143:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"49113:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"49121:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"49110:2:29"},"nodeType":"YulFunctionCall","src":"49110:30:29"},"nodeType":"YulIf","src":"49107:117:29"},{"nodeType":"YulAssignment","src":"49238:83:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49293:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"49304:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49289:3:29"},"nodeType":"YulFunctionCall","src":"49289:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"49313:7:29"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"49248:40:29"},"nodeType":"YulFunctionCall","src":"49248:73:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"49238:6:29"}]}]}]},"name":"abi_decode_tuple_t_bytes_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"48872:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"48883:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"48895:6:29","type":""}],"src":"48816:522:29"},{"body":{"nodeType":"YulBlock","src":"49389:146:29","statements":[{"nodeType":"YulAssignment","src":"49399:25:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"49422:1:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"49404:17:29"},"nodeType":"YulFunctionCall","src":"49404:20:29"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"49399:1:29"}]},{"nodeType":"YulAssignment","src":"49433:25:29","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"49456:1:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"49438:17:29"},"nodeType":"YulFunctionCall","src":"49438:20:29"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"49433:1:29"}]},{"body":{"nodeType":"YulBlock","src":"49480:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"49482:16:29"},"nodeType":"YulFunctionCall","src":"49482:18:29"},"nodeType":"YulExpressionStatement","src":"49482:18:29"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"49474:1:29"},{"name":"y","nodeType":"YulIdentifier","src":"49477:1:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"49471:2:29"},"nodeType":"YulFunctionCall","src":"49471:8:29"},"nodeType":"YulIf","src":"49468:34:29"},{"nodeType":"YulAssignment","src":"49512:17:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"49524:1:29"},{"name":"y","nodeType":"YulIdentifier","src":"49527:1:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"49520:3:29"},"nodeType":"YulFunctionCall","src":"49520:9:29"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"49512:4:29"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"49375:1:29","type":""},{"name":"y","nodeType":"YulTypedName","src":"49378:1:29","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"49384:4:29","type":""}],"src":"49344:191:29"},{"body":{"nodeType":"YulBlock","src":"49569:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"49586:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"49589:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49579:6:29"},"nodeType":"YulFunctionCall","src":"49579:88:29"},"nodeType":"YulExpressionStatement","src":"49579:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"49683:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"49686:4:29","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49676:6:29"},"nodeType":"YulFunctionCall","src":"49676:15:29"},"nodeType":"YulExpressionStatement","src":"49676:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"49707:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"49710:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"49700:6:29"},"nodeType":"YulFunctionCall","src":"49700:15:29"},"nodeType":"YulExpressionStatement","src":"49700:15:29"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"49541:180:29"}]},"contents":"{\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c(memPtr) {\n\n        mstore(add(memPtr, 0), 0x0000000000000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c_to_t_bytes_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, 4)\n        store_literal_in_memory_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c__to_t_bytes_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c_to_t_bytes_memory_ptr_fromStack( tail)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(value0, value1,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes32[]\n    function abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_bytes32(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // bytes32[]\n    function abi_decode_t_array$_t_bytes32_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_bytes32_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_bytes32_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // bytes[] -> bytes[]\n    function abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_bytes32t_boolt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    // bytes[]\n    function abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function array_allocation_size_t_array$_t_bool_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // bool[]\n    function abi_decode_available_length_t_array$_t_bool_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_bool_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_bool(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // bool[]\n    function abi_decode_t_array$_t_bool_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_bool_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // bytes[]\n    function abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let innerOffset := calldataload(src)\n            if gt(innerOffset, 0xffffffffffffffff) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n            let elementPos := add(offset, innerOffset)\n\n            mstore(dst, abi_decode_t_bytes_memory_ptr(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // bytes[]\n    function abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bool_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_bytes32_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_bool_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bytes32t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_bytes32_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_bytes32_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encodeUpdatedPos_t_bytes32_to_t_bytes32(value0, pos) -> updatedPos {\n        abi_encode_t_bytes32_to_t_bytes32(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // bytes32[] -> bytes32[]\n    function abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_bytes32_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_bytes32_to_t_bytes32(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_bytes32t_boolt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_bytes32_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_bytes32_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_bytes32t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_bytes32_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n\n        copy_calldata_to_memory(start, pos, length)\n        end := add(pos, length)\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr_t_address_t_uint256__to_t_bytes_memory_ptr_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value3, value2, value1, value0) -> end {\n\n        pos := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0, value1,  pos)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value3,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() {\n        revert(0, 0)\n    }\n\n    function revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() {\n        revert(0, 0)\n    }\n\n    function revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() {\n        revert(0, 0)\n    }\n\n    function access_calldata_tail_t_bytes_calldata_ptr(base_ref, ptr_to_tail) -> addr, length {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0x20, 1)))) { revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() }\n        addr := add(base_ref, rel_offset_of_tail)\n\n        length := calldataload(addr)\n        if gt(length, 0xffffffffffffffff) { revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() }\n        addr := add(addr, 32)\n        if sgt(addr, sub(calldatasize(), mul(length, 0x01))) { revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() }\n\n    }\n\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0, value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32_t_address__to_t_address_t_bytes32_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32_t_bool_t_bytes_memory_ptr__to_t_address_t_bytes32_t_bool_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function cleanup_t_bytes20(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000)\n    }\n\n    function read_from_memoryt_bytes20(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes20(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes20(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes20(dataArea)\n\n        if lt(length, 20) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(20, length)),\n                    0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000\n                )\n            )\n        }\n\n    }\n\n    function leftAlign_t_bytes32(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes32(cleanup_t_bytes32(value)))\n    }\n\n    function abi_encode_tuple_packed_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_bool_t_bytes_memory_ptr__to_t_address_t_bool_t_bytes_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_address_t_bytes32_t_bytes_memory_ptr__to_t_address_t_address_t_address_t_bytes32_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function cleanup_t_bytes10(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff00000000000000000000000000000000000000000000)\n    }\n\n    function leftAlign_t_bytes10(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes10_to_t_bytes10_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes10(cleanup_t_bytes10(value)))\n    }\n\n    function cleanup_t_bytes2(value) -> cleaned {\n        cleaned := and(value, 0xffff000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function leftAlign_t_bytes2(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes2_to_t_bytes2_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes2(cleanup_t_bytes2(value)))\n    }\n\n    function leftAlign_t_bytes20(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes20_to_t_bytes20_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes20(cleanup_t_bytes20(value)))\n    }\n\n    function abi_encode_tuple_packed_t_bytes10_t_bytes2_t_bytes20__to_t_bytes10_t_bytes2_t_bytes20__nonPadded_inplace_fromStack_reversed(pos , value2, value1, value0) -> end {\n\n        abi_encode_t_bytes10_to_t_bytes10_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 10)\n\n        abi_encode_t_bytes2_to_t_bytes2_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 2)\n\n        abi_encode_t_bytes20_to_t_bytes20_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 20)\n\n        end := pos\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_bytes_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n}\n","id":29,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"60806040526004361061014f5760003560e01c80637e87632c116100b6578063af255b611161006f578063af255b61146105b4578063be9f0e6f146105dd578063d6c1407c14610606578063db8c96631461062f578063dedff9c614610658578063f2fde38b14610695576101ca565b80637e87632c146104c25780637f23690c146104eb57806386a10ddd146105075780638da5cb5b14610530578063979024211461055b578063a3b261f214610577576101ca565b806349a6078d1161010857806349a6078d1461038e578063511b6952146103cb57806354f6127f146103f45780636963d4381461043157806370a082311461046e578063715018a6146104ab576101ca565b806301ffc9a71461023257806316e023b31461026f57806318160ddd146102ac5780631d26fce6146102d7578063217b2270146103145780632a3654a414610351576101ca565b366101ca576000341415610198576040517fe5099ee300000000000000000000000000000000000000000000000000000000815260040161018f90612e16565b60405180910390fd5b6040517f61f4944200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600036606060046000369050101561021b5782826040517fe5099ee3000000000000000000000000000000000000000000000000000000008152600401610212929190612e83565b60405180910390fd5b61022583836106be565b9050915050805190602001f35b34801561023e57600080fd5b5061025960048036038101906102549190612f13565b61083d565b6040516102669190612f5b565b60405180910390f35b34801561027b57600080fd5b5061029660048036038101906102919190612fac565b6108ae565b6040516102a39190613063565b60405180910390f35b3480156102b857600080fd5b506102c16108c2565b6040516102ce919061309e565b60405180910390f35b3480156102e357600080fd5b506102fe60048036038101906102f99190613201565b6108cc565b60405161030b9190613385565b60405180910390f35b34801561032057600080fd5b5061033b600480360381019061033691906133a7565b610999565b6040516103489190613415565b60405180910390f35b34801561035d57600080fd5b506103786004803603810190610373919061345c565b610a4d565b6040516103859190612f5b565b60405180910390f35b34801561039a57600080fd5b506103b560048036038101906103b091906133a7565b610a6a565b6040516103c2919061355a565b60405180910390f35b3480156103d757600080fd5b506103f260048036038101906103ed919061364e565b610a97565b005b34801561040057600080fd5b5061041b600480360381019061041691906133a7565b610af8565b6040516104289190613063565b60405180910390f35b34801561043d57600080fd5b5061045860048036038101906104539190613740565b610b0a565b6040516104659190613385565b60405180910390f35b34801561047a57600080fd5b506104956004803603810190610490919061378d565b610c86565b6040516104a2919061309e565b60405180910390f35b3480156104b757600080fd5b506104c0610cd6565b005b3480156104ce57600080fd5b506104e960048036038101906104e49190613a21565b610cea565b005b61050560048036038101906105009190613b28565b610dfe565b005b34801561051357600080fd5b5061052e60048036038101906105299190613b84565b610e4e565b005b34801561053c57600080fd5b506105456110ac565b6040516105529190613415565b60405180910390f35b61057560048036038101906105709190613bf3565b6110d5565b005b34801561058357600080fd5b5061059e6004803603810190610599919061378d565b6111e8565b6040516105ab9190613d29565b60405180910390f35b3480156105c057600080fd5b506105db60048036038101906105d69190613d4b565b611238565b005b3480156105e957600080fd5b5061060460048036038101906105ff9190613dce565b611252565b005b34801561061257600080fd5b5061062d60048036038101906106289190613e75565b611356565b005b34801561063b57600080fd5b5061065660048036038101906106519190613d4b565b61136e565b005b34801561066457600080fd5b5061067f600480360381019061067a9190613ee4565b61150d565b60405161068c9190613385565b60405180910390f35b3480156106a157600080fd5b506106bc60048036038101906106b7919061378d565b6115be565b005b606060006106ef6000357fffffffff000000000000000000000000000000000000000000000000000000001661191e565b509050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610788576000357fffffffff00000000000000000000000000000000000000000000000000000000166040517fbb370b2b00000000000000000000000000000000000000000000000000000000815260040161077f9190613f3c565b60405180910390fd5b6000808273ffffffffffffffffffffffffffffffffffffffff1634878733346040516020016107ba9493929190613ff0565b6040516020818303038152906040526040516107d6919061405c565b60006040518083038185875af1925050503d8060008114610813576040519150601f19603f3d011682016040523d82523d6000602084013e610818565b606091505b5091509150811561082e57809350505050610837565b80518060208301fd5b92915050565b6000633a27170660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806108975750610896826119d8565b5b806108a757506108a682611a39565b5b9050919050565b60606108ba8383611aa1565b905092915050565b6000600254905090565b6060825167ffffffffffffffff8111156108e9576108e86130be565b5b60405190808252806020026020018201604052801561091c57816020015b60608152602001906001900390816109075790505b50905060005b83518110156109925761096984828151811061094157610940614073565b5b602002602001015184838151811061095c5761095b614073565b5b6020026020010151611aa1565b82828151811061097c5761097b614073565b5b6020026020010181905250806001019050610922565b5092915050565b6000806003600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a4457826040517fae8f9a36000000000000000000000000000000000000000000000000000000008152600401610a3b91906140b1565b60405180910390fd5b80915050919050565b6000610a5882611b6f565b610a628383611bbc565b905092915050565b6060610a7582611b6f565b610a9060056000848152602001908152602001600020611c29565b9050919050565b610aa13384611bbc565b610ae45782336040517f1294d2a9000000000000000000000000000000000000000000000000000000008152600401610adb9291906140cc565b60405180910390fd5b610af18585858585611c4a565b5050505050565b6060610b0382611f6f565b9050919050565b60608282905067ffffffffffffffff811115610b2957610b286130be565b5b604051908082528060200260200182016040528015610b5c57816020015b6060815260200190600190039081610b475790505b50905060005b83839050811015610c7f576000803073ffffffffffffffffffffffffffffffffffffffff16868685818110610b9a57610b99614073565b5b9050602002810190610bac9190614104565b604051610bba929190614167565b600060405180830381855af49150503d8060008114610bf5576040519150601f19603f3d011682016040523d82523d6000602084013e610bfa565b606091505b509150915081610c53576000815114610c165780518082602001fd5b826040517f234eb819000000000000000000000000000000000000000000000000000000008152600401610c4a919061309e565b60405180910390fd5b80848481518110610c6757610c66614073565b5b60200260200101819052508260010192505050610b62565b5092915050565b6000610ccf600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612014565b9050919050565b610cde612029565b610ce86000611639565b565b600085519050845181141580610d01575083518114155b80610d0d575082518114155b80610d19575081518114155b15610d50576040517f93a8311900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b81811015610df557610dea878281518110610d7157610d70614073565b5b6020026020010151878381518110610d8c57610d8b614073565b5b6020026020010151878481518110610da757610da6614073565b5b6020026020010151878581518110610dc257610dc1614073565b5b6020026020010151878681518110610ddd57610ddc614073565b5b6020026020010151610a97565b806001019050610d53565b50505050505050565b610e06612029565b60003414610e40576040517ff36ba73700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e4a82826120a2565b5050565b6000610e5983610999565b90503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610ecf578083336040517f5b271ea2000000000000000000000000000000000000000000000000000000008152600401610ec693929190614180565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610f36576040517f9577b8b300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610f9c576040517f89fdad6200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610fc3856005600087815260200190815260200160002061210d90919063ffffffff16565b9050806110095784846040517fa7626b680000000000000000000000000000000000000000000000000000000081526004016110009291906141b7565b60405180910390fd5b838273ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167f1b1b58aa2ec0cec2228b2d37124556d41f5a1f7b12f089171f896cc236671215866040516110679190613063565b60405180910390a46000338560018660405160200161108994939291906141e0565b60405160208183030381529060405290506110a4868261213d565b505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6110dd612029565b60003414611117576040517ff36ba73700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8051825114611152576040517f3bcc897900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008251141561118e576040517f97da5f9500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b82518110156111e3576111d88382815181106111b0576111af614073565b5b60200260200101518383815181106111cb576111ca614073565b5b60200260200101516120a2565b806001019050611191565b505050565b6060611231600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061216f565b9050919050565b611240612029565b61124c84848484612190565b50505050565b61125a612029565b8151835114158061126d57508051825114155b156112a4576040517f2fa71dfe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000835114156112e0576040517f80c9830500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b83518110156113505761134584828151811061130257611301614073565b5b602002602001015184838151811061131d5761131c614073565b5b602002602001015184848151811061133857611337614073565b5b60200260200101516123c0565b8060010190506112e3565b50505050565b61135e612029565b6113698383836123c0565b505050565b600061137984610999565b90503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146113ef578084336040517f5b271ea20000000000000000000000000000000000000000000000000000000081526004016113e693929190614180565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415611456576040517f9577b8b300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156114bc576040517f89fdad6200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6114c9858286868661244e565b821561150657600033856000856040516020016114e994939291906141e0565b6040516020818303038152906040529050611504868261213d565b505b5050505050565b6060815167ffffffffffffffff81111561152a576115296130be565b5b60405190808252806020026020018201604052801561155d57816020015b60608152602001906001900390816115485790505b50905060005b82518110156115b85761158f83828151811061158257611581614073565b5b6020026020010151611f6f565b8282815181106115a2576115a1614073565b5b6020026020010181905250806001019050611563565b50919050565b6115c6612029565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561162d576040517f1ad8836c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61163681611639565b50565b6116416110ac565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461172e578073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b80600160008481526020019081526020016000209080519060200190611758929190612d36565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b2826040516117899190613063565b60405180910390a25050565b61179f82826117a3565b5050565b7fdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af160001b821415611800576040517f85c169bd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db93275660001b82141561185d576040517f76755b3800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fe0261fa95db2eb3b5439bd033cda66d56b96f92f243a8228fd87550ed7bdfdb360001b8214156118ba576040517f4ef6d7fb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806001600084815260200190815260200160002090805190602001906118e1929190612d36565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b2826040516119129190613063565b60405180910390a25050565b600080600061195969cee78b4094da8601109660b01b857bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191661252b565b9050600061196682611f6f565b9050601481511415801561197c57506000815114155b156119be57806040517f42bfe79f0000000000000000000000000000000000000000000000000000000081526004016119b59190613063565b60405180910390fd5b806119c89061428a565b60601c6001935093505050915091565b600063a918fa6b60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480611a325750611a318261256b565b5b9050919050565b600080611a4c6301ffc9a760e01b61191e565b509050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611a8e576000915050611a9c565b611a9881846125cc565b9150505b919050565b6060600160008484604051602001611aba929190614312565b6040516020818303038152906040528051906020012081526020019081526020016000208054611ae99061436d565b80601f0160208091040260200160405190810160405280929190818152602001828054611b159061436d565b8015611b625780601f10611b3757610100808354040283529160200191611b62565b820191906000526020600020905b815481529060010190602001808311611b4557829003601f168201915b5050505050905092915050565b611b788161268b565b611bb957806040517fae8f9a36000000000000000000000000000000000000000000000000000000008152600401611bb091906140b1565b60405180910390fd5b50565b6000611bc782610999565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161480611c215750611c2083600560008581526020019081526020016000206126f790919063ffffffff16565b5b905092915050565b60606000611c3983600001612727565b905060608190508092505050919050565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415611cb0576040517f5d67d6c100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611cbb84610999565b90508573ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611d31578084876040517f5b271ea2000000000000000000000000000000000000000000000000000000008152600401611d2893929190614180565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415611d98576040517f24ecef4d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611da486868685612783565b611dad84610999565b9050611db98685612789565b611e0a84600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206127ff90919063ffffffff16565b50611e5c84600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061281690919063ffffffff16565b50846003600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf338787604051611f119392919061439f565b60405180910390a4611f258686868561282d565b60003387878786604051602001611f409594939291906143dd565b6040516020818303038152906040529050611f5b8782612833565b611f66868583612865565b50505050505050565b6060600160008381526020019081526020016000208054611f8f9061436d565b80601f0160208091040260200160405190810160405280929190818152602001828054611fbb9061436d565b80156120085780601f10611fdd57610100808354040283529160200191612008565b820191906000526020600020905b815481529060010190602001808311611feb57829003601f168201915b50505050509050919050565b6000612022826000016129cb565b9050919050565b3373ffffffffffffffffffffffffffffffffffffffff166120486110ac565b73ffffffffffffffffffffffffffffffffffffffff16146120a057336040517fbf1169c50000000000000000000000000000000000000000000000000000000081526004016120979190613415565b60405180910390fd5b565b7ff675e9361af1c1664c1868cfa3eb97672d6b1a513aa5b81dec34c9ee330e818d60001b8214156120ff576040517f3664800a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6121098282611795565b5050565b6000612135836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6129dc565b905092915050565b61216b827f8a1c15a8799f71b547e08e2bcb2e85257e81b0a07eee2ce6712549eef1f0097060001b83612a4c565b5050565b6060600061217f83600001612727565b905060608190508092505050919050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156121f7576040517f24ecef4d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6122046000858584612783565b61220d8361268b565b1561224f57826040517f34c7b51100000000000000000000000000000000000000000000000000000000815260040161224691906140b1565b60405180910390fd5b60026000815461225e90614466565b919050819055506122b683600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061281690919063ffffffff16565b50836003600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828473ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf33868660405161236c9392919061439f565b60405180910390a4612381600085858461282d565b600033600086868560405160200161239d9594939291906143dd565b60405160208183030381529060405290506123b9858483612865565b5050505050565b806001600085856040516020016123d8929190614312565b604051602081830303815290604052805190602001208152602001908152602001600020908051906020019061240f929190612d36565b5081837fa6e4251f855f750545fe414f120db91c76b88def14d120969e5bb2d3f05debbb836040516124419190613063565b60405180910390a3505050565b60006124758660056000878152602001908152602001600020612b0b90919063ffffffff16565b9050806124bb5785846040517f4aa31a8c0000000000000000000000000000000000000000000000000000000081526004016124b29291906141b7565b60405180910390fd5b838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fc78cd419d6136f9f1c1c6aec1d3fae098cffaf8bc86314a8f2685e32fe574e3c868660405161251b9291906144af565b60405180910390a4505050505050565b60008083600060f01b846040516020016125479392919061459a565b604051602081830303815290604052905080612562906145ec565b91505092915050565b600063629aa69460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806125c557506125c482612b3b565b5b9050919050565b6000806301ffc9a760e01b836040516024016125e89190613f3c565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506000806000602060008551602087018a617530fa92503d91506000519050828015612673575060208210155b801561267f5750600081115b94505050505092915050565b60008073ffffffffffffffffffffffffffffffffffffffff166003600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600061271f836000018373ffffffffffffffffffffffffffffffffffffffff1660001b612ba5565b905092915050565b60608160000180548060200260200160405190810160405280929190818152602001828054801561277757602002820191906000526020600020905b815481526020019060010190808311612763575b50505050509050919050565b50505050565b600060056000838152602001908152602001600020905060006127ab82612bc8565b90506000805b828110156127f7576127cd600085612bdd90919063ffffffff16565b91506127ec82878760006040518060200160405280600081525061244e565b8060010190506127b1565b505050505050565b600061280e8360000183612bf7565b905092915050565b600061282583600001836129dc565b905092915050565b50505050565b612861827fb23eae7e6d1564b295b4c3e3be402d9a2f0776c57bdf365903496f6fa481ab0060001b83612a4c565b5050565b61287683636bb56a1460e01b6125cc565b15612927578273ffffffffffffffffffffffffffffffffffffffff16636bb56a147f0b084a55ebf70fd3c06fd755269dac2212c4d3f0f4d09079780bfa50c1b2984d60001b836040518363ffffffff1660e01b81526004016128d9929190614653565b6000604051808303816000875af11580156128f8573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061292191906146f3565b506129c6565b816129c55760008373ffffffffffffffffffffffffffffffffffffffff163b1461298857826040517f4349776d00000000000000000000000000000000000000000000000000000000815260040161297f9190613415565b60405180910390fd5b826040517f031731370000000000000000000000000000000000000000000000000000000081526004016129bc9190613415565b60405180910390fd5b5b505050565b600081600001805490509050919050565b60006129e88383612ba5565b612a41578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050612a46565b600090505b92915050565b612a7c636bb56a1460e01b8473ffffffffffffffffffffffffffffffffffffffff166125cc90919063ffffffff16565b15612b06578273ffffffffffffffffffffffffffffffffffffffff16636bb56a1483836040518363ffffffff1660e01b8152600401612abc929190614653565b6000604051808303816000875af1158015612adb573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190612b0491906146f3565b505b505050565b6000612b33836000018373ffffffffffffffffffffffffffffffffffffffff1660001b612bf7565b905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600080836001016000848152602001908152602001600020541415905092915050565b6000612bd6826000016129cb565b9050919050565b6000612bec8360000183612d0b565b60001c905092915050565b60008083600101600084815260200190815260200160002054905060008114612cff576000600182612c29919061473c565b9050600060018660000180549050612c41919061473c565b9050818114612cb0576000866000018281548110612c6257612c61614073565b5b9060005260206000200154905080876000018481548110612c8657612c85614073565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b85600001805480612cc457612cc3614770565b5b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050612d05565b60009150505b92915050565b6000826000018281548110612d2357612d22614073565b5b9060005260206000200154905092915050565b828054612d429061436d565b90600052602060002090601f016020900481019282612d645760008555612dab565b82601f10612d7d57805160ff1916838001178555612dab565b82800160010185558215612dab579182015b82811115612daa578251825591602001919060010190612d8f565b5b509050612db89190612dbc565b5090565b5b80821115612dd5576000816000905550600101612dbd565b5090565b600082825260208201905092915050565b60008082015250565b6000612e00600483612dd9565b9150612e0b82612dea565b602082019050919050565b60006020820190508181036000830152612e2f81612df3565b9050919050565b82818337600083830152505050565b6000601f19601f8301169050919050565b6000612e628385612dd9565b9350612e6f838584612e36565b612e7883612e45565b840190509392505050565b60006020820190508181036000830152612e9e818486612e56565b90509392505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b612ef081612ebb565b8114612efb57600080fd5b50565b600081359050612f0d81612ee7565b92915050565b600060208284031215612f2957612f28612eb1565b5b6000612f3784828501612efe565b91505092915050565b60008115159050919050565b612f5581612f40565b82525050565b6000602082019050612f706000830184612f4c565b92915050565b6000819050919050565b612f8981612f76565b8114612f9457600080fd5b50565b600081359050612fa681612f80565b92915050565b60008060408385031215612fc357612fc2612eb1565b5b6000612fd185828601612f97565b9250506020612fe285828601612f97565b9150509250929050565b600081519050919050565b60005b83811015613015578082015181840152602081019050612ffa565b83811115613024576000848401525b50505050565b600061303582612fec565b61303f8185612dd9565b935061304f818560208601612ff7565b61305881612e45565b840191505092915050565b6000602082019050818103600083015261307d818461302a565b905092915050565b6000819050919050565b61309881613085565b82525050565b60006020820190506130b3600083018461308f565b92915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6130f682612e45565b810181811067ffffffffffffffff82111715613115576131146130be565b5b80604052505050565b6000613128612ea7565b905061313482826130ed565b919050565b600067ffffffffffffffff821115613154576131536130be565b5b602082029050602081019050919050565b600080fd5b600061317d61317884613139565b61311e565b905080838252602082019050602084028301858111156131a05761319f613165565b5b835b818110156131c957806131b58882612f97565b8452602084019350506020810190506131a2565b5050509392505050565b600082601f8301126131e8576131e76130b9565b5b81356131f884826020860161316a565b91505092915050565b6000806040838503121561321857613217612eb1565b5b600083013567ffffffffffffffff81111561323657613235612eb6565b5b613242858286016131d3565b925050602083013567ffffffffffffffff81111561326357613262612eb6565b5b61326f858286016131d3565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b60006132c182612fec565b6132cb81856132a5565b93506132db818560208601612ff7565b6132e481612e45565b840191505092915050565b60006132fb83836132b6565b905092915050565b6000602082019050919050565b600061331b82613279565b6133258185613284565b93508360208202850161333785613295565b8060005b85811015613373578484038952815161335485826132ef565b945061335f83613303565b925060208a0199505060018101905061333b565b50829750879550505050505092915050565b6000602082019050818103600083015261339f8184613310565b905092915050565b6000602082840312156133bd576133bc612eb1565b5b60006133cb84828501612f97565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006133ff826133d4565b9050919050565b61340f816133f4565b82525050565b600060208201905061342a6000830184613406565b92915050565b613439816133f4565b811461344457600080fd5b50565b60008135905061345681613430565b92915050565b6000806040838503121561347357613472612eb1565b5b600061348185828601613447565b925050602061349285828601612f97565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6134d1816133f4565b82525050565b60006134e383836134c8565b60208301905092915050565b6000602082019050919050565b60006135078261349c565b61351181856134a7565b935061351c836134b8565b8060005b8381101561354d57815161353488826134d7565b975061353f836134ef565b925050600181019050613520565b5085935050505092915050565b6000602082019050818103600083015261357481846134fc565b905092915050565b61358581612f40565b811461359057600080fd5b50565b6000813590506135a28161357c565b92915050565b600080fd5b600067ffffffffffffffff8211156135c8576135c76130be565b5b6135d182612e45565b9050602081019050919050565b60006135f16135ec846135ad565b61311e565b90508281526020810184848401111561360d5761360c6135a8565b5b613618848285612e36565b509392505050565b600082601f830112613635576136346130b9565b5b81356136458482602086016135de565b91505092915050565b600080600080600060a0868803121561366a57613669612eb1565b5b600061367888828901613447565b955050602061368988828901613447565b945050604061369a88828901612f97565b93505060606136ab88828901613593565b925050608086013567ffffffffffffffff8111156136cc576136cb612eb6565b5b6136d888828901613620565b9150509295509295909350565b600080fd5b60008083601f840112613700576136ff6130b9565b5b8235905067ffffffffffffffff81111561371d5761371c6136e5565b5b60208301915083602082028301111561373957613738613165565b5b9250929050565b6000806020838503121561375757613756612eb1565b5b600083013567ffffffffffffffff81111561377557613774612eb6565b5b613781858286016136ea565b92509250509250929050565b6000602082840312156137a3576137a2612eb1565b5b60006137b184828501613447565b91505092915050565b600067ffffffffffffffff8211156137d5576137d46130be565b5b602082029050602081019050919050565b60006137f96137f4846137ba565b61311e565b9050808382526020820190506020840283018581111561381c5761381b613165565b5b835b8181101561384557806138318882613447565b84526020840193505060208101905061381e565b5050509392505050565b600082601f830112613864576138636130b9565b5b81356138748482602086016137e6565b91505092915050565b600067ffffffffffffffff821115613898576138976130be565b5b602082029050602081019050919050565b60006138bc6138b78461387d565b61311e565b905080838252602082019050602084028301858111156138df576138de613165565b5b835b8181101561390857806138f48882613593565b8452602084019350506020810190506138e1565b5050509392505050565b600082601f830112613927576139266130b9565b5b81356139378482602086016138a9565b91505092915050565b600067ffffffffffffffff82111561395b5761395a6130be565b5b602082029050602081019050919050565b600061397f61397a84613940565b61311e565b905080838252602082019050602084028301858111156139a2576139a1613165565b5b835b818110156139e957803567ffffffffffffffff8111156139c7576139c66130b9565b5b8086016139d48982613620565b855260208501945050506020810190506139a4565b5050509392505050565b600082601f830112613a0857613a076130b9565b5b8135613a1884826020860161396c565b91505092915050565b600080600080600060a08688031215613a3d57613a3c612eb1565b5b600086013567ffffffffffffffff811115613a5b57613a5a612eb6565b5b613a678882890161384f565b955050602086013567ffffffffffffffff811115613a8857613a87612eb6565b5b613a948882890161384f565b945050604086013567ffffffffffffffff811115613ab557613ab4612eb6565b5b613ac1888289016131d3565b935050606086013567ffffffffffffffff811115613ae257613ae1612eb6565b5b613aee88828901613912565b925050608086013567ffffffffffffffff811115613b0f57613b0e612eb6565b5b613b1b888289016139f3565b9150509295509295909350565b60008060408385031215613b3f57613b3e612eb1565b5b6000613b4d85828601612f97565b925050602083013567ffffffffffffffff811115613b6e57613b6d612eb6565b5b613b7a85828601613620565b9150509250929050565b600080600060608486031215613b9d57613b9c612eb1565b5b6000613bab86828701613447565b9350506020613bbc86828701612f97565b925050604084013567ffffffffffffffff811115613bdd57613bdc612eb6565b5b613be986828701613620565b9150509250925092565b60008060408385031215613c0a57613c09612eb1565b5b600083013567ffffffffffffffff811115613c2857613c27612eb6565b5b613c34858286016131d3565b925050602083013567ffffffffffffffff811115613c5557613c54612eb6565b5b613c61858286016139f3565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b613ca081612f76565b82525050565b6000613cb28383613c97565b60208301905092915050565b6000602082019050919050565b6000613cd682613c6b565b613ce08185613c76565b9350613ceb83613c87565b8060005b83811015613d1c578151613d038882613ca6565b9750613d0e83613cbe565b925050600181019050613cef565b5085935050505092915050565b60006020820190508181036000830152613d438184613ccb565b905092915050565b60008060008060808587031215613d6557613d64612eb1565b5b6000613d7387828801613447565b9450506020613d8487828801612f97565b9350506040613d9587828801613593565b925050606085013567ffffffffffffffff811115613db657613db5612eb6565b5b613dc287828801613620565b91505092959194509250565b600080600060608486031215613de757613de6612eb1565b5b600084013567ffffffffffffffff811115613e0557613e04612eb6565b5b613e11868287016131d3565b935050602084013567ffffffffffffffff811115613e3257613e31612eb6565b5b613e3e868287016131d3565b925050604084013567ffffffffffffffff811115613e5f57613e5e612eb6565b5b613e6b868287016139f3565b9150509250925092565b600080600060608486031215613e8e57613e8d612eb1565b5b6000613e9c86828701612f97565b9350506020613ead86828701612f97565b925050604084013567ffffffffffffffff811115613ece57613ecd612eb6565b5b613eda86828701613620565b9150509250925092565b600060208284031215613efa57613ef9612eb1565b5b600082013567ffffffffffffffff811115613f1857613f17612eb6565b5b613f24848285016131d3565b91505092915050565b613f3681612ebb565b82525050565b6000602082019050613f516000830184613f2d565b92915050565b600081905092915050565b6000613f6e8385613f57565b9350613f7b838584612e36565b82840190509392505050565b60008160601b9050919050565b6000613f9f82613f87565b9050919050565b6000613fb182613f94565b9050919050565b613fc9613fc4826133f4565b613fa6565b82525050565b6000819050919050565b613fea613fe582613085565b613fcf565b82525050565b6000613ffd828688613f62565b91506140098285613fb8565b6014820191506140198284613fd9565b60208201915081905095945050505050565b600061403682612fec565b6140408185613f57565b9350614050818560208601612ff7565b80840191505092915050565b6000614068828461402b565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6140ab81612f76565b82525050565b60006020820190506140c660008301846140a2565b92915050565b60006040820190506140e160008301856140a2565b6140ee6020830184613406565b9392505050565b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112614121576141206140f5565b5b80840192508235915067ffffffffffffffff821115614143576141426140fa565b5b60208301925060018202360383131561415f5761415e6140ff565b5b509250929050565b6000614174828486613f62565b91508190509392505050565b60006060820190506141956000830186613406565b6141a260208301856140a2565b6141af6040830184613406565b949350505050565b60006040820190506141cc6000830185613406565b6141d960208301846140a2565b9392505050565b60006080820190506141f56000830187613406565b61420260208301866140a2565b61420f6040830185612f4c565b8181036060830152614221818461302a565b905095945050505050565b6000819050602082019050919050565b60007fffffffffffffffffffffffffffffffffffffffff00000000000000000000000082169050919050565b6000614274825161423c565b80915050919050565b600082821b905092915050565b600061429582612fec565b8261429f8461422c565b90506142aa81614268565b925060148210156142ea576142e57fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008360140360080261427d565b831692505b5050919050565b6000819050919050565b61430c61430782612f76565b6142f1565b82525050565b600061431e82856142fb565b60208201915061432e82846142fb565b6020820191508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061438557607f821691505b602082108114156143995761439861433e565b5b50919050565b60006060820190506143b46000830186613406565b6143c16020830185612f4c565b81810360408301526143d3818461302a565b9050949350505050565b600060a0820190506143f26000830188613406565b6143ff6020830187613406565b61440c6040830186613406565b61441960608301856140a2565b818103608083015261442b818461302a565b90509695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061447182613085565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156144a4576144a3614437565b5b600182019050919050565b60006040820190506144c46000830185612f4c565b81810360208301526144d6818461302a565b90509392505050565b60007fffffffffffffffffffff0000000000000000000000000000000000000000000082169050919050565b6000819050919050565b614526614521826144df565b61450b565b82525050565b60007fffff00000000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b61457361456e8261452c565b614558565b82525050565b6000819050919050565b61459461458f8261423c565b614579565b82525050565b60006145a68286614515565b600a820191506145b68285614562565b6002820191506145c68284614583565b601482019150819050949350505050565b60006145e38251612f76565b80915050919050565b60006145f782612fec565b826146018461422c565b905061460c816145d7565b9250602082101561464c576146477fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8360200360080261427d565b831692505b5050919050565b600060408201905061466860008301856140a2565b818103602083015261467a818461302a565b90509392505050565b6000614696614691846135ad565b61311e565b9050828152602081018484840111156146b2576146b16135a8565b5b6146bd848285612ff7565b509392505050565b600082601f8301126146da576146d96130b9565b5b81516146ea848260208601614683565b91505092915050565b60006020828403121561470957614708612eb1565b5b600082015167ffffffffffffffff81111561472757614726612eb6565b5b614733848285016146c5565b91505092915050565b600061474782613085565b915061475283613085565b92508282101561476557614764614437565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220ee93ac96567b7722af642a85c7ed6e46a9f01d0bc021f987228a2246309fb90664736f6c634300080c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7E87632C GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xAF255B61 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xAF255B61 EQ PUSH2 0x5B4 JUMPI DUP1 PUSH4 0xBE9F0E6F EQ PUSH2 0x5DD JUMPI DUP1 PUSH4 0xD6C1407C EQ PUSH2 0x606 JUMPI DUP1 PUSH4 0xDB8C9663 EQ PUSH2 0x62F JUMPI DUP1 PUSH4 0xDEDFF9C6 EQ PUSH2 0x658 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x695 JUMPI PUSH2 0x1CA JUMP JUMPDEST DUP1 PUSH4 0x7E87632C EQ PUSH2 0x4C2 JUMPI DUP1 PUSH4 0x7F23690C EQ PUSH2 0x4EB JUMPI DUP1 PUSH4 0x86A10DDD EQ PUSH2 0x507 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x530 JUMPI DUP1 PUSH4 0x97902421 EQ PUSH2 0x55B JUMPI DUP1 PUSH4 0xA3B261F2 EQ PUSH2 0x577 JUMPI PUSH2 0x1CA JUMP JUMPDEST DUP1 PUSH4 0x49A6078D GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x49A6078D EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0x511B6952 EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0x54F6127F EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0x6963D438 EQ PUSH2 0x431 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x46E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4AB JUMPI PUSH2 0x1CA JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x16E023B3 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x1D26FCE6 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x217B2270 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x2A3654A4 EQ PUSH2 0x351 JUMPI PUSH2 0x1CA JUMP JUMPDEST CALLDATASIZE PUSH2 0x1CA JUMPI PUSH1 0x0 CALLVALUE EQ ISZERO PUSH2 0x198 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE5099EE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18F SWAP1 PUSH2 0x2E16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x61F4944200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLDATASIZE PUSH1 0x60 PUSH1 0x4 PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO PUSH2 0x21B JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE5099EE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x212 SWAP3 SWAP2 SWAP1 PUSH2 0x2E83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x225 DUP4 DUP4 PUSH2 0x6BE JUMP JUMPDEST SWAP1 POP SWAP2 POP POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x259 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x2F13 JUMP JUMPDEST PUSH2 0x83D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x2F5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x296 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x2FAC JUMP JUMPDEST PUSH2 0x8AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x3063 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x8C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0x309E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x3201 JUMP JUMPDEST PUSH2 0x8CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x3385 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x336 SWAP2 SWAP1 PUSH2 0x33A7 JUMP JUMPDEST PUSH2 0x999 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x3415 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x378 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x373 SWAP2 SWAP1 PUSH2 0x345C JUMP JUMPDEST PUSH2 0xA4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x385 SWAP2 SWAP1 PUSH2 0x2F5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x33A7 JUMP JUMPDEST PUSH2 0xA6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C2 SWAP2 SWAP1 PUSH2 0x355A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3ED SWAP2 SWAP1 PUSH2 0x364E JUMP JUMPDEST PUSH2 0xA97 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x400 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x416 SWAP2 SWAP1 PUSH2 0x33A7 JUMP JUMPDEST PUSH2 0xAF8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x428 SWAP2 SWAP1 PUSH2 0x3063 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x458 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x453 SWAP2 SWAP1 PUSH2 0x3740 JUMP JUMPDEST PUSH2 0xB0A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x465 SWAP2 SWAP1 PUSH2 0x3385 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x495 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x490 SWAP2 SWAP1 PUSH2 0x378D JUMP JUMPDEST PUSH2 0xC86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A2 SWAP2 SWAP1 PUSH2 0x309E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C0 PUSH2 0xCD6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E4 SWAP2 SWAP1 PUSH2 0x3A21 JUMP JUMPDEST PUSH2 0xCEA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x505 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x500 SWAP2 SWAP1 PUSH2 0x3B28 JUMP JUMPDEST PUSH2 0xDFE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x513 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x52E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x529 SWAP2 SWAP1 PUSH2 0x3B84 JUMP JUMPDEST PUSH2 0xE4E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x545 PUSH2 0x10AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x552 SWAP2 SWAP1 PUSH2 0x3415 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x575 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x570 SWAP2 SWAP1 PUSH2 0x3BF3 JUMP JUMPDEST PUSH2 0x10D5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x599 SWAP2 SWAP1 PUSH2 0x378D JUMP JUMPDEST PUSH2 0x11E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5AB SWAP2 SWAP1 PUSH2 0x3D29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D6 SWAP2 SWAP1 PUSH2 0x3D4B JUMP JUMPDEST PUSH2 0x1238 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x604 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5FF SWAP2 SWAP1 PUSH2 0x3DCE JUMP JUMPDEST PUSH2 0x1252 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x612 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x62D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x628 SWAP2 SWAP1 PUSH2 0x3E75 JUMP JUMPDEST PUSH2 0x1356 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x656 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x651 SWAP2 SWAP1 PUSH2 0x3D4B JUMP JUMPDEST PUSH2 0x136E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x664 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x67F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x67A SWAP2 SWAP1 PUSH2 0x3EE4 JUMP JUMPDEST PUSH2 0x150D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x68C SWAP2 SWAP1 PUSH2 0x3385 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6B7 SWAP2 SWAP1 PUSH2 0x378D JUMP JUMPDEST PUSH2 0x15BE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x6EF PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x191E JUMP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x788 JUMPI PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH1 0x40 MLOAD PUSH32 0xBB370B2B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77F SWAP2 SWAP1 PUSH2 0x3F3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLVALUE DUP8 DUP8 CALLER CALLVALUE PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7BA SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3FF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x7D6 SWAP2 SWAP1 PUSH2 0x405C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x813 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x818 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x82E JUMPI DUP1 SWAP4 POP POP POP POP PUSH2 0x837 JUMP JUMPDEST DUP1 MLOAD DUP1 PUSH1 0x20 DUP4 ADD REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x3A271706 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x897 JUMPI POP PUSH2 0x896 DUP3 PUSH2 0x19D8 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x8A7 JUMPI POP PUSH2 0x8A6 DUP3 PUSH2 0x1A39 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x8BA DUP4 DUP4 PUSH2 0x1AA1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8E9 JUMPI PUSH2 0x8E8 PUSH2 0x30BE JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x91C JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x907 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x992 JUMPI PUSH2 0x969 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x941 JUMPI PUSH2 0x940 PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x95C JUMPI PUSH2 0x95B PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1AA1 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x97C JUMPI PUSH2 0x97B PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x922 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA44 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xAE8F9A3600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3B SWAP2 SWAP1 PUSH2 0x40B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA58 DUP3 PUSH2 0x1B6F JUMP JUMPDEST PUSH2 0xA62 DUP4 DUP4 PUSH2 0x1BBC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA75 DUP3 PUSH2 0x1B6F JUMP JUMPDEST PUSH2 0xA90 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1C29 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAA1 CALLER DUP5 PUSH2 0x1BBC JUMP JUMPDEST PUSH2 0xAE4 JUMPI DUP3 CALLER PUSH1 0x40 MLOAD PUSH32 0x1294D2A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xADB SWAP3 SWAP2 SWAP1 PUSH2 0x40CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAF1 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1C4A JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB03 DUP3 PUSH2 0x1F6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP3 DUP3 SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB29 JUMPI PUSH2 0xB28 PUSH2 0x30BE JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB5C JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xB47 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0xC7F JUMPI PUSH1 0x0 DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0xB9A JUMPI PUSH2 0xB99 PUSH2 0x4073 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0xBAC SWAP2 SWAP1 PUSH2 0x4104 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBBA SWAP3 SWAP2 SWAP1 PUSH2 0x4167 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xBF5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBFA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0xC53 JUMPI PUSH1 0x0 DUP2 MLOAD EQ PUSH2 0xC16 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH32 0x234EB81900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC4A SWAP2 SWAP1 PUSH2 0x309E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xC67 JUMPI PUSH2 0xC66 PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP3 PUSH1 0x1 ADD SWAP3 POP POP POP PUSH2 0xB62 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCCF PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2014 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCDE PUSH2 0x2029 JUMP JUMPDEST PUSH2 0xCE8 PUSH1 0x0 PUSH2 0x1639 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP6 MLOAD SWAP1 POP DUP5 MLOAD DUP2 EQ ISZERO DUP1 PUSH2 0xD01 JUMPI POP DUP4 MLOAD DUP2 EQ ISZERO JUMPDEST DUP1 PUSH2 0xD0D JUMPI POP DUP3 MLOAD DUP2 EQ ISZERO JUMPDEST DUP1 PUSH2 0xD19 JUMPI POP DUP2 MLOAD DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0xD50 JUMPI PUSH1 0x40 MLOAD PUSH32 0x93A8311900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xDF5 JUMPI PUSH2 0xDEA DUP8 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD71 JUMPI PUSH2 0xD70 PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xD8C JUMPI PUSH2 0xD8B PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xDA7 JUMPI PUSH2 0xDA6 PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xDC2 JUMPI PUSH2 0xDC1 PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0xDDD JUMPI PUSH2 0xDDC PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xA97 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0xD53 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE06 PUSH2 0x2029 JUMP JUMPDEST PUSH1 0x0 CALLVALUE EQ PUSH2 0xE40 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF36BA73700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE4A DUP3 DUP3 PUSH2 0x20A2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE59 DUP4 PUSH2 0x999 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xECF JUMPI DUP1 DUP4 CALLER PUSH1 0x40 MLOAD PUSH32 0x5B271EA200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEC6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4180 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF36 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9577B8B300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF9C JUMPI PUSH1 0x40 MLOAD PUSH32 0x89FDAD6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFC3 DUP6 PUSH1 0x5 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x210D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1009 JUMPI DUP5 DUP5 PUSH1 0x40 MLOAD PUSH32 0xA7626B6800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1000 SWAP3 SWAP2 SWAP1 PUSH2 0x41B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1B1B58AA2EC0CEC2228B2D37124556D41F5A1F7B12F089171F896CC236671215 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1067 SWAP2 SWAP1 PUSH2 0x3063 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x0 CALLER DUP6 PUSH1 0x1 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1089 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x41E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x10A4 DUP7 DUP3 PUSH2 0x213D JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x10DD PUSH2 0x2029 JUMP JUMPDEST PUSH1 0x0 CALLVALUE EQ PUSH2 0x1117 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF36BA73700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x1152 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3BCC897900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ ISZERO PUSH2 0x118E JUMPI PUSH1 0x40 MLOAD PUSH32 0x97DA5F9500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x11E3 JUMPI PUSH2 0x11D8 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x11B0 JUMPI PUSH2 0x11AF PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x11CB JUMPI PUSH2 0x11CA PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x20A2 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1191 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1231 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x216F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1240 PUSH2 0x2029 JUMP JUMPDEST PUSH2 0x124C DUP5 DUP5 DUP5 DUP5 PUSH2 0x2190 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x125A PUSH2 0x2029 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ ISZERO DUP1 PUSH2 0x126D JUMPI POP DUP1 MLOAD DUP3 MLOAD EQ ISZERO JUMPDEST ISZERO PUSH2 0x12A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2FA71DFE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD EQ ISZERO PUSH2 0x12E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x80C9830500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1350 JUMPI PUSH2 0x1345 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1302 JUMPI PUSH2 0x1301 PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x131D JUMPI PUSH2 0x131C PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1338 JUMPI PUSH2 0x1337 PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x23C0 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x12E3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x135E PUSH2 0x2029 JUMP JUMPDEST PUSH2 0x1369 DUP4 DUP4 DUP4 PUSH2 0x23C0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1379 DUP5 PUSH2 0x999 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13EF JUMPI DUP1 DUP5 CALLER PUSH1 0x40 MLOAD PUSH32 0x5B271EA200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4180 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1456 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9577B8B300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x14BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x89FDAD6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14C9 DUP6 DUP3 DUP7 DUP7 DUP7 PUSH2 0x244E JUMP JUMPDEST DUP3 ISZERO PUSH2 0x1506 JUMPI PUSH1 0x0 CALLER DUP6 PUSH1 0x0 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x14E9 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x41E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x1504 DUP7 DUP3 PUSH2 0x213D JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x152A JUMPI PUSH2 0x1529 PUSH2 0x30BE JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x155D JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1548 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x15B8 JUMPI PUSH2 0x158F DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1582 JUMPI PUSH2 0x1581 PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1F6F JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x15A2 JUMPI PUSH2 0x15A1 PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1563 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15C6 PUSH2 0x2029 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x162D JUMPI PUSH1 0x40 MLOAD PUSH32 0x1AD8836C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1636 DUP2 PUSH2 0x1639 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1641 PUSH2 0x10AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x172E JUMPI DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1758 SWAP3 SWAP2 SWAP1 PUSH2 0x2D36 JUMP JUMPDEST POP DUP2 PUSH32 0xECE574603820D07BC9B91F2A932BAADF4628AABCB8AFBA49776529C14A6104B2 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1789 SWAP2 SWAP1 PUSH2 0x3063 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x179F DUP3 DUP3 PUSH2 0x17A3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0xDEBA1E292F8BA88238E10AB3C7F88BD4BE4FAC56CAD5194B6ECCEAF653468AF1 PUSH1 0x0 SHL DUP3 EQ ISZERO PUSH2 0x1800 JUMPI PUSH1 0x40 MLOAD PUSH32 0x85C169BD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x2F0A68AB07768E01943A599E73362A0E17A63A72E94DD2E384D2C1D4DB932756 PUSH1 0x0 SHL DUP3 EQ ISZERO PUSH2 0x185D JUMPI PUSH1 0x40 MLOAD PUSH32 0x76755B3800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xE0261FA95DB2EB3B5439BD033CDA66D56B96F92F243A8228FD87550ED7BDFDB3 PUSH1 0x0 SHL DUP3 EQ ISZERO PUSH2 0x18BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x4EF6D7FB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x18E1 SWAP3 SWAP2 SWAP1 PUSH2 0x2D36 JUMP JUMPDEST POP DUP2 PUSH32 0xECE574603820D07BC9B91F2A932BAADF4628AABCB8AFBA49776529C14A6104B2 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1912 SWAP2 SWAP1 PUSH2 0x3063 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1959 PUSH10 0xCEE78B4094DA86011096 PUSH1 0xB0 SHL DUP6 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH2 0x252B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1966 DUP3 PUSH2 0x1F6F JUMP JUMPDEST SWAP1 POP PUSH1 0x14 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x197C JUMPI POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO JUMPDEST ISZERO PUSH2 0x19BE JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x42BFE79F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19B5 SWAP2 SWAP1 PUSH2 0x3063 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x19C8 SWAP1 PUSH2 0x428A JUMP JUMPDEST PUSH1 0x60 SHR PUSH1 0x1 SWAP4 POP SWAP4 POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xA918FA6B PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x1A32 JUMPI POP PUSH2 0x1A31 DUP3 PUSH2 0x256B JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1A4C PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH2 0x191E JUMP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1A8E JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x1A9C JUMP JUMPDEST PUSH2 0x1A98 DUP2 DUP5 PUSH2 0x25CC JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x0 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1ABA SWAP3 SWAP2 SWAP1 PUSH2 0x4312 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x1AE9 SWAP1 PUSH2 0x436D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1B15 SWAP1 PUSH2 0x436D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B62 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1B37 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B62 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B45 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B78 DUP2 PUSH2 0x268B JUMP JUMPDEST PUSH2 0x1BB9 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAE8F9A3600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BB0 SWAP2 SWAP1 PUSH2 0x40B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BC7 DUP3 PUSH2 0x999 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1C21 JUMPI POP PUSH2 0x1C20 DUP4 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x26F7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1C39 DUP4 PUSH1 0x0 ADD PUSH2 0x2727 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 DUP2 SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1CB0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5D67D6C100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1CBB DUP5 PUSH2 0x999 JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D31 JUMPI DUP1 DUP5 DUP8 PUSH1 0x40 MLOAD PUSH32 0x5B271EA200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D28 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4180 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1D98 JUMPI PUSH1 0x40 MLOAD PUSH32 0x24ECEF4D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1DA4 DUP7 DUP7 DUP7 DUP6 PUSH2 0x2783 JUMP JUMPDEST PUSH2 0x1DAD DUP5 PUSH2 0x999 JUMP JUMPDEST SWAP1 POP PUSH2 0x1DB9 DUP7 DUP6 PUSH2 0x2789 JUMP JUMPDEST PUSH2 0x1E0A DUP5 PUSH1 0x4 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x27FF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x1E5C DUP5 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2816 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP DUP5 PUSH1 0x3 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB333C813A7426A7A11E2B190CAD52C44119421594B47F6F32ACE6D8C7207B2BF CALLER DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1F11 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x439F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1F25 DUP7 DUP7 DUP7 DUP6 PUSH2 0x282D JUMP JUMPDEST PUSH1 0x0 CALLER DUP8 DUP8 DUP8 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1F40 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x43DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x1F5B DUP8 DUP3 PUSH2 0x2833 JUMP JUMPDEST PUSH2 0x1F66 DUP7 DUP6 DUP4 PUSH2 0x2865 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x1F8F SWAP1 PUSH2 0x436D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1FBB SWAP1 PUSH2 0x436D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2008 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FDD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2008 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1FEB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2022 DUP3 PUSH1 0x0 ADD PUSH2 0x29CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2048 PUSH2 0x10AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x20A0 JUMPI CALLER PUSH1 0x40 MLOAD PUSH32 0xBF1169C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2097 SWAP2 SWAP1 PUSH2 0x3415 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH32 0xF675E9361AF1C1664C1868CFA3EB97672D6B1A513AA5B81DEC34C9EE330E818D PUSH1 0x0 SHL DUP3 EQ ISZERO PUSH2 0x20FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x3664800A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2109 DUP3 DUP3 PUSH2 0x1795 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2135 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x29DC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x216B DUP3 PUSH32 0x8A1C15A8799F71B547E08E2BCB2E85257E81B0A07EEE2CE6712549EEF1F00970 PUSH1 0x0 SHL DUP4 PUSH2 0x2A4C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x217F DUP4 PUSH1 0x0 ADD PUSH2 0x2727 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 DUP2 SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x21F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x24ECEF4D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2204 PUSH1 0x0 DUP6 DUP6 DUP5 PUSH2 0x2783 JUMP JUMPDEST PUSH2 0x220D DUP4 PUSH2 0x268B JUMP JUMPDEST ISZERO PUSH2 0x224F JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x34C7B51100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2246 SWAP2 SWAP1 PUSH2 0x40B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD PUSH2 0x225E SWAP1 PUSH2 0x4466 JUMP JUMPDEST SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH2 0x22B6 DUP4 PUSH1 0x4 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2816 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP DUP4 PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB333C813A7426A7A11E2B190CAD52C44119421594B47F6F32ACE6D8C7207B2BF CALLER DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x236C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x439F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x2381 PUSH1 0x0 DUP6 DUP6 DUP5 PUSH2 0x282D JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x0 DUP7 DUP7 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x239D SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x43DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x23B9 DUP6 DUP5 DUP4 PUSH2 0x2865 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x23D8 SWAP3 SWAP2 SWAP1 PUSH2 0x4312 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x240F SWAP3 SWAP2 SWAP1 PUSH2 0x2D36 JUMP JUMPDEST POP DUP2 DUP4 PUSH32 0xA6E4251F855F750545FE414F120DB91C76B88DEF14D120969E5BB2D3F05DEBBB DUP4 PUSH1 0x40 MLOAD PUSH2 0x2441 SWAP2 SWAP1 PUSH2 0x3063 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2475 DUP7 PUSH1 0x5 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2B0B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x24BB JUMPI DUP6 DUP5 PUSH1 0x40 MLOAD PUSH32 0x4AA31A8C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24B2 SWAP3 SWAP2 SWAP1 PUSH2 0x41B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC78CD419D6136F9F1C1C6AEC1D3FAE098CFFAF8BC86314A8F2685E32FE574E3C DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x251B SWAP3 SWAP2 SWAP1 PUSH2 0x44AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x0 PUSH1 0xF0 SHL DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2547 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x459A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 PUSH2 0x2562 SWAP1 PUSH2 0x45EC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x629AA694 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x25C5 JUMPI POP PUSH2 0x25C4 DUP3 PUSH2 0x2B3B JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP4 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x25E8 SWAP2 SWAP1 PUSH2 0x3F3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 PUSH1 0x0 DUP6 MLOAD PUSH1 0x20 DUP8 ADD DUP11 PUSH2 0x7530 STATICCALL SWAP3 POP RETURNDATASIZE SWAP2 POP PUSH1 0x0 MLOAD SWAP1 POP DUP3 DUP1 ISZERO PUSH2 0x2673 JUMPI POP PUSH1 0x20 DUP3 LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x267F JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x271F DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x2BA5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x2777 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x2763 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x27AB DUP3 PUSH2 0x2BC8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x27F7 JUMPI PUSH2 0x27CD PUSH1 0x0 DUP6 PUSH2 0x2BDD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0x27EC DUP3 DUP8 DUP8 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x244E JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x27B1 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x280E DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x2BF7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2825 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x29DC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2861 DUP3 PUSH32 0xB23EAE7E6D1564B295B4C3E3BE402D9A2F0776C57BDF365903496F6FA481AB00 PUSH1 0x0 SHL DUP4 PUSH2 0x2A4C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x2876 DUP4 PUSH4 0x6BB56A14 PUSH1 0xE0 SHL PUSH2 0x25CC JUMP JUMPDEST ISZERO PUSH2 0x2927 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6BB56A14 PUSH32 0xB084A55EBF70FD3C06FD755269DAC2212C4D3F0F4D09079780BFA50C1B2984D PUSH1 0x0 SHL DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28D9 SWAP3 SWAP2 SWAP1 PUSH2 0x4653 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x28F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2921 SWAP2 SWAP1 PUSH2 0x46F3 JUMP JUMPDEST POP PUSH2 0x29C6 JUMP JUMPDEST DUP2 PUSH2 0x29C5 JUMPI PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ PUSH2 0x2988 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x4349776D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x297F SWAP2 SWAP1 PUSH2 0x3415 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH32 0x317313700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29BC SWAP2 SWAP1 PUSH2 0x3415 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29E8 DUP4 DUP4 PUSH2 0x2BA5 JUMP JUMPDEST PUSH2 0x2A41 JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x2A46 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A7C PUSH4 0x6BB56A14 PUSH1 0xE0 SHL DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x25CC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x2B06 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6BB56A14 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2ABC SWAP3 SWAP2 SWAP1 PUSH2 0x4653 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2ADB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B04 SWAP2 SWAP1 PUSH2 0x46F3 JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B33 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x2BF7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BD6 DUP3 PUSH1 0x0 ADD PUSH2 0x29CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BEC DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x2D0B JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x2CFF JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x2C29 SWAP2 SWAP1 PUSH2 0x473C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x2C41 SWAP2 SWAP1 PUSH2 0x473C JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x2CB0 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2C62 JUMPI PUSH2 0x2C61 PUSH2 0x4073 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2C86 JUMPI PUSH2 0x2C85 PUSH2 0x4073 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x2CC4 JUMPI PUSH2 0x2CC3 PUSH2 0x4770 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x2D05 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2D23 JUMPI PUSH2 0x2D22 PUSH2 0x4073 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x2D42 SWAP1 PUSH2 0x436D JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x2D64 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x2DAB JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x2D7D JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x2DAB JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x2DAB JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2DAA JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2D8F JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x2DB8 SWAP2 SWAP1 PUSH2 0x2DBC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2DD5 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x2DBD JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E00 PUSH1 0x4 DUP4 PUSH2 0x2DD9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E0B DUP3 PUSH2 0x2DEA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E2F DUP2 PUSH2 0x2DF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E62 DUP4 DUP6 PUSH2 0x2DD9 JUMP JUMPDEST SWAP4 POP PUSH2 0x2E6F DUP4 DUP6 DUP5 PUSH2 0x2E36 JUMP JUMPDEST PUSH2 0x2E78 DUP4 PUSH2 0x2E45 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E9E DUP2 DUP5 DUP7 PUSH2 0x2E56 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2EF0 DUP2 PUSH2 0x2EBB JUMP JUMPDEST DUP2 EQ PUSH2 0x2EFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2F0D DUP2 PUSH2 0x2EE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F29 JUMPI PUSH2 0x2F28 PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F37 DUP5 DUP3 DUP6 ADD PUSH2 0x2EFE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F55 DUP2 PUSH2 0x2F40 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2F70 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2F4C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F89 DUP2 PUSH2 0x2F76 JUMP JUMPDEST DUP2 EQ PUSH2 0x2F94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2FA6 DUP2 PUSH2 0x2F80 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2FC3 JUMPI PUSH2 0x2FC2 PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2FD1 DUP6 DUP3 DUP7 ADD PUSH2 0x2F97 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2FE2 DUP6 DUP3 DUP7 ADD PUSH2 0x2F97 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3015 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2FFA JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3024 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3035 DUP3 PUSH2 0x2FEC JUMP JUMPDEST PUSH2 0x303F DUP2 DUP6 PUSH2 0x2DD9 JUMP JUMPDEST SWAP4 POP PUSH2 0x304F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2FF7 JUMP JUMPDEST PUSH2 0x3058 DUP2 PUSH2 0x2E45 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x307D DUP2 DUP5 PUSH2 0x302A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3098 DUP2 PUSH2 0x3085 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x30B3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x308F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x30F6 DUP3 PUSH2 0x2E45 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3115 JUMPI PUSH2 0x3114 PUSH2 0x30BE JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3128 PUSH2 0x2EA7 JUMP JUMPDEST SWAP1 POP PUSH2 0x3134 DUP3 DUP3 PUSH2 0x30ED JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3154 JUMPI PUSH2 0x3153 PUSH2 0x30BE JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x317D PUSH2 0x3178 DUP5 PUSH2 0x3139 JUMP JUMPDEST PUSH2 0x311E JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x31A0 JUMPI PUSH2 0x319F PUSH2 0x3165 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x31C9 JUMPI DUP1 PUSH2 0x31B5 DUP9 DUP3 PUSH2 0x2F97 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x31A2 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x31E8 JUMPI PUSH2 0x31E7 PUSH2 0x30B9 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x31F8 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x316A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3218 JUMPI PUSH2 0x3217 PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3236 JUMPI PUSH2 0x3235 PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3242 DUP6 DUP3 DUP7 ADD PUSH2 0x31D3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3263 JUMPI PUSH2 0x3262 PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x326F DUP6 DUP3 DUP7 ADD PUSH2 0x31D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32C1 DUP3 PUSH2 0x2FEC JUMP JUMPDEST PUSH2 0x32CB DUP2 DUP6 PUSH2 0x32A5 JUMP JUMPDEST SWAP4 POP PUSH2 0x32DB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2FF7 JUMP JUMPDEST PUSH2 0x32E4 DUP2 PUSH2 0x2E45 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32FB DUP4 DUP4 PUSH2 0x32B6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x331B DUP3 PUSH2 0x3279 JUMP JUMPDEST PUSH2 0x3325 DUP2 DUP6 PUSH2 0x3284 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x3337 DUP6 PUSH2 0x3295 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3373 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x3354 DUP6 DUP3 PUSH2 0x32EF JUMP JUMPDEST SWAP5 POP PUSH2 0x335F DUP4 PUSH2 0x3303 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x333B JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x339F DUP2 DUP5 PUSH2 0x3310 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33BD JUMPI PUSH2 0x33BC PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x33CB DUP5 DUP3 DUP6 ADD PUSH2 0x2F97 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33FF DUP3 PUSH2 0x33D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x340F DUP2 PUSH2 0x33F4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x342A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3406 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3439 DUP2 PUSH2 0x33F4 JUMP JUMPDEST DUP2 EQ PUSH2 0x3444 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3456 DUP2 PUSH2 0x3430 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3473 JUMPI PUSH2 0x3472 PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3481 DUP6 DUP3 DUP7 ADD PUSH2 0x3447 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3492 DUP6 DUP3 DUP7 ADD PUSH2 0x2F97 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x34D1 DUP2 PUSH2 0x33F4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34E3 DUP4 DUP4 PUSH2 0x34C8 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3507 DUP3 PUSH2 0x349C JUMP JUMPDEST PUSH2 0x3511 DUP2 DUP6 PUSH2 0x34A7 JUMP JUMPDEST SWAP4 POP PUSH2 0x351C DUP4 PUSH2 0x34B8 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x354D JUMPI DUP2 MLOAD PUSH2 0x3534 DUP9 DUP3 PUSH2 0x34D7 JUMP JUMPDEST SWAP8 POP PUSH2 0x353F DUP4 PUSH2 0x34EF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3520 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3574 DUP2 DUP5 PUSH2 0x34FC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3585 DUP2 PUSH2 0x2F40 JUMP JUMPDEST DUP2 EQ PUSH2 0x3590 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x35A2 DUP2 PUSH2 0x357C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x35C8 JUMPI PUSH2 0x35C7 PUSH2 0x30BE JUMP JUMPDEST JUMPDEST PUSH2 0x35D1 DUP3 PUSH2 0x2E45 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35F1 PUSH2 0x35EC DUP5 PUSH2 0x35AD JUMP JUMPDEST PUSH2 0x311E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x360D JUMPI PUSH2 0x360C PUSH2 0x35A8 JUMP JUMPDEST JUMPDEST PUSH2 0x3618 DUP5 DUP3 DUP6 PUSH2 0x2E36 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3635 JUMPI PUSH2 0x3634 PUSH2 0x30B9 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3645 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x35DE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x366A JUMPI PUSH2 0x3669 PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3678 DUP9 DUP3 DUP10 ADD PUSH2 0x3447 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x3689 DUP9 DUP3 DUP10 ADD PUSH2 0x3447 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x369A DUP9 DUP3 DUP10 ADD PUSH2 0x2F97 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x36AB DUP9 DUP3 DUP10 ADD PUSH2 0x3593 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x36CC JUMPI PUSH2 0x36CB PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x36D8 DUP9 DUP3 DUP10 ADD PUSH2 0x3620 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x3700 JUMPI PUSH2 0x36FF PUSH2 0x30B9 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x371D JUMPI PUSH2 0x371C PUSH2 0x36E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x3739 JUMPI PUSH2 0x3738 PUSH2 0x3165 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3757 JUMPI PUSH2 0x3756 PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3775 JUMPI PUSH2 0x3774 PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3781 DUP6 DUP3 DUP7 ADD PUSH2 0x36EA JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37A3 JUMPI PUSH2 0x37A2 PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x37B1 DUP5 DUP3 DUP6 ADD PUSH2 0x3447 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x37D5 JUMPI PUSH2 0x37D4 PUSH2 0x30BE JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37F9 PUSH2 0x37F4 DUP5 PUSH2 0x37BA JUMP JUMPDEST PUSH2 0x311E JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x381C JUMPI PUSH2 0x381B PUSH2 0x3165 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3845 JUMPI DUP1 PUSH2 0x3831 DUP9 DUP3 PUSH2 0x3447 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x381E JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3864 JUMPI PUSH2 0x3863 PUSH2 0x30B9 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3874 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x37E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3898 JUMPI PUSH2 0x3897 PUSH2 0x30BE JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38BC PUSH2 0x38B7 DUP5 PUSH2 0x387D JUMP JUMPDEST PUSH2 0x311E JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x38DF JUMPI PUSH2 0x38DE PUSH2 0x3165 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3908 JUMPI DUP1 PUSH2 0x38F4 DUP9 DUP3 PUSH2 0x3593 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x38E1 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3927 JUMPI PUSH2 0x3926 PUSH2 0x30B9 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3937 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x38A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x395B JUMPI PUSH2 0x395A PUSH2 0x30BE JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x397F PUSH2 0x397A DUP5 PUSH2 0x3940 JUMP JUMPDEST PUSH2 0x311E JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x39A2 JUMPI PUSH2 0x39A1 PUSH2 0x3165 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x39E9 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x39C7 JUMPI PUSH2 0x39C6 PUSH2 0x30B9 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x39D4 DUP10 DUP3 PUSH2 0x3620 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x39A4 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3A08 JUMPI PUSH2 0x3A07 PUSH2 0x30B9 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3A18 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x396C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3A3D JUMPI PUSH2 0x3A3C PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3A5B JUMPI PUSH2 0x3A5A PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3A67 DUP9 DUP3 DUP10 ADD PUSH2 0x384F JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3A88 JUMPI PUSH2 0x3A87 PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3A94 DUP9 DUP3 DUP10 ADD PUSH2 0x384F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3AB5 JUMPI PUSH2 0x3AB4 PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3AC1 DUP9 DUP3 DUP10 ADD PUSH2 0x31D3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3AE2 JUMPI PUSH2 0x3AE1 PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3AEE DUP9 DUP3 DUP10 ADD PUSH2 0x3912 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3B0F JUMPI PUSH2 0x3B0E PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3B1B DUP9 DUP3 DUP10 ADD PUSH2 0x39F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3B3F JUMPI PUSH2 0x3B3E PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3B4D DUP6 DUP3 DUP7 ADD PUSH2 0x2F97 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3B6E JUMPI PUSH2 0x3B6D PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3B7A DUP6 DUP3 DUP7 ADD PUSH2 0x3620 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3B9D JUMPI PUSH2 0x3B9C PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3BAB DUP7 DUP3 DUP8 ADD PUSH2 0x3447 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3BBC DUP7 DUP3 DUP8 ADD PUSH2 0x2F97 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3BDD JUMPI PUSH2 0x3BDC PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3BE9 DUP7 DUP3 DUP8 ADD PUSH2 0x3620 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3C0A JUMPI PUSH2 0x3C09 PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3C28 JUMPI PUSH2 0x3C27 PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3C34 DUP6 DUP3 DUP7 ADD PUSH2 0x31D3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3C55 JUMPI PUSH2 0x3C54 PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3C61 DUP6 DUP3 DUP7 ADD PUSH2 0x39F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3CA0 DUP2 PUSH2 0x2F76 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CB2 DUP4 DUP4 PUSH2 0x3C97 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CD6 DUP3 PUSH2 0x3C6B JUMP JUMPDEST PUSH2 0x3CE0 DUP2 DUP6 PUSH2 0x3C76 JUMP JUMPDEST SWAP4 POP PUSH2 0x3CEB DUP4 PUSH2 0x3C87 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3D1C JUMPI DUP2 MLOAD PUSH2 0x3D03 DUP9 DUP3 PUSH2 0x3CA6 JUMP JUMPDEST SWAP8 POP PUSH2 0x3D0E DUP4 PUSH2 0x3CBE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3CEF JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D43 DUP2 DUP5 PUSH2 0x3CCB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3D65 JUMPI PUSH2 0x3D64 PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3D73 DUP8 DUP3 DUP9 ADD PUSH2 0x3447 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3D84 DUP8 DUP3 DUP9 ADD PUSH2 0x2F97 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x3D95 DUP8 DUP3 DUP9 ADD PUSH2 0x3593 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3DB6 JUMPI PUSH2 0x3DB5 PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3DC2 DUP8 DUP3 DUP9 ADD PUSH2 0x3620 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3DE7 JUMPI PUSH2 0x3DE6 PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3E05 JUMPI PUSH2 0x3E04 PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3E11 DUP7 DUP3 DUP8 ADD PUSH2 0x31D3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3E32 JUMPI PUSH2 0x3E31 PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3E3E DUP7 DUP3 DUP8 ADD PUSH2 0x31D3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3E5F JUMPI PUSH2 0x3E5E PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3E6B DUP7 DUP3 DUP8 ADD PUSH2 0x39F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3E8E JUMPI PUSH2 0x3E8D PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3E9C DUP7 DUP3 DUP8 ADD PUSH2 0x2F97 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3EAD DUP7 DUP3 DUP8 ADD PUSH2 0x2F97 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3ECE JUMPI PUSH2 0x3ECD PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3EDA DUP7 DUP3 DUP8 ADD PUSH2 0x3620 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3EFA JUMPI PUSH2 0x3EF9 PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3F18 JUMPI PUSH2 0x3F17 PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3F24 DUP5 DUP3 DUP6 ADD PUSH2 0x31D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3F36 DUP2 PUSH2 0x2EBB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3F51 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3F2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F6E DUP4 DUP6 PUSH2 0x3F57 JUMP JUMPDEST SWAP4 POP PUSH2 0x3F7B DUP4 DUP6 DUP5 PUSH2 0x2E36 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F9F DUP3 PUSH2 0x3F87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FB1 DUP3 PUSH2 0x3F94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3FC9 PUSH2 0x3FC4 DUP3 PUSH2 0x33F4 JUMP JUMPDEST PUSH2 0x3FA6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3FEA PUSH2 0x3FE5 DUP3 PUSH2 0x3085 JUMP JUMPDEST PUSH2 0x3FCF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FFD DUP3 DUP7 DUP9 PUSH2 0x3F62 JUMP JUMPDEST SWAP2 POP PUSH2 0x4009 DUP3 DUP6 PUSH2 0x3FB8 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x4019 DUP3 DUP5 PUSH2 0x3FD9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4036 DUP3 PUSH2 0x2FEC JUMP JUMPDEST PUSH2 0x4040 DUP2 DUP6 PUSH2 0x3F57 JUMP JUMPDEST SWAP4 POP PUSH2 0x4050 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2FF7 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4068 DUP3 DUP5 PUSH2 0x402B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x40AB DUP2 PUSH2 0x2F76 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x40C6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x40A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x40E1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x40A2 JUMP JUMPDEST PUSH2 0x40EE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3406 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x4121 JUMPI PUSH2 0x4120 PUSH2 0x40F5 JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4143 JUMPI PUSH2 0x4142 PUSH2 0x40FA JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x415F JUMPI PUSH2 0x415E PUSH2 0x40FF JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4174 DUP3 DUP5 DUP7 PUSH2 0x3F62 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x4195 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3406 JUMP JUMPDEST PUSH2 0x41A2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x40A2 JUMP JUMPDEST PUSH2 0x41AF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3406 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x41CC PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3406 JUMP JUMPDEST PUSH2 0x41D9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x40A2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x41F5 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3406 JUMP JUMPDEST PUSH2 0x4202 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x40A2 JUMP JUMPDEST PUSH2 0x420F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2F4C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x4221 DUP2 DUP5 PUSH2 0x302A JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4274 DUP3 MLOAD PUSH2 0x423C JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4295 DUP3 PUSH2 0x2FEC JUMP JUMPDEST DUP3 PUSH2 0x429F DUP5 PUSH2 0x422C JUMP JUMPDEST SWAP1 POP PUSH2 0x42AA DUP2 PUSH2 0x4268 JUMP JUMPDEST SWAP3 POP PUSH1 0x14 DUP3 LT ISZERO PUSH2 0x42EA JUMPI PUSH2 0x42E5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP4 PUSH1 0x14 SUB PUSH1 0x8 MUL PUSH2 0x427D JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x430C PUSH2 0x4307 DUP3 PUSH2 0x2F76 JUMP JUMPDEST PUSH2 0x42F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x431E DUP3 DUP6 PUSH2 0x42FB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x432E DUP3 DUP5 PUSH2 0x42FB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x4385 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x4399 JUMPI PUSH2 0x4398 PUSH2 0x433E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x43B4 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3406 JUMP JUMPDEST PUSH2 0x43C1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2F4C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x43D3 DUP2 DUP5 PUSH2 0x302A JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x43F2 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x3406 JUMP JUMPDEST PUSH2 0x43FF PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x3406 JUMP JUMPDEST PUSH2 0x440C PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x3406 JUMP JUMPDEST PUSH2 0x4419 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x40A2 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x442B DUP2 DUP5 PUSH2 0x302A JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4471 DUP3 PUSH2 0x3085 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x44A4 JUMPI PUSH2 0x44A3 PUSH2 0x4437 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x44C4 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2F4C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x44D6 DUP2 DUP5 PUSH2 0x302A JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4526 PUSH2 0x4521 DUP3 PUSH2 0x44DF JUMP JUMPDEST PUSH2 0x450B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFF000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4573 PUSH2 0x456E DUP3 PUSH2 0x452C JUMP JUMPDEST PUSH2 0x4558 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4594 PUSH2 0x458F DUP3 PUSH2 0x423C JUMP JUMPDEST PUSH2 0x4579 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45A6 DUP3 DUP7 PUSH2 0x4515 JUMP JUMPDEST PUSH1 0xA DUP3 ADD SWAP2 POP PUSH2 0x45B6 DUP3 DUP6 PUSH2 0x4562 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP2 POP PUSH2 0x45C6 DUP3 DUP5 PUSH2 0x4583 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45E3 DUP3 MLOAD PUSH2 0x2F76 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45F7 DUP3 PUSH2 0x2FEC JUMP JUMPDEST DUP3 PUSH2 0x4601 DUP5 PUSH2 0x422C JUMP JUMPDEST SWAP1 POP PUSH2 0x460C DUP2 PUSH2 0x45D7 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH2 0x464C JUMPI PUSH2 0x4647 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH2 0x427D JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4668 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x40A2 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x467A DUP2 DUP5 PUSH2 0x302A JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4696 PUSH2 0x4691 DUP5 PUSH2 0x35AD JUMP JUMPDEST PUSH2 0x311E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x46B2 JUMPI PUSH2 0x46B1 PUSH2 0x35A8 JUMP JUMPDEST JUMPDEST PUSH2 0x46BD DUP5 DUP3 DUP6 PUSH2 0x2FF7 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x46DA JUMPI PUSH2 0x46D9 PUSH2 0x30B9 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x46EA DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4683 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4709 JUMPI PUSH2 0x4708 PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4727 JUMPI PUSH2 0x4726 PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x4733 DUP5 DUP3 DUP6 ADD PUSH2 0x46C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4747 DUP3 PUSH2 0x3085 JUMP JUMPDEST SWAP2 POP PUSH2 0x4752 DUP4 PUSH2 0x3085 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x4765 JUMPI PUSH2 0x4764 PUSH2 0x4437 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE SWAP4 0xAC SWAP7 JUMP PUSH28 0x7722AF642A85C7ED6E46A9F01D0BC021F987228A2246309FB9066473 PUSH16 0x6C634300080C00330000000000000000 ","sourceMap":"374:1762:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5513:1:20;5500:9;:14;5496:90;;;5537:38;;;;;;;;;;:::i;:::-;;;;;;;;5496:90;5603:34;;;;;;;;;;;;;;374:1762:23;;;5067:12:20;5113:1;5095:8;;:15;;:19;5091:90;;;5161:8;;5137:33;;;;;;;;;;;;:::i;:::-;;;;;;;;5091:90;5197:34;5222:8;;5197:24;:34::i;:::-;5190:41;;4985:253;;;374:1762:23;;;;;;8739:388:20;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3515:205:21;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2433:109;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3791:523;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2873:290;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9020:219;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9310:197;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10000:349;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1197:156:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5622:1081:21;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2645:157;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1313:92:3;;;;;;;;;;;;;:::i;:::-;;10420:683:21;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2326:232:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6809:1062:21;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;736:85:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3076:763:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3234:167:21;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1940:194:23;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4669:730:21;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4385:213;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7942:1007;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1403:458:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1554:211:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6639:1031:20;6747:12;6815:17;6838:37;6867:7;;;;6838:28;:37::i;:::-;6814:61;;;6956:1;6935:23;;:9;:23;;;6931:92;;;7015:7;;;;6979:44;;;;;;;;;;;:::i;:::-;;;;;;;;6931:92;7035:12;7049:19;7072:9;:14;;7094:9;7135:8;;7145:10;7157:9;7118:49;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7072:105;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7034:143;;;;7192:7;7188:476;;;7222:6;7215:13;;;;;;;7188:476;7576:6;7570:13;7624:15;7619:2;7611:6;7607:15;7600:40;6639:1031;;;;;:::o;8739:388::-;8917:4;128:10:18;8971:17:20;;8956:32;;;:11;:32;;;;:84;;;;9004:36;9028:11;9004:23;:36::i;:::-;8956:84;:164;;;;9056:64;9108:11;9056:51;:64::i;:::-;8956:164;8937:183;;8739:388;;;:::o;3515:205:21:-;3636:22;3677:36;3696:7;3705;3677:18;:36::i;:::-;3670:43;;3515:205;;;;:::o;2433:109::-;2494:7;2520:15;;2513:22;;2433:109;:::o;3791:523::-;3938:25;4000:8;:15;3988:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3975:41;;4032:9;4027:253;4047:8;:15;4043:1;:19;4027:253;;;4096:44;4115:8;4124:1;4115:11;;;;;;;;:::i;:::-;;;;;;;;4128:8;4137:1;4128:11;;;;;;;;:::i;:::-;;;;;;;;4096:18;:44::i;:::-;4080:10;4091:1;4080:13;;;;;;;;:::i;:::-;;;;;;;:60;;;;4252:3;;;;;4027:253;;;;3791:523;;;;:::o;2873:290::-;2964:7;2983:18;3004:12;:21;3017:7;3004:21;;;;;;;;;;;;;;;;;;;;;2983:42;;3062:1;3040:24;;:10;:24;;;3036:93;;;3110:7;3087:31;;;;;;;;;;;:::i;:::-;;;;;;;;3036:93;3146:10;3139:17;;;2873:290;;;:::o;9020:219::-;9138:4;9154:23;9169:7;9154:14;:23::i;:::-;9195:37;9214:8;9224:7;9195:18;:37::i;:::-;9188:44;;9020:219;;;;:::o;9310:197::-;9403:16;9431:23;9446:7;9431:14;:23::i;:::-;9472:28;:10;:19;9483:7;9472:19;;;;;;;;;;;:26;:28::i;:::-;9465:35;;9310:197;;;:::o;10000:349::-;10177:39;10196:10;10208:7;10177:18;:39::i;:::-;10172:119;;10260:7;10269:10;10239:41;;;;;;;;;;;;:::i;:::-;;;;;;;;10172:119;10301:41;10311:4;10317:2;10321:7;10330:5;10337:4;10301:9;:41::i;:::-;10000:349;;;;;:::o;1197:156:1:-;1283:22;1329:17;1338:7;1329:8;:17::i;:::-;1317:29;;1197:156;;;:::o;5622:1081:21:-;5712:22;5768:4;;:11;;5756:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5746:34;;5795:9;5790:907;5810:4;;:11;;5806:1;:15;5790:907;;;5840:12;5854:19;5885:4;5877:26;;5921:4;;5926:1;5921:7;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;5877:65;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5839:103;;;;5962:7;5957:636;;6080:1;6063:6;:13;:18;6059:520;;6378:6;6372:13;6434:15;6425:6;6421:2;6417:15;6410:40;6059:520;6557:1;6525:35;;;;;;;;;;;:::i;:::-;;;;;;;;5957:636;6620:6;6607:7;6615:1;6607:10;;;;;;;;:::i;:::-;;;;;;;:19;;;;6669:3;;;;;5825:872;;5790:907;;;;5622:1081;;;;:::o;2645:157::-;2736:7;2762:33;:12;:24;2775:10;2762:24;;;;;;;;;;;;;;;:31;:33::i;:::-;2755:40;;2645:157;;;:::o;1313:92:3:-;940:13;:11;:13::i;:::-;1377:21:::1;1395:1;1377:9;:21::i;:::-;1313:92::o:0;10420:683:21:-;10635:18;10656:4;:11;10635:32;;10708:2;:9;10694:10;:23;;:67;;;;10747:7;:14;10733:10;:28;;10694:67;:109;;;;10791:5;:12;10777:10;:26;;10694:109;:150;;;;10833:4;:11;10819:10;:25;;10694:150;10677:236;;;10876:26;;;;;;;;;;;;;;10677:236;10928:9;10923:174;10943:10;10939:1;:14;10923:174;;;10971:55;10980:4;10985:1;10980:7;;;;;;;;:::i;:::-;;;;;;;;10989:2;10992:1;10989:5;;;;;;;;:::i;:::-;;;;;;;;10996:7;11004:1;10996:10;;;;;;;;:::i;:::-;;;;;;;;11008:5;11014:1;11008:8;;;;;;;;:::i;:::-;;;;;;;;11018:4;11023:1;11018:7;;;;;;;;:::i;:::-;;;;;;;;10971:8;:55::i;:::-;11069:3;;;;;10923:174;;;;10625:478;10420:683;;;;;:::o;2326:232:1:-;940:13:3;:11;:13::i;:::-;2475:1:1::1;2462:9;:14;2458:55;;2485:28;;;;;;;;;;;;;;2458:55;2523:28;2532:7;2541:9;2523:8;:28::i;:::-;2326:232:::0;;:::o;6809:1062:21:-;6974:18;6995:21;7008:7;6995:12;:21::i;:::-;6974:42;;7045:10;7031:24;;:10;:24;;;7027:112;;7096:10;7108:7;7117:10;7078:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;7027:112;7173:1;7153:22;;:8;:22;;;7149:96;;;7198:36;;;;;;;;;;;;;;7149:96;7273:8;7259:22;;:10;:22;;;7255:92;;;7304:32;;;;;;;;;;;;;;7255:92;7357:12;7372:33;7396:8;7372:10;:19;7383:7;7372:19;;;;;;;;;;;:23;;:33;;;;:::i;:::-;7357:48;;7420:7;7415:69;;7466:8;7476:7;7436:48;;;;;;;;;;;;:::i;:::-;;;;;;;;7415:69;7588:7;7564:10;7500:143;;7542:8;7500:143;;;7609:24;7500:143;;;;;;:::i;:::-;;;;;;;;7654:21;7702:10;7726:7;7747:4;7779:24;7678:135;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7654:159;;7824:40;7845:8;7855;7824:20;:40::i;:::-;6964:907;;;6809:1062;;;:::o;736:85:3:-;782:7;808:6;;;;;;;;;;;801:13;;736:85;:::o;3076:763:1:-;940:13:3;:11;:13::i;:::-;3327:1:1::1;3314:9;:14;3310:55;;3337:28;;;;;;;;;;;;;;3310:55;3399:10;:17;3380:8;:15;:36;3376:112;;3439:38;;;;;;;;;;;;;;3376:112;3521:1;3502:8;:15;:20;3498:92;;;3545:34;;;;;;;;;;;;;;3498:92;3605:9;3600:233;3624:8;:15;3620:1;:19;3600:233;;;3657:36;3666:8;3675:1;3666:11;;;;;;;;:::i;:::-;;;;;;;;3679:10;3690:1;3679:13;;;;;;;;:::i;:::-;;;;;;;;3657:8;:36::i;:::-;3805:3;;;;;3600:233;;;;3076:763:::0;;:::o;3234:167:21:-;3326:16;3361:33;:12;:24;3374:10;3361:24;;;;;;;;;;;;;;;:31;:33::i;:::-;3354:40;;3234:167;;;:::o;1940:194:23:-;940:13:3;:11;:13::i;:::-;2096:31:23::1;2102:2;2106:7;2115:5;2122:4;2096:5;:31::i;:::-;1940:194:::0;;;;:::o;4669:730:21:-;940:13:3;:11;:13::i;:::-;4893:8:21::1;:15;4874:8;:15;:34;;:86;;;;4943:10;:17;4924:8;:15;:36;;4874:86;4857:178;;;4992:32;;;;;;;;;;;;;;4857:178;5068:1;5049:8;:15;:20;5045:86;;;5092:28;;;;;;;;;;;;;;5045:86;5146:9;5141:252;5161:8;:15;5157:1;:19;5141:252;;;5194:59;5213:8;5222:1;5213:11;;;;;;;;:::i;:::-;;;;;;;;5226:8;5235:1;5226:11;;;;;;;;:::i;:::-;;;;;;;;5239:10;5250:1;5239:13;;;;;;;;:::i;:::-;;;;;;;;5194:18;:59::i;:::-;5365:3;;;;;5141:252;;;;4669:730:::0;;;:::o;4385:213::-;940:13:3;:11;:13::i;:::-;4544:47:21::1;4563:7;4572;4581:9;4544:18;:47::i;:::-;4385:213:::0;;;:::o;7942:1007::-;8125:18;8146:21;8159:7;8146:12;:21::i;:::-;8125:42;;8196:10;8182:24;;:10;:24;;;8178:112;;8247:10;8259:7;8268:10;8229:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;8178:112;8324:1;8304:22;;:8;:22;;;8300:96;;;8349:36;;;;;;;;;;;;;;8300:96;8424:8;8410:22;;:10;:22;;;8406:92;;;8455:32;;;;;;;;;;;;;;8406:92;8508:150;8537:8;8559:10;8583:7;8604:6;8624:24;8508:15;:150::i;:::-;8673:6;8669:274;;;8695:21;8747:10;8775:7;8800:5;8839:24;8719:158;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8695:182;;8892:40;8913:8;8923;8892:20;:40::i;:::-;8681:262;8669:274;8115:834;7942:1007;;;;:::o;1403:458:1:-;1504:25;1566:8;:15;1554:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1541:41;;1598:9;1593:234;1617:8;:15;1613:1;:19;1593:234;;;1666:21;1675:8;1684:1;1675:11;;;;;;;;:::i;:::-;;;;;;;;1666:8;:21::i;:::-;1650:10;1661:1;1650:13;;;;;;;;:::i;:::-;;;;;;;:37;;;;1799:3;;;;;1593:234;;;;1403:458;;;:::o;1554:211:3:-;940:13;:11;:13::i;:::-;1658:1:::1;1638:22;;:8;:22;;;1634:96;;;1683:36;;;;;;;;;;;;;;1634:96;1739:19;1749:8;1739:9;:19::i;:::-;1554:211:::0;:::o;2133:194::-;2213:7;:5;:7::i;:::-;2201:19;;:8;:19;;;2197:124;;2270:8;2241:38;;2262:6;;;;;;;;;;2241:38;;;;;;;;;;;;2302:8;2293:6;;:17;;;;;;;;;;;;;;;;;;2197:124;2133:194;:::o;5032:188:1:-;5158:9;5140:6;:15;5147:7;5140:15;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;5194:7;5182:31;5203:9;5182:31;;;;;;:::i;:::-;;;;;;;;5032:188;;:::o;2008:224:14:-;2168:57;2206:7;2215:9;2168:37;:57::i;:::-;2008:224;;:::o;930:533:15:-;633:66:13;1062:20:15;;1051:7;:31;1047:410;;;1105:26;;;;;;;;;;;;;;1047:410;776:66:13;1163:22:15;;1152:7;:33;1148:309;;;1208:28;;;;;;;;;;;;;;1148:309;915:66:13;1268:20:15;;1257:7;:31;1253:204;;;1311:26;;;;;;;;;;;;;;1253:204;1386:9;1368:6;:15;1375:7;1368:15;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;1427:7;1415:31;1436:9;1415:31;;;;;;:::i;:::-;;;;;;;;930:533;;:::o;7939:751:20:-;8056:7;8065:4;8161:30;8194:105;433:22:6;8236:23:20;;8273:16;8194:105;;;:28;:105::i;:::-;8161:138;;8388:29;8420:66;8454:22;8420:20;:66::i;:::-;8388:98;;8527:2;8500:16;:23;:29;;:61;;;;;8560:1;8533:16;:23;:28;;8500:61;8496:127;;;8606:16;8582:41;;;;;;;;;;;:::i;:::-;;;;;;;;8496:127;8658:16;8650:25;;;:::i;:::-;8642:34;;8678:4;8634:49;;;;;;7939:751;;;:::o;998:237:8:-;1097:4;182:10:6;1147:29:8;;1132:44;;;:11;:44;;;;:96;;;;1192:36;1216:11;1192:23;:36::i;:::-;1132:96;1113:115;;998:237;;;:::o;1658:457::-;1768:4;1785:23;1814:85;1856:33;;;1814:28;:85::i;:::-;1784:115;;;1940:1;1913:29;;:15;:29;;;1909:47;;;1951:5;1944:12;;;;;1909:47;1986:122;2050:15;2083:11;1986:46;:122::i;:::-;1967:141;;;1658:457;;;;:::o;21565:213:21:-;21680:23;21722:6;:49;21752:7;21761;21739:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;21729:41;;;;;;21722:49;;;;;;;;;;;21715:56;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21565:213;;;;:::o;13429:165::-;13507:16;13515:7;13507;:16::i;:::-;13502:86;;13569:7;13546:31;;;;;;;;;;;:::i;:::-;;;;;;;;13502:86;13429:165;:::o;9665:229::-;9779:4;9813:21;9826:7;9813:12;:21::i;:::-;9803:31;;:6;:31;;;:83;;;;9850:36;9879:6;9850:10;:19;9861:7;9850:19;;;;;;;;;;;:28;;:36;;;;:::i;:::-;9803:83;9795:92;;9665:229;;;;:::o;10259:300:27:-;10322:16;10350:22;10375:19;10383:3;:10;;10375:7;:19::i;:::-;10350:44;;10404:23;10514:5;10504:15;;10546:6;10539:13;;;;10259:300;;;:::o;19289:1188:21:-;19467:2;19459:10;;:4;:10;;;19455:70;;;19492:22;;;;;;;;;;;;;;19455:70;19535:18;19556:21;19569:7;19556:12;:21::i;:::-;19535:42;;19605:4;19591:18;;:10;:18;;;19587:100;;19650:10;19662:7;19671:4;19632:44;;;;;;;;;;;;;:::i;:::-;;;;;;;;19587:100;19715:1;19701:16;;:2;:16;;;19697:83;;;19740:29;;;;;;;;;;;;;;19697:83;19790:45;19811:4;19817:2;19821:7;19830:4;19790:20;:45::i;:::-;19987:21;20000:7;19987:12;:21::i;:::-;19974:34;;20019:30;20035:4;20041:7;20019:15;:30::i;:::-;20060:34;20086:7;20060:12;:18;20073:4;20060:18;;;;;;;;;;;;;;;:25;;:34;;;;:::i;:::-;;20104:29;20125:7;20104:12;:16;20117:2;20104:16;;;;;;;;;;;;;;;:20;;:29;;;;:::i;:::-;;20167:2;20143:12;:21;20156:7;20143:21;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;20216:7;20212:2;20185:52;;20206:4;20185:52;;;20194:10;20225:5;20232:4;20185:52;;;;;;;;:::i;:::-;;;;;;;;20248:44;20268:4;20274:2;20278:7;20287:4;20248:19;:44::i;:::-;20303:21;20338:10;20350:4;20356:2;20360:7;20369:4;20327:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;20303:71;;20385:34;20404:4;20410:8;20385:18;:34::i;:::-;20429:41;20450:2;20454:5;20461:8;20429:20;:41::i;:::-;19445:1032;;19289:1188;;;;;:::o;4335:143:1:-;4415:22;4456:6;:15;4463:7;4456:15;;;;;;;;;;;4449:22;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4335:143;;;:::o;6639:115:27:-;6702:7;6728:19;6736:3;:10;;6728:7;:19::i;:::-;6721:26;;6639:115;;;:::o;1838:156:3:-;1908:10;1897:21;;:7;:5;:7::i;:::-;:21;;;1893:95;;1966:10;1941:36;;;;;;;;;;;:::i;:::-;;;;;;;;1893:95;1838:156::o;9342:373:20:-;245:66:18;9558:24:20;;9547:7;:35;9543:103;;;9605:30;;;;;;;;;;;;;;9543:103;9655:53;9689:7;9698:9;9655:33;:53::i;:::-;9342:373;;:::o;8305:150:27:-;8375:4;8398:50;8403:3;:10;;8439:5;8423:23;;8415:32;;8398:4;:50::i;:::-;8391:57;;8305:150;;;;:::o;23817:254:21:-;23937:127;23984:8;1064:66:18;24006:26:21;;24046:8;23937:33;:127::i;:::-;23817:254;;:::o;7765:300:27:-;7828:16;7856:22;7881:19;7889:3;:10;;7881:7;:19::i;:::-;7856:44;;7910:23;8020:5;8010:15;;8052:6;8045:13;;;;7765:300;;;:::o;14618:952:21:-;14776:1;14762:16;;:2;:16;;;14758:83;;;14801:29;;;;;;;;;;;;;;14758:83;14851:51;14880:1;14884:2;14888:7;14897:4;14851:20;:51::i;:::-;15003:16;15011:7;15003;:16::i;:::-;14999:87;;;15067:7;15042:33;;;;;;;;;;;:::i;:::-;;;;;;;;14999:87;15128:15;;15126:17;;;;;:::i;:::-;;;;;;;;15154:29;15175:7;15154:12;:16;15167:2;15154:16;;;;;;;;;;;;;;;:20;;:29;;;;:::i;:::-;;15217:2;15193:12;:21;15206:7;15193:21;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;15272:7;15268:2;15235:58;;15264:1;15235:58;;;15244:10;15281:5;15288:4;15235:58;;;;;;;;:::i;:::-;;;;;;;;15304:50;15332:1;15336:2;15340:7;15349:4;15304:19;:50::i;:::-;15365:21;15413:10;15445:1;15461:2;15477:7;15498:4;15389:123;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;15365:147;;15522:41;15543:2;15547:5;15554:8;15522:20;:41::i;:::-;14748:822;14618:952;;;;:::o;20890:273::-;21085:9;21033:6;:49;21063:7;21072;21050:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;21040:41;;;;;;21033:49;;;;;;;;;;;:61;;;;;;;;;;;;:::i;:::-;;21137:7;21128;21109:47;21146:9;21109:47;;;;;;:::i;:::-;;;;;;;;20890:273;;;:::o;11201:510::-;11408:14;11425:36;11452:8;11425:10;:19;11436:7;11425:19;;;;;;;;;;;:26;;:36;;;;:::i;:::-;11408:53;;11476:9;11471:65;;11518:8;11528:7;11494:42;;;;;;;;;;;;:::i;:::-;;;;;;;;11471:65;11627:7;11603:10;11552:152;;11581:8;11552:152;;;11648:8;11670:24;11552:152;;;;;;;:::i;:::-;;;;;;;;11398:313;11201:510;;;;;:::o;5197:300:12:-;5311:7;5330:25;5384:9;5414:1;5407:9;;5430:12;5358:94;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5330:122;;5477:12;5469:21;;;:::i;:::-;5462:28;;;5197:300;;;;:::o;5268:245:1:-;5384:4;178:10:2;5434:20:1;;5419:35;;;:11;:35;;;;:87;;;;5470:36;5494:11;5470:23;:36::i;:::-;5419:87;5400:106;;5268:245;;;:::o;4421:647:25:-;4523:4;4563:26;4615:34;;;4651:11;4592:71;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4563:100;;4705:12;4727:18;4755:19;4899:4;4893;4877:13;4871:20;4864:4;4849:13;4845:24;4836:7;4829:5;4818:86;4807:97;;4931:16;4917:30;;4981:4;4975:11;4960:26;;5013:7;:29;;;;;5038:4;5024:10;:18;;5013:29;:48;;;;;5060:1;5046:11;:15;5013:48;5006:55;;;;;;4421:647;;;;:::o;13208:130:21:-;13273:4;13329:1;13296:35;;:12;:21;13309:7;13296:21;;;;;;;;;;;;;;;;;;;;;:35;;;;13289:42;;13208:130;;;:::o;8860:165:27:-;8940:4;8963:55;8973:3;:10;;9009:5;8993:23;;8985:32;;8963:9;:55::i;:::-;8956:62;;8860:165;;;;:::o;5570:109::-;5626:16;5661:3;:11;;5654:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5570:109;;;:::o;22196:194:21:-;;;;;:::o;11992:1030::-;12514:52;12569:10;:41;12593:7;12569:41;;;;;;;;;;;12514:96;;12621:26;12650:28;:19;:26;:28::i;:::-;12621:57;;12688:16;12719:9;12714:302;12734:18;12730:1;:22;12714:302;;;12849:25;12872:1;12849:19;:22;;:25;;;;:::i;:::-;12838:36;;12888:57;12904:8;12914:10;12926:7;12935:5;12888:57;;;;;;;;;;;;:15;:57::i;:::-;12988:3;;;;;12714:302;;;;12093:929;;;11992:1030;;:::o;6210:129:27:-;6283:4;6306:26;6314:3;:10;;6326:5;6306:7;:26::i;:::-;6299:33;;6210:129;;;;:::o;5919:123::-;5989:4;6012:23;6017:3;:10;;6029:5;6012:4;:23::i;:::-;6005:30;;5919:123;;;;:::o;22827:193:21:-;;;;;:::o;24852:243::-;24966:122;25013:4;735:66:18;25031:25:21;;25070:8;24966:33;:122::i;:::-;24852:243;;:::o;25985:615::-;26136:115;26200:2;128:10:10;26220:17:21;;26136:46;:115::i;:::-;26119:475;;;26282:2;26276:27;;;901:66:18;26304:28:21;;26334:8;26276:67;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;26119:475;;;26365:5;26360:234;;26408:1;26390:2;:14;;;:19;26386:198;;26488:2;26436:55;;;;;;;;;;;:::i;:::-;;;;;;;;26386:198;26566:2;26537:32;;;;;;;;;;;:::i;:::-;;;;;;;;26360:234;26119:475;25985:615;;;:::o;4463:107:27:-;4519:7;4545:3;:11;;:18;;;;4538:25;;4463:107;;;:::o;2214:404::-;2277:4;2298:21;2308:3;2313:5;2298:9;:21::i;:::-;2293:319;;2335:3;:11;;2352:5;2335:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2515:3;:11;;:18;;;;2493:3;:12;;:19;2506:5;2493:19;;;;;;;;;;;:40;;;;2554:4;2547:11;;;;2293:319;2596:5;2589:12;;2214:404;;;;;:::o;1368:361:11:-;1530:100;128:10:10;1599:17:11;;1530:18;:51;;;;:100;;;;:::i;:::-;1513:210;;;1661:18;1655:43;;;1699:6;1707:4;1655:57;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1513:210;1368:361;;;:::o;8623:156:27:-;8696:4;8719:53;8727:3;:10;;8763:5;8747:23;;8739:32;;8719:7;:53::i;:::-;8712:60;;8623:156;;;;:::o;829:155:24:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;4255:127:27:-;4328:4;4374:1;4351:3;:12;;:19;4364:5;4351:19;;;;;;;;;;;;:24;;4344:31;;4255:127;;;;:::o;9106:115::-;9169:7;9195:19;9203:3;:10;;9195:7;:19::i;:::-;9188:26;;9106:115;;;:::o;9563:156::-;9637:7;9687:22;9691:3;:10;;9703:5;9687:3;:22::i;:::-;9679:31;;9656:56;;9563:156;;;;:::o;2786:1388::-;2852:4;2968:18;2989:3;:12;;:19;3002:5;2989:19;;;;;;;;;;;;2968:40;;3037:1;3023:10;:15;3019:1149;;3392:21;3429:1;3416:10;:14;;;;:::i;:::-;3392:38;;3444:17;3485:1;3464:3;:11;;:18;;;;:22;;;;:::i;:::-;3444:42;;3518:13;3505:9;:26;3501:398;;3551:17;3571:3;:11;;3583:9;3571:22;;;;;;;;:::i;:::-;;;;;;;;;;3551:42;;3722:9;3693:3;:11;;3705:13;3693:26;;;;;;;;:::i;:::-;;;;;;;;;:38;;;;3831:10;3805:3;:12;;:23;3818:9;3805:23;;;;;;;;;;;:36;;;;3533:366;3501:398;3977:3;:11;;:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4069:3;:12;;:19;4082:5;4069:19;;;;;;;;;;;4062:26;;;4110:4;4103:11;;;;;;;3019:1149;4152:5;4145:12;;;2786:1388;;;;;:::o;4912:118::-;4979:7;5005:3;:11;;5017:5;5005:18;;;;;;;;:::i;:::-;;;;;;;;;;4998:25;;4912:118;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:168:29:-;90:11;124:6;119:3;112:19;164:4;159:3;155:14;140:29;;7:168;;;;:::o;181:214::-;321:66;317:1;309:6;305:14;298:90;181:214;:::o;401:363::-;542:3;563:65;626:1;621:3;563:65;:::i;:::-;556:72;;637:93;726:3;637:93;:::i;:::-;755:2;750:3;746:12;739:19;;401:363;;;:::o;770:417::-;935:4;973:2;962:9;958:18;950:26;;1022:9;1016:4;1012:20;1008:1;997:9;993:17;986:47;1050:130;1175:4;1050:130;:::i;:::-;1042:138;;770:417;;;:::o;1193:154::-;1277:6;1272:3;1267;1254:30;1339:1;1330:6;1325:3;1321:16;1314:27;1193:154;;;:::o;1353:102::-;1394:6;1445:2;1441:7;1436:2;1429:5;1425:14;1421:28;1411:38;;1353:102;;;:::o;1483:301::-;1579:3;1600:70;1663:6;1658:3;1600:70;:::i;:::-;1593:77;;1680:43;1716:6;1711:3;1704:5;1680:43;:::i;:::-;1748:29;1770:6;1748:29;:::i;:::-;1743:3;1739:39;1732:46;;1483:301;;;;;:::o;1790:329::-;1911:4;1949:2;1938:9;1934:18;1926:26;;1998:9;1992:4;1988:20;1984:1;1973:9;1969:17;1962:47;2026:86;2107:4;2098:6;2090;2026:86;:::i;:::-;2018:94;;1790:329;;;;;:::o;2125:75::-;2158:6;2191:2;2185:9;2175:19;;2125:75;:::o;2206:117::-;2315:1;2312;2305:12;2329:117;2438:1;2435;2428:12;2452:149;2488:7;2528:66;2521:5;2517:78;2506:89;;2452:149;;;:::o;2607:120::-;2679:23;2696:5;2679:23;:::i;:::-;2672:5;2669:34;2659:62;;2717:1;2714;2707:12;2659:62;2607:120;:::o;2733:137::-;2778:5;2816:6;2803:20;2794:29;;2832:32;2858:5;2832:32;:::i;:::-;2733:137;;;;:::o;2876:327::-;2934:6;2983:2;2971:9;2962:7;2958:23;2954:32;2951:119;;;2989:79;;:::i;:::-;2951:119;3109:1;3134:52;3178:7;3169:6;3158:9;3154:22;3134:52;:::i;:::-;3124:62;;3080:116;2876:327;;;;:::o;3209:90::-;3243:7;3286:5;3279:13;3272:21;3261:32;;3209:90;;;:::o;3305:109::-;3386:21;3401:5;3386:21;:::i;:::-;3381:3;3374:34;3305:109;;:::o;3420:210::-;3507:4;3545:2;3534:9;3530:18;3522:26;;3558:65;3620:1;3609:9;3605:17;3596:6;3558:65;:::i;:::-;3420:210;;;;:::o;3636:77::-;3673:7;3702:5;3691:16;;3636:77;;;:::o;3719:122::-;3792:24;3810:5;3792:24;:::i;:::-;3785:5;3782:35;3772:63;;3831:1;3828;3821:12;3772:63;3719:122;:::o;3847:139::-;3893:5;3931:6;3918:20;3909:29;;3947:33;3974:5;3947:33;:::i;:::-;3847:139;;;;:::o;3992:474::-;4060:6;4068;4117:2;4105:9;4096:7;4092:23;4088:32;4085:119;;;4123:79;;:::i;:::-;4085:119;4243:1;4268:53;4313:7;4304:6;4293:9;4289:22;4268:53;:::i;:::-;4258:63;;4214:117;4370:2;4396:53;4441:7;4432:6;4421:9;4417:22;4396:53;:::i;:::-;4386:63;;4341:118;3992:474;;;;;:::o;4472:98::-;4523:6;4557:5;4551:12;4541:22;;4472:98;;;:::o;4576:307::-;4644:1;4654:113;4668:6;4665:1;4662:13;4654:113;;;4753:1;4748:3;4744:11;4738:18;4734:1;4729:3;4725:11;4718:39;4690:2;4687:1;4683:10;4678:15;;4654:113;;;4785:6;4782:1;4779:13;4776:101;;;4865:1;4856:6;4851:3;4847:16;4840:27;4776:101;4625:258;4576:307;;;:::o;4889:360::-;4975:3;5003:38;5035:5;5003:38;:::i;:::-;5057:70;5120:6;5115:3;5057:70;:::i;:::-;5050:77;;5136:52;5181:6;5176:3;5169:4;5162:5;5158:16;5136:52;:::i;:::-;5213:29;5235:6;5213:29;:::i;:::-;5208:3;5204:39;5197:46;;4979:270;4889:360;;;;:::o;5255:309::-;5366:4;5404:2;5393:9;5389:18;5381:26;;5453:9;5447:4;5443:20;5439:1;5428:9;5424:17;5417:47;5481:76;5552:4;5543:6;5481:76;:::i;:::-;5473:84;;5255:309;;;;:::o;5570:77::-;5607:7;5636:5;5625:16;;5570:77;;;:::o;5653:118::-;5740:24;5758:5;5740:24;:::i;:::-;5735:3;5728:37;5653:118;;:::o;5777:222::-;5870:4;5908:2;5897:9;5893:18;5885:26;;5921:71;5989:1;5978:9;5974:17;5965:6;5921:71;:::i;:::-;5777:222;;;;:::o;6005:117::-;6114:1;6111;6104:12;6128:180;6176:77;6173:1;6166:88;6273:4;6270:1;6263:15;6297:4;6294:1;6287:15;6314:281;6397:27;6419:4;6397:27;:::i;:::-;6389:6;6385:40;6527:6;6515:10;6512:22;6491:18;6479:10;6476:34;6473:62;6470:88;;;6538:18;;:::i;:::-;6470:88;6578:10;6574:2;6567:22;6357:238;6314:281;;:::o;6601:129::-;6635:6;6662:20;;:::i;:::-;6652:30;;6691:33;6719:4;6711:6;6691:33;:::i;:::-;6601:129;;;:::o;6736:311::-;6813:4;6903:18;6895:6;6892:30;6889:56;;;6925:18;;:::i;:::-;6889:56;6975:4;6967:6;6963:17;6955:25;;7035:4;7029;7025:15;7017:23;;6736:311;;;:::o;7053:117::-;7162:1;7159;7152:12;7193:710;7289:5;7314:81;7330:64;7387:6;7330:64;:::i;:::-;7314:81;:::i;:::-;7305:90;;7415:5;7444:6;7437:5;7430:21;7478:4;7471:5;7467:16;7460:23;;7531:4;7523:6;7519:17;7511:6;7507:30;7560:3;7552:6;7549:15;7546:122;;;7579:79;;:::i;:::-;7546:122;7694:6;7677:220;7711:6;7706:3;7703:15;7677:220;;;7786:3;7815:37;7848:3;7836:10;7815:37;:::i;:::-;7810:3;7803:50;7882:4;7877:3;7873:14;7866:21;;7753:144;7737:4;7732:3;7728:14;7721:21;;7677:220;;;7681:21;7295:608;;7193:710;;;;;:::o;7926:370::-;7997:5;8046:3;8039:4;8031:6;8027:17;8023:27;8013:122;;8054:79;;:::i;:::-;8013:122;8171:6;8158:20;8196:94;8286:3;8278:6;8271:4;8263:6;8259:17;8196:94;:::i;:::-;8187:103;;8003:293;7926:370;;;;:::o;8302:894::-;8420:6;8428;8477:2;8465:9;8456:7;8452:23;8448:32;8445:119;;;8483:79;;:::i;:::-;8445:119;8631:1;8620:9;8616:17;8603:31;8661:18;8653:6;8650:30;8647:117;;;8683:79;;:::i;:::-;8647:117;8788:78;8858:7;8849:6;8838:9;8834:22;8788:78;:::i;:::-;8778:88;;8574:302;8943:2;8932:9;8928:18;8915:32;8974:18;8966:6;8963:30;8960:117;;;8996:79;;:::i;:::-;8960:117;9101:78;9171:7;9162:6;9151:9;9147:22;9101:78;:::i;:::-;9091:88;;8886:303;8302:894;;;;;:::o;9202:123::-;9278:6;9312:5;9306:12;9296:22;;9202:123;;;:::o;9331:193::-;9439:11;9473:6;9468:3;9461:19;9513:4;9508:3;9504:14;9489:29;;9331:193;;;;:::o;9530:141::-;9606:4;9629:3;9621:11;;9659:4;9654:3;9650:14;9642:22;;9530:141;;;:::o;9677:158::-;9750:11;9784:6;9779:3;9772:19;9824:4;9819:3;9815:14;9800:29;;9677:158;;;;:::o;9841:340::-;9917:3;9945:38;9977:5;9945:38;:::i;:::-;9999:60;10052:6;10047:3;9999:60;:::i;:::-;9992:67;;10068:52;10113:6;10108:3;10101:4;10094:5;10090:16;10068:52;:::i;:::-;10145:29;10167:6;10145:29;:::i;:::-;10140:3;10136:39;10129:46;;9921:260;9841:340;;;;:::o;10187:192::-;10274:10;10309:64;10369:3;10361:6;10309:64;:::i;:::-;10295:78;;10187:192;;;;:::o;10385:122::-;10464:4;10496;10491:3;10487:14;10479:22;;10385:122;;;:::o;10539:983::-;10676:3;10705:63;10762:5;10705:63;:::i;:::-;10784:95;10872:6;10867:3;10784:95;:::i;:::-;10777:102;;10905:3;10950:4;10942:6;10938:17;10933:3;10929:27;10980:65;11039:5;10980:65;:::i;:::-;11068:7;11099:1;11084:393;11109:6;11106:1;11103:13;11084:393;;;11180:9;11174:4;11170:20;11165:3;11158:33;11231:6;11225:13;11259:82;11336:4;11321:13;11259:82;:::i;:::-;11251:90;;11364:69;11426:6;11364:69;:::i;:::-;11354:79;;11462:4;11457:3;11453:14;11446:21;;11144:333;11131:1;11128;11124:9;11119:14;;11084:393;;;11088:14;11493:4;11486:11;;11513:3;11506:10;;10681:841;;;;;10539:983;;;;:::o;11528:409::-;11689:4;11727:2;11716:9;11712:18;11704:26;;11776:9;11770:4;11766:20;11762:1;11751:9;11747:17;11740:47;11804:126;11925:4;11916:6;11804:126;:::i;:::-;11796:134;;11528:409;;;;:::o;11943:329::-;12002:6;12051:2;12039:9;12030:7;12026:23;12022:32;12019:119;;;12057:79;;:::i;:::-;12019:119;12177:1;12202:53;12247:7;12238:6;12227:9;12223:22;12202:53;:::i;:::-;12192:63;;12148:117;11943:329;;;;:::o;12278:126::-;12315:7;12355:42;12348:5;12344:54;12333:65;;12278:126;;;:::o;12410:96::-;12447:7;12476:24;12494:5;12476:24;:::i;:::-;12465:35;;12410:96;;;:::o;12512:118::-;12599:24;12617:5;12599:24;:::i;:::-;12594:3;12587:37;12512:118;;:::o;12636:222::-;12729:4;12767:2;12756:9;12752:18;12744:26;;12780:71;12848:1;12837:9;12833:17;12824:6;12780:71;:::i;:::-;12636:222;;;;:::o;12864:122::-;12937:24;12955:5;12937:24;:::i;:::-;12930:5;12927:35;12917:63;;12976:1;12973;12966:12;12917:63;12864:122;:::o;12992:139::-;13038:5;13076:6;13063:20;13054:29;;13092:33;13119:5;13092:33;:::i;:::-;12992:139;;;;:::o;13137:474::-;13205:6;13213;13262:2;13250:9;13241:7;13237:23;13233:32;13230:119;;;13268:79;;:::i;:::-;13230:119;13388:1;13413:53;13458:7;13449:6;13438:9;13434:22;13413:53;:::i;:::-;13403:63;;13359:117;13515:2;13541:53;13586:7;13577:6;13566:9;13562:22;13541:53;:::i;:::-;13531:63;;13486:118;13137:474;;;;;:::o;13617:114::-;13684:6;13718:5;13712:12;13702:22;;13617:114;;;:::o;13737:184::-;13836:11;13870:6;13865:3;13858:19;13910:4;13905:3;13901:14;13886:29;;13737:184;;;;:::o;13927:132::-;13994:4;14017:3;14009:11;;14047:4;14042:3;14038:14;14030:22;;13927:132;;;:::o;14065:108::-;14142:24;14160:5;14142:24;:::i;:::-;14137:3;14130:37;14065:108;;:::o;14179:179::-;14248:10;14269:46;14311:3;14303:6;14269:46;:::i;:::-;14347:4;14342:3;14338:14;14324:28;;14179:179;;;;:::o;14364:113::-;14434:4;14466;14461:3;14457:14;14449:22;;14364:113;;;:::o;14513:732::-;14632:3;14661:54;14709:5;14661:54;:::i;:::-;14731:86;14810:6;14805:3;14731:86;:::i;:::-;14724:93;;14841:56;14891:5;14841:56;:::i;:::-;14920:7;14951:1;14936:284;14961:6;14958:1;14955:13;14936:284;;;15037:6;15031:13;15064:63;15123:3;15108:13;15064:63;:::i;:::-;15057:70;;15150:60;15203:6;15150:60;:::i;:::-;15140:70;;14996:224;14983:1;14980;14976:9;14971:14;;14936:284;;;14940:14;15236:3;15229:10;;14637:608;;;14513:732;;;;:::o;15251:373::-;15394:4;15432:2;15421:9;15417:18;15409:26;;15481:9;15475:4;15471:20;15467:1;15456:9;15452:17;15445:47;15509:108;15612:4;15603:6;15509:108;:::i;:::-;15501:116;;15251:373;;;;:::o;15630:116::-;15700:21;15715:5;15700:21;:::i;:::-;15693:5;15690:32;15680:60;;15736:1;15733;15726:12;15680:60;15630:116;:::o;15752:133::-;15795:5;15833:6;15820:20;15811:29;;15849:30;15873:5;15849:30;:::i;:::-;15752:133;;;;:::o;15891:117::-;16000:1;15997;15990:12;16014:307;16075:4;16165:18;16157:6;16154:30;16151:56;;;16187:18;;:::i;:::-;16151:56;16225:29;16247:6;16225:29;:::i;:::-;16217:37;;16309:4;16303;16299:15;16291:23;;16014:307;;;:::o;16327:410::-;16404:5;16429:65;16445:48;16486:6;16445:48;:::i;:::-;16429:65;:::i;:::-;16420:74;;16517:6;16510:5;16503:21;16555:4;16548:5;16544:16;16593:3;16584:6;16579:3;16575:16;16572:25;16569:112;;;16600:79;;:::i;:::-;16569:112;16690:41;16724:6;16719:3;16714;16690:41;:::i;:::-;16410:327;16327:410;;;;;:::o;16756:338::-;16811:5;16860:3;16853:4;16845:6;16841:17;16837:27;16827:122;;16868:79;;:::i;:::-;16827:122;16985:6;16972:20;17010:78;17084:3;17076:6;17069:4;17061:6;17057:17;17010:78;:::i;:::-;17001:87;;16817:277;16756:338;;;;:::o;17100:1083::-;17201:6;17209;17217;17225;17233;17282:3;17270:9;17261:7;17257:23;17253:33;17250:120;;;17289:79;;:::i;:::-;17250:120;17409:1;17434:53;17479:7;17470:6;17459:9;17455:22;17434:53;:::i;:::-;17424:63;;17380:117;17536:2;17562:53;17607:7;17598:6;17587:9;17583:22;17562:53;:::i;:::-;17552:63;;17507:118;17664:2;17690:53;17735:7;17726:6;17715:9;17711:22;17690:53;:::i;:::-;17680:63;;17635:118;17792:2;17818:50;17860:7;17851:6;17840:9;17836:22;17818:50;:::i;:::-;17808:60;;17763:115;17945:3;17934:9;17930:19;17917:33;17977:18;17969:6;17966:30;17963:117;;;17999:79;;:::i;:::-;17963:117;18104:62;18158:7;18149:6;18138:9;18134:22;18104:62;:::i;:::-;18094:72;;17888:288;17100:1083;;;;;;;;:::o;18189:117::-;18298:1;18295;18288:12;18327:579;18411:8;18421:6;18471:3;18464:4;18456:6;18452:17;18448:27;18438:122;;18479:79;;:::i;:::-;18438:122;18592:6;18579:20;18569:30;;18622:18;18614:6;18611:30;18608:117;;;18644:79;;:::i;:::-;18608:117;18758:4;18750:6;18746:17;18734:29;;18812:3;18804:4;18796:6;18792:17;18782:8;18778:32;18775:41;18772:128;;;18819:79;;:::i;:::-;18772:128;18327:579;;;;;:::o;18912:581::-;19009:6;19017;19066:2;19054:9;19045:7;19041:23;19037:32;19034:119;;;19072:79;;:::i;:::-;19034:119;19220:1;19209:9;19205:17;19192:31;19250:18;19242:6;19239:30;19236:117;;;19272:79;;:::i;:::-;19236:117;19385:91;19468:7;19459:6;19448:9;19444:22;19385:91;:::i;:::-;19367:109;;;;19163:323;18912:581;;;;;:::o;19499:329::-;19558:6;19607:2;19595:9;19586:7;19582:23;19578:32;19575:119;;;19613:79;;:::i;:::-;19575:119;19733:1;19758:53;19803:7;19794:6;19783:9;19779:22;19758:53;:::i;:::-;19748:63;;19704:117;19499:329;;;;:::o;19834:311::-;19911:4;20001:18;19993:6;19990:30;19987:56;;;20023:18;;:::i;:::-;19987:56;20073:4;20065:6;20061:17;20053:25;;20133:4;20127;20123:15;20115:23;;19834:311;;;:::o;20168:710::-;20264:5;20289:81;20305:64;20362:6;20305:64;:::i;:::-;20289:81;:::i;:::-;20280:90;;20390:5;20419:6;20412:5;20405:21;20453:4;20446:5;20442:16;20435:23;;20506:4;20498:6;20494:17;20486:6;20482:30;20535:3;20527:6;20524:15;20521:122;;;20554:79;;:::i;:::-;20521:122;20669:6;20652:220;20686:6;20681:3;20678:15;20652:220;;;20761:3;20790:37;20823:3;20811:10;20790:37;:::i;:::-;20785:3;20778:50;20857:4;20852:3;20848:14;20841:21;;20728:144;20712:4;20707:3;20703:14;20696:21;;20652:220;;;20656:21;20270:608;;20168:710;;;;;:::o;20901:370::-;20972:5;21021:3;21014:4;21006:6;21002:17;20998:27;20988:122;;21029:79;;:::i;:::-;20988:122;21146:6;21133:20;21171:94;21261:3;21253:6;21246:4;21238:6;21234:17;21171:94;:::i;:::-;21162:103;;20978:293;20901:370;;;;:::o;21277:308::-;21351:4;21441:18;21433:6;21430:30;21427:56;;;21463:18;;:::i;:::-;21427:56;21513:4;21505:6;21501:17;21493:25;;21573:4;21567;21563:15;21555:23;;21277:308;;;:::o;21605:701::-;21698:5;21723:78;21739:61;21793:6;21739:61;:::i;:::-;21723:78;:::i;:::-;21714:87;;21821:5;21850:6;21843:5;21836:21;21884:4;21877:5;21873:16;21866:23;;21937:4;21929:6;21925:17;21917:6;21913:30;21966:3;21958:6;21955:15;21952:122;;;21985:79;;:::i;:::-;21952:122;22100:6;22083:217;22117:6;22112:3;22109:15;22083:217;;;22192:3;22221:34;22251:3;22239:10;22221:34;:::i;:::-;22216:3;22209:47;22285:4;22280:3;22276:14;22269:21;;22159:141;22143:4;22138:3;22134:14;22127:21;;22083:217;;;22087:21;21704:602;;21605:701;;;;;:::o;22326:364::-;22394:5;22443:3;22436:4;22428:6;22424:17;22420:27;22410:122;;22451:79;;:::i;:::-;22410:122;22568:6;22555:20;22593:91;22680:3;22672:6;22665:4;22657:6;22653:17;22593:91;:::i;:::-;22584:100;;22400:290;22326:364;;;;:::o;22696:320::-;22782:4;22872:18;22864:6;22861:30;22858:56;;;22894:18;;:::i;:::-;22858:56;22944:4;22936:6;22932:17;22924:25;;23004:4;22998;22994:15;22986:23;;22696:320;;;:::o;23037:942::-;23142:5;23167:90;23183:73;23249:6;23183:73;:::i;:::-;23167:90;:::i;:::-;23158:99;;23277:5;23306:6;23299:5;23292:21;23340:4;23333:5;23329:16;23322:23;;23393:4;23385:6;23381:17;23373:6;23369:30;23422:3;23414:6;23411:15;23408:122;;;23441:79;;:::i;:::-;23408:122;23556:6;23539:434;23573:6;23568:3;23565:15;23539:434;;;23662:3;23649:17;23698:18;23685:11;23682:35;23679:122;;;23720:79;;:::i;:::-;23679:122;23844:11;23836:6;23832:24;23882:46;23924:3;23912:10;23882:46;:::i;:::-;23877:3;23870:59;23958:4;23953:3;23949:14;23942:21;;23615:358;;23599:4;23594:3;23590:14;23583:21;;23539:434;;;23543:21;23148:831;;23037:942;;;;;:::o;24000:388::-;24080:5;24129:3;24122:4;24114:6;24110:17;24106:27;24096:122;;24137:79;;:::i;:::-;24096:122;24254:6;24241:20;24279:103;24378:3;24370:6;24363:4;24355:6;24351:17;24279:103;:::i;:::-;24270:112;;24086:302;24000:388;;;;:::o;24394:1973::-;24620:6;24628;24636;24644;24652;24701:3;24689:9;24680:7;24676:23;24672:33;24669:120;;;24708:79;;:::i;:::-;24669:120;24856:1;24845:9;24841:17;24828:31;24886:18;24878:6;24875:30;24872:117;;;24908:79;;:::i;:::-;24872:117;25013:78;25083:7;25074:6;25063:9;25059:22;25013:78;:::i;:::-;25003:88;;24799:302;25168:2;25157:9;25153:18;25140:32;25199:18;25191:6;25188:30;25185:117;;;25221:79;;:::i;:::-;25185:117;25326:78;25396:7;25387:6;25376:9;25372:22;25326:78;:::i;:::-;25316:88;;25111:303;25481:2;25470:9;25466:18;25453:32;25512:18;25504:6;25501:30;25498:117;;;25534:79;;:::i;:::-;25498:117;25639:78;25709:7;25700:6;25689:9;25685:22;25639:78;:::i;:::-;25629:88;;25424:303;25794:2;25783:9;25779:18;25766:32;25825:18;25817:6;25814:30;25811:117;;;25847:79;;:::i;:::-;25811:117;25952:75;26019:7;26010:6;25999:9;25995:22;25952:75;:::i;:::-;25942:85;;25737:300;26104:3;26093:9;26089:19;26076:33;26136:18;26128:6;26125:30;26122:117;;;26158:79;;:::i;:::-;26122:117;26263:87;26342:7;26333:6;26322:9;26318:22;26263:87;:::i;:::-;26253:97;;26047:313;24394:1973;;;;;;;;:::o;26373:652::-;26450:6;26458;26507:2;26495:9;26486:7;26482:23;26478:32;26475:119;;;26513:79;;:::i;:::-;26475:119;26633:1;26658:53;26703:7;26694:6;26683:9;26679:22;26658:53;:::i;:::-;26648:63;;26604:117;26788:2;26777:9;26773:18;26760:32;26819:18;26811:6;26808:30;26805:117;;;26841:79;;:::i;:::-;26805:117;26946:62;27000:7;26991:6;26980:9;26976:22;26946:62;:::i;:::-;26936:72;;26731:287;26373:652;;;;;:::o;27031:797::-;27117:6;27125;27133;27182:2;27170:9;27161:7;27157:23;27153:32;27150:119;;;27188:79;;:::i;:::-;27150:119;27308:1;27333:53;27378:7;27369:6;27358:9;27354:22;27333:53;:::i;:::-;27323:63;;27279:117;27435:2;27461:53;27506:7;27497:6;27486:9;27482:22;27461:53;:::i;:::-;27451:63;;27406:118;27591:2;27580:9;27576:18;27563:32;27622:18;27614:6;27611:30;27608:117;;;27644:79;;:::i;:::-;27608:117;27749:62;27803:7;27794:6;27783:9;27779:22;27749:62;:::i;:::-;27739:72;;27534:287;27031:797;;;;;:::o;27834:912::-;27961:6;27969;28018:2;28006:9;27997:7;27993:23;27989:32;27986:119;;;28024:79;;:::i;:::-;27986:119;28172:1;28161:9;28157:17;28144:31;28202:18;28194:6;28191:30;28188:117;;;28224:79;;:::i;:::-;28188:117;28329:78;28399:7;28390:6;28379:9;28375:22;28329:78;:::i;:::-;28319:88;;28115:302;28484:2;28473:9;28469:18;28456:32;28515:18;28507:6;28504:30;28501:117;;;28537:79;;:::i;:::-;28501:117;28642:87;28721:7;28712:6;28701:9;28697:22;28642:87;:::i;:::-;28632:97;;28427:312;27834:912;;;;;:::o;28752:114::-;28819:6;28853:5;28847:12;28837:22;;28752:114;;;:::o;28872:184::-;28971:11;29005:6;29000:3;28993:19;29045:4;29040:3;29036:14;29021:29;;28872:184;;;;:::o;29062:132::-;29129:4;29152:3;29144:11;;29182:4;29177:3;29173:14;29165:22;;29062:132;;;:::o;29200:108::-;29277:24;29295:5;29277:24;:::i;:::-;29272:3;29265:37;29200:108;;:::o;29314:179::-;29383:10;29404:46;29446:3;29438:6;29404:46;:::i;:::-;29482:4;29477:3;29473:14;29459:28;;29314:179;;;;:::o;29499:113::-;29569:4;29601;29596:3;29592:14;29584:22;;29499:113;;;:::o;29648:732::-;29767:3;29796:54;29844:5;29796:54;:::i;:::-;29866:86;29945:6;29940:3;29866:86;:::i;:::-;29859:93;;29976:56;30026:5;29976:56;:::i;:::-;30055:7;30086:1;30071:284;30096:6;30093:1;30090:13;30071:284;;;30172:6;30166:13;30199:63;30258:3;30243:13;30199:63;:::i;:::-;30192:70;;30285:60;30338:6;30285:60;:::i;:::-;30275:70;;30131:224;30118:1;30115;30111:9;30106:14;;30071:284;;;30075:14;30371:3;30364:10;;29772:608;;;29648:732;;;;:::o;30386:373::-;30529:4;30567:2;30556:9;30552:18;30544:26;;30616:9;30610:4;30606:20;30602:1;30591:9;30587:17;30580:47;30644:108;30747:4;30738:6;30644:108;:::i;:::-;30636:116;;30386:373;;;;:::o;30765:937::-;30857:6;30865;30873;30881;30930:3;30918:9;30909:7;30905:23;30901:33;30898:120;;;30937:79;;:::i;:::-;30898:120;31057:1;31082:53;31127:7;31118:6;31107:9;31103:22;31082:53;:::i;:::-;31072:63;;31028:117;31184:2;31210:53;31255:7;31246:6;31235:9;31231:22;31210:53;:::i;:::-;31200:63;;31155:118;31312:2;31338:50;31380:7;31371:6;31360:9;31356:22;31338:50;:::i;:::-;31328:60;;31283:115;31465:2;31454:9;31450:18;31437:32;31496:18;31488:6;31485:30;31482:117;;;31518:79;;:::i;:::-;31482:117;31623:62;31677:7;31668:6;31657:9;31653:22;31623:62;:::i;:::-;31613:72;;31408:287;30765:937;;;;;;;:::o;31708:1267::-;31869:6;31877;31885;31934:2;31922:9;31913:7;31909:23;31905:32;31902:119;;;31940:79;;:::i;:::-;31902:119;32088:1;32077:9;32073:17;32060:31;32118:18;32110:6;32107:30;32104:117;;;32140:79;;:::i;:::-;32104:117;32245:78;32315:7;32306:6;32295:9;32291:22;32245:78;:::i;:::-;32235:88;;32031:302;32400:2;32389:9;32385:18;32372:32;32431:18;32423:6;32420:30;32417:117;;;32453:79;;:::i;:::-;32417:117;32558:78;32628:7;32619:6;32608:9;32604:22;32558:78;:::i;:::-;32548:88;;32343:303;32713:2;32702:9;32698:18;32685:32;32744:18;32736:6;32733:30;32730:117;;;32766:79;;:::i;:::-;32730:117;32871:87;32950:7;32941:6;32930:9;32926:22;32871:87;:::i;:::-;32861:97;;32656:312;31708:1267;;;;;:::o;32981:797::-;33067:6;33075;33083;33132:2;33120:9;33111:7;33107:23;33103:32;33100:119;;;33138:79;;:::i;:::-;33100:119;33258:1;33283:53;33328:7;33319:6;33308:9;33304:22;33283:53;:::i;:::-;33273:63;;33229:117;33385:2;33411:53;33456:7;33447:6;33436:9;33432:22;33411:53;:::i;:::-;33401:63;;33356:118;33541:2;33530:9;33526:18;33513:32;33572:18;33564:6;33561:30;33558:117;;;33594:79;;:::i;:::-;33558:117;33699:62;33753:7;33744:6;33733:9;33729:22;33699:62;:::i;:::-;33689:72;;33484:287;32981:797;;;;;:::o;33784:539::-;33868:6;33917:2;33905:9;33896:7;33892:23;33888:32;33885:119;;;33923:79;;:::i;:::-;33885:119;34071:1;34060:9;34056:17;34043:31;34101:18;34093:6;34090:30;34087:117;;;34123:79;;:::i;:::-;34087:117;34228:78;34298:7;34289:6;34278:9;34274:22;34228:78;:::i;:::-;34218:88;;34014:302;33784:539;;;;:::o;34329:115::-;34414:23;34431:5;34414:23;:::i;:::-;34409:3;34402:36;34329:115;;:::o;34450:218::-;34541:4;34579:2;34568:9;34564:18;34556:26;;34592:69;34658:1;34647:9;34643:17;34634:6;34592:69;:::i;:::-;34450:218;;;;:::o;34674:147::-;34775:11;34812:3;34797:18;;34674:147;;;;:::o;34849:314::-;34963:3;34984:88;35065:6;35060:3;34984:88;:::i;:::-;34977:95;;35082:43;35118:6;35113:3;35106:5;35082:43;:::i;:::-;35150:6;35145:3;35141:16;35134:23;;34849:314;;;;;:::o;35169:94::-;35202:8;35250:5;35246:2;35242:14;35221:35;;35169:94;;;:::o;35269:::-;35308:7;35337:20;35351:5;35337:20;:::i;:::-;35326:31;;35269:94;;;:::o;35369:100::-;35408:7;35437:26;35457:5;35437:26;:::i;:::-;35426:37;;35369:100;;;:::o;35475:157::-;35580:45;35600:24;35618:5;35600:24;:::i;:::-;35580:45;:::i;:::-;35575:3;35568:58;35475:157;;:::o;35638:79::-;35677:7;35706:5;35695:16;;35638:79;;;:::o;35723:157::-;35828:45;35848:24;35866:5;35848:24;:::i;:::-;35828:45;:::i;:::-;35823:3;35816:58;35723:157;;:::o;35886:573::-;36082:3;36104:103;36203:3;36194:6;36186;36104:103;:::i;:::-;36097:110;;36217:75;36288:3;36279:6;36217:75;:::i;:::-;36317:2;36312:3;36308:12;36301:19;;36330:75;36401:3;36392:6;36330:75;:::i;:::-;36430:2;36425:3;36421:12;36414:19;;36450:3;36443:10;;35886:573;;;;;;;:::o;36465:373::-;36569:3;36597:38;36629:5;36597:38;:::i;:::-;36651:88;36732:6;36727:3;36651:88;:::i;:::-;36644:95;;36748:52;36793:6;36788:3;36781:4;36774:5;36770:16;36748:52;:::i;:::-;36825:6;36820:3;36816:16;36809:23;;36573:265;36465:373;;;;:::o;36844:271::-;36974:3;36996:93;37085:3;37076:6;36996:93;:::i;:::-;36989:100;;37106:3;37099:10;;36844:271;;;;:::o;37121:180::-;37169:77;37166:1;37159:88;37266:4;37263:1;37256:15;37290:4;37287:1;37280:15;37307:118;37394:24;37412:5;37394:24;:::i;:::-;37389:3;37382:37;37307:118;;:::o;37431:222::-;37524:4;37562:2;37551:9;37547:18;37539:26;;37575:71;37643:1;37632:9;37628:17;37619:6;37575:71;:::i;:::-;37431:222;;;;:::o;37659:332::-;37780:4;37818:2;37807:9;37803:18;37795:26;;37831:71;37899:1;37888:9;37884:17;37875:6;37831:71;:::i;:::-;37912:72;37980:2;37969:9;37965:18;37956:6;37912:72;:::i;:::-;37659:332;;;;;:::o;37997:117::-;38106:1;38103;38096:12;38120:117;38229:1;38226;38219:12;38243:117;38352:1;38349;38342:12;38366:724;38443:4;38449:6;38505:11;38492:25;38605:1;38599:4;38595:12;38584:8;38568:14;38564:29;38560:48;38540:18;38536:73;38526:168;;38613:79;;:::i;:::-;38526:168;38725:18;38715:8;38711:33;38703:41;;38777:4;38764:18;38754:28;;38805:18;38797:6;38794:30;38791:117;;;38827:79;;:::i;:::-;38791:117;38935:2;38929:4;38925:13;38917:21;;38992:4;38984:6;38980:17;38964:14;38960:38;38954:4;38950:49;38947:136;;;39002:79;;:::i;:::-;38947:136;38456:634;38366:724;;;;;:::o;39096:291::-;39236:3;39258:103;39357:3;39348:6;39340;39258:103;:::i;:::-;39251:110;;39378:3;39371:10;;39096:291;;;;;:::o;39393:442::-;39542:4;39580:2;39569:9;39565:18;39557:26;;39593:71;39661:1;39650:9;39646:17;39637:6;39593:71;:::i;:::-;39674:72;39742:2;39731:9;39727:18;39718:6;39674:72;:::i;:::-;39756;39824:2;39813:9;39809:18;39800:6;39756:72;:::i;:::-;39393:442;;;;;;:::o;39841:332::-;39962:4;40000:2;39989:9;39985:18;39977:26;;40013:71;40081:1;40070:9;40066:17;40057:6;40013:71;:::i;:::-;40094:72;40162:2;40151:9;40147:18;40138:6;40094:72;:::i;:::-;39841:332;;;;;:::o;40179:628::-;40368:4;40406:3;40395:9;40391:19;40383:27;;40420:71;40488:1;40477:9;40473:17;40464:6;40420:71;:::i;:::-;40501:72;40569:2;40558:9;40554:18;40545:6;40501:72;:::i;:::-;40583:66;40645:2;40634:9;40630:18;40621:6;40583:66;:::i;:::-;40696:9;40690:4;40686:20;40681:2;40670:9;40666:18;40659:48;40724:76;40795:4;40786:6;40724:76;:::i;:::-;40716:84;;40179:628;;;;;;;:::o;40813:116::-;40864:4;40887:3;40879:11;;40917:4;40912:3;40908:14;40900:22;;40813:116;;;:::o;40935:150::-;40972:7;41012:66;41005:5;41001:78;40990:89;;40935:150;;;:::o;41091:154::-;41134:11;41170:29;41194:3;41188:10;41170:29;:::i;:::-;41233:5;41209:29;;41146:99;41091:154;;;:::o;41251:107::-;41295:8;41345:5;41339:4;41335:16;41314:37;;41251:107;;;;:::o;41364:594::-;41448:5;41479:38;41511:5;41479:38;:::i;:::-;41542:5;41569:40;41603:5;41569:40;:::i;:::-;41557:52;;41628:35;41654:8;41628:35;:::i;:::-;41619:44;;41687:2;41679:6;41676:14;41673:278;;;41758:169;41843:66;41813:6;41809:2;41805:15;41802:1;41798:23;41758:169;:::i;:::-;41735:5;41714:227;41705:236;;41673:278;41454:504;;41364:594;;;:::o;41964:79::-;42003:7;42032:5;42021:16;;41964:79;;;:::o;42049:157::-;42154:45;42174:24;42192:5;42174:24;:::i;:::-;42154:45;:::i;:::-;42149:3;42142:58;42049:157;;:::o;42212:397::-;42352:3;42367:75;42438:3;42429:6;42367:75;:::i;:::-;42467:2;42462:3;42458:12;42451:19;;42480:75;42551:3;42542:6;42480:75;:::i;:::-;42580:2;42575:3;42571:12;42564:19;;42600:3;42593:10;;42212:397;;;;;:::o;42615:180::-;42663:77;42660:1;42653:88;42760:4;42757:1;42750:15;42784:4;42781:1;42774:15;42801:320;42845:6;42882:1;42876:4;42872:12;42862:22;;42929:1;42923:4;42919:12;42950:18;42940:81;;43006:4;42998:6;42994:17;42984:27;;42940:81;43068:2;43060:6;43057:14;43037:18;43034:38;43031:84;;;43087:18;;:::i;:::-;43031:84;42852:269;42801:320;;;:::o;43127:517::-;43288:4;43326:2;43315:9;43311:18;43303:26;;43339:71;43407:1;43396:9;43392:17;43383:6;43339:71;:::i;:::-;43420:66;43482:2;43471:9;43467:18;43458:6;43420:66;:::i;:::-;43533:9;43527:4;43523:20;43518:2;43507:9;43503:18;43496:48;43561:76;43632:4;43623:6;43561:76;:::i;:::-;43553:84;;43127:517;;;;;;:::o;43650:751::-;43873:4;43911:3;43900:9;43896:19;43888:27;;43925:71;43993:1;43982:9;43978:17;43969:6;43925:71;:::i;:::-;44006:72;44074:2;44063:9;44059:18;44050:6;44006:72;:::i;:::-;44088;44156:2;44145:9;44141:18;44132:6;44088:72;:::i;:::-;44170;44238:2;44227:9;44223:18;44214:6;44170:72;:::i;:::-;44290:9;44284:4;44280:20;44274:3;44263:9;44259:19;44252:49;44318:76;44389:4;44380:6;44318:76;:::i;:::-;44310:84;;43650:751;;;;;;;;:::o;44407:180::-;44455:77;44452:1;44445:88;44552:4;44549:1;44542:15;44576:4;44573:1;44566:15;44593:233;44632:3;44655:24;44673:5;44655:24;:::i;:::-;44646:33;;44701:66;44694:5;44691:77;44688:103;;;44771:18;;:::i;:::-;44688:103;44818:1;44811:5;44807:13;44800:20;;44593:233;;;:::o;44832:407::-;44965:4;45003:2;44992:9;44988:18;44980:26;;45016:65;45078:1;45067:9;45063:17;45054:6;45016:65;:::i;:::-;45128:9;45122:4;45118:20;45113:2;45102:9;45098:18;45091:48;45156:76;45227:4;45218:6;45156:76;:::i;:::-;45148:84;;44832:407;;;;;:::o;45245:150::-;45282:7;45322:66;45315:5;45311:78;45300:89;;45245:150;;;:::o;45401:79::-;45440:7;45469:5;45458:16;;45401:79;;;:::o;45486:157::-;45591:45;45611:24;45629:5;45611:24;:::i;:::-;45591:45;:::i;:::-;45586:3;45579:58;45486:157;;:::o;45649:149::-;45685:7;45725:66;45718:5;45714:78;45703:89;;45649:149;;;:::o;45804:78::-;45842:7;45871:5;45860:16;;45804:78;;;:::o;45888:153::-;45991:43;46010:23;46027:5;46010:23;:::i;:::-;45991:43;:::i;:::-;45986:3;45979:56;45888:153;;:::o;46047:79::-;46086:7;46115:5;46104:16;;46047:79;;;:::o;46132:157::-;46237:45;46257:24;46275:5;46257:24;:::i;:::-;46237:45;:::i;:::-;46232:3;46225:58;46132:157;;:::o;46295:533::-;46461:3;46476:75;46547:3;46538:6;46476:75;:::i;:::-;46576:2;46571:3;46567:12;46560:19;;46589:73;46658:3;46649:6;46589:73;:::i;:::-;46687:1;46682:3;46678:11;46671:18;;46699:75;46770:3;46761:6;46699:75;:::i;:::-;46799:2;46794:3;46790:12;46783:19;;46819:3;46812:10;;46295:533;;;;;;:::o;46834:154::-;46877:11;46913:29;46937:3;46931:10;46913:29;:::i;:::-;46976:5;46952:29;;46889:99;46834:154;;;:::o;46994:594::-;47078:5;47109:38;47141:5;47109:38;:::i;:::-;47172:5;47199:40;47233:5;47199:40;:::i;:::-;47187:52;;47258:35;47284:8;47258:35;:::i;:::-;47249:44;;47317:2;47309:6;47306:14;47303:278;;;47388:169;47473:66;47443:6;47439:2;47435:15;47432:1;47428:23;47388:169;:::i;:::-;47365:5;47344:227;47335:236;;47303:278;47084:504;;46994:594;;;:::o;47594:419::-;47733:4;47771:2;47760:9;47756:18;47748:26;;47784:71;47852:1;47841:9;47837:17;47828:6;47784:71;:::i;:::-;47902:9;47896:4;47892:20;47887:2;47876:9;47872:18;47865:48;47930:76;48001:4;47992:6;47930:76;:::i;:::-;47922:84;;47594:419;;;;;:::o;48019:::-;48107:5;48132:65;48148:48;48189:6;48148:48;:::i;:::-;48132:65;:::i;:::-;48123:74;;48220:6;48213:5;48206:21;48258:4;48251:5;48247:16;48296:3;48287:6;48282:3;48278:16;48275:25;48272:112;;;48303:79;;:::i;:::-;48272:112;48393:39;48425:6;48420:3;48415;48393:39;:::i;:::-;48113:325;48019:419;;;;;:::o;48457:353::-;48523:5;48572:3;48565:4;48557:6;48553:17;48549:27;48539:122;;48580:79;;:::i;:::-;48539:122;48690:6;48684:13;48715:89;48800:3;48792:6;48785:4;48777:6;48773:17;48715:89;:::i;:::-;48706:98;;48529:281;48457:353;;;;:::o;48816:522::-;48895:6;48944:2;48932:9;48923:7;48919:23;48915:32;48912:119;;;48950:79;;:::i;:::-;48912:119;49091:1;49080:9;49076:17;49070:24;49121:18;49113:6;49110:30;49107:117;;;49143:79;;:::i;:::-;49107:117;49248:73;49313:7;49304:6;49293:9;49289:22;49248:73;:::i;:::-;49238:83;;49041:290;48816:522;;;;:::o;49344:191::-;49384:4;49404:20;49422:1;49404:20;:::i;:::-;49399:25;;49438:20;49456:1;49438:20;:::i;:::-;49433:25;;49477:1;49474;49471:8;49468:34;;;49482:18;;:::i;:::-;49468:34;49527:1;49524;49520:9;49512:17;;49344:191;;;;:::o;49541:180::-;49589:77;49586:1;49579:88;49686:4;49683:1;49676:15;49710:4;49707:1;49700:15"},"methodIdentifiers":{"authorizeOperator(address,bytes32,bytes)":"86a10ddd","balanceOf(address)":"70a08231","batchCalls(bytes[])":"6963d438","getData(bytes32)":"54f6127f","getDataBatch(bytes32[])":"dedff9c6","getDataBatchForTokenIds(bytes32[],bytes32[])":"1d26fce6","getDataForTokenId(bytes32,bytes32)":"16e023b3","getOperatorsOf(bytes32)":"49a6078d","isOperatorFor(address,bytes32)":"2a3654a4","mint(address,bytes32,bool,bytes)":"af255b61","owner()":"8da5cb5b","renounceOwnership()":"715018a6","revokeOperator(address,bytes32,bool,bytes)":"db8c9663","setData(bytes32,bytes)":"7f23690c","setDataBatch(bytes32[],bytes[])":"97902421","setDataBatchForTokenIds(bytes32[],bytes32[],bytes[])":"be9f0e6f","setDataForTokenId(bytes32,bytes32,bytes)":"d6c1407c","supportsInterface(bytes4)":"01ffc9a7","tokenIdsOf(address)":"a3b261f2","tokenOwnerOf(bytes32)":"217b2270","totalSupply()":"18160ddd","transfer(address,address,bytes32,bool,bytes)":"511b6952","transferBatch(address[],address[],bytes32[],bool[],bytes[])":"7e87632c","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"newOwner_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lsp4TokenType_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lsp8TokenIdFormat_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesEmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_MsgValueDisallowed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"storedData\",\"type\":\"bytes\"}],\"name\":\"InvalidExtensionAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"InvalidFunctionSelector\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenNameNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenSymbolNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenTypeNotEditable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"callIndex\",\"type\":\"uint256\"}],\"name\":\"LSP8BatchCallFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotSendToAddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotSendToSelf\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotUseAddressZeroAsOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8InvalidTransferBatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8NonExistentTokenId\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8NonExistingOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"LSP8NotTokenOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"LSP8NotTokenOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"LSP8NotifyTokenReceiverContractMissingLSP1Interface\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"LSP8NotifyTokenReceiverIsEOA\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8OperatorAlreadyAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenContractCannotHoldValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8TokenIdAlreadyMinted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenIdFormatNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenIdsDataEmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenIdsDataLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenOwnerCannotBeOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"functionSelector\",\"type\":\"bytes4\"}],\"name\":\"NoExtensionFoundForFunctionSelector\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callerAddress\",\"type\":\"address\"}],\"name\":\"OwnableCallerNotTheOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnableCannotSetZeroAddressAsOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"OperatorAuthorizationChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"notified\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"OperatorRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"TokenIdDataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"batchCalls\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"tokenIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatchForTokenIds\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getDataForTokenId\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"getOperatorsOf\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"notify\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"tokenIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatchForTokenIds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setDataForTokenId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"tokenIdsOf\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"tokenOwnerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"from\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"tokenId\",\"type\":\"bytes32[]\"},{\"internalType\":\"bool[]\",\"name\":\"force\",\"type\":\"bool[]\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"transferBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ERC725Y_DataKeysValuesEmptyArray()\":[{\"details\":\"Reverts when one of the array parameter provided to {setDataBatch} function is an empty array.\"}],\"ERC725Y_DataKeysValuesLengthMismatch()\":[{\"details\":\"Reverts when there is not the same number of elements in the `datakeys` and `dataValues` array parameters provided when calling the {setDataBatch} function.\"}],\"ERC725Y_MsgValueDisallowed()\":[{\"details\":\"Reverts when sending value to the {setData} or {setDataBatch} function.\"}],\"InvalidExtensionAddress(bytes)\":[{\"details\":\"reverts when the bytes retrieved from the LSP17 data key is not a valid address (not 20 bytes)\"}],\"InvalidFunctionSelector(bytes)\":[{\"details\":\"reverts when the contract is called with a function selector not valid (less than 4 bytes of data)\"}],\"LSP4TokenNameNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenName` after the digital asset contract has been deployed / initialized. The `LSP4TokenName` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP4TokenSymbolNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenSymbol` after the digital asset contract has been deployed / initialized. The `LSP4TokenSymbol` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP4TokenTypeNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenType` after the digital asset contract has been deployed / initialized. The `LSP4TokenType` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor / initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP8BatchCallFailed(uint256)\":[{\"details\":\"Reverts when a batch call failed.\"}],\"LSP8CannotSendToAddressZero()\":[{\"details\":\"Reverts when trying to send token to the zero address.\"}],\"LSP8CannotSendToSelf()\":[{\"details\":\"Reverts when specifying the same address for `from` and `to` in a token transfer.\"}],\"LSP8CannotUseAddressZeroAsOperator()\":[{\"details\":\"Reverts when trying to set the zero address as an operator.\"}],\"LSP8InvalidTransferBatch()\":[{\"details\":\"Reverts when the parameters used for `transferBatch` have different lengths.\"}],\"LSP8NonExistentTokenId(bytes32)\":[{\"details\":\"Reverts when `tokenId` has not been minted.\"}],\"LSP8NonExistingOperator(address,bytes32)\":[{\"details\":\"Reverts when `operator` is not an operator for the `tokenId`.\"}],\"LSP8NotTokenOperator(bytes32,address)\":[{\"details\":\"Reverts when `caller` is not an allowed operator for `tokenId`.\"}],\"LSP8NotTokenOwner(address,bytes32,address)\":[{\"details\":\"Reverts when `caller` is not the `tokenOwner` of the `tokenId`.\"}],\"LSP8NotifyTokenReceiverContractMissingLSP1Interface(address)\":[{\"details\":\"Reverts if the `tokenReceiver` does not implement LSP1 when minting or transferring tokens with `bool force` set as `false`.\"}],\"LSP8NotifyTokenReceiverIsEOA(address)\":[{\"details\":\"Reverts if the `tokenReceiver` is an EOA when minting or transferring tokens with `bool force` set as `false`.\"}],\"LSP8OperatorAlreadyAuthorized(address,bytes32)\":[{\"details\":\"Reverts when `operator` is already authorized for the `tokenId`.\"}],\"LSP8TokenContractCannotHoldValue()\":[{\"details\":\"Error occurs when sending native tokens to the LSP8 contract without sending any data. E.g. Sending value without passing a bytes4 function selector to call a LSP17 Extension.\"}],\"LSP8TokenIdAlreadyMinted(bytes32)\":[{\"details\":\"Reverts when `tokenId` has already been minted.\"}],\"LSP8TokenIdFormatNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP8TokenIdFormat` after the identifiable digital asset contract has been deployed. The `LSP8TokenIdFormat` data key is located inside the ERC725Y Data key-value store of the identifiable digital asset contract. It can be set only once inside the constructor/initializer when the identifiable digital asset contract is being deployed.\"}],\"LSP8TokenIdsDataEmptyArray()\":[{\"details\":\"Reverts when empty arrays is passed to the function\"}],\"LSP8TokenIdsDataLengthMismatch()\":[{\"details\":\"Reverts when the length of the token IDs data arrays is not equal\"}],\"LSP8TokenOwnerCannotBeOperator()\":[{\"details\":\"Reverts when trying to authorize or revoke the token's owner as an operator.\"}],\"NoExtensionFoundForFunctionSelector(bytes4)\":[{\"details\":\"reverts when there is no extension for the function selector being called with\"}],\"OwnableCallerNotTheOwner(address)\":[{\"details\":\"Reverts when only the owner is allowed to call the function.\",\"params\":{\"callerAddress\":\"The address that tried to make the call.\"}}],\"OwnableCannotSetZeroAddressAsOwner()\":[{\"details\":\"Reverts when trying to set `address(0)` as the contract owner when deploying the contract, initializing it or transferring ownership of the contract.\"}]},\"kind\":\"dev\",\"methods\":{\"authorizeOperator(address,bytes32,bytes)\":{\"details\":\"Allow an `operator` address to transfer or burn a specific `tokenId` on behalf of its token owner. See {isOperatorFor}. Notify the operator based on the LSP1-UniversalReceiver standard\",\"params\":{\"operator\":\"The address to authorize as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The token ID operator has access to.\"}},\"balanceOf(address)\":{\"details\":\"Get the number of token IDs owned by `tokenOwner`.\",\"params\":{\"tokenOwner\":\"The address to query     *\"},\"returns\":{\"_0\":\"The total number of token IDs that `tokenOwner` owns.\"}},\"batchCalls(bytes[])\":{\"custom:info\":\"It's not possible to send value along the functions call due to the use of `delegatecall`.\",\"details\":\"Allows a caller to batch different function calls in one call. Perform a `delegatecall` on self, to call different functions with preserving the context.\",\"params\":{\"data\":\"An array of ABI encoded function calls to be called on the contract.\"},\"returns\":{\"results\":\"An array of abi-encoded data returned by the functions executed.\"}},\"constructor\":{\"params\":{\"lsp4TokenType_\":\"The type of token this digital asset contract represents (`0` = Token, `1` = NFT, `2` = Collection).\",\"lsp8TokenIdFormat_\":\"The format of tokenIds (= NFTs) that this contract will create.\",\"name_\":\"The name of the token.\",\"newOwner_\":\"The owner of the token contract.\",\"symbol_\":\"The symbol of the token.\"}},\"getData(bytes32)\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\",\"params\":{\"dataKey\":\"The data key for which to retrieve the value.\"},\"returns\":{\"dataValue\":\"The bytes value stored under the specified data key.\"}},\"getDataBatch(bytes32[])\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\",\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"getDataBatchForTokenIds(bytes32[],bytes32[])\":{\"params\":{\"dataKeys\":\"An array of data keys corresponding to the token IDs.\",\"tokenIds\":\"An array of token IDs.\"},\"returns\":{\"dataValues\":\"An array of data values for each pair of `tokenId` and `dataKey`.\"}},\"getDataForTokenId(bytes32,bytes32)\":{\"params\":{\"dataKey\":\"The key for the data to retrieve.\",\"tokenId\":\"The unique identifier for a token.\"},\"returns\":{\"dataValue\":\"The data value associated with the given `tokenId` and `dataKey`.\"}},\"getOperatorsOf(bytes32)\":{\"details\":\"Returns all `operator` addresses that are allowed to transfer or burn a specific `tokenId` on behalf of its owner.\",\"params\":{\"tokenId\":\"The token ID to get the operators for.\"},\"returns\":{\"_0\":\"An array of operators allowed to transfer or burn a specific `tokenId`. Requirements - `tokenId` must exist.\"}},\"isOperatorFor(address,bytes32)\":{\"details\":\"Returns whether `operator` address is an operator for a given `tokenId`.\",\"params\":{\"operator\":\"The address to query operator status for.\",\"tokenId\":\"The token ID to check if `operator` is allowed to operate on.\"},\"returns\":{\"_0\":\"`true` if `operator` is an operator for `tokenId`, `false` otherwise.\"}},\"mint(address,bytes32,bool,bytes)\":{\"details\":\"Public {_mint} function only callable by the {owner}.\",\"params\":{\"data\":\"Any addition data to be sent alongside the minting.\",\"force\":\"Set to `false` to ensure that you are minting for a recipient that implements LSP1, `false` otherwise for forcing the minting.\",\"to\":\"The address that will receive the minted `tokenId`.\",\"tokenId\":\"The tokenId to mint.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"revokeOperator(address,bytes32,bool,bytes)\":{\"details\":\"Remove access of `operator` for a given `tokenId`, disallowing it to transfer `tokenId` on behalf of its owner. See also {isOperatorFor}.\",\"params\":{\"notify\":\"Boolean indicating whether to notify the operator or not\",\"operator\":\"The address to revoke as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The tokenId `operator` is revoked from operating on.\"}},\"setData(bytes32,bytes)\":{\"custom:events\":\"{DataChanged} event.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner}.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, if the function is not intended to receive value (= native tokens), **an additional check should be implemented to ensure that `msg.value` sent was equal to 0**.\",\"details\":\"Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`. The function is marked as payable to enable flexibility on child contracts. For instance to implement a fee mechanism for setting specific data.\",\"params\":{\"dataKey\":\"The data key for which to set a new value.\",\"dataValue\":\"The new bytes value to set.\"}},\"setDataBatch(bytes32[],bytes[])\":{\"custom:events\":\"{DataChanged} event **for each data key/value pair set**.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner} of the contract.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, if the function is not intended to receive value (= native tokens), **an additional check should be implemented to ensure that `msg.value` sent was equal to 0**.\",\"details\":\"Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\",\"params\":{\"dataKeys\":\"An array of data keys to set bytes values for.\",\"dataValues\":\"An array of bytes values to set for each `dataKeys`.\"}},\"setDataBatchForTokenIds(bytes32[],bytes32[],bytes[])\":{\"params\":{\"dataKeys\":\"An array of data keys corresponding to the token IDs.\",\"dataValues\":\"An array of values to set for the given data keys.\",\"tokenIds\":\"An array of token IDs.\"}},\"setDataForTokenId(bytes32,bytes32,bytes)\":{\"params\":{\"dataKey\":\"The key for the data to set.\",\"dataValue\":\"The value to set for the given data key.\",\"tokenId\":\"The unique identifier for a token.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenIdsOf(address)\":{\"details\":\"Returns the list of token IDs that the `tokenOwner` address owns.\",\"params\":{\"tokenOwner\":\"The address that we want to get the list of token IDs for.\"},\"returns\":{\"_0\":\"An array of `bytes32[] tokenIds` owned by `tokenOwner`.\"}},\"tokenOwnerOf(bytes32)\":{\"details\":\"Returns the list of `tokenIds` for the `tokenOwner` address.\",\"params\":{\"tokenId\":\"tokenOwner The address to query owned tokens\"},\"returns\":{\"_0\":\"The owner address of the given `tokenId`.\"}},\"totalSupply()\":{\"details\":\"Returns the number of existing tokens that have been minted in this contract.\",\"returns\":{\"_0\":\"The number of existing tokens.\"}},\"transfer(address,address,bytes32,bool,bytes)\":{\"details\":\"Transfer a given `tokenId` token from the `from` address to the `to` address. If operators are set for a specific `tokenId`, all the operators are revoked after the tokenId have been transferred. The `force` parameter MUST be set to `true` when transferring tokens to Externally Owned Accounts (EOAs) or contracts that do not implement the LSP1 standard.\",\"params\":{\"data\":\"Any additional data the caller wants included in the emitted event, and sent in the hooks of the `from` and `to` addresses.\",\"force\":\"When set to `true`, the `to` address CAN be any addres. When set to `false`, the `to` address MUST be a contract that supports the LSP1 UniversalReceiver standard.\",\"from\":\"The address that owns the given `tokenId`.\",\"to\":\"The address that will receive the `tokenId`.\",\"tokenId\":\"The token ID to transfer.\"}},\"transferBatch(address[],address[],bytes32[],bool[],bytes[])\":{\"details\":\"Transfers multiple tokens at once based on the arrays of `from`, `to` and `tokenId`. If any transfer fails, the whole call will revert.\",\"params\":{\"data\":\"Any additional data the caller wants included in the emitted event, and sent in the hooks to the `from` and `to` addresses.\",\"force\":\"When set to `true`, `to` may be any address. When set to `false`, `to` must be a contract that supports the LSP1 standard and not revert.\",\"from\":\"An array of sending addresses.\",\"to\":\"An array of recipient addresses.\",\"tokenId\":\"An array of token IDs to transfer.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"LSP8IdentifiableDigitalAsset deployable preset contract with a public {mint} function callable only by the contract {owner}.\",\"version\":1},\"userdoc\":{\"errors\":{\"LSP8BatchCallFailed(uint256)\":[{\"notice\":\"Batch call failed.\"}],\"LSP8TokenContractCannotHoldValue()\":[{\"notice\":\"LSP8 contract cannot receive native tokens.\"}]},\"events\":{\"DataChanged(bytes32,bytes)\":{\"notice\":\"The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\"}},\"kind\":\"user\",\"methods\":{\"batchCalls(bytes[])\":{\"notice\":\"Executing the following batch of abi-encoded function calls on the contract: `data`.\"},\"constructor\":{\"notice\":\"Deploying a `LSP8Mintable` token contract with: token name = `name_`, token symbol = `symbol_`, and address `newOwner_` as the token contract owner.\"},\"getData(bytes32)\":{\"notice\":\"Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\"},\"getDataBatch(bytes32[])\":{\"notice\":\"Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\"},\"getDataBatchForTokenIds(bytes32[],bytes32[])\":{\"notice\":\"Retrieves data in batch for multiple `tokenId` and `dataKey` pairs.\"},\"getDataForTokenId(bytes32,bytes32)\":{\"notice\":\"Retrieves data for a specific `tokenId` and `dataKey`.\"},\"mint(address,bytes32,bool,bytes)\":{\"notice\":\"Minting tokenId `tokenId` for address `to` with the additional data `data` (Note: allow non-LSP1 recipient is set to `force`).\"},\"setData(bytes32,bytes)\":{\"notice\":\"Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\"},\"setDataBatch(bytes32[],bytes[])\":{\"notice\":\"Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\"},\"setDataBatchForTokenIds(bytes32[],bytes32[],bytes[])\":{\"notice\":\"Sets data in batch for multiple `tokenId` and `dataKey` pairs.\"},\"setDataForTokenId(bytes32,bytes32,bytes)\":{\"notice\":\"Sets data for a specific `tokenId` and `dataKey`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/presets/LSP8Mintable.sol\":\"LSP8Mintable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts/contracts/ERC725Y.sol\":{\"keccak256\":\"0x4cb23ef9c2c93d881737c47cd0eebd63dcb39828484fda1fd3a5ce9971df3ef7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ff707e4552e8e442ff88d8b961583912664eaee373b49f03b1e6c4cd28213938\",\"dweb:/ipfs/QmVELUkQr3TikdEZoG9cxhwUCknuvSYVGKwpeDF76XiZpb\"]},\"@erc725/smart-contracts/contracts/ERC725YCore.sol\":{\"keccak256\":\"0x90670a99b91307ed47851fcc72cee06f246f49a1810307c9e2f978116bbabfc4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://06a94fdd05c104d4d1368398ed4b00926d27c1485a5130aeb257bc904671bcc0\",\"dweb:/ipfs/Qmdsph9AnSiAvYpmgVXfy3Do5dCWKBVL3xWMeGaT7qjte2\"]},\"@erc725/smart-contracts/contracts/constants.sol\":{\"keccak256\":\"0x37da1619e580b6af6a68e91b4784f7945ee2344fad3a96b6dfb2592e35fedb60\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fb9436bd587d7b38c532f317dbd4bc5f178b50906b1a5e29adf24908f27b2c47\",\"dweb:/ipfs/QmW2vTCNM7Mr4vW5t9yBK7Zmh1FtaVjPwdAbyFcPNBSZYL\"]},\"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol\":{\"keccak256\":\"0xa9c83adb0239b86c0ff6251a03bc70115470c7ae10eb99276d6dd33636054b36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95a0109837bdffe887b6568b7f9bbde2b20cfd0c4db638805cf61ada5743b24d\",\"dweb:/ipfs/QmYH2erMtqiEYjRznWnc6NbBbwxvy6ArE45jtXYEyWi3Bc\"]},\"@erc725/smart-contracts/contracts/errors.sol\":{\"keccak256\":\"0xaafdb4370450b8874224b3c0b2b712149da97a50c9a47f56e4b654aa57eb87c5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a4e40b0f64613e5bbd62575facc72d2bcad249595e9397b5bff063dc5a81e757\",\"dweb:/ipfs/QmXx5yDvPxWzKXFYK7HDAbSNDBKRskYLoDwgrThmAimzDL\"]},\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Constants.sol\":{\"keccak256\":\"0x6d4bb208587872ad563fef31655c44f7de03baa5b4a513910c0003aea0c04036\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://880c3b21e2090a14e7bba94ac5c8d4633e8a81d93c6f619454167a01dcc866d8\",\"dweb:/ipfs/QmZp6YVM4Eor5XtuXXqGRaPAJ3u5KCmLwuNRAGf4JY7sK1\"]},\"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Errors.sol\":{\"keccak256\":\"0x75a0159f76a3c5bf26b13aa404aca2f588ea41928eb1483683e29d2031fe5abf\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f1b93e7eb5a88a2f42a9dfa061ca5e93e7650cd9114010faa18faf0a5508f579\",\"dweb:/ipfs/QmXmLhf1ejsF7G1FZnvpTBRS9oQ9ZTuqCBRT1im3vAuUYW\"]},\"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Extendable.sol\":{\"keccak256\":\"0x5983e916a4cb604a45b585d7f745f5ac8bf69ef51fbc78cf8e70408e29e008c2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e1e9a7b8dc210030d35b4e2c3dbb7107f51c063256f7e6120997ed638f033db1\",\"dweb:/ipfs/QmRQgkaDnC9sAb9mZJtVgBsAR1xfmcTA2erCVUiyszy15o\"]},\"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/ILSP1UniversalReceiver.sol\":{\"keccak256\":\"0x5b8764a678dc9d6673eafa8ad0ee6053cdea30acb58015bdf9c93f9f1788b49b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0e26dcf5d66120b7a0895ddcaec92207e17c63344fca885d2b7e3fe953ec027c\",\"dweb:/ipfs/QmetAuz9etfz9BG9oPJCwMthnhfd8XvZYLBmMfrPNUm3qV\"]},\"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/LSP1Constants.sol\":{\"keccak256\":\"0x0f87fc38243fc70316e22814f5a79d9c0770a39f64077cbc6fb5fddfa1d4c23c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c7d83f054b71dfa5ca48a9a811e6a985ff6b38a9e5f4c220ea2ec3a322cce7cf\",\"dweb:/ipfs/QmaehpHpqc5dtRCm9BoU8vCY59AeEnmGvmmwPirVr47oGp\"]},\"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/LSP1Utils.sol\":{\"keccak256\":\"0x15fca4c3d6bfaec5d1a144762f1e160c6b82e7abb5e5c0ca8fcc5f4301b0c45e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ceb307c243e6439d5be18263f75c2ada73d70c5b0480dfd8b12315cacc81fa62\",\"dweb:/ipfs/QmVPwVhL6NAvUgAWQmV964tEHNWbXY6uej5VLpDorqBVhd\"]},\"@lukso/lsp-smart-contracts/contracts/LSP2ERC725YJSONSchema/LSP2Utils.sol\":{\"keccak256\":\"0x86ce8a85d12c79b76db5413b05b9bff16cd865b395efdc0e85b06b3b5e17219b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7ebb6d1152f88b459b9e8fc3ef6361a9fb9d03bfa994148e6b125a2ee4025487\",\"dweb:/ipfs/QmX18bCecAtrjqKTyCPqRrUuvVYSW1XZZJUgvjfYnqfmEH\"]},\"@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4Constants.sol\":{\"keccak256\":\"0xdf9b7c688d39a92cb3238136a9f56554245d5ae9b6568dcd6164d0e15c6f56c7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bb36a427cdfa0f394d2d78014f85152ab383499fc3c3d6285d4b801c656e7c3f\",\"dweb:/ipfs/QmZJehfeWKfHLyZLufhs9u4ZyVztGCUNWXzFgfZSU837vU\"]},\"@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadata.sol\":{\"keccak256\":\"0xd120529845267176d7658eb3b610fd9412012ce58cfde05a42f7fcee1c371dce\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4e2919d97ff39ae203dc57f53a7ae6a4f1dfe9354e564744ee3752771687b796\",\"dweb:/ipfs/QmbNwNCDnLcD4jrboPJhAMXVEiVGbagBteXM5sVByZ8A1h\"]},\"@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadataCore.sol\":{\"keccak256\":\"0xc442e52d34bb98acc1494675856b1f1d124af1375d8e23a9bfcc3b6c1865e1fc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://84254359ed929c1991136f9c3e934ddfa74cd85684de6c44cb70afa70d12f837\",\"dweb:/ipfs/QmWfmionUJJYyYDoeSQLGUHhou2sWxhWzwtU5GVjpumiSS\"]},\"@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4Errors.sol\":{\"keccak256\":\"0x3db7fd252ed02ce27686141125c3d65d3ff682a32601e1e8611becd9357a57b5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5aded62a160ed7f9860996004d1656e8592b3f97d478d8597f8ad6afbe4f34b7\",\"dweb:/ipfs/QmcnmLVt8cmz1iRNaX5c6iNYckRgUXGz8YkjHW9T1KNB5A\"]},\"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/ILSP8IdentifiableDigitalAsset.sol\":{\"keccak256\":\"0x8fc467010034709cda26f5b4c82a8297a3d3b70e53f76c15f17169196748671f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ae752bf829815fa6a31afc29ad5c392835172cf9ad13ad33f50a382ac65a9302\",\"dweb:/ipfs/QmZc3ojmFoVX5nGtRG3JNMoRsM7AAE12iFy9XCJT2a2iBC\"]},\"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8Constants.sol\":{\"keccak256\":\"0x2372e7ec422a13ce3e7968e5fbb081b67816b5de974bd76ec61cfed787abbe1b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6d147e2f290ed60e36e9187dc7cce7d7ee1a62eee1c25c761e6090d88e3fa383\",\"dweb:/ipfs/Qmf9HEYCCjx2xBopvq7WhhtjvL9AEihvNcZ512751Wg6LN\"]},\"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8Errors.sol\":{\"keccak256\":\"0x0dfadefc7641592a03a9ab346c3b994e467add0905849d921a2587f8044d7539\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://eaab1079fb0779921eb8abff8c811adc838c3a0bf82e6d1536dc2211cf8e197c\",\"dweb:/ipfs/QmaPYBRREJmru8iTVTw2mnEePyV8heUFGE7sVx41r5EzNb\"]},\"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAsset.sol\":{\"keccak256\":\"0x952bfb5f946c62f0f9e0b2b3e606434fdb4ee3b9e101ab0de6d7cda1315825a8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b1cd070d5f069d579ae4f4bd8f17af70646beb5d0773fa273e671f2c75e0e605\",\"dweb:/ipfs/QmSqMK4QcEJNfGxbx42w7B3hCWifzGygvYGpMto8yh9aPM\"]},\"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAssetCore.sol\":{\"keccak256\":\"0x3a735a26db14a7b51a064558df64b140d0a781a6534b3dca1609b01099cccb51\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3e8900d7844a1e249b7cac32036c5fe3ce0eed90af249705ef9dd4027f17849c\",\"dweb:/ipfs/QmaiDJaFjocmG99yJyXj3kX1kj9Rh2YaMM9WfsL1Hmz9QH\"]},\"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/presets/ILSP8Mintable.sol\":{\"keccak256\":\"0x499210945e303045882e430a5dcc5d3c7b11b19c8ebc7669e60f1c596dfd6aee\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a8c51df853d003fbf7d5018fe664238ce8435720ec278f7a0ff8c44eb6071409\",\"dweb:/ipfs/QmVEcwpgCzvecaYqbaYVpK8xT4HbTGQwpYvnSn3WnMSc7K\"]},\"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/presets/LSP8Mintable.sol\":{\"keccak256\":\"0x01876a91326cab63ff4d69e6d2b2122b4d4a339fa9d309d8f3c459862e19064f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fcb9dad88dfa7e052d769968d416e37e41be39eb62e6392cf730537bc3f5a461\",\"dweb:/ipfs/QmdLsY5X1zpAHNmRAX4Tf2jVdf8kG3c5u4oBQHLEa8tiSW\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0x5a08ad61f4e82b8a3323562661a86fb10b10190848073fdc13d4ac43710ffba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f7bb74cf88fd88daa34e118bc6e363381d05044f34f391d39a10c0c9dac3ebd\",\"dweb:/ipfs/QmNbQ3v8v4zuDtg7VeLAbdhAm3tCzUodNoDZZ8ekmCHWZX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol":{"ERC165Checker":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bf1191ad475b0554bde62ac9d694870633ff18fa8ac66dc46bbe9a64a607d1f764736f6c634300080c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF GT SWAP2 0xAD SELFBALANCE JUMPDEST SDIV SLOAD 0xBD 0xE6 0x2A 0xC9 0xD6 SWAP5 DUP8 MOD CALLER SELFDESTRUCT XOR STATICCALL DUP11 0xC6 PUSH14 0xC46BBE9A64A607D1F764736F6C63 NUMBER STOP ADDMOD 0xC STOP CALLER ","sourceMap":"449:4621:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bf1191ad475b0554bde62ac9d694870633ff18fa8ac66dc46bbe9a64a607d1f764736f6c634300080c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF GT SWAP2 0xAD SELFBALANCE JUMPDEST SDIV SLOAD 0xBD 0xE6 0x2A 0xC9 0xD6 SWAP5 DUP8 MOD CALLER SELFDESTRUCT XOR STATICCALL DUP11 0xC6 PUSH14 0xC46BBE9A64A607D1F764736F6C63 NUMBER STOP ADDMOD 0xC STOP CALLER ","sourceMap":"449:4621:25:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library used to query support of an interface declared via {IERC165}. Note that these functions return the actual result of the query: they do not `revert` if an interface is not supported. It is up to the caller to decide what to do in these cases.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":\"ERC165Checker\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0x5a08ad61f4e82b8a3323562661a86fb10b10190848073fdc13d4ac43710ffba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f7bb74cf88fd88daa34e118bc6e363381d05044f34f391d39a10c0c9dac3ebd\",\"dweb:/ipfs/QmNbQ3v8v4zuDtg7VeLAbdhAm3tCzUodNoDZZ8ekmCHWZX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"EnumerableSet":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f0957ef1b1b9fe36080ae8cc7955d7d95e175c454514788c6100407d1c6233cf64736f6c634300080c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE SWAP6 PUSH31 0xF1B1B9FE36080AE8CC7955D7D95E175C454514788C6100407D1C6233CF6473 PUSH16 0x6C634300080C00330000000000000000 ","sourceMap":"1329:11630:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f0957ef1b1b9fe36080ae8cc7955d7d95e175c454514788c6100407d1c6233cf64736f6c634300080c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE SWAP6 PUSH31 0xF1B1B9FE36080AE8CC7955D7D95E175C454514788C6100407D1C6233CF6473 PUSH16 0x6C634300080C00330000000000000000 ","sourceMap":"1329:11630:27:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]}},\"version\":1}"}},"contracts/BasicLSP8.sol":{"BasicLSP8":{"abi":[{"inputs":[{"internalType":"string","name":"nftCollectionName","type":"string"},{"internalType":"string","name":"nftCollectionSymbol","type":"string"},{"internalType":"address","name":"contractOwner","type":"address"},{"internalType":"uint256","name":"lsp4Type","type":"uint256"},{"internalType":"uint256","name":"lsp8TokenIdFormat","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ERC725Y_DataKeysValuesEmptyArray","type":"error"},{"inputs":[],"name":"ERC725Y_DataKeysValuesLengthMismatch","type":"error"},{"inputs":[],"name":"ERC725Y_MsgValueDisallowed","type":"error"},{"inputs":[{"internalType":"bytes","name":"storedData","type":"bytes"}],"name":"InvalidExtensionAddress","type":"error"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"name":"InvalidFunctionSelector","type":"error"},{"inputs":[],"name":"LSP4TokenNameNotEditable","type":"error"},{"inputs":[],"name":"LSP4TokenSymbolNotEditable","type":"error"},{"inputs":[],"name":"LSP4TokenTypeNotEditable","type":"error"},{"inputs":[{"internalType":"uint256","name":"callIndex","type":"uint256"}],"name":"LSP8BatchCallFailed","type":"error"},{"inputs":[],"name":"LSP8CannotSendToAddressZero","type":"error"},{"inputs":[],"name":"LSP8CannotSendToSelf","type":"error"},{"inputs":[],"name":"LSP8CannotUseAddressZeroAsOperator","type":"error"},{"inputs":[],"name":"LSP8InvalidTransferBatch","type":"error"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"LSP8NonExistentTokenId","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"LSP8NonExistingOperator","type":"error"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"address","name":"caller","type":"address"}],"name":"LSP8NotTokenOperator","type":"error"},{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"address","name":"caller","type":"address"}],"name":"LSP8NotTokenOwner","type":"error"},{"inputs":[{"internalType":"address","name":"tokenReceiver","type":"address"}],"name":"LSP8NotifyTokenReceiverContractMissingLSP1Interface","type":"error"},{"inputs":[{"internalType":"address","name":"tokenReceiver","type":"address"}],"name":"LSP8NotifyTokenReceiverIsEOA","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"LSP8OperatorAlreadyAuthorized","type":"error"},{"inputs":[],"name":"LSP8TokenContractCannotHoldValue","type":"error"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"LSP8TokenIdAlreadyMinted","type":"error"},{"inputs":[],"name":"LSP8TokenIdFormatNotEditable","type":"error"},{"inputs":[],"name":"LSP8TokenIdsDataEmptyArray","type":"error"},{"inputs":[],"name":"LSP8TokenIdsDataLengthMismatch","type":"error"},{"inputs":[],"name":"LSP8TokenOwnerCannotBeOperator","type":"error"},{"inputs":[{"internalType":"bytes4","name":"functionSelector","type":"bytes4"}],"name":"NoExtensionFoundForFunctionSelector","type":"error"},{"inputs":[{"internalType":"address","name":"callerAddress","type":"address"}],"name":"OwnableCallerNotTheOwner","type":"error"},{"inputs":[],"name":"OwnableCannotSetZeroAddressAsOwner","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"DataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"tokenOwner","type":"address"},{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"OperatorAuthorizationChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"tokenOwner","type":"address"},{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":false,"internalType":"bool","name":"notified","type":"bool"},{"indexed":false,"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"OperatorRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"TokenIdDataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":false,"internalType":"bool","name":"force","type":"bool"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"Transfer","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"authorizeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"batchCalls","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getData","outputs":[{"internalType":"bytes","name":"dataValue","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatch","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"tokenIds","type":"bytes32[]"},{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatchForTokenIds","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getDataForTokenId","outputs":[{"internalType":"bytes","name":"dataValue","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"getOperatorsOf","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"isOperatorFor","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bool","name":"force","type":"bool"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bool","name":"notify","type":"bool"},{"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"revokeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setData","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatch","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"tokenIds","type":"bytes32[]"},{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatchForTokenIds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setDataForTokenId","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"}],"name":"tokenIdsOf","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"tokenOwnerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bool","name":"force","type":"bool"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"from","type":"address[]"},{"internalType":"address[]","name":"to","type":"address[]"},{"internalType":"bytes32[]","name":"tokenId","type":"bytes32[]"},{"internalType":"bool[]","name":"force","type":"bool[]"},{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"transferBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_1637":{"entryPoint":null,"id":1637,"parameterSlots":4,"returnSlots":0},"@_2154":{"entryPoint":null,"id":2154,"parameterSlots":5,"returnSlots":0},"@_34":{"entryPoint":null,"id":34,"parameterSlots":1,"returnSlots":0},"@_3748":{"entryPoint":null,"id":3748,"parameterSlots":5,"returnSlots":0},"@_4642":{"entryPoint":null,"id":4642,"parameterSlots":5,"returnSlots":0},"@_setData_1656":{"entryPoint":992,"id":1656,"parameterSlots":2,"returnSlots":0},"@_setData_1718":{"entryPoint":1060,"id":1718,"parameterSlots":2,"returnSlots":0},"@_setData_248":{"entryPoint":888,"id":248,"parameterSlots":2,"returnSlots":0},"@_setOwner_401":{"entryPoint":631,"id":401,"parameterSlots":1,"returnSlots":0},"@owner_316":{"entryPoint":1019,"id":316,"parameterSlots":0,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":1909,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":2113,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":1984,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":2172,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_uint256t_uint256_fromMemory":{"entryPoint":2195,"id":null,"parameterSlots":2,"returnSlots":5},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":2467,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2393,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":2532,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":2410,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":1770,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":1622,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":1801,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":2439,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":2450,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2067,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2035,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2136,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":1855,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":2615,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":1716,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x22":{"entryPoint":2568,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1669,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":1642,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":1647,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":1637,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1632,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":1652,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":2087,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2146,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:6745:29","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:29","statements":[{"nodeType":"YulAssignment","src":"57:19:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:29","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:29"},"nodeType":"YulFunctionCall","src":"67:9:29"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:29"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:29","type":""}],"src":"7:75:29"},{"body":{"nodeType":"YulBlock","src":"177:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:29"},"nodeType":"YulFunctionCall","src":"187:12:29"},"nodeType":"YulExpressionStatement","src":"187:12:29"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:29"},{"body":{"nodeType":"YulBlock","src":"300:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:29"},"nodeType":"YulFunctionCall","src":"310:12:29"},"nodeType":"YulExpressionStatement","src":"310:12:29"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:29"},{"body":{"nodeType":"YulBlock","src":"423:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:29"},"nodeType":"YulFunctionCall","src":"433:12:29"},"nodeType":"YulExpressionStatement","src":"433:12:29"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:29"},{"body":{"nodeType":"YulBlock","src":"546:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:29"},"nodeType":"YulFunctionCall","src":"556:12:29"},"nodeType":"YulExpressionStatement","src":"556:12:29"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:29"},{"body":{"nodeType":"YulBlock","src":"628:54:29","statements":[{"nodeType":"YulAssignment","src":"638:38:29","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:29"},"nodeType":"YulFunctionCall","src":"652:14:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:29","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:29"},"nodeType":"YulFunctionCall","src":"668:7:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:29"},"nodeType":"YulFunctionCall","src":"648:28:29"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:29"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:29","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:29","type":""}],"src":"580:102:29"},{"body":{"nodeType":"YulBlock","src":"716:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:29"},"nodeType":"YulFunctionCall","src":"726:88:29"},"nodeType":"YulExpressionStatement","src":"726:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:29","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:29"},"nodeType":"YulFunctionCall","src":"823:15:29"},"nodeType":"YulExpressionStatement","src":"823:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:29"},"nodeType":"YulFunctionCall","src":"847:15:29"},"nodeType":"YulExpressionStatement","src":"847:15:29"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:29"},{"body":{"nodeType":"YulBlock","src":"917:238:29","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:29","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:29"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:29"},"nodeType":"YulFunctionCall","src":"957:27:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:29"},"nodeType":"YulFunctionCall","src":"945:40:29"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:29"},"nodeType":"YulFunctionCall","src":"1098:18:29"},"nodeType":"YulExpressionStatement","src":"1098:18:29"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:29"},"nodeType":"YulFunctionCall","src":"1036:34:29"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:29"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:29"},"nodeType":"YulFunctionCall","src":"1072:22:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:29"},"nodeType":"YulFunctionCall","src":"1033:62:29"},"nodeType":"YulIf","src":"1030:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:29","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:29"},"nodeType":"YulFunctionCall","src":"1127:22:29"},"nodeType":"YulExpressionStatement","src":"1127:22:29"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:29","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:29","type":""}],"src":"874:281:29"},{"body":{"nodeType":"YulBlock","src":"1202:88:29","statements":[{"nodeType":"YulAssignment","src":"1212:30:29","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:29"},"nodeType":"YulFunctionCall","src":"1222:20:29"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:29"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:29"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:29"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:29"},"nodeType":"YulFunctionCall","src":"1251:33:29"},"nodeType":"YulExpressionStatement","src":"1251:33:29"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:29","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:29","type":""}],"src":"1161:129:29"},{"body":{"nodeType":"YulBlock","src":"1363:241:29","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:29"},"nodeType":"YulFunctionCall","src":"1470:18:29"},"nodeType":"YulExpressionStatement","src":"1470:18:29"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:29"},"nodeType":"YulFunctionCall","src":"1437:30:29"},"nodeType":"YulIf","src":"1434:56:29"},{"nodeType":"YulAssignment","src":"1500:37:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:29"},"nodeType":"YulFunctionCall","src":"1508:29:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:29"}]},{"nodeType":"YulAssignment","src":"1574:23:29","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:29"},"nodeType":"YulFunctionCall","src":"1582:15:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:29"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:29","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:29","type":""}],"src":"1296:308:29"},{"body":{"nodeType":"YulBlock","src":"1659:258:29","statements":[{"nodeType":"YulVariableDeclaration","src":"1669:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"1678:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1673:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"1738:63:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1763:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"1768:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1759:3:29"},"nodeType":"YulFunctionCall","src":"1759:11:29"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1782:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"1787:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1778:3:29"},"nodeType":"YulFunctionCall","src":"1778:11:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1772:5:29"},"nodeType":"YulFunctionCall","src":"1772:18:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1752:6:29"},"nodeType":"YulFunctionCall","src":"1752:39:29"},"nodeType":"YulExpressionStatement","src":"1752:39:29"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1699:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"1702:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1696:2:29"},"nodeType":"YulFunctionCall","src":"1696:13:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1710:19:29","statements":[{"nodeType":"YulAssignment","src":"1712:15:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1721:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"1724:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1717:3:29"},"nodeType":"YulFunctionCall","src":"1717:10:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"1692:3:29","statements":[]},"src":"1688:113:29"},{"body":{"nodeType":"YulBlock","src":"1835:76:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1885:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"1890:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1881:3:29"},"nodeType":"YulFunctionCall","src":"1881:16:29"},{"kind":"number","nodeType":"YulLiteral","src":"1899:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1874:6:29"},"nodeType":"YulFunctionCall","src":"1874:27:29"},"nodeType":"YulExpressionStatement","src":"1874:27:29"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1816:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"1819:6:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1813:2:29"},"nodeType":"YulFunctionCall","src":"1813:13:29"},"nodeType":"YulIf","src":"1810:101:29"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1641:3:29","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1646:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"1651:6:29","type":""}],"src":"1610:307:29"},{"body":{"nodeType":"YulBlock","src":"2018:326:29","statements":[{"nodeType":"YulAssignment","src":"2028:75:29","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2095:6:29"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2053:41:29"},"nodeType":"YulFunctionCall","src":"2053:49:29"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2037:15:29"},"nodeType":"YulFunctionCall","src":"2037:66:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2028:5:29"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2119:5:29"},{"name":"length","nodeType":"YulIdentifier","src":"2126:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2112:6:29"},"nodeType":"YulFunctionCall","src":"2112:21:29"},"nodeType":"YulExpressionStatement","src":"2112:21:29"},{"nodeType":"YulVariableDeclaration","src":"2142:27:29","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2157:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"2164:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2153:3:29"},"nodeType":"YulFunctionCall","src":"2153:16:29"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2146:3:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"2207:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2209:77:29"},"nodeType":"YulFunctionCall","src":"2209:79:29"},"nodeType":"YulExpressionStatement","src":"2209:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2188:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"2193:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2184:3:29"},"nodeType":"YulFunctionCall","src":"2184:16:29"},{"name":"end","nodeType":"YulIdentifier","src":"2202:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2181:2:29"},"nodeType":"YulFunctionCall","src":"2181:25:29"},"nodeType":"YulIf","src":"2178:112:29"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2321:3:29"},{"name":"dst","nodeType":"YulIdentifier","src":"2326:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"2331:6:29"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2299:21:29"},"nodeType":"YulFunctionCall","src":"2299:39:29"},"nodeType":"YulExpressionStatement","src":"2299:39:29"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1991:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"1996:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"2004:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2012:5:29","type":""}],"src":"1923:421:29"},{"body":{"nodeType":"YulBlock","src":"2437:282:29","statements":[{"body":{"nodeType":"YulBlock","src":"2486:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2488:77:29"},"nodeType":"YulFunctionCall","src":"2488:79:29"},"nodeType":"YulExpressionStatement","src":"2488:79:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2465:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"2473:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2461:3:29"},"nodeType":"YulFunctionCall","src":"2461:17:29"},{"name":"end","nodeType":"YulIdentifier","src":"2480:3:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2457:3:29"},"nodeType":"YulFunctionCall","src":"2457:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2450:6:29"},"nodeType":"YulFunctionCall","src":"2450:35:29"},"nodeType":"YulIf","src":"2447:122:29"},{"nodeType":"YulVariableDeclaration","src":"2578:27:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2598:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2592:5:29"},"nodeType":"YulFunctionCall","src":"2592:13:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2582:6:29","type":""}]},{"nodeType":"YulAssignment","src":"2614:99:29","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2686:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"2694:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2682:3:29"},"nodeType":"YulFunctionCall","src":"2682:17:29"},{"name":"length","nodeType":"YulIdentifier","src":"2701:6:29"},{"name":"end","nodeType":"YulIdentifier","src":"2709:3:29"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2623:58:29"},"nodeType":"YulFunctionCall","src":"2623:90:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2614:5:29"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2415:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"2423:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2431:5:29","type":""}],"src":"2364:355:29"},{"body":{"nodeType":"YulBlock","src":"2770:81:29","statements":[{"nodeType":"YulAssignment","src":"2780:65:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2795:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"2802:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2791:3:29"},"nodeType":"YulFunctionCall","src":"2791:54:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2780:7:29"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2752:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2762:7:29","type":""}],"src":"2725:126:29"},{"body":{"nodeType":"YulBlock","src":"2902:51:29","statements":[{"nodeType":"YulAssignment","src":"2912:35:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2941:5:29"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2923:17:29"},"nodeType":"YulFunctionCall","src":"2923:24:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2912:7:29"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2884:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2894:7:29","type":""}],"src":"2857:96:29"},{"body":{"nodeType":"YulBlock","src":"3002:79:29","statements":[{"body":{"nodeType":"YulBlock","src":"3059:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3068:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3071:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3061:6:29"},"nodeType":"YulFunctionCall","src":"3061:12:29"},"nodeType":"YulExpressionStatement","src":"3061:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3025:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3050:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3032:17:29"},"nodeType":"YulFunctionCall","src":"3032:24:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3022:2:29"},"nodeType":"YulFunctionCall","src":"3022:35:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3015:6:29"},"nodeType":"YulFunctionCall","src":"3015:43:29"},"nodeType":"YulIf","src":"3012:63:29"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2995:5:29","type":""}],"src":"2959:122:29"},{"body":{"nodeType":"YulBlock","src":"3150:80:29","statements":[{"nodeType":"YulAssignment","src":"3160:22:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3175:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3169:5:29"},"nodeType":"YulFunctionCall","src":"3169:13:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3160:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3218:5:29"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"3191:26:29"},"nodeType":"YulFunctionCall","src":"3191:33:29"},"nodeType":"YulExpressionStatement","src":"3191:33:29"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3128:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"3136:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3144:5:29","type":""}],"src":"3087:143:29"},{"body":{"nodeType":"YulBlock","src":"3281:32:29","statements":[{"nodeType":"YulAssignment","src":"3291:16:29","value":{"name":"value","nodeType":"YulIdentifier","src":"3302:5:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3291:7:29"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3263:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3273:7:29","type":""}],"src":"3236:77:29"},{"body":{"nodeType":"YulBlock","src":"3362:79:29","statements":[{"body":{"nodeType":"YulBlock","src":"3419:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3428:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3431:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3421:6:29"},"nodeType":"YulFunctionCall","src":"3421:12:29"},"nodeType":"YulExpressionStatement","src":"3421:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3385:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3410:5:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3392:17:29"},"nodeType":"YulFunctionCall","src":"3392:24:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3382:2:29"},"nodeType":"YulFunctionCall","src":"3382:35:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3375:6:29"},"nodeType":"YulFunctionCall","src":"3375:43:29"},"nodeType":"YulIf","src":"3372:63:29"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3355:5:29","type":""}],"src":"3319:122:29"},{"body":{"nodeType":"YulBlock","src":"3510:80:29","statements":[{"nodeType":"YulAssignment","src":"3520:22:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3535:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3529:5:29"},"nodeType":"YulFunctionCall","src":"3529:13:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3520:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3578:5:29"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3551:26:29"},"nodeType":"YulFunctionCall","src":"3551:33:29"},"nodeType":"YulExpressionStatement","src":"3551:33:29"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3488:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"3496:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3504:5:29","type":""}],"src":"3447:143:29"},{"body":{"nodeType":"YulBlock","src":"3761:1158:29","statements":[{"body":{"nodeType":"YulBlock","src":"3808:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3810:77:29"},"nodeType":"YulFunctionCall","src":"3810:79:29"},"nodeType":"YulExpressionStatement","src":"3810:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3782:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"3791:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3778:3:29"},"nodeType":"YulFunctionCall","src":"3778:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"3803:3:29","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3774:3:29"},"nodeType":"YulFunctionCall","src":"3774:33:29"},"nodeType":"YulIf","src":"3771:120:29"},{"nodeType":"YulBlock","src":"3901:291:29","statements":[{"nodeType":"YulVariableDeclaration","src":"3916:38:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3940:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3951:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3936:3:29"},"nodeType":"YulFunctionCall","src":"3936:17:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3930:5:29"},"nodeType":"YulFunctionCall","src":"3930:24:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3920:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"4001:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"4003:77:29"},"nodeType":"YulFunctionCall","src":"4003:79:29"},"nodeType":"YulExpressionStatement","src":"4003:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3973:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"3981:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3970:2:29"},"nodeType":"YulFunctionCall","src":"3970:30:29"},"nodeType":"YulIf","src":"3967:117:29"},{"nodeType":"YulAssignment","src":"4098:84:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4154:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"4165:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4150:3:29"},"nodeType":"YulFunctionCall","src":"4150:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4174:7:29"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"4108:41:29"},"nodeType":"YulFunctionCall","src":"4108:74:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4098:6:29"}]}]},{"nodeType":"YulBlock","src":"4202:292:29","statements":[{"nodeType":"YulVariableDeclaration","src":"4217:39:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4241:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4252:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4237:3:29"},"nodeType":"YulFunctionCall","src":"4237:18:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4231:5:29"},"nodeType":"YulFunctionCall","src":"4231:25:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4221:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"4303:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"4305:77:29"},"nodeType":"YulFunctionCall","src":"4305:79:29"},"nodeType":"YulExpressionStatement","src":"4305:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4275:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"4283:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4272:2:29"},"nodeType":"YulFunctionCall","src":"4272:30:29"},"nodeType":"YulIf","src":"4269:117:29"},{"nodeType":"YulAssignment","src":"4400:84:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4456:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"4467:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4452:3:29"},"nodeType":"YulFunctionCall","src":"4452:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4476:7:29"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"4410:41:29"},"nodeType":"YulFunctionCall","src":"4410:74:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4400:6:29"}]}]},{"nodeType":"YulBlock","src":"4504:129:29","statements":[{"nodeType":"YulVariableDeclaration","src":"4519:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"4533:2:29","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4523:6:29","type":""}]},{"nodeType":"YulAssignment","src":"4549:74:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4595:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"4606:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4591:3:29"},"nodeType":"YulFunctionCall","src":"4591:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4615:7:29"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"4559:31:29"},"nodeType":"YulFunctionCall","src":"4559:64:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4549:6:29"}]}]},{"nodeType":"YulBlock","src":"4643:129:29","statements":[{"nodeType":"YulVariableDeclaration","src":"4658:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"4672:2:29","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4662:6:29","type":""}]},{"nodeType":"YulAssignment","src":"4688:74:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4734:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"4745:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4730:3:29"},"nodeType":"YulFunctionCall","src":"4730:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4754:7:29"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"4698:31:29"},"nodeType":"YulFunctionCall","src":"4698:64:29"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4688:6:29"}]}]},{"nodeType":"YulBlock","src":"4782:130:29","statements":[{"nodeType":"YulVariableDeclaration","src":"4797:17:29","value":{"kind":"number","nodeType":"YulLiteral","src":"4811:3:29","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4801:6:29","type":""}]},{"nodeType":"YulAssignment","src":"4828:74:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4874:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"4885:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4870:3:29"},"nodeType":"YulFunctionCall","src":"4870:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4894:7:29"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"4838:31:29"},"nodeType":"YulFunctionCall","src":"4838:64:29"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"4828:6:29"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_uint256t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3699:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3710:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3722:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3730:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3738:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3746:6:29","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3754:6:29","type":""}],"src":"3596:1323:29"},{"body":{"nodeType":"YulBlock","src":"4990:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5007:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5030:5:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5012:17:29"},"nodeType":"YulFunctionCall","src":"5012:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5000:6:29"},"nodeType":"YulFunctionCall","src":"5000:37:29"},"nodeType":"YulExpressionStatement","src":"5000:37:29"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4978:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4985:3:29","type":""}],"src":"4925:118:29"},{"body":{"nodeType":"YulBlock","src":"5147:124:29","statements":[{"nodeType":"YulAssignment","src":"5157:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5169:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5180:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5165:3:29"},"nodeType":"YulFunctionCall","src":"5165:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5157:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5237:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5250:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5261:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5246:3:29"},"nodeType":"YulFunctionCall","src":"5246:17:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5193:43:29"},"nodeType":"YulFunctionCall","src":"5193:71:29"},"nodeType":"YulExpressionStatement","src":"5193:71:29"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5119:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5131:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5142:4:29","type":""}],"src":"5049:222:29"},{"body":{"nodeType":"YulBlock","src":"5335:40:29","statements":[{"nodeType":"YulAssignment","src":"5346:22:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5362:5:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5356:5:29"},"nodeType":"YulFunctionCall","src":"5356:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5346:6:29"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5318:5:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5328:6:29","type":""}],"src":"5277:98:29"},{"body":{"nodeType":"YulBlock","src":"5476:73:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5493:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"5498:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5486:6:29"},"nodeType":"YulFunctionCall","src":"5486:19:29"},"nodeType":"YulExpressionStatement","src":"5486:19:29"},{"nodeType":"YulAssignment","src":"5514:29:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5533:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"5538:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5529:3:29"},"nodeType":"YulFunctionCall","src":"5529:14:29"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"5514:11:29"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5448:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"5453:6:29","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"5464:11:29","type":""}],"src":"5381:168:29"},{"body":{"nodeType":"YulBlock","src":"5645:270:29","statements":[{"nodeType":"YulVariableDeclaration","src":"5655:52:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5701:5:29"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"5669:31:29"},"nodeType":"YulFunctionCall","src":"5669:38:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5659:6:29","type":""}]},{"nodeType":"YulAssignment","src":"5716:77:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5781:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"5786:6:29"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5723:57:29"},"nodeType":"YulFunctionCall","src":"5723:70:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5716:3:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5828:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"5835:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5824:3:29"},"nodeType":"YulFunctionCall","src":"5824:16:29"},{"name":"pos","nodeType":"YulIdentifier","src":"5842:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"5847:6:29"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"5802:21:29"},"nodeType":"YulFunctionCall","src":"5802:52:29"},"nodeType":"YulExpressionStatement","src":"5802:52:29"},{"nodeType":"YulAssignment","src":"5863:46:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5874:3:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5901:6:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5879:21:29"},"nodeType":"YulFunctionCall","src":"5879:29:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5870:3:29"},"nodeType":"YulFunctionCall","src":"5870:39:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5863:3:29"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5626:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5633:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5641:3:29","type":""}],"src":"5555:360:29"},{"body":{"nodeType":"YulBlock","src":"6037:193:29","statements":[{"nodeType":"YulAssignment","src":"6047:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6059:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6070:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6055:3:29"},"nodeType":"YulFunctionCall","src":"6055:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6047:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6094:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6105:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6090:3:29"},"nodeType":"YulFunctionCall","src":"6090:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6113:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"6119:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6109:3:29"},"nodeType":"YulFunctionCall","src":"6109:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6083:6:29"},"nodeType":"YulFunctionCall","src":"6083:47:29"},"nodeType":"YulExpressionStatement","src":"6083:47:29"},{"nodeType":"YulAssignment","src":"6139:84:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6209:6:29"},{"name":"tail","nodeType":"YulIdentifier","src":"6218:4:29"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6147:61:29"},"nodeType":"YulFunctionCall","src":"6147:76:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6139:4:29"}]}]},"name":"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6009:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6021:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6032:4:29","type":""}],"src":"5921:309:29"},{"body":{"nodeType":"YulBlock","src":"6264:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6281:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6284:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6274:6:29"},"nodeType":"YulFunctionCall","src":"6274:88:29"},"nodeType":"YulExpressionStatement","src":"6274:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6378:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6381:4:29","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6371:6:29"},"nodeType":"YulFunctionCall","src":"6371:15:29"},"nodeType":"YulExpressionStatement","src":"6371:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6402:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6405:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6395:6:29"},"nodeType":"YulFunctionCall","src":"6395:15:29"},"nodeType":"YulExpressionStatement","src":"6395:15:29"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"6236:180:29"},{"body":{"nodeType":"YulBlock","src":"6473:269:29","statements":[{"nodeType":"YulAssignment","src":"6483:22:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6497:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"6503:1:29","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6493:3:29"},"nodeType":"YulFunctionCall","src":"6493:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6483:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"6514:38:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6544:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"6550:1:29","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6540:3:29"},"nodeType":"YulFunctionCall","src":"6540:12:29"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"6518:18:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"6591:51:29","statements":[{"nodeType":"YulAssignment","src":"6605:27:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6619:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"6627:4:29","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6615:3:29"},"nodeType":"YulFunctionCall","src":"6615:17:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6605:6:29"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6571:18:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6564:6:29"},"nodeType":"YulFunctionCall","src":"6564:26:29"},"nodeType":"YulIf","src":"6561:81:29"},{"body":{"nodeType":"YulBlock","src":"6694:42:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"6708:16:29"},"nodeType":"YulFunctionCall","src":"6708:18:29"},"nodeType":"YulExpressionStatement","src":"6708:18:29"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6658:18:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6681:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"6689:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6678:2:29"},"nodeType":"YulFunctionCall","src":"6678:14:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6655:2:29"},"nodeType":"YulFunctionCall","src":"6655:38:29"},"nodeType":"YulIf","src":"6652:84:29"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6457:4:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"6466:6:29","type":""}],"src":"6422:320:29"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n","id":29,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b506040516200525238038062005252833981810160405281019062000037919062000893565b848484848484848484848484848481600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415620000ae576040517f1ad8836c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b620000c4816200027760201b620016391760201c565b50620001347feafec4d89fa9619884b60000a4d96624a38f7ac2d8d9a604ecf07c12c77e480c60001b6040518060400160405280600481526020017fa4d96624000000000000000000000000000000000000000000000000000000008152506200037860201b620017311760201c565b6200016e7fdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af160001b856200037860201b620017311760201c565b620001a87f2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db93275660001b846200037860201b620017311760201c565b620002037fe0261fa95db2eb3b5439bd033cda66d56b96f92f243a8228fd87550ed7bdfdb360001b82604051602001620001e391906200096a565b6040516020818303038152906040526200037860201b620017311760201c565b50505050620002627ff675e9361af1c1664c1868cfa3eb97672d6b1a513aa5b81dec34c9ee330e818d60001b826040516020016200024291906200096a565b604051602081830303815290604052620003e060201b620017951760201c565b50505050505050505050505050505062000a6d565b62000287620003fb60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161462000375578073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b80600160008481526020019081526020016000209080519060200190620003a1929190620005a6565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b282604051620003d49190620009e4565b60405180910390a25050565b620003f782826200042460201b620017a31760201c565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7fdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af160001b82141562000482576040517f85c169bd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db93275660001b821415620004e0576040517f76755b3800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fe0261fa95db2eb3b5439bd033cda66d56b96f92f243a8228fd87550ed7bdfdb360001b8214156200053e576040517f4ef6d7fb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060016000848152602001908152602001600020908051906020019062000567929190620005a6565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b2826040516200059a9190620009e4565b60405180910390a25050565b828054620005b49062000a37565b90600052602060002090601f016020900481019282620005d8576000855562000624565b82601f10620005f357805160ff191683800117855562000624565b8280016001018555821562000624579182015b828111156200062357825182559160200191906001019062000606565b5b50905062000633919062000637565b5090565b5b808211156200065257600081600090555060010162000638565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620006bf8262000674565b810181811067ffffffffffffffff82111715620006e157620006e062000685565b5b80604052505050565b6000620006f662000656565b9050620007048282620006b4565b919050565b600067ffffffffffffffff82111562000727576200072662000685565b5b620007328262000674565b9050602081019050919050565b60005b838110156200075f57808201518184015260208101905062000742565b838111156200076f576000848401525b50505050565b60006200078c620007868462000709565b620006ea565b905082815260208101848484011115620007ab57620007aa6200066f565b5b620007b88482856200073f565b509392505050565b600082601f830112620007d857620007d76200066a565b5b8151620007ea84826020860162000775565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200082082620007f3565b9050919050565b620008328162000813565b81146200083e57600080fd5b50565b600081519050620008528162000827565b92915050565b6000819050919050565b6200086d8162000858565b81146200087957600080fd5b50565b6000815190506200088d8162000862565b92915050565b600080600080600060a08688031215620008b257620008b162000660565b5b600086015167ffffffffffffffff811115620008d357620008d262000665565b5b620008e188828901620007c0565b955050602086015167ffffffffffffffff81111562000905576200090462000665565b5b6200091388828901620007c0565b9450506040620009268882890162000841565b935050606062000939888289016200087c565b92505060806200094c888289016200087c565b9150509295509295909350565b620009648162000858565b82525050565b600060208201905062000981600083018462000959565b92915050565b600081519050919050565b600082825260208201905092915050565b6000620009b08262000987565b620009bc818562000992565b9350620009ce8185602086016200073f565b620009d98162000674565b840191505092915050565b6000602082019050818103600083015262000a008184620009a3565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168062000a5057607f821691505b6020821081141562000a675762000a6662000a08565b5b50919050565b6147d58062000a7d6000396000f3fe60806040526004361061014f5760003560e01c80637e87632c116100b6578063af255b611161006f578063af255b61146105b4578063be9f0e6f146105dd578063d6c1407c14610606578063db8c96631461062f578063dedff9c614610658578063f2fde38b14610695576101ca565b80637e87632c146104c25780637f23690c146104eb57806386a10ddd146105075780638da5cb5b14610530578063979024211461055b578063a3b261f214610577576101ca565b806349a6078d1161010857806349a6078d1461038e578063511b6952146103cb57806354f6127f146103f45780636963d4381461043157806370a082311461046e578063715018a6146104ab576101ca565b806301ffc9a71461023257806316e023b31461026f57806318160ddd146102ac5780631d26fce6146102d7578063217b2270146103145780632a3654a414610351576101ca565b366101ca576000341415610198576040517fe5099ee300000000000000000000000000000000000000000000000000000000815260040161018f90612e16565b60405180910390fd5b6040517f61f4944200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600036606060046000369050101561021b5782826040517fe5099ee3000000000000000000000000000000000000000000000000000000008152600401610212929190612e83565b60405180910390fd5b61022583836106be565b9050915050805190602001f35b34801561023e57600080fd5b5061025960048036038101906102549190612f13565b61083d565b6040516102669190612f5b565b60405180910390f35b34801561027b57600080fd5b5061029660048036038101906102919190612fac565b6108ae565b6040516102a39190613063565b60405180910390f35b3480156102b857600080fd5b506102c16108c2565b6040516102ce919061309e565b60405180910390f35b3480156102e357600080fd5b506102fe60048036038101906102f99190613201565b6108cc565b60405161030b9190613385565b60405180910390f35b34801561032057600080fd5b5061033b600480360381019061033691906133a7565b610999565b6040516103489190613415565b60405180910390f35b34801561035d57600080fd5b506103786004803603810190610373919061345c565b610a4d565b6040516103859190612f5b565b60405180910390f35b34801561039a57600080fd5b506103b560048036038101906103b091906133a7565b610a6a565b6040516103c2919061355a565b60405180910390f35b3480156103d757600080fd5b506103f260048036038101906103ed919061364e565b610a97565b005b34801561040057600080fd5b5061041b600480360381019061041691906133a7565b610af8565b6040516104289190613063565b60405180910390f35b34801561043d57600080fd5b5061045860048036038101906104539190613740565b610b0a565b6040516104659190613385565b60405180910390f35b34801561047a57600080fd5b506104956004803603810190610490919061378d565b610c86565b6040516104a2919061309e565b60405180910390f35b3480156104b757600080fd5b506104c0610cd6565b005b3480156104ce57600080fd5b506104e960048036038101906104e49190613a21565b610cea565b005b61050560048036038101906105009190613b28565b610dfe565b005b34801561051357600080fd5b5061052e60048036038101906105299190613b84565b610e4e565b005b34801561053c57600080fd5b506105456110ac565b6040516105529190613415565b60405180910390f35b61057560048036038101906105709190613bf3565b6110d5565b005b34801561058357600080fd5b5061059e6004803603810190610599919061378d565b6111e8565b6040516105ab9190613d29565b60405180910390f35b3480156105c057600080fd5b506105db60048036038101906105d69190613d4b565b611238565b005b3480156105e957600080fd5b5061060460048036038101906105ff9190613dce565b611252565b005b34801561061257600080fd5b5061062d60048036038101906106289190613e75565b611356565b005b34801561063b57600080fd5b5061065660048036038101906106519190613d4b565b61136e565b005b34801561066457600080fd5b5061067f600480360381019061067a9190613ee4565b61150d565b60405161068c9190613385565b60405180910390f35b3480156106a157600080fd5b506106bc60048036038101906106b7919061378d565b6115be565b005b606060006106ef6000357fffffffff000000000000000000000000000000000000000000000000000000001661191e565b509050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610788576000357fffffffff00000000000000000000000000000000000000000000000000000000166040517fbb370b2b00000000000000000000000000000000000000000000000000000000815260040161077f9190613f3c565b60405180910390fd5b6000808273ffffffffffffffffffffffffffffffffffffffff1634878733346040516020016107ba9493929190613ff0565b6040516020818303038152906040526040516107d6919061405c565b60006040518083038185875af1925050503d8060008114610813576040519150601f19603f3d011682016040523d82523d6000602084013e610818565b606091505b5091509150811561082e57809350505050610837565b80518060208301fd5b92915050565b6000633a27170660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806108975750610896826119d8565b5b806108a757506108a682611a39565b5b9050919050565b60606108ba8383611aa1565b905092915050565b6000600254905090565b6060825167ffffffffffffffff8111156108e9576108e86130be565b5b60405190808252806020026020018201604052801561091c57816020015b60608152602001906001900390816109075790505b50905060005b83518110156109925761096984828151811061094157610940614073565b5b602002602001015184838151811061095c5761095b614073565b5b6020026020010151611aa1565b82828151811061097c5761097b614073565b5b6020026020010181905250806001019050610922565b5092915050565b6000806003600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a4457826040517fae8f9a36000000000000000000000000000000000000000000000000000000008152600401610a3b91906140b1565b60405180910390fd5b80915050919050565b6000610a5882611b6f565b610a628383611bbc565b905092915050565b6060610a7582611b6f565b610a9060056000848152602001908152602001600020611c29565b9050919050565b610aa13384611bbc565b610ae45782336040517f1294d2a9000000000000000000000000000000000000000000000000000000008152600401610adb9291906140cc565b60405180910390fd5b610af18585858585611c4a565b5050505050565b6060610b0382611f6f565b9050919050565b60608282905067ffffffffffffffff811115610b2957610b286130be565b5b604051908082528060200260200182016040528015610b5c57816020015b6060815260200190600190039081610b475790505b50905060005b83839050811015610c7f576000803073ffffffffffffffffffffffffffffffffffffffff16868685818110610b9a57610b99614073565b5b9050602002810190610bac9190614104565b604051610bba929190614167565b600060405180830381855af49150503d8060008114610bf5576040519150601f19603f3d011682016040523d82523d6000602084013e610bfa565b606091505b509150915081610c53576000815114610c165780518082602001fd5b826040517f234eb819000000000000000000000000000000000000000000000000000000008152600401610c4a919061309e565b60405180910390fd5b80848481518110610c6757610c66614073565b5b60200260200101819052508260010192505050610b62565b5092915050565b6000610ccf600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612014565b9050919050565b610cde612029565b610ce86000611639565b565b600085519050845181141580610d01575083518114155b80610d0d575082518114155b80610d19575081518114155b15610d50576040517f93a8311900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b81811015610df557610dea878281518110610d7157610d70614073565b5b6020026020010151878381518110610d8c57610d8b614073565b5b6020026020010151878481518110610da757610da6614073565b5b6020026020010151878581518110610dc257610dc1614073565b5b6020026020010151878681518110610ddd57610ddc614073565b5b6020026020010151610a97565b806001019050610d53565b50505050505050565b610e06612029565b60003414610e40576040517ff36ba73700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e4a82826120a2565b5050565b6000610e5983610999565b90503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610ecf578083336040517f5b271ea2000000000000000000000000000000000000000000000000000000008152600401610ec693929190614180565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610f36576040517f9577b8b300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610f9c576040517f89fdad6200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610fc3856005600087815260200190815260200160002061210d90919063ffffffff16565b9050806110095784846040517fa7626b680000000000000000000000000000000000000000000000000000000081526004016110009291906141b7565b60405180910390fd5b838273ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167f1b1b58aa2ec0cec2228b2d37124556d41f5a1f7b12f089171f896cc236671215866040516110679190613063565b60405180910390a46000338560018660405160200161108994939291906141e0565b60405160208183030381529060405290506110a4868261213d565b505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6110dd612029565b60003414611117576040517ff36ba73700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8051825114611152576040517f3bcc897900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008251141561118e576040517f97da5f9500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b82518110156111e3576111d88382815181106111b0576111af614073565b5b60200260200101518383815181106111cb576111ca614073565b5b60200260200101516120a2565b806001019050611191565b505050565b6060611231600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061216f565b9050919050565b611240612029565b61124c84848484612190565b50505050565b61125a612029565b8151835114158061126d57508051825114155b156112a4576040517f2fa71dfe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000835114156112e0576040517f80c9830500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b83518110156113505761134584828151811061130257611301614073565b5b602002602001015184838151811061131d5761131c614073565b5b602002602001015184848151811061133857611337614073565b5b60200260200101516123c0565b8060010190506112e3565b50505050565b61135e612029565b6113698383836123c0565b505050565b600061137984610999565b90503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146113ef578084336040517f5b271ea20000000000000000000000000000000000000000000000000000000081526004016113e693929190614180565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415611456576040517f9577b8b300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156114bc576040517f89fdad6200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6114c9858286868661244e565b821561150657600033856000856040516020016114e994939291906141e0565b6040516020818303038152906040529050611504868261213d565b505b5050505050565b6060815167ffffffffffffffff81111561152a576115296130be565b5b60405190808252806020026020018201604052801561155d57816020015b60608152602001906001900390816115485790505b50905060005b82518110156115b85761158f83828151811061158257611581614073565b5b6020026020010151611f6f565b8282815181106115a2576115a1614073565b5b6020026020010181905250806001019050611563565b50919050565b6115c6612029565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561162d576040517f1ad8836c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61163681611639565b50565b6116416110ac565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461172e578073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b80600160008481526020019081526020016000209080519060200190611758929190612d36565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b2826040516117899190613063565b60405180910390a25050565b61179f82826117a3565b5050565b7fdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af160001b821415611800576040517f85c169bd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db93275660001b82141561185d576040517f76755b3800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fe0261fa95db2eb3b5439bd033cda66d56b96f92f243a8228fd87550ed7bdfdb360001b8214156118ba576040517f4ef6d7fb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806001600084815260200190815260200160002090805190602001906118e1929190612d36565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b2826040516119129190613063565b60405180910390a25050565b600080600061195969cee78b4094da8601109660b01b857bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191661252b565b9050600061196682611f6f565b9050601481511415801561197c57506000815114155b156119be57806040517f42bfe79f0000000000000000000000000000000000000000000000000000000081526004016119b59190613063565b60405180910390fd5b806119c89061428a565b60601c6001935093505050915091565b600063a918fa6b60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480611a325750611a318261256b565b5b9050919050565b600080611a4c6301ffc9a760e01b61191e565b509050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611a8e576000915050611a9c565b611a9881846125cc565b9150505b919050565b6060600160008484604051602001611aba929190614312565b6040516020818303038152906040528051906020012081526020019081526020016000208054611ae99061436d565b80601f0160208091040260200160405190810160405280929190818152602001828054611b159061436d565b8015611b625780601f10611b3757610100808354040283529160200191611b62565b820191906000526020600020905b815481529060010190602001808311611b4557829003601f168201915b5050505050905092915050565b611b788161268b565b611bb957806040517fae8f9a36000000000000000000000000000000000000000000000000000000008152600401611bb091906140b1565b60405180910390fd5b50565b6000611bc782610999565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161480611c215750611c2083600560008581526020019081526020016000206126f790919063ffffffff16565b5b905092915050565b60606000611c3983600001612727565b905060608190508092505050919050565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415611cb0576040517f5d67d6c100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611cbb84610999565b90508573ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611d31578084876040517f5b271ea2000000000000000000000000000000000000000000000000000000008152600401611d2893929190614180565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415611d98576040517f24ecef4d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611da486868685612783565b611dad84610999565b9050611db98685612789565b611e0a84600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206127ff90919063ffffffff16565b50611e5c84600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061281690919063ffffffff16565b50846003600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf338787604051611f119392919061439f565b60405180910390a4611f258686868561282d565b60003387878786604051602001611f409594939291906143dd565b6040516020818303038152906040529050611f5b8782612833565b611f66868583612865565b50505050505050565b6060600160008381526020019081526020016000208054611f8f9061436d565b80601f0160208091040260200160405190810160405280929190818152602001828054611fbb9061436d565b80156120085780601f10611fdd57610100808354040283529160200191612008565b820191906000526020600020905b815481529060010190602001808311611feb57829003601f168201915b50505050509050919050565b6000612022826000016129cb565b9050919050565b3373ffffffffffffffffffffffffffffffffffffffff166120486110ac565b73ffffffffffffffffffffffffffffffffffffffff16146120a057336040517fbf1169c50000000000000000000000000000000000000000000000000000000081526004016120979190613415565b60405180910390fd5b565b7ff675e9361af1c1664c1868cfa3eb97672d6b1a513aa5b81dec34c9ee330e818d60001b8214156120ff576040517f3664800a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6121098282611795565b5050565b6000612135836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6129dc565b905092915050565b61216b827f8a1c15a8799f71b547e08e2bcb2e85257e81b0a07eee2ce6712549eef1f0097060001b83612a4c565b5050565b6060600061217f83600001612727565b905060608190508092505050919050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156121f7576040517f24ecef4d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6122046000858584612783565b61220d8361268b565b1561224f57826040517f34c7b51100000000000000000000000000000000000000000000000000000000815260040161224691906140b1565b60405180910390fd5b60026000815461225e90614466565b919050819055506122b683600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061281690919063ffffffff16565b50836003600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828473ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf33868660405161236c9392919061439f565b60405180910390a4612381600085858461282d565b600033600086868560405160200161239d9594939291906143dd565b60405160208183030381529060405290506123b9858483612865565b5050505050565b806001600085856040516020016123d8929190614312565b604051602081830303815290604052805190602001208152602001908152602001600020908051906020019061240f929190612d36565b5081837fa6e4251f855f750545fe414f120db91c76b88def14d120969e5bb2d3f05debbb836040516124419190613063565b60405180910390a3505050565b60006124758660056000878152602001908152602001600020612b0b90919063ffffffff16565b9050806124bb5785846040517f4aa31a8c0000000000000000000000000000000000000000000000000000000081526004016124b29291906141b7565b60405180910390fd5b838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fc78cd419d6136f9f1c1c6aec1d3fae098cffaf8bc86314a8f2685e32fe574e3c868660405161251b9291906144af565b60405180910390a4505050505050565b60008083600060f01b846040516020016125479392919061459a565b604051602081830303815290604052905080612562906145ec565b91505092915050565b600063629aa69460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806125c557506125c482612b3b565b5b9050919050565b6000806301ffc9a760e01b836040516024016125e89190613f3c565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506000806000602060008551602087018a617530fa92503d91506000519050828015612673575060208210155b801561267f5750600081115b94505050505092915050565b60008073ffffffffffffffffffffffffffffffffffffffff166003600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600061271f836000018373ffffffffffffffffffffffffffffffffffffffff1660001b612ba5565b905092915050565b60608160000180548060200260200160405190810160405280929190818152602001828054801561277757602002820191906000526020600020905b815481526020019060010190808311612763575b50505050509050919050565b50505050565b600060056000838152602001908152602001600020905060006127ab82612bc8565b90506000805b828110156127f7576127cd600085612bdd90919063ffffffff16565b91506127ec82878760006040518060200160405280600081525061244e565b8060010190506127b1565b505050505050565b600061280e8360000183612bf7565b905092915050565b600061282583600001836129dc565b905092915050565b50505050565b612861827fb23eae7e6d1564b295b4c3e3be402d9a2f0776c57bdf365903496f6fa481ab0060001b83612a4c565b5050565b61287683636bb56a1460e01b6125cc565b15612927578273ffffffffffffffffffffffffffffffffffffffff16636bb56a147f0b084a55ebf70fd3c06fd755269dac2212c4d3f0f4d09079780bfa50c1b2984d60001b836040518363ffffffff1660e01b81526004016128d9929190614653565b6000604051808303816000875af11580156128f8573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061292191906146f3565b506129c6565b816129c55760008373ffffffffffffffffffffffffffffffffffffffff163b1461298857826040517f4349776d00000000000000000000000000000000000000000000000000000000815260040161297f9190613415565b60405180910390fd5b826040517f031731370000000000000000000000000000000000000000000000000000000081526004016129bc9190613415565b60405180910390fd5b5b505050565b600081600001805490509050919050565b60006129e88383612ba5565b612a41578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050612a46565b600090505b92915050565b612a7c636bb56a1460e01b8473ffffffffffffffffffffffffffffffffffffffff166125cc90919063ffffffff16565b15612b06578273ffffffffffffffffffffffffffffffffffffffff16636bb56a1483836040518363ffffffff1660e01b8152600401612abc929190614653565b6000604051808303816000875af1158015612adb573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190612b0491906146f3565b505b505050565b6000612b33836000018373ffffffffffffffffffffffffffffffffffffffff1660001b612bf7565b905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600080836001016000848152602001908152602001600020541415905092915050565b6000612bd6826000016129cb565b9050919050565b6000612bec8360000183612d0b565b60001c905092915050565b60008083600101600084815260200190815260200160002054905060008114612cff576000600182612c29919061473c565b9050600060018660000180549050612c41919061473c565b9050818114612cb0576000866000018281548110612c6257612c61614073565b5b9060005260206000200154905080876000018481548110612c8657612c85614073565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b85600001805480612cc457612cc3614770565b5b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050612d05565b60009150505b92915050565b6000826000018281548110612d2357612d22614073565b5b9060005260206000200154905092915050565b828054612d429061436d565b90600052602060002090601f016020900481019282612d645760008555612dab565b82601f10612d7d57805160ff1916838001178555612dab565b82800160010185558215612dab579182015b82811115612daa578251825591602001919060010190612d8f565b5b509050612db89190612dbc565b5090565b5b80821115612dd5576000816000905550600101612dbd565b5090565b600082825260208201905092915050565b60008082015250565b6000612e00600483612dd9565b9150612e0b82612dea565b602082019050919050565b60006020820190508181036000830152612e2f81612df3565b9050919050565b82818337600083830152505050565b6000601f19601f8301169050919050565b6000612e628385612dd9565b9350612e6f838584612e36565b612e7883612e45565b840190509392505050565b60006020820190508181036000830152612e9e818486612e56565b90509392505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b612ef081612ebb565b8114612efb57600080fd5b50565b600081359050612f0d81612ee7565b92915050565b600060208284031215612f2957612f28612eb1565b5b6000612f3784828501612efe565b91505092915050565b60008115159050919050565b612f5581612f40565b82525050565b6000602082019050612f706000830184612f4c565b92915050565b6000819050919050565b612f8981612f76565b8114612f9457600080fd5b50565b600081359050612fa681612f80565b92915050565b60008060408385031215612fc357612fc2612eb1565b5b6000612fd185828601612f97565b9250506020612fe285828601612f97565b9150509250929050565b600081519050919050565b60005b83811015613015578082015181840152602081019050612ffa565b83811115613024576000848401525b50505050565b600061303582612fec565b61303f8185612dd9565b935061304f818560208601612ff7565b61305881612e45565b840191505092915050565b6000602082019050818103600083015261307d818461302a565b905092915050565b6000819050919050565b61309881613085565b82525050565b60006020820190506130b3600083018461308f565b92915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6130f682612e45565b810181811067ffffffffffffffff82111715613115576131146130be565b5b80604052505050565b6000613128612ea7565b905061313482826130ed565b919050565b600067ffffffffffffffff821115613154576131536130be565b5b602082029050602081019050919050565b600080fd5b600061317d61317884613139565b61311e565b905080838252602082019050602084028301858111156131a05761319f613165565b5b835b818110156131c957806131b58882612f97565b8452602084019350506020810190506131a2565b5050509392505050565b600082601f8301126131e8576131e76130b9565b5b81356131f884826020860161316a565b91505092915050565b6000806040838503121561321857613217612eb1565b5b600083013567ffffffffffffffff81111561323657613235612eb6565b5b613242858286016131d3565b925050602083013567ffffffffffffffff81111561326357613262612eb6565b5b61326f858286016131d3565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b60006132c182612fec565b6132cb81856132a5565b93506132db818560208601612ff7565b6132e481612e45565b840191505092915050565b60006132fb83836132b6565b905092915050565b6000602082019050919050565b600061331b82613279565b6133258185613284565b93508360208202850161333785613295565b8060005b85811015613373578484038952815161335485826132ef565b945061335f83613303565b925060208a0199505060018101905061333b565b50829750879550505050505092915050565b6000602082019050818103600083015261339f8184613310565b905092915050565b6000602082840312156133bd576133bc612eb1565b5b60006133cb84828501612f97565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006133ff826133d4565b9050919050565b61340f816133f4565b82525050565b600060208201905061342a6000830184613406565b92915050565b613439816133f4565b811461344457600080fd5b50565b60008135905061345681613430565b92915050565b6000806040838503121561347357613472612eb1565b5b600061348185828601613447565b925050602061349285828601612f97565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6134d1816133f4565b82525050565b60006134e383836134c8565b60208301905092915050565b6000602082019050919050565b60006135078261349c565b61351181856134a7565b935061351c836134b8565b8060005b8381101561354d57815161353488826134d7565b975061353f836134ef565b925050600181019050613520565b5085935050505092915050565b6000602082019050818103600083015261357481846134fc565b905092915050565b61358581612f40565b811461359057600080fd5b50565b6000813590506135a28161357c565b92915050565b600080fd5b600067ffffffffffffffff8211156135c8576135c76130be565b5b6135d182612e45565b9050602081019050919050565b60006135f16135ec846135ad565b61311e565b90508281526020810184848401111561360d5761360c6135a8565b5b613618848285612e36565b509392505050565b600082601f830112613635576136346130b9565b5b81356136458482602086016135de565b91505092915050565b600080600080600060a0868803121561366a57613669612eb1565b5b600061367888828901613447565b955050602061368988828901613447565b945050604061369a88828901612f97565b93505060606136ab88828901613593565b925050608086013567ffffffffffffffff8111156136cc576136cb612eb6565b5b6136d888828901613620565b9150509295509295909350565b600080fd5b60008083601f840112613700576136ff6130b9565b5b8235905067ffffffffffffffff81111561371d5761371c6136e5565b5b60208301915083602082028301111561373957613738613165565b5b9250929050565b6000806020838503121561375757613756612eb1565b5b600083013567ffffffffffffffff81111561377557613774612eb6565b5b613781858286016136ea565b92509250509250929050565b6000602082840312156137a3576137a2612eb1565b5b60006137b184828501613447565b91505092915050565b600067ffffffffffffffff8211156137d5576137d46130be565b5b602082029050602081019050919050565b60006137f96137f4846137ba565b61311e565b9050808382526020820190506020840283018581111561381c5761381b613165565b5b835b8181101561384557806138318882613447565b84526020840193505060208101905061381e565b5050509392505050565b600082601f830112613864576138636130b9565b5b81356138748482602086016137e6565b91505092915050565b600067ffffffffffffffff821115613898576138976130be565b5b602082029050602081019050919050565b60006138bc6138b78461387d565b61311e565b905080838252602082019050602084028301858111156138df576138de613165565b5b835b8181101561390857806138f48882613593565b8452602084019350506020810190506138e1565b5050509392505050565b600082601f830112613927576139266130b9565b5b81356139378482602086016138a9565b91505092915050565b600067ffffffffffffffff82111561395b5761395a6130be565b5b602082029050602081019050919050565b600061397f61397a84613940565b61311e565b905080838252602082019050602084028301858111156139a2576139a1613165565b5b835b818110156139e957803567ffffffffffffffff8111156139c7576139c66130b9565b5b8086016139d48982613620565b855260208501945050506020810190506139a4565b5050509392505050565b600082601f830112613a0857613a076130b9565b5b8135613a1884826020860161396c565b91505092915050565b600080600080600060a08688031215613a3d57613a3c612eb1565b5b600086013567ffffffffffffffff811115613a5b57613a5a612eb6565b5b613a678882890161384f565b955050602086013567ffffffffffffffff811115613a8857613a87612eb6565b5b613a948882890161384f565b945050604086013567ffffffffffffffff811115613ab557613ab4612eb6565b5b613ac1888289016131d3565b935050606086013567ffffffffffffffff811115613ae257613ae1612eb6565b5b613aee88828901613912565b925050608086013567ffffffffffffffff811115613b0f57613b0e612eb6565b5b613b1b888289016139f3565b9150509295509295909350565b60008060408385031215613b3f57613b3e612eb1565b5b6000613b4d85828601612f97565b925050602083013567ffffffffffffffff811115613b6e57613b6d612eb6565b5b613b7a85828601613620565b9150509250929050565b600080600060608486031215613b9d57613b9c612eb1565b5b6000613bab86828701613447565b9350506020613bbc86828701612f97565b925050604084013567ffffffffffffffff811115613bdd57613bdc612eb6565b5b613be986828701613620565b9150509250925092565b60008060408385031215613c0a57613c09612eb1565b5b600083013567ffffffffffffffff811115613c2857613c27612eb6565b5b613c34858286016131d3565b925050602083013567ffffffffffffffff811115613c5557613c54612eb6565b5b613c61858286016139f3565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b613ca081612f76565b82525050565b6000613cb28383613c97565b60208301905092915050565b6000602082019050919050565b6000613cd682613c6b565b613ce08185613c76565b9350613ceb83613c87565b8060005b83811015613d1c578151613d038882613ca6565b9750613d0e83613cbe565b925050600181019050613cef565b5085935050505092915050565b60006020820190508181036000830152613d438184613ccb565b905092915050565b60008060008060808587031215613d6557613d64612eb1565b5b6000613d7387828801613447565b9450506020613d8487828801612f97565b9350506040613d9587828801613593565b925050606085013567ffffffffffffffff811115613db657613db5612eb6565b5b613dc287828801613620565b91505092959194509250565b600080600060608486031215613de757613de6612eb1565b5b600084013567ffffffffffffffff811115613e0557613e04612eb6565b5b613e11868287016131d3565b935050602084013567ffffffffffffffff811115613e3257613e31612eb6565b5b613e3e868287016131d3565b925050604084013567ffffffffffffffff811115613e5f57613e5e612eb6565b5b613e6b868287016139f3565b9150509250925092565b600080600060608486031215613e8e57613e8d612eb1565b5b6000613e9c86828701612f97565b9350506020613ead86828701612f97565b925050604084013567ffffffffffffffff811115613ece57613ecd612eb6565b5b613eda86828701613620565b9150509250925092565b600060208284031215613efa57613ef9612eb1565b5b600082013567ffffffffffffffff811115613f1857613f17612eb6565b5b613f24848285016131d3565b91505092915050565b613f3681612ebb565b82525050565b6000602082019050613f516000830184613f2d565b92915050565b600081905092915050565b6000613f6e8385613f57565b9350613f7b838584612e36565b82840190509392505050565b60008160601b9050919050565b6000613f9f82613f87565b9050919050565b6000613fb182613f94565b9050919050565b613fc9613fc4826133f4565b613fa6565b82525050565b6000819050919050565b613fea613fe582613085565b613fcf565b82525050565b6000613ffd828688613f62565b91506140098285613fb8565b6014820191506140198284613fd9565b60208201915081905095945050505050565b600061403682612fec565b6140408185613f57565b9350614050818560208601612ff7565b80840191505092915050565b6000614068828461402b565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6140ab81612f76565b82525050565b60006020820190506140c660008301846140a2565b92915050565b60006040820190506140e160008301856140a2565b6140ee6020830184613406565b9392505050565b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112614121576141206140f5565b5b80840192508235915067ffffffffffffffff821115614143576141426140fa565b5b60208301925060018202360383131561415f5761415e6140ff565b5b509250929050565b6000614174828486613f62565b91508190509392505050565b60006060820190506141956000830186613406565b6141a260208301856140a2565b6141af6040830184613406565b949350505050565b60006040820190506141cc6000830185613406565b6141d960208301846140a2565b9392505050565b60006080820190506141f56000830187613406565b61420260208301866140a2565b61420f6040830185612f4c565b8181036060830152614221818461302a565b905095945050505050565b6000819050602082019050919050565b60007fffffffffffffffffffffffffffffffffffffffff00000000000000000000000082169050919050565b6000614274825161423c565b80915050919050565b600082821b905092915050565b600061429582612fec565b8261429f8461422c565b90506142aa81614268565b925060148210156142ea576142e57fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008360140360080261427d565b831692505b5050919050565b6000819050919050565b61430c61430782612f76565b6142f1565b82525050565b600061431e82856142fb565b60208201915061432e82846142fb565b6020820191508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061438557607f821691505b602082108114156143995761439861433e565b5b50919050565b60006060820190506143b46000830186613406565b6143c16020830185612f4c565b81810360408301526143d3818461302a565b9050949350505050565b600060a0820190506143f26000830188613406565b6143ff6020830187613406565b61440c6040830186613406565b61441960608301856140a2565b818103608083015261442b818461302a565b90509695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061447182613085565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156144a4576144a3614437565b5b600182019050919050565b60006040820190506144c46000830185612f4c565b81810360208301526144d6818461302a565b90509392505050565b60007fffffffffffffffffffff0000000000000000000000000000000000000000000082169050919050565b6000819050919050565b614526614521826144df565b61450b565b82525050565b60007fffff00000000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b61457361456e8261452c565b614558565b82525050565b6000819050919050565b61459461458f8261423c565b614579565b82525050565b60006145a68286614515565b600a820191506145b68285614562565b6002820191506145c68284614583565b601482019150819050949350505050565b60006145e38251612f76565b80915050919050565b60006145f782612fec565b826146018461422c565b905061460c816145d7565b9250602082101561464c576146477fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8360200360080261427d565b831692505b5050919050565b600060408201905061466860008301856140a2565b818103602083015261467a818461302a565b90509392505050565b6000614696614691846135ad565b61311e565b9050828152602081018484840111156146b2576146b16135a8565b5b6146bd848285612ff7565b509392505050565b600082601f8301126146da576146d96130b9565b5b81516146ea848260208601614683565b91505092915050565b60006020828403121561470957614708612eb1565b5b600082015167ffffffffffffffff81111561472757614726612eb6565b5b614733848285016146c5565b91505092915050565b600061474782613085565b915061475283613085565b92508282101561476557614764614437565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea264697066735822122019b4741c1b86ce45d7afc206f1d134cbe9093da1f0722c5c71870cac77dc10b764736f6c634300080c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x5252 CODESIZE SUB DUP1 PUSH3 0x5252 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x893 JUMP JUMPDEST DUP5 DUP5 DUP5 DUP5 DUP5 DUP5 DUP5 DUP5 DUP5 DUP5 DUP5 DUP5 DUP5 DUP5 DUP2 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH3 0xAE JUMPI PUSH1 0x40 MLOAD PUSH32 0x1AD8836C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xC4 DUP2 PUSH3 0x277 PUSH1 0x20 SHL PUSH3 0x1639 OR PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x134 PUSH32 0xEAFEC4D89FA9619884B60000A4D96624A38F7AC2D8D9A604ECF07C12C77E480C PUSH1 0x0 SHL PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0xA4D9662400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH3 0x378 PUSH1 0x20 SHL PUSH3 0x1731 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x16E PUSH32 0xDEBA1E292F8BA88238E10AB3C7F88BD4BE4FAC56CAD5194B6ECCEAF653468AF1 PUSH1 0x0 SHL DUP6 PUSH3 0x378 PUSH1 0x20 SHL PUSH3 0x1731 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1A8 PUSH32 0x2F0A68AB07768E01943A599E73362A0E17A63A72E94DD2E384D2C1D4DB932756 PUSH1 0x0 SHL DUP5 PUSH3 0x378 PUSH1 0x20 SHL PUSH3 0x1731 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x203 PUSH32 0xE0261FA95DB2EB3B5439BD033CDA66D56B96F92F243A8228FD87550ED7BDFDB3 PUSH1 0x0 SHL DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x1E3 SWAP2 SWAP1 PUSH3 0x96A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH3 0x378 PUSH1 0x20 SHL PUSH3 0x1731 OR PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP PUSH3 0x262 PUSH32 0xF675E9361AF1C1664C1868CFA3EB97672D6B1A513AA5B81DEC34C9EE330E818D PUSH1 0x0 SHL DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x242 SWAP2 SWAP1 PUSH3 0x96A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH3 0x3E0 PUSH1 0x20 SHL PUSH3 0x1795 OR PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP PUSH3 0xA6D JUMP JUMPDEST PUSH3 0x287 PUSH3 0x3FB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x375 JUMPI DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x3A1 SWAP3 SWAP2 SWAP1 PUSH3 0x5A6 JUMP JUMPDEST POP DUP2 PUSH32 0xECE574603820D07BC9B91F2A932BAADF4628AABCB8AFBA49776529C14A6104B2 DUP3 PUSH1 0x40 MLOAD PUSH3 0x3D4 SWAP2 SWAP1 PUSH3 0x9E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH3 0x3F7 DUP3 DUP3 PUSH3 0x424 PUSH1 0x20 SHL PUSH3 0x17A3 OR PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0xDEBA1E292F8BA88238E10AB3C7F88BD4BE4FAC56CAD5194B6ECCEAF653468AF1 PUSH1 0x0 SHL DUP3 EQ ISZERO PUSH3 0x482 JUMPI PUSH1 0x40 MLOAD PUSH32 0x85C169BD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x2F0A68AB07768E01943A599E73362A0E17A63A72E94DD2E384D2C1D4DB932756 PUSH1 0x0 SHL DUP3 EQ ISZERO PUSH3 0x4E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x76755B3800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xE0261FA95DB2EB3B5439BD033CDA66D56B96F92F243A8228FD87550ED7BDFDB3 PUSH1 0x0 SHL DUP3 EQ ISZERO PUSH3 0x53E JUMPI PUSH1 0x40 MLOAD PUSH32 0x4EF6D7FB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x567 SWAP3 SWAP2 SWAP1 PUSH3 0x5A6 JUMP JUMPDEST POP DUP2 PUSH32 0xECE574603820D07BC9B91F2A932BAADF4628AABCB8AFBA49776529C14A6104B2 DUP3 PUSH1 0x40 MLOAD PUSH3 0x59A SWAP2 SWAP1 PUSH3 0x9E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x5B4 SWAP1 PUSH3 0xA37 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x5D8 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x624 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x5F3 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x624 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x624 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x623 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x606 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x633 SWAP2 SWAP1 PUSH3 0x637 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x652 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x638 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x6BF DUP3 PUSH3 0x674 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x6E1 JUMPI PUSH3 0x6E0 PUSH3 0x685 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6F6 PUSH3 0x656 JUMP JUMPDEST SWAP1 POP PUSH3 0x704 DUP3 DUP3 PUSH3 0x6B4 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x727 JUMPI PUSH3 0x726 PUSH3 0x685 JUMP JUMPDEST JUMPDEST PUSH3 0x732 DUP3 PUSH3 0x674 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x75F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x742 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x76F JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x78C PUSH3 0x786 DUP5 PUSH3 0x709 JUMP JUMPDEST PUSH3 0x6EA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x7AB JUMPI PUSH3 0x7AA PUSH3 0x66F JUMP JUMPDEST JUMPDEST PUSH3 0x7B8 DUP5 DUP3 DUP6 PUSH3 0x73F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x7D8 JUMPI PUSH3 0x7D7 PUSH3 0x66A JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x7EA DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x775 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x820 DUP3 PUSH3 0x7F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x832 DUP2 PUSH3 0x813 JUMP JUMPDEST DUP2 EQ PUSH3 0x83E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x852 DUP2 PUSH3 0x827 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x86D DUP2 PUSH3 0x858 JUMP JUMPDEST DUP2 EQ PUSH3 0x879 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x88D DUP2 PUSH3 0x862 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0x8B2 JUMPI PUSH3 0x8B1 PUSH3 0x660 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP7 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x8D3 JUMPI PUSH3 0x8D2 PUSH3 0x665 JUMP JUMPDEST JUMPDEST PUSH3 0x8E1 DUP9 DUP3 DUP10 ADD PUSH3 0x7C0 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x905 JUMPI PUSH3 0x904 PUSH3 0x665 JUMP JUMPDEST JUMPDEST PUSH3 0x913 DUP9 DUP3 DUP10 ADD PUSH3 0x7C0 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH3 0x926 DUP9 DUP3 DUP10 ADD PUSH3 0x841 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH3 0x939 DUP9 DUP3 DUP10 ADD PUSH3 0x87C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH3 0x94C DUP9 DUP3 DUP10 ADD PUSH3 0x87C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH3 0x964 DUP2 PUSH3 0x858 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x981 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x959 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x9B0 DUP3 PUSH3 0x987 JUMP JUMPDEST PUSH3 0x9BC DUP2 DUP6 PUSH3 0x992 JUMP JUMPDEST SWAP4 POP PUSH3 0x9CE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x73F JUMP JUMPDEST PUSH3 0x9D9 DUP2 PUSH3 0x674 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0xA00 DUP2 DUP5 PUSH3 0x9A3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0xA50 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0xA67 JUMPI PUSH3 0xA66 PUSH3 0xA08 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x47D5 DUP1 PUSH3 0xA7D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7E87632C GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xAF255B61 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xAF255B61 EQ PUSH2 0x5B4 JUMPI DUP1 PUSH4 0xBE9F0E6F EQ PUSH2 0x5DD JUMPI DUP1 PUSH4 0xD6C1407C EQ PUSH2 0x606 JUMPI DUP1 PUSH4 0xDB8C9663 EQ PUSH2 0x62F JUMPI DUP1 PUSH4 0xDEDFF9C6 EQ PUSH2 0x658 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x695 JUMPI PUSH2 0x1CA JUMP JUMPDEST DUP1 PUSH4 0x7E87632C EQ PUSH2 0x4C2 JUMPI DUP1 PUSH4 0x7F23690C EQ PUSH2 0x4EB JUMPI DUP1 PUSH4 0x86A10DDD EQ PUSH2 0x507 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x530 JUMPI DUP1 PUSH4 0x97902421 EQ PUSH2 0x55B JUMPI DUP1 PUSH4 0xA3B261F2 EQ PUSH2 0x577 JUMPI PUSH2 0x1CA JUMP JUMPDEST DUP1 PUSH4 0x49A6078D GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x49A6078D EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0x511B6952 EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0x54F6127F EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0x6963D438 EQ PUSH2 0x431 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x46E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4AB JUMPI PUSH2 0x1CA JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x16E023B3 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x1D26FCE6 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x217B2270 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x2A3654A4 EQ PUSH2 0x351 JUMPI PUSH2 0x1CA JUMP JUMPDEST CALLDATASIZE PUSH2 0x1CA JUMPI PUSH1 0x0 CALLVALUE EQ ISZERO PUSH2 0x198 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE5099EE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18F SWAP1 PUSH2 0x2E16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x61F4944200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLDATASIZE PUSH1 0x60 PUSH1 0x4 PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO PUSH2 0x21B JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE5099EE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x212 SWAP3 SWAP2 SWAP1 PUSH2 0x2E83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x225 DUP4 DUP4 PUSH2 0x6BE JUMP JUMPDEST SWAP1 POP SWAP2 POP POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x259 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x2F13 JUMP JUMPDEST PUSH2 0x83D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x2F5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x296 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x2FAC JUMP JUMPDEST PUSH2 0x8AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x3063 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x8C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0x309E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x3201 JUMP JUMPDEST PUSH2 0x8CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x3385 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x336 SWAP2 SWAP1 PUSH2 0x33A7 JUMP JUMPDEST PUSH2 0x999 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x3415 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x378 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x373 SWAP2 SWAP1 PUSH2 0x345C JUMP JUMPDEST PUSH2 0xA4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x385 SWAP2 SWAP1 PUSH2 0x2F5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x33A7 JUMP JUMPDEST PUSH2 0xA6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C2 SWAP2 SWAP1 PUSH2 0x355A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3ED SWAP2 SWAP1 PUSH2 0x364E JUMP JUMPDEST PUSH2 0xA97 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x400 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x416 SWAP2 SWAP1 PUSH2 0x33A7 JUMP JUMPDEST PUSH2 0xAF8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x428 SWAP2 SWAP1 PUSH2 0x3063 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x458 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x453 SWAP2 SWAP1 PUSH2 0x3740 JUMP JUMPDEST PUSH2 0xB0A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x465 SWAP2 SWAP1 PUSH2 0x3385 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x495 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x490 SWAP2 SWAP1 PUSH2 0x378D JUMP JUMPDEST PUSH2 0xC86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A2 SWAP2 SWAP1 PUSH2 0x309E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C0 PUSH2 0xCD6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E4 SWAP2 SWAP1 PUSH2 0x3A21 JUMP JUMPDEST PUSH2 0xCEA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x505 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x500 SWAP2 SWAP1 PUSH2 0x3B28 JUMP JUMPDEST PUSH2 0xDFE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x513 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x52E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x529 SWAP2 SWAP1 PUSH2 0x3B84 JUMP JUMPDEST PUSH2 0xE4E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x545 PUSH2 0x10AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x552 SWAP2 SWAP1 PUSH2 0x3415 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x575 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x570 SWAP2 SWAP1 PUSH2 0x3BF3 JUMP JUMPDEST PUSH2 0x10D5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x599 SWAP2 SWAP1 PUSH2 0x378D JUMP JUMPDEST PUSH2 0x11E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5AB SWAP2 SWAP1 PUSH2 0x3D29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D6 SWAP2 SWAP1 PUSH2 0x3D4B JUMP JUMPDEST PUSH2 0x1238 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x604 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5FF SWAP2 SWAP1 PUSH2 0x3DCE JUMP JUMPDEST PUSH2 0x1252 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x612 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x62D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x628 SWAP2 SWAP1 PUSH2 0x3E75 JUMP JUMPDEST PUSH2 0x1356 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x656 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x651 SWAP2 SWAP1 PUSH2 0x3D4B JUMP JUMPDEST PUSH2 0x136E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x664 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x67F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x67A SWAP2 SWAP1 PUSH2 0x3EE4 JUMP JUMPDEST PUSH2 0x150D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x68C SWAP2 SWAP1 PUSH2 0x3385 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6B7 SWAP2 SWAP1 PUSH2 0x378D JUMP JUMPDEST PUSH2 0x15BE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x6EF PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x191E JUMP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x788 JUMPI PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH1 0x40 MLOAD PUSH32 0xBB370B2B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77F SWAP2 SWAP1 PUSH2 0x3F3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLVALUE DUP8 DUP8 CALLER CALLVALUE PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7BA SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3FF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x7D6 SWAP2 SWAP1 PUSH2 0x405C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x813 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x818 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x82E JUMPI DUP1 SWAP4 POP POP POP POP PUSH2 0x837 JUMP JUMPDEST DUP1 MLOAD DUP1 PUSH1 0x20 DUP4 ADD REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x3A271706 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x897 JUMPI POP PUSH2 0x896 DUP3 PUSH2 0x19D8 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x8A7 JUMPI POP PUSH2 0x8A6 DUP3 PUSH2 0x1A39 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x8BA DUP4 DUP4 PUSH2 0x1AA1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8E9 JUMPI PUSH2 0x8E8 PUSH2 0x30BE JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x91C JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x907 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x992 JUMPI PUSH2 0x969 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x941 JUMPI PUSH2 0x940 PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x95C JUMPI PUSH2 0x95B PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1AA1 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x97C JUMPI PUSH2 0x97B PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x922 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA44 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xAE8F9A3600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3B SWAP2 SWAP1 PUSH2 0x40B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA58 DUP3 PUSH2 0x1B6F JUMP JUMPDEST PUSH2 0xA62 DUP4 DUP4 PUSH2 0x1BBC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA75 DUP3 PUSH2 0x1B6F JUMP JUMPDEST PUSH2 0xA90 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1C29 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAA1 CALLER DUP5 PUSH2 0x1BBC JUMP JUMPDEST PUSH2 0xAE4 JUMPI DUP3 CALLER PUSH1 0x40 MLOAD PUSH32 0x1294D2A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xADB SWAP3 SWAP2 SWAP1 PUSH2 0x40CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAF1 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1C4A JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB03 DUP3 PUSH2 0x1F6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP3 DUP3 SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB29 JUMPI PUSH2 0xB28 PUSH2 0x30BE JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB5C JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xB47 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0xC7F JUMPI PUSH1 0x0 DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0xB9A JUMPI PUSH2 0xB99 PUSH2 0x4073 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0xBAC SWAP2 SWAP1 PUSH2 0x4104 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBBA SWAP3 SWAP2 SWAP1 PUSH2 0x4167 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xBF5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBFA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0xC53 JUMPI PUSH1 0x0 DUP2 MLOAD EQ PUSH2 0xC16 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH32 0x234EB81900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC4A SWAP2 SWAP1 PUSH2 0x309E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xC67 JUMPI PUSH2 0xC66 PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP3 PUSH1 0x1 ADD SWAP3 POP POP POP PUSH2 0xB62 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCCF PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2014 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCDE PUSH2 0x2029 JUMP JUMPDEST PUSH2 0xCE8 PUSH1 0x0 PUSH2 0x1639 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP6 MLOAD SWAP1 POP DUP5 MLOAD DUP2 EQ ISZERO DUP1 PUSH2 0xD01 JUMPI POP DUP4 MLOAD DUP2 EQ ISZERO JUMPDEST DUP1 PUSH2 0xD0D JUMPI POP DUP3 MLOAD DUP2 EQ ISZERO JUMPDEST DUP1 PUSH2 0xD19 JUMPI POP DUP2 MLOAD DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0xD50 JUMPI PUSH1 0x40 MLOAD PUSH32 0x93A8311900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xDF5 JUMPI PUSH2 0xDEA DUP8 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD71 JUMPI PUSH2 0xD70 PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xD8C JUMPI PUSH2 0xD8B PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xDA7 JUMPI PUSH2 0xDA6 PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xDC2 JUMPI PUSH2 0xDC1 PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0xDDD JUMPI PUSH2 0xDDC PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xA97 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0xD53 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE06 PUSH2 0x2029 JUMP JUMPDEST PUSH1 0x0 CALLVALUE EQ PUSH2 0xE40 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF36BA73700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE4A DUP3 DUP3 PUSH2 0x20A2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE59 DUP4 PUSH2 0x999 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xECF JUMPI DUP1 DUP4 CALLER PUSH1 0x40 MLOAD PUSH32 0x5B271EA200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEC6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4180 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF36 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9577B8B300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF9C JUMPI PUSH1 0x40 MLOAD PUSH32 0x89FDAD6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFC3 DUP6 PUSH1 0x5 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x210D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1009 JUMPI DUP5 DUP5 PUSH1 0x40 MLOAD PUSH32 0xA7626B6800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1000 SWAP3 SWAP2 SWAP1 PUSH2 0x41B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1B1B58AA2EC0CEC2228B2D37124556D41F5A1F7B12F089171F896CC236671215 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1067 SWAP2 SWAP1 PUSH2 0x3063 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x0 CALLER DUP6 PUSH1 0x1 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1089 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x41E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x10A4 DUP7 DUP3 PUSH2 0x213D JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x10DD PUSH2 0x2029 JUMP JUMPDEST PUSH1 0x0 CALLVALUE EQ PUSH2 0x1117 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF36BA73700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x1152 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3BCC897900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ ISZERO PUSH2 0x118E JUMPI PUSH1 0x40 MLOAD PUSH32 0x97DA5F9500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x11E3 JUMPI PUSH2 0x11D8 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x11B0 JUMPI PUSH2 0x11AF PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x11CB JUMPI PUSH2 0x11CA PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x20A2 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1191 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1231 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x216F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1240 PUSH2 0x2029 JUMP JUMPDEST PUSH2 0x124C DUP5 DUP5 DUP5 DUP5 PUSH2 0x2190 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x125A PUSH2 0x2029 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ ISZERO DUP1 PUSH2 0x126D JUMPI POP DUP1 MLOAD DUP3 MLOAD EQ ISZERO JUMPDEST ISZERO PUSH2 0x12A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2FA71DFE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD EQ ISZERO PUSH2 0x12E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x80C9830500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1350 JUMPI PUSH2 0x1345 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1302 JUMPI PUSH2 0x1301 PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x131D JUMPI PUSH2 0x131C PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1338 JUMPI PUSH2 0x1337 PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x23C0 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x12E3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x135E PUSH2 0x2029 JUMP JUMPDEST PUSH2 0x1369 DUP4 DUP4 DUP4 PUSH2 0x23C0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1379 DUP5 PUSH2 0x999 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13EF JUMPI DUP1 DUP5 CALLER PUSH1 0x40 MLOAD PUSH32 0x5B271EA200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4180 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1456 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9577B8B300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x14BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x89FDAD6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14C9 DUP6 DUP3 DUP7 DUP7 DUP7 PUSH2 0x244E JUMP JUMPDEST DUP3 ISZERO PUSH2 0x1506 JUMPI PUSH1 0x0 CALLER DUP6 PUSH1 0x0 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x14E9 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x41E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x1504 DUP7 DUP3 PUSH2 0x213D JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x152A JUMPI PUSH2 0x1529 PUSH2 0x30BE JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x155D JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1548 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x15B8 JUMPI PUSH2 0x158F DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1582 JUMPI PUSH2 0x1581 PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1F6F JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x15A2 JUMPI PUSH2 0x15A1 PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1563 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15C6 PUSH2 0x2029 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x162D JUMPI PUSH1 0x40 MLOAD PUSH32 0x1AD8836C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1636 DUP2 PUSH2 0x1639 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1641 PUSH2 0x10AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x172E JUMPI DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1758 SWAP3 SWAP2 SWAP1 PUSH2 0x2D36 JUMP JUMPDEST POP DUP2 PUSH32 0xECE574603820D07BC9B91F2A932BAADF4628AABCB8AFBA49776529C14A6104B2 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1789 SWAP2 SWAP1 PUSH2 0x3063 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x179F DUP3 DUP3 PUSH2 0x17A3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0xDEBA1E292F8BA88238E10AB3C7F88BD4BE4FAC56CAD5194B6ECCEAF653468AF1 PUSH1 0x0 SHL DUP3 EQ ISZERO PUSH2 0x1800 JUMPI PUSH1 0x40 MLOAD PUSH32 0x85C169BD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x2F0A68AB07768E01943A599E73362A0E17A63A72E94DD2E384D2C1D4DB932756 PUSH1 0x0 SHL DUP3 EQ ISZERO PUSH2 0x185D JUMPI PUSH1 0x40 MLOAD PUSH32 0x76755B3800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xE0261FA95DB2EB3B5439BD033CDA66D56B96F92F243A8228FD87550ED7BDFDB3 PUSH1 0x0 SHL DUP3 EQ ISZERO PUSH2 0x18BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x4EF6D7FB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x18E1 SWAP3 SWAP2 SWAP1 PUSH2 0x2D36 JUMP JUMPDEST POP DUP2 PUSH32 0xECE574603820D07BC9B91F2A932BAADF4628AABCB8AFBA49776529C14A6104B2 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1912 SWAP2 SWAP1 PUSH2 0x3063 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1959 PUSH10 0xCEE78B4094DA86011096 PUSH1 0xB0 SHL DUP6 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH2 0x252B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1966 DUP3 PUSH2 0x1F6F JUMP JUMPDEST SWAP1 POP PUSH1 0x14 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x197C JUMPI POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO JUMPDEST ISZERO PUSH2 0x19BE JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x42BFE79F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19B5 SWAP2 SWAP1 PUSH2 0x3063 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x19C8 SWAP1 PUSH2 0x428A JUMP JUMPDEST PUSH1 0x60 SHR PUSH1 0x1 SWAP4 POP SWAP4 POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xA918FA6B PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x1A32 JUMPI POP PUSH2 0x1A31 DUP3 PUSH2 0x256B JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1A4C PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH2 0x191E JUMP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1A8E JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x1A9C JUMP JUMPDEST PUSH2 0x1A98 DUP2 DUP5 PUSH2 0x25CC JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x0 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1ABA SWAP3 SWAP2 SWAP1 PUSH2 0x4312 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x1AE9 SWAP1 PUSH2 0x436D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1B15 SWAP1 PUSH2 0x436D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B62 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1B37 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B62 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B45 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B78 DUP2 PUSH2 0x268B JUMP JUMPDEST PUSH2 0x1BB9 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAE8F9A3600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BB0 SWAP2 SWAP1 PUSH2 0x40B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BC7 DUP3 PUSH2 0x999 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1C21 JUMPI POP PUSH2 0x1C20 DUP4 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x26F7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1C39 DUP4 PUSH1 0x0 ADD PUSH2 0x2727 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 DUP2 SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1CB0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5D67D6C100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1CBB DUP5 PUSH2 0x999 JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D31 JUMPI DUP1 DUP5 DUP8 PUSH1 0x40 MLOAD PUSH32 0x5B271EA200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D28 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4180 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1D98 JUMPI PUSH1 0x40 MLOAD PUSH32 0x24ECEF4D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1DA4 DUP7 DUP7 DUP7 DUP6 PUSH2 0x2783 JUMP JUMPDEST PUSH2 0x1DAD DUP5 PUSH2 0x999 JUMP JUMPDEST SWAP1 POP PUSH2 0x1DB9 DUP7 DUP6 PUSH2 0x2789 JUMP JUMPDEST PUSH2 0x1E0A DUP5 PUSH1 0x4 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x27FF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x1E5C DUP5 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2816 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP DUP5 PUSH1 0x3 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB333C813A7426A7A11E2B190CAD52C44119421594B47F6F32ACE6D8C7207B2BF CALLER DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1F11 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x439F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1F25 DUP7 DUP7 DUP7 DUP6 PUSH2 0x282D JUMP JUMPDEST PUSH1 0x0 CALLER DUP8 DUP8 DUP8 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1F40 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x43DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x1F5B DUP8 DUP3 PUSH2 0x2833 JUMP JUMPDEST PUSH2 0x1F66 DUP7 DUP6 DUP4 PUSH2 0x2865 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x1F8F SWAP1 PUSH2 0x436D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1FBB SWAP1 PUSH2 0x436D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2008 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FDD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2008 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1FEB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2022 DUP3 PUSH1 0x0 ADD PUSH2 0x29CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2048 PUSH2 0x10AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x20A0 JUMPI CALLER PUSH1 0x40 MLOAD PUSH32 0xBF1169C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2097 SWAP2 SWAP1 PUSH2 0x3415 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH32 0xF675E9361AF1C1664C1868CFA3EB97672D6B1A513AA5B81DEC34C9EE330E818D PUSH1 0x0 SHL DUP3 EQ ISZERO PUSH2 0x20FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x3664800A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2109 DUP3 DUP3 PUSH2 0x1795 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2135 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x29DC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x216B DUP3 PUSH32 0x8A1C15A8799F71B547E08E2BCB2E85257E81B0A07EEE2CE6712549EEF1F00970 PUSH1 0x0 SHL DUP4 PUSH2 0x2A4C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x217F DUP4 PUSH1 0x0 ADD PUSH2 0x2727 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 DUP2 SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x21F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x24ECEF4D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2204 PUSH1 0x0 DUP6 DUP6 DUP5 PUSH2 0x2783 JUMP JUMPDEST PUSH2 0x220D DUP4 PUSH2 0x268B JUMP JUMPDEST ISZERO PUSH2 0x224F JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x34C7B51100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2246 SWAP2 SWAP1 PUSH2 0x40B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD PUSH2 0x225E SWAP1 PUSH2 0x4466 JUMP JUMPDEST SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH2 0x22B6 DUP4 PUSH1 0x4 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2816 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP DUP4 PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB333C813A7426A7A11E2B190CAD52C44119421594B47F6F32ACE6D8C7207B2BF CALLER DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x236C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x439F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x2381 PUSH1 0x0 DUP6 DUP6 DUP5 PUSH2 0x282D JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x0 DUP7 DUP7 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x239D SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x43DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x23B9 DUP6 DUP5 DUP4 PUSH2 0x2865 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x23D8 SWAP3 SWAP2 SWAP1 PUSH2 0x4312 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x240F SWAP3 SWAP2 SWAP1 PUSH2 0x2D36 JUMP JUMPDEST POP DUP2 DUP4 PUSH32 0xA6E4251F855F750545FE414F120DB91C76B88DEF14D120969E5BB2D3F05DEBBB DUP4 PUSH1 0x40 MLOAD PUSH2 0x2441 SWAP2 SWAP1 PUSH2 0x3063 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2475 DUP7 PUSH1 0x5 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2B0B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x24BB JUMPI DUP6 DUP5 PUSH1 0x40 MLOAD PUSH32 0x4AA31A8C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24B2 SWAP3 SWAP2 SWAP1 PUSH2 0x41B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC78CD419D6136F9F1C1C6AEC1D3FAE098CFFAF8BC86314A8F2685E32FE574E3C DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x251B SWAP3 SWAP2 SWAP1 PUSH2 0x44AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x0 PUSH1 0xF0 SHL DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2547 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x459A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 PUSH2 0x2562 SWAP1 PUSH2 0x45EC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x629AA694 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x25C5 JUMPI POP PUSH2 0x25C4 DUP3 PUSH2 0x2B3B JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP4 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x25E8 SWAP2 SWAP1 PUSH2 0x3F3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 PUSH1 0x0 DUP6 MLOAD PUSH1 0x20 DUP8 ADD DUP11 PUSH2 0x7530 STATICCALL SWAP3 POP RETURNDATASIZE SWAP2 POP PUSH1 0x0 MLOAD SWAP1 POP DUP3 DUP1 ISZERO PUSH2 0x2673 JUMPI POP PUSH1 0x20 DUP3 LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x267F JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x271F DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x2BA5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x2777 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x2763 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x27AB DUP3 PUSH2 0x2BC8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x27F7 JUMPI PUSH2 0x27CD PUSH1 0x0 DUP6 PUSH2 0x2BDD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0x27EC DUP3 DUP8 DUP8 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x244E JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x27B1 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x280E DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x2BF7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2825 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x29DC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2861 DUP3 PUSH32 0xB23EAE7E6D1564B295B4C3E3BE402D9A2F0776C57BDF365903496F6FA481AB00 PUSH1 0x0 SHL DUP4 PUSH2 0x2A4C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x2876 DUP4 PUSH4 0x6BB56A14 PUSH1 0xE0 SHL PUSH2 0x25CC JUMP JUMPDEST ISZERO PUSH2 0x2927 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6BB56A14 PUSH32 0xB084A55EBF70FD3C06FD755269DAC2212C4D3F0F4D09079780BFA50C1B2984D PUSH1 0x0 SHL DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28D9 SWAP3 SWAP2 SWAP1 PUSH2 0x4653 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x28F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2921 SWAP2 SWAP1 PUSH2 0x46F3 JUMP JUMPDEST POP PUSH2 0x29C6 JUMP JUMPDEST DUP2 PUSH2 0x29C5 JUMPI PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ PUSH2 0x2988 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x4349776D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x297F SWAP2 SWAP1 PUSH2 0x3415 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH32 0x317313700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29BC SWAP2 SWAP1 PUSH2 0x3415 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29E8 DUP4 DUP4 PUSH2 0x2BA5 JUMP JUMPDEST PUSH2 0x2A41 JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x2A46 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A7C PUSH4 0x6BB56A14 PUSH1 0xE0 SHL DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x25CC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x2B06 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6BB56A14 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2ABC SWAP3 SWAP2 SWAP1 PUSH2 0x4653 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2ADB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B04 SWAP2 SWAP1 PUSH2 0x46F3 JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B33 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x2BF7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BD6 DUP3 PUSH1 0x0 ADD PUSH2 0x29CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BEC DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x2D0B JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x2CFF JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x2C29 SWAP2 SWAP1 PUSH2 0x473C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x2C41 SWAP2 SWAP1 PUSH2 0x473C JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x2CB0 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2C62 JUMPI PUSH2 0x2C61 PUSH2 0x4073 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2C86 JUMPI PUSH2 0x2C85 PUSH2 0x4073 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x2CC4 JUMPI PUSH2 0x2CC3 PUSH2 0x4770 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x2D05 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2D23 JUMPI PUSH2 0x2D22 PUSH2 0x4073 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x2D42 SWAP1 PUSH2 0x436D JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x2D64 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x2DAB JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x2D7D JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x2DAB JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x2DAB JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2DAA JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2D8F JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x2DB8 SWAP2 SWAP1 PUSH2 0x2DBC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2DD5 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x2DBD JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E00 PUSH1 0x4 DUP4 PUSH2 0x2DD9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E0B DUP3 PUSH2 0x2DEA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E2F DUP2 PUSH2 0x2DF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E62 DUP4 DUP6 PUSH2 0x2DD9 JUMP JUMPDEST SWAP4 POP PUSH2 0x2E6F DUP4 DUP6 DUP5 PUSH2 0x2E36 JUMP JUMPDEST PUSH2 0x2E78 DUP4 PUSH2 0x2E45 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E9E DUP2 DUP5 DUP7 PUSH2 0x2E56 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2EF0 DUP2 PUSH2 0x2EBB JUMP JUMPDEST DUP2 EQ PUSH2 0x2EFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2F0D DUP2 PUSH2 0x2EE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F29 JUMPI PUSH2 0x2F28 PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F37 DUP5 DUP3 DUP6 ADD PUSH2 0x2EFE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F55 DUP2 PUSH2 0x2F40 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2F70 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2F4C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F89 DUP2 PUSH2 0x2F76 JUMP JUMPDEST DUP2 EQ PUSH2 0x2F94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2FA6 DUP2 PUSH2 0x2F80 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2FC3 JUMPI PUSH2 0x2FC2 PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2FD1 DUP6 DUP3 DUP7 ADD PUSH2 0x2F97 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2FE2 DUP6 DUP3 DUP7 ADD PUSH2 0x2F97 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3015 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2FFA JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3024 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3035 DUP3 PUSH2 0x2FEC JUMP JUMPDEST PUSH2 0x303F DUP2 DUP6 PUSH2 0x2DD9 JUMP JUMPDEST SWAP4 POP PUSH2 0x304F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2FF7 JUMP JUMPDEST PUSH2 0x3058 DUP2 PUSH2 0x2E45 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x307D DUP2 DUP5 PUSH2 0x302A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3098 DUP2 PUSH2 0x3085 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x30B3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x308F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x30F6 DUP3 PUSH2 0x2E45 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3115 JUMPI PUSH2 0x3114 PUSH2 0x30BE JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3128 PUSH2 0x2EA7 JUMP JUMPDEST SWAP1 POP PUSH2 0x3134 DUP3 DUP3 PUSH2 0x30ED JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3154 JUMPI PUSH2 0x3153 PUSH2 0x30BE JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x317D PUSH2 0x3178 DUP5 PUSH2 0x3139 JUMP JUMPDEST PUSH2 0x311E JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x31A0 JUMPI PUSH2 0x319F PUSH2 0x3165 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x31C9 JUMPI DUP1 PUSH2 0x31B5 DUP9 DUP3 PUSH2 0x2F97 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x31A2 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x31E8 JUMPI PUSH2 0x31E7 PUSH2 0x30B9 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x31F8 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x316A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3218 JUMPI PUSH2 0x3217 PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3236 JUMPI PUSH2 0x3235 PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3242 DUP6 DUP3 DUP7 ADD PUSH2 0x31D3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3263 JUMPI PUSH2 0x3262 PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x326F DUP6 DUP3 DUP7 ADD PUSH2 0x31D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32C1 DUP3 PUSH2 0x2FEC JUMP JUMPDEST PUSH2 0x32CB DUP2 DUP6 PUSH2 0x32A5 JUMP JUMPDEST SWAP4 POP PUSH2 0x32DB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2FF7 JUMP JUMPDEST PUSH2 0x32E4 DUP2 PUSH2 0x2E45 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32FB DUP4 DUP4 PUSH2 0x32B6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x331B DUP3 PUSH2 0x3279 JUMP JUMPDEST PUSH2 0x3325 DUP2 DUP6 PUSH2 0x3284 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x3337 DUP6 PUSH2 0x3295 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3373 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x3354 DUP6 DUP3 PUSH2 0x32EF JUMP JUMPDEST SWAP5 POP PUSH2 0x335F DUP4 PUSH2 0x3303 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x333B JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x339F DUP2 DUP5 PUSH2 0x3310 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33BD JUMPI PUSH2 0x33BC PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x33CB DUP5 DUP3 DUP6 ADD PUSH2 0x2F97 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33FF DUP3 PUSH2 0x33D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x340F DUP2 PUSH2 0x33F4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x342A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3406 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3439 DUP2 PUSH2 0x33F4 JUMP JUMPDEST DUP2 EQ PUSH2 0x3444 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3456 DUP2 PUSH2 0x3430 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3473 JUMPI PUSH2 0x3472 PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3481 DUP6 DUP3 DUP7 ADD PUSH2 0x3447 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3492 DUP6 DUP3 DUP7 ADD PUSH2 0x2F97 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x34D1 DUP2 PUSH2 0x33F4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34E3 DUP4 DUP4 PUSH2 0x34C8 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3507 DUP3 PUSH2 0x349C JUMP JUMPDEST PUSH2 0x3511 DUP2 DUP6 PUSH2 0x34A7 JUMP JUMPDEST SWAP4 POP PUSH2 0x351C DUP4 PUSH2 0x34B8 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x354D JUMPI DUP2 MLOAD PUSH2 0x3534 DUP9 DUP3 PUSH2 0x34D7 JUMP JUMPDEST SWAP8 POP PUSH2 0x353F DUP4 PUSH2 0x34EF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3520 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3574 DUP2 DUP5 PUSH2 0x34FC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3585 DUP2 PUSH2 0x2F40 JUMP JUMPDEST DUP2 EQ PUSH2 0x3590 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x35A2 DUP2 PUSH2 0x357C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x35C8 JUMPI PUSH2 0x35C7 PUSH2 0x30BE JUMP JUMPDEST JUMPDEST PUSH2 0x35D1 DUP3 PUSH2 0x2E45 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35F1 PUSH2 0x35EC DUP5 PUSH2 0x35AD JUMP JUMPDEST PUSH2 0x311E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x360D JUMPI PUSH2 0x360C PUSH2 0x35A8 JUMP JUMPDEST JUMPDEST PUSH2 0x3618 DUP5 DUP3 DUP6 PUSH2 0x2E36 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3635 JUMPI PUSH2 0x3634 PUSH2 0x30B9 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3645 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x35DE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x366A JUMPI PUSH2 0x3669 PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3678 DUP9 DUP3 DUP10 ADD PUSH2 0x3447 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x3689 DUP9 DUP3 DUP10 ADD PUSH2 0x3447 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x369A DUP9 DUP3 DUP10 ADD PUSH2 0x2F97 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x36AB DUP9 DUP3 DUP10 ADD PUSH2 0x3593 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x36CC JUMPI PUSH2 0x36CB PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x36D8 DUP9 DUP3 DUP10 ADD PUSH2 0x3620 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x3700 JUMPI PUSH2 0x36FF PUSH2 0x30B9 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x371D JUMPI PUSH2 0x371C PUSH2 0x36E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x3739 JUMPI PUSH2 0x3738 PUSH2 0x3165 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3757 JUMPI PUSH2 0x3756 PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3775 JUMPI PUSH2 0x3774 PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3781 DUP6 DUP3 DUP7 ADD PUSH2 0x36EA JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37A3 JUMPI PUSH2 0x37A2 PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x37B1 DUP5 DUP3 DUP6 ADD PUSH2 0x3447 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x37D5 JUMPI PUSH2 0x37D4 PUSH2 0x30BE JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37F9 PUSH2 0x37F4 DUP5 PUSH2 0x37BA JUMP JUMPDEST PUSH2 0x311E JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x381C JUMPI PUSH2 0x381B PUSH2 0x3165 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3845 JUMPI DUP1 PUSH2 0x3831 DUP9 DUP3 PUSH2 0x3447 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x381E JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3864 JUMPI PUSH2 0x3863 PUSH2 0x30B9 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3874 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x37E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3898 JUMPI PUSH2 0x3897 PUSH2 0x30BE JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38BC PUSH2 0x38B7 DUP5 PUSH2 0x387D JUMP JUMPDEST PUSH2 0x311E JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x38DF JUMPI PUSH2 0x38DE PUSH2 0x3165 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3908 JUMPI DUP1 PUSH2 0x38F4 DUP9 DUP3 PUSH2 0x3593 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x38E1 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3927 JUMPI PUSH2 0x3926 PUSH2 0x30B9 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3937 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x38A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x395B JUMPI PUSH2 0x395A PUSH2 0x30BE JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x397F PUSH2 0x397A DUP5 PUSH2 0x3940 JUMP JUMPDEST PUSH2 0x311E JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x39A2 JUMPI PUSH2 0x39A1 PUSH2 0x3165 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x39E9 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x39C7 JUMPI PUSH2 0x39C6 PUSH2 0x30B9 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x39D4 DUP10 DUP3 PUSH2 0x3620 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x39A4 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3A08 JUMPI PUSH2 0x3A07 PUSH2 0x30B9 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3A18 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x396C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3A3D JUMPI PUSH2 0x3A3C PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3A5B JUMPI PUSH2 0x3A5A PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3A67 DUP9 DUP3 DUP10 ADD PUSH2 0x384F JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3A88 JUMPI PUSH2 0x3A87 PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3A94 DUP9 DUP3 DUP10 ADD PUSH2 0x384F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3AB5 JUMPI PUSH2 0x3AB4 PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3AC1 DUP9 DUP3 DUP10 ADD PUSH2 0x31D3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3AE2 JUMPI PUSH2 0x3AE1 PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3AEE DUP9 DUP3 DUP10 ADD PUSH2 0x3912 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3B0F JUMPI PUSH2 0x3B0E PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3B1B DUP9 DUP3 DUP10 ADD PUSH2 0x39F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3B3F JUMPI PUSH2 0x3B3E PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3B4D DUP6 DUP3 DUP7 ADD PUSH2 0x2F97 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3B6E JUMPI PUSH2 0x3B6D PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3B7A DUP6 DUP3 DUP7 ADD PUSH2 0x3620 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3B9D JUMPI PUSH2 0x3B9C PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3BAB DUP7 DUP3 DUP8 ADD PUSH2 0x3447 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3BBC DUP7 DUP3 DUP8 ADD PUSH2 0x2F97 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3BDD JUMPI PUSH2 0x3BDC PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3BE9 DUP7 DUP3 DUP8 ADD PUSH2 0x3620 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3C0A JUMPI PUSH2 0x3C09 PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3C28 JUMPI PUSH2 0x3C27 PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3C34 DUP6 DUP3 DUP7 ADD PUSH2 0x31D3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3C55 JUMPI PUSH2 0x3C54 PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3C61 DUP6 DUP3 DUP7 ADD PUSH2 0x39F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3CA0 DUP2 PUSH2 0x2F76 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CB2 DUP4 DUP4 PUSH2 0x3C97 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CD6 DUP3 PUSH2 0x3C6B JUMP JUMPDEST PUSH2 0x3CE0 DUP2 DUP6 PUSH2 0x3C76 JUMP JUMPDEST SWAP4 POP PUSH2 0x3CEB DUP4 PUSH2 0x3C87 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3D1C JUMPI DUP2 MLOAD PUSH2 0x3D03 DUP9 DUP3 PUSH2 0x3CA6 JUMP JUMPDEST SWAP8 POP PUSH2 0x3D0E DUP4 PUSH2 0x3CBE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3CEF JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D43 DUP2 DUP5 PUSH2 0x3CCB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3D65 JUMPI PUSH2 0x3D64 PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3D73 DUP8 DUP3 DUP9 ADD PUSH2 0x3447 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3D84 DUP8 DUP3 DUP9 ADD PUSH2 0x2F97 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x3D95 DUP8 DUP3 DUP9 ADD PUSH2 0x3593 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3DB6 JUMPI PUSH2 0x3DB5 PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3DC2 DUP8 DUP3 DUP9 ADD PUSH2 0x3620 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3DE7 JUMPI PUSH2 0x3DE6 PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3E05 JUMPI PUSH2 0x3E04 PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3E11 DUP7 DUP3 DUP8 ADD PUSH2 0x31D3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3E32 JUMPI PUSH2 0x3E31 PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3E3E DUP7 DUP3 DUP8 ADD PUSH2 0x31D3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3E5F JUMPI PUSH2 0x3E5E PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3E6B DUP7 DUP3 DUP8 ADD PUSH2 0x39F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3E8E JUMPI PUSH2 0x3E8D PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3E9C DUP7 DUP3 DUP8 ADD PUSH2 0x2F97 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3EAD DUP7 DUP3 DUP8 ADD PUSH2 0x2F97 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3ECE JUMPI PUSH2 0x3ECD PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3EDA DUP7 DUP3 DUP8 ADD PUSH2 0x3620 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3EFA JUMPI PUSH2 0x3EF9 PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3F18 JUMPI PUSH2 0x3F17 PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3F24 DUP5 DUP3 DUP6 ADD PUSH2 0x31D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3F36 DUP2 PUSH2 0x2EBB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3F51 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3F2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F6E DUP4 DUP6 PUSH2 0x3F57 JUMP JUMPDEST SWAP4 POP PUSH2 0x3F7B DUP4 DUP6 DUP5 PUSH2 0x2E36 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F9F DUP3 PUSH2 0x3F87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FB1 DUP3 PUSH2 0x3F94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3FC9 PUSH2 0x3FC4 DUP3 PUSH2 0x33F4 JUMP JUMPDEST PUSH2 0x3FA6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3FEA PUSH2 0x3FE5 DUP3 PUSH2 0x3085 JUMP JUMPDEST PUSH2 0x3FCF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FFD DUP3 DUP7 DUP9 PUSH2 0x3F62 JUMP JUMPDEST SWAP2 POP PUSH2 0x4009 DUP3 DUP6 PUSH2 0x3FB8 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x4019 DUP3 DUP5 PUSH2 0x3FD9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4036 DUP3 PUSH2 0x2FEC JUMP JUMPDEST PUSH2 0x4040 DUP2 DUP6 PUSH2 0x3F57 JUMP JUMPDEST SWAP4 POP PUSH2 0x4050 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2FF7 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4068 DUP3 DUP5 PUSH2 0x402B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x40AB DUP2 PUSH2 0x2F76 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x40C6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x40A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x40E1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x40A2 JUMP JUMPDEST PUSH2 0x40EE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3406 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x4121 JUMPI PUSH2 0x4120 PUSH2 0x40F5 JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4143 JUMPI PUSH2 0x4142 PUSH2 0x40FA JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x415F JUMPI PUSH2 0x415E PUSH2 0x40FF JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4174 DUP3 DUP5 DUP7 PUSH2 0x3F62 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x4195 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3406 JUMP JUMPDEST PUSH2 0x41A2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x40A2 JUMP JUMPDEST PUSH2 0x41AF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3406 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x41CC PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3406 JUMP JUMPDEST PUSH2 0x41D9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x40A2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x41F5 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3406 JUMP JUMPDEST PUSH2 0x4202 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x40A2 JUMP JUMPDEST PUSH2 0x420F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2F4C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x4221 DUP2 DUP5 PUSH2 0x302A JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4274 DUP3 MLOAD PUSH2 0x423C JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4295 DUP3 PUSH2 0x2FEC JUMP JUMPDEST DUP3 PUSH2 0x429F DUP5 PUSH2 0x422C JUMP JUMPDEST SWAP1 POP PUSH2 0x42AA DUP2 PUSH2 0x4268 JUMP JUMPDEST SWAP3 POP PUSH1 0x14 DUP3 LT ISZERO PUSH2 0x42EA JUMPI PUSH2 0x42E5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP4 PUSH1 0x14 SUB PUSH1 0x8 MUL PUSH2 0x427D JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x430C PUSH2 0x4307 DUP3 PUSH2 0x2F76 JUMP JUMPDEST PUSH2 0x42F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x431E DUP3 DUP6 PUSH2 0x42FB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x432E DUP3 DUP5 PUSH2 0x42FB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x4385 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x4399 JUMPI PUSH2 0x4398 PUSH2 0x433E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x43B4 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3406 JUMP JUMPDEST PUSH2 0x43C1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2F4C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x43D3 DUP2 DUP5 PUSH2 0x302A JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x43F2 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x3406 JUMP JUMPDEST PUSH2 0x43FF PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x3406 JUMP JUMPDEST PUSH2 0x440C PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x3406 JUMP JUMPDEST PUSH2 0x4419 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x40A2 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x442B DUP2 DUP5 PUSH2 0x302A JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4471 DUP3 PUSH2 0x3085 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x44A4 JUMPI PUSH2 0x44A3 PUSH2 0x4437 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x44C4 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2F4C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x44D6 DUP2 DUP5 PUSH2 0x302A JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4526 PUSH2 0x4521 DUP3 PUSH2 0x44DF JUMP JUMPDEST PUSH2 0x450B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFF000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4573 PUSH2 0x456E DUP3 PUSH2 0x452C JUMP JUMPDEST PUSH2 0x4558 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4594 PUSH2 0x458F DUP3 PUSH2 0x423C JUMP JUMPDEST PUSH2 0x4579 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45A6 DUP3 DUP7 PUSH2 0x4515 JUMP JUMPDEST PUSH1 0xA DUP3 ADD SWAP2 POP PUSH2 0x45B6 DUP3 DUP6 PUSH2 0x4562 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP2 POP PUSH2 0x45C6 DUP3 DUP5 PUSH2 0x4583 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45E3 DUP3 MLOAD PUSH2 0x2F76 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45F7 DUP3 PUSH2 0x2FEC JUMP JUMPDEST DUP3 PUSH2 0x4601 DUP5 PUSH2 0x422C JUMP JUMPDEST SWAP1 POP PUSH2 0x460C DUP2 PUSH2 0x45D7 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH2 0x464C JUMPI PUSH2 0x4647 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH2 0x427D JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4668 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x40A2 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x467A DUP2 DUP5 PUSH2 0x302A JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4696 PUSH2 0x4691 DUP5 PUSH2 0x35AD JUMP JUMPDEST PUSH2 0x311E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x46B2 JUMPI PUSH2 0x46B1 PUSH2 0x35A8 JUMP JUMPDEST JUMPDEST PUSH2 0x46BD DUP5 DUP3 DUP6 PUSH2 0x2FF7 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x46DA JUMPI PUSH2 0x46D9 PUSH2 0x30B9 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x46EA DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4683 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4709 JUMPI PUSH2 0x4708 PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4727 JUMPI PUSH2 0x4726 PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x4733 DUP5 DUP3 DUP6 ADD PUSH2 0x46C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4747 DUP3 PUSH2 0x3085 JUMP JUMPDEST SWAP2 POP PUSH2 0x4752 DUP4 PUSH2 0x3085 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x4765 JUMPI PUSH2 0x4764 PUSH2 0x4437 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT 0xB4 PUSH21 0x1C1B86CE45D7AFC206F1D134CBE9093DA1F0722C5C PUSH18 0x870CAC77DC10B764736F6C634300080C0033 ","sourceMap":"191:418:28:-:0;;;232:375;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;460:17;491:19;524:13;551:8;573:17;1240:5:23;1259:7;1280:9;1303:14;1331:18;3063:5:20;3070:7;3079:9;3090:14;1393:13:14;1133:1:0;1109:26;;:12;:26;;;1105:100;;;1158:36;;;;;;;;;;;;;;1105:100;1214:36;1237:12;1214:22;;;;;:36;;:::i;:::-;1053:204;1478:118:14::1;388:66:13;1512:29:14;;1555:31;;;;;;;;;;;;;;;;::::0;1478:20:::1;;;;;:118;;:::i;:::-;1607:56;633:66:13;1628:20:14;;1656:5;1607:20;;;;;:56;;:::i;:::-;1673:60;776:66:13;1694:22:14;;1724:7;1673:20;;;;;:60;;:::i;:::-;1743:70;915:66:13;1764:20:14;;1797:14;1786:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;1743:20;;;;;:70;;:::i;:::-;1244:576:::0;;;;3116:125:20::1;245:66:18;3163:24:20;;3212:18;3201:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;3116:33;;;;;:125;;:::i;:::-;2865:383:::0;;;;;1017:349:23;;;;;232:375:28;;;;;191:418;;2133:194:3;2213:7;:5;;;:7;;:::i;:::-;2201:19;;:8;:19;;;2197:124;;2270:8;2241:38;;2262:6;;;;;;;;;;2241:38;;;;;;;;;;;;2302:8;2293:6;;:17;;;;;;;;;;;;;;;;;;2197:124;2133:194;:::o;5032:188:1:-;5158:9;5140:6;:15;5147:7;5140:15;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;5194:7;5182:31;5203:9;5182:31;;;;;;:::i;:::-;;;;;;;;5032:188;;:::o;2008:224:14:-;2168:57;2206:7;2215:9;2168:37;;;;;:57;;:::i;:::-;2008:224;;:::o;736:85:3:-;782:7;808:6;;;;;;;;;;;801:13;;736:85;:::o;930:533:15:-;633:66:13;1062:20:15;;1051:7;:31;1047:410;;;1105:26;;;;;;;;;;;;;;1047:410;776:66:13;1163:22:15;;1152:7;:33;1148:309;;;1208:28;;;;;;;;;;;;;;1148:309;915:66:13;1268:20:15;;1257:7;:31;1253:204;;;1311:26;;;;;;;;;;;;;;1253:204;1386:9;1368:6;:15;1375:7;1368:15;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;1427:7;1415:31;1436:9;1415:31;;;;;;:::i;:::-;;;;;;;;930:533;;:::o;191:418:28:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:29:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:307::-;1678:1;1688:113;1702:6;1699:1;1696:13;1688:113;;;1787:1;1782:3;1778:11;1772:18;1768:1;1763:3;1759:11;1752:39;1724:2;1721:1;1717:10;1712:15;;1688:113;;;1819:6;1816:1;1813:13;1810:101;;;1899:1;1890:6;1885:3;1881:16;1874:27;1810:101;1659:258;1610:307;;;:::o;1923:421::-;2012:5;2037:66;2053:49;2095:6;2053:49;:::i;:::-;2037:66;:::i;:::-;2028:75;;2126:6;2119:5;2112:21;2164:4;2157:5;2153:16;2202:3;2193:6;2188:3;2184:16;2181:25;2178:112;;;2209:79;;:::i;:::-;2178:112;2299:39;2331:6;2326:3;2321;2299:39;:::i;:::-;2018:326;1923:421;;;;;:::o;2364:355::-;2431:5;2480:3;2473:4;2465:6;2461:17;2457:27;2447:122;;2488:79;;:::i;:::-;2447:122;2598:6;2592:13;2623:90;2709:3;2701:6;2694:4;2686:6;2682:17;2623:90;:::i;:::-;2614:99;;2437:282;2364:355;;;;:::o;2725:126::-;2762:7;2802:42;2795:5;2791:54;2780:65;;2725:126;;;:::o;2857:96::-;2894:7;2923:24;2941:5;2923:24;:::i;:::-;2912:35;;2857:96;;;:::o;2959:122::-;3032:24;3050:5;3032:24;:::i;:::-;3025:5;3022:35;3012:63;;3071:1;3068;3061:12;3012:63;2959:122;:::o;3087:143::-;3144:5;3175:6;3169:13;3160:22;;3191:33;3218:5;3191:33;:::i;:::-;3087:143;;;;:::o;3236:77::-;3273:7;3302:5;3291:16;;3236:77;;;:::o;3319:122::-;3392:24;3410:5;3392:24;:::i;:::-;3385:5;3382:35;3372:63;;3431:1;3428;3421:12;3372:63;3319:122;:::o;3447:143::-;3504:5;3535:6;3529:13;3520:22;;3551:33;3578:5;3551:33;:::i;:::-;3447:143;;;;:::o;3596:1323::-;3722:6;3730;3738;3746;3754;3803:3;3791:9;3782:7;3778:23;3774:33;3771:120;;;3810:79;;:::i;:::-;3771:120;3951:1;3940:9;3936:17;3930:24;3981:18;3973:6;3970:30;3967:117;;;4003:79;;:::i;:::-;3967:117;4108:74;4174:7;4165:6;4154:9;4150:22;4108:74;:::i;:::-;4098:84;;3901:291;4252:2;4241:9;4237:18;4231:25;4283:18;4275:6;4272:30;4269:117;;;4305:79;;:::i;:::-;4269:117;4410:74;4476:7;4467:6;4456:9;4452:22;4410:74;:::i;:::-;4400:84;;4202:292;4533:2;4559:64;4615:7;4606:6;4595:9;4591:22;4559:64;:::i;:::-;4549:74;;4504:129;4672:2;4698:64;4754:7;4745:6;4734:9;4730:22;4698:64;:::i;:::-;4688:74;;4643:129;4811:3;4838:64;4894:7;4885:6;4874:9;4870:22;4838:64;:::i;:::-;4828:74;;4782:130;3596:1323;;;;;;;;:::o;4925:118::-;5012:24;5030:5;5012:24;:::i;:::-;5007:3;5000:37;4925:118;;:::o;5049:222::-;5142:4;5180:2;5169:9;5165:18;5157:26;;5193:71;5261:1;5250:9;5246:17;5237:6;5193:71;:::i;:::-;5049:222;;;;:::o;5277:98::-;5328:6;5362:5;5356:12;5346:22;;5277:98;;;:::o;5381:168::-;5464:11;5498:6;5493:3;5486:19;5538:4;5533:3;5529:14;5514:29;;5381:168;;;;:::o;5555:360::-;5641:3;5669:38;5701:5;5669:38;:::i;:::-;5723:70;5786:6;5781:3;5723:70;:::i;:::-;5716:77;;5802:52;5847:6;5842:3;5835:4;5828:5;5824:16;5802:52;:::i;:::-;5879:29;5901:6;5879:29;:::i;:::-;5874:3;5870:39;5863:46;;5645:270;5555:360;;;;:::o;5921:309::-;6032:4;6070:2;6059:9;6055:18;6047:26;;6119:9;6113:4;6109:20;6105:1;6094:9;6090:17;6083:47;6147:76;6218:4;6209:6;6147:76;:::i;:::-;6139:84;;5921:309;;;;:::o;6236:180::-;6284:77;6281:1;6274:88;6381:4;6378:1;6371:15;6405:4;6402:1;6395:15;6422:320;6466:6;6503:1;6497:4;6493:12;6483:22;;6550:1;6544:4;6540:12;6571:18;6561:81;;6627:4;6619:6;6615:17;6605:27;;6561:81;6689:2;6681:6;6678:14;6658:18;6655:38;6652:84;;;6708:18;;:::i;:::-;6652:84;6473:269;6422:320;;;:::o;191:418:28:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_2178":{"entryPoint":null,"id":2178,"parameterSlots":2,"returnSlots":1},"@_2196":{"entryPoint":null,"id":2196,"parameterSlots":0,"returnSlots":0},"@_add_4055":{"entryPoint":10716,"id":4055,"parameterSlots":2,"returnSlots":1},"@_afterTokenTransfer_3614":{"entryPoint":10285,"id":3614,"parameterSlots":4,"returnSlots":0},"@_at_4189":{"entryPoint":11531,"id":4189,"parameterSlots":2,"returnSlots":1},"@_beforeTokenTransfer_3601":{"entryPoint":10115,"id":3601,"parameterSlots":4,"returnSlots":0},"@_checkOwner_379":{"entryPoint":8233,"id":379,"parameterSlots":0,"returnSlots":0},"@_clearOperators_3175":{"entryPoint":10121,"id":3175,"parameterSlots":2,"returnSlots":0},"@_contains_4158":{"entryPoint":11173,"id":4158,"parameterSlots":2,"returnSlots":1},"@_existsOrError_3210":{"entryPoint":7023,"id":3210,"parameterSlots":1,"returnSlots":0},"@_exists_3193":{"entryPoint":9867,"id":3193,"parameterSlots":1,"returnSlots":1},"@_fallbackLSP17Extendable_2251":{"entryPoint":1726,"id":2251,"parameterSlots":2,"returnSlots":1},"@_getDataForTokenId_3588":{"entryPoint":6817,"id":3588,"parameterSlots":2,"returnSlots":1},"@_getData_228":{"entryPoint":8047,"id":228,"parameterSlots":1,"returnSlots":1},"@_getExtensionAndForwardValue_2302":{"entryPoint":6430,"id":2302,"parameterSlots":1,"returnSlots":2},"@_isOperatorOrOwner_2963":{"entryPoint":7100,"id":2963,"parameterSlots":2,"returnSlots":1},"@_length_4172":{"entryPoint":10699,"id":4172,"parameterSlots":1,"returnSlots":1},"@_mint_3313":{"entryPoint":8592,"id":3313,"parameterSlots":4,"returnSlots":0},"@_notifyTokenOperator_3631":{"entryPoint":8509,"id":3631,"parameterSlots":2,"returnSlots":0},"@_notifyTokenReceiver_3694":{"entryPoint":10341,"id":3694,"parameterSlots":3,"returnSlots":0},"@_notifyTokenSender_3648":{"entryPoint":10291,"id":3648,"parameterSlots":2,"returnSlots":0},"@_remove_4139":{"entryPoint":11255,"id":4139,"parameterSlots":2,"returnSlots":1},"@_revokeOperator_3121":{"entryPoint":9294,"id":3121,"parameterSlots":5,"returnSlots":0},"@_setDataForTokenId_3566":{"entryPoint":9152,"id":3566,"parameterSlots":3,"returnSlots":0},"@_setData_1656":{"entryPoint":6037,"id":1656,"parameterSlots":2,"returnSlots":0},"@_setData_1718":{"entryPoint":6051,"id":1718,"parameterSlots":2,"returnSlots":0},"@_setData_2356":{"entryPoint":8354,"id":2356,"parameterSlots":2,"returnSlots":0},"@_setData_248":{"entryPoint":5937,"id":248,"parameterSlots":2,"returnSlots":0},"@_setOwner_401":{"entryPoint":5689,"id":401,"parameterSlots":1,"returnSlots":0},"@_supportsInterfaceInERC165Extension_597":{"entryPoint":6713,"id":597,"parameterSlots":1,"returnSlots":1},"@_transfer_3536":{"entryPoint":7242,"id":3536,"parameterSlots":5,"returnSlots":0},"@_values_4203":{"entryPoint":10023,"id":4203,"parameterSlots":1,"returnSlots":1},"@add_4225":{"entryPoint":10262,"id":4225,"parameterSlots":2,"returnSlots":1},"@add_4355":{"entryPoint":8461,"id":4355,"parameterSlots":2,"returnSlots":1},"@at_4451":{"entryPoint":11229,"id":4451,"parameterSlots":2,"returnSlots":1},"@authorizeOperator_2817":{"entryPoint":3662,"id":2817,"parameterSlots":3,"returnSlots":0},"@balanceOf_2454":{"entryPoint":3206,"id":2454,"parameterSlots":1,"returnSlots":1},"@batchCalls_2727":{"entryPoint":2826,"id":2727,"parameterSlots":2,"returnSlots":1},"@contains_4409":{"entryPoint":9975,"id":4409,"parameterSlots":2,"returnSlots":1},"@generateMappingKey_1020":{"entryPoint":9515,"id":1020,"parameterSlots":2,"returnSlots":1},"@getDataBatchForTokenIds_2570":{"entryPoint":2252,"id":2570,"parameterSlots":2,"returnSlots":1},"@getDataBatch_126":{"entryPoint":5389,"id":126,"parameterSlots":1,"returnSlots":1},"@getDataForTokenId_2518":{"entryPoint":2222,"id":2518,"parameterSlots":2,"returnSlots":1},"@getData_79":{"entryPoint":2808,"id":79,"parameterSlots":1,"returnSlots":1},"@getOperatorsOf_2938":{"entryPoint":2666,"id":2938,"parameterSlots":1,"returnSlots":1},"@isOperatorFor_2917":{"entryPoint":2637,"id":2917,"parameterSlots":2,"returnSlots":1},"@length_4276":{"entryPoint":8212,"id":4276,"parameterSlots":1,"returnSlots":1},"@length_4424":{"entryPoint":11208,"id":4424,"parameterSlots":1,"returnSlots":1},"@mint_3771":{"entryPoint":4664,"id":3771,"parameterSlots":4,"returnSlots":0},"@notifyUniversalReceiver_749":{"entryPoint":10828,"id":749,"parameterSlots":3,"returnSlots":0},"@owner_316":{"entryPoint":4268,"id":316,"parameterSlots":0,"returnSlots":1},"@remove_4243":{"entryPoint":10239,"id":4243,"parameterSlots":2,"returnSlots":1},"@remove_4382":{"entryPoint":11019,"id":4382,"parameterSlots":2,"returnSlots":1},"@renounceOwnership_338":{"entryPoint":3286,"id":338,"parameterSlots":0,"returnSlots":0},"@revokeOperator_2896":{"entryPoint":4974,"id":2896,"parameterSlots":4,"returnSlots":0},"@setDataBatchForTokenIds_2657":{"entryPoint":4690,"id":2657,"parameterSlots":3,"returnSlots":0},"@setDataBatch_215":{"entryPoint":4309,"id":215,"parameterSlots":2,"returnSlots":0},"@setDataForTokenId_2590":{"entryPoint":4950,"id":2590,"parameterSlots":3,"returnSlots":0},"@setData_151":{"entryPoint":3582,"id":151,"parameterSlots":2,"returnSlots":0},"@supportsERC165InterfaceUnchecked_3989":{"entryPoint":9676,"id":3989,"parameterSlots":2,"returnSlots":1},"@supportsInterface_2329":{"entryPoint":2109,"id":2329,"parameterSlots":1,"returnSlots":1},"@supportsInterface_269":{"entryPoint":9579,"id":269,"parameterSlots":1,"returnSlots":1},"@supportsInterface_3795":{"entryPoint":11067,"id":3795,"parameterSlots":1,"returnSlots":1},"@supportsInterface_565":{"entryPoint":6616,"id":565,"parameterSlots":1,"returnSlots":1},"@tokenIdsOf_2501":{"entryPoint":4584,"id":2501,"parameterSlots":1,"returnSlots":1},"@tokenOwnerOf_2484":{"entryPoint":2457,"id":2484,"parameterSlots":1,"returnSlots":1},"@totalSupply_2438":{"entryPoint":2242,"id":2438,"parameterSlots":0,"returnSlots":1},"@transferBatch_3081":{"entryPoint":3306,"id":3081,"parameterSlots":5,"returnSlots":0},"@transferOwnership_362":{"entryPoint":5566,"id":362,"parameterSlots":1,"returnSlots":0},"@transfer_3001":{"entryPoint":2711,"id":3001,"parameterSlots":5,"returnSlots":0},"@values_4324":{"entryPoint":8559,"id":4324,"parameterSlots":1,"returnSlots":1},"@values_4481":{"entryPoint":7209,"id":4481,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":14310,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_array$_t_bool_$dyn_memory_ptr":{"entryPoint":14505,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":12650,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":14700,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":13790,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr_fromMemory":{"entryPoint":18051,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":13383,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":14415,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_bool_$dyn_memory_ptr":{"entryPoint":14610,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":12755,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr":{"entryPoint":14058,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":14835,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":13715,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":12183,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":12030,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":13856,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr_fromMemory":{"entryPoint":18117,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":14221,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_bytes32t_boolt_bytes_memory_ptr":{"entryPoint":13902,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_bytes32":{"entryPoint":13404,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_bytes32t_boolt_bytes_memory_ptr":{"entryPoint":15691,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bytes32t_bytes_memory_ptr":{"entryPoint":15236,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bool_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":14881,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":16100,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":12801,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":15822,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":15347,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr":{"entryPoint":14144,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":13223,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_bytes32":{"entryPoint":12204,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_bytes32t_bytes_memory_ptr":{"entryPoint":15989,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bytes32t_bytes_memory_ptr":{"entryPoint":15144,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":12051,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes_memory_ptr_fromMemory":{"entryPoint":18163,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_address_to_t_address":{"entryPoint":13527,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_bytes32_to_t_bytes32":{"entryPoint":15526,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr":{"entryPoint":13039,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address":{"entryPoint":13512,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":13318,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack":{"entryPoint":16312,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":13564,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack":{"entryPoint":15563,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":13072,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":12108,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes10_to_t_bytes10_nonPadded_inplace_fromStack":{"entryPoint":17685,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes20_to_t_bytes20_nonPadded_inplace_fromStack":{"entryPoint":17795,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes2_to_t_bytes2_nonPadded_inplace_fromStack":{"entryPoint":17762,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32":{"entryPoint":15511,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":16546,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack":{"entryPoint":17147,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes4_to_t_bytes4_fromStack":{"entryPoint":16173,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":11862,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":16226,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr":{"entryPoint":12982,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":12330,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":16427,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c_to_t_bytes_memory_ptr_fromStack":{"entryPoint":11763,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":12431,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack":{"entryPoint":16345,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes10_t_bytes2_t_bytes20__to_t_bytes10_t_bytes2_t_bytes20__nonPadded_inplace_fromStack_reversed":{"entryPoint":17818,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_packed_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":17170,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":16743,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_calldata_ptr_t_address_t_uint256__to_t_bytes_memory_ptr_t_address_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":16368,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":16476,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":13333,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_address_t_bytes32_t_bytes_memory_ptr__to_t_address_t_address_t_address_t_bytes32_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":17373,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_bool_t_bytes_memory_ptr__to_t_address_t_bool_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":17311,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed":{"entryPoint":16823,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32_t_address__to_t_address_t_bytes32_t_address__fromStack_reversed":{"entryPoint":16768,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32_t_bool_t_bytes_memory_ptr__to_t_address_t_bytes32_t_bool_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":16864,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":13658,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":15657,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":13189,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":12123,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":17583,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":16561,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed":{"entryPoint":16588,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":18003,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed":{"entryPoint":16188,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":11907,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":12387,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":11798,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":12446,"id":null,"parameterSlots":2,"returnSlots":1},"access_calldata_tail_t_bytes_calldata_ptr":{"entryPoint":16644,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":12574,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":11943,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":14266,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_array$_t_bool_$dyn_memory_ptr":{"entryPoint":14461,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":12601,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":14656,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":13741,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":13496,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":15495,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":12949,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_bytes_memory_ptr":{"entryPoint":16940,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":13468,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":15467,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":12921,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":12268,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":13551,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":15550,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":13059,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":13479,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack":{"entryPoint":15478,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":12932,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr":{"entryPoint":12965,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":11737,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":16215,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":18236,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":13300,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":12096,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes10":{"entryPoint":17631,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes2":{"entryPoint":17708,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes20":{"entryPoint":16956,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":12150,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":11963,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":13268,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":12421,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes20":{"entryPoint":17034,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":17900,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":11830,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":12279,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":17261,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":12525,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":17510,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_address":{"entryPoint":16294,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_bytes10":{"entryPoint":17675,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_bytes2":{"entryPoint":17752,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_bytes20":{"entryPoint":17785,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_bytes32":{"entryPoint":17137,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint160":{"entryPoint":16276,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint256":{"entryPoint":16335,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":17463,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":17214,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":18288,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":16499,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":12478,"id":null,"parameterSlots":0,"returnSlots":0},"read_from_memoryt_bytes20":{"entryPoint":17000,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bytes32":{"entryPoint":17879,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":14053,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":12473,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a":{"entryPoint":16634,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad":{"entryPoint":16629,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":12645,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e":{"entryPoint":16639,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":13736,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":11958,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":11953,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":11845,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_96":{"entryPoint":16263,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":17021,"id":null,"parameterSlots":2,"returnSlots":1},"store_literal_in_memory_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c":{"entryPoint":11754,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":13360,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":13692,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":12160,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":12007,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:49724:29","statements":[{"body":{"nodeType":"YulBlock","src":"102:73:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"119:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"124:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"112:6:29"},"nodeType":"YulFunctionCall","src":"112:19:29"},"nodeType":"YulExpressionStatement","src":"112:19:29"},{"nodeType":"YulAssignment","src":"140:29:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"159:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"164:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"155:3:29"},"nodeType":"YulFunctionCall","src":"155:14:29"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"140:11:29"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"74:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"79:6:29","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"90:11:29","type":""}],"src":"7:168:29"},{"body":{"nodeType":"YulBlock","src":"287:108:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"309:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"317:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"305:3:29"},"nodeType":"YulFunctionCall","src":"305:14:29"},{"kind":"number","nodeType":"YulLiteral","src":"321:66:29","type":"","value":"0x0000000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"298:6:29"},"nodeType":"YulFunctionCall","src":"298:90:29"},"nodeType":"YulExpressionStatement","src":"298:90:29"}]},"name":"store_literal_in_memory_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"279:6:29","type":""}],"src":"181:214:29"},{"body":{"nodeType":"YulBlock","src":"546:218:29","statements":[{"nodeType":"YulAssignment","src":"556:72:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"621:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"626:1:29","type":"","value":"4"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"563:57:29"},"nodeType":"YulFunctionCall","src":"563:65:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"556:3:29"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"726:3:29"}],"functionName":{"name":"store_literal_in_memory_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c","nodeType":"YulIdentifier","src":"637:88:29"},"nodeType":"YulFunctionCall","src":"637:93:29"},"nodeType":"YulExpressionStatement","src":"637:93:29"},{"nodeType":"YulAssignment","src":"739:19:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"750:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"755:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"746:3:29"},"nodeType":"YulFunctionCall","src":"746:12:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"739:3:29"}]}]},"name":"abi_encode_t_stringliteral_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"534:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"542:3:29","type":""}],"src":"401:363:29"},{"body":{"nodeType":"YulBlock","src":"940:247:29","statements":[{"nodeType":"YulAssignment","src":"950:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"962:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"973:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"958:3:29"},"nodeType":"YulFunctionCall","src":"958:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"950:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"997:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1008:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"993:3:29"},"nodeType":"YulFunctionCall","src":"993:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1016:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"1022:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1012:3:29"},"nodeType":"YulFunctionCall","src":"1012:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"986:6:29"},"nodeType":"YulFunctionCall","src":"986:47:29"},"nodeType":"YulExpressionStatement","src":"986:47:29"},{"nodeType":"YulAssignment","src":"1042:138:29","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1175:4:29"}],"functionName":{"name":"abi_encode_t_stringliteral_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1050:123:29"},"nodeType":"YulFunctionCall","src":"1050:130:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1042:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"920:9:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"935:4:29","type":""}],"src":"770:417:29"},{"body":{"nodeType":"YulBlock","src":"1244:103:29","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1267:3:29"},{"name":"src","nodeType":"YulIdentifier","src":"1272:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"1277:6:29"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"1254:12:29"},"nodeType":"YulFunctionCall","src":"1254:30:29"},"nodeType":"YulExpressionStatement","src":"1254:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1325:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"1330:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1321:3:29"},"nodeType":"YulFunctionCall","src":"1321:16:29"},{"kind":"number","nodeType":"YulLiteral","src":"1339:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1314:6:29"},"nodeType":"YulFunctionCall","src":"1314:27:29"},"nodeType":"YulExpressionStatement","src":"1314:27:29"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1226:3:29","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1231:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"1236:6:29","type":""}],"src":"1193:154:29"},{"body":{"nodeType":"YulBlock","src":"1401:54:29","statements":[{"nodeType":"YulAssignment","src":"1411:38:29","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1429:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"1436:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1425:3:29"},"nodeType":"YulFunctionCall","src":"1425:14:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1445:2:29","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1441:3:29"},"nodeType":"YulFunctionCall","src":"1441:7:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1421:3:29"},"nodeType":"YulFunctionCall","src":"1421:28:29"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1411:6:29"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1384:5:29","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1394:6:29","type":""}],"src":"1353:102:29"},{"body":{"nodeType":"YulBlock","src":"1583:201:29","statements":[{"nodeType":"YulAssignment","src":"1593:77:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1658:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"1663:6:29"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1600:57:29"},"nodeType":"YulFunctionCall","src":"1600:70:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1593:3:29"}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1704:5:29"},{"name":"pos","nodeType":"YulIdentifier","src":"1711:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"1716:6:29"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"1680:23:29"},"nodeType":"YulFunctionCall","src":"1680:43:29"},"nodeType":"YulExpressionStatement","src":"1680:43:29"},{"nodeType":"YulAssignment","src":"1732:46:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1743:3:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1770:6:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1748:21:29"},"nodeType":"YulFunctionCall","src":"1748:29:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1739:3:29"},"nodeType":"YulFunctionCall","src":"1739:39:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1732:3:29"}]}]},"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"1556:5:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"1563:6:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1571:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1579:3:29","type":""}],"src":"1483:301:29"},{"body":{"nodeType":"YulBlock","src":"1916:203:29","statements":[{"nodeType":"YulAssignment","src":"1926:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1938:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1949:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1934:3:29"},"nodeType":"YulFunctionCall","src":"1934:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1926:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1973:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1984:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1969:3:29"},"nodeType":"YulFunctionCall","src":"1969:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1992:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"1998:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1988:3:29"},"nodeType":"YulFunctionCall","src":"1988:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1962:6:29"},"nodeType":"YulFunctionCall","src":"1962:47:29"},"nodeType":"YulExpressionStatement","src":"1962:47:29"},{"nodeType":"YulAssignment","src":"2018:94:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2090:6:29"},{"name":"value1","nodeType":"YulIdentifier","src":"2098:6:29"},{"name":"tail","nodeType":"YulIdentifier","src":"2107:4:29"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2026:63:29"},"nodeType":"YulFunctionCall","src":"2026:86:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2018:4:29"}]}]},"name":"abi_encode_tuple_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1880:9:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1892:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1900:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1911:4:29","type":""}],"src":"1790:329:29"},{"body":{"nodeType":"YulBlock","src":"2165:35:29","statements":[{"nodeType":"YulAssignment","src":"2175:19:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2191:2:29","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2185:5:29"},"nodeType":"YulFunctionCall","src":"2185:9:29"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2175:6:29"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2158:6:29","type":""}],"src":"2125:75:29"},{"body":{"nodeType":"YulBlock","src":"2295:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2312:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2315:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2305:6:29"},"nodeType":"YulFunctionCall","src":"2305:12:29"},"nodeType":"YulExpressionStatement","src":"2305:12:29"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"2206:117:29"},{"body":{"nodeType":"YulBlock","src":"2418:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2435:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2438:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2428:6:29"},"nodeType":"YulFunctionCall","src":"2428:12:29"},"nodeType":"YulExpressionStatement","src":"2428:12:29"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"2329:117:29"},{"body":{"nodeType":"YulBlock","src":"2496:105:29","statements":[{"nodeType":"YulAssignment","src":"2506:89:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2521:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"2528:66:29","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2517:3:29"},"nodeType":"YulFunctionCall","src":"2517:78:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2506:7:29"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2478:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2488:7:29","type":""}],"src":"2452:149:29"},{"body":{"nodeType":"YulBlock","src":"2649:78:29","statements":[{"body":{"nodeType":"YulBlock","src":"2705:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2714:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2717:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2707:6:29"},"nodeType":"YulFunctionCall","src":"2707:12:29"},"nodeType":"YulExpressionStatement","src":"2707:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2672:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2696:5:29"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"2679:16:29"},"nodeType":"YulFunctionCall","src":"2679:23:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2669:2:29"},"nodeType":"YulFunctionCall","src":"2669:34:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2662:6:29"},"nodeType":"YulFunctionCall","src":"2662:42:29"},"nodeType":"YulIf","src":"2659:62:29"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2642:5:29","type":""}],"src":"2607:120:29"},{"body":{"nodeType":"YulBlock","src":"2784:86:29","statements":[{"nodeType":"YulAssignment","src":"2794:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2816:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2803:12:29"},"nodeType":"YulFunctionCall","src":"2803:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2794:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2858:5:29"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"2832:25:29"},"nodeType":"YulFunctionCall","src":"2832:32:29"},"nodeType":"YulExpressionStatement","src":"2832:32:29"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2762:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"2770:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2778:5:29","type":""}],"src":"2733:137:29"},{"body":{"nodeType":"YulBlock","src":"2941:262:29","statements":[{"body":{"nodeType":"YulBlock","src":"2987:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2989:77:29"},"nodeType":"YulFunctionCall","src":"2989:79:29"},"nodeType":"YulExpressionStatement","src":"2989:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2962:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"2971:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2958:3:29"},"nodeType":"YulFunctionCall","src":"2958:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"2983:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2954:3:29"},"nodeType":"YulFunctionCall","src":"2954:32:29"},"nodeType":"YulIf","src":"2951:119:29"},{"nodeType":"YulBlock","src":"3080:116:29","statements":[{"nodeType":"YulVariableDeclaration","src":"3095:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"3109:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3099:6:29","type":""}]},{"nodeType":"YulAssignment","src":"3124:62:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3158:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"3169:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3154:3:29"},"nodeType":"YulFunctionCall","src":"3154:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3178:7:29"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"3134:19:29"},"nodeType":"YulFunctionCall","src":"3134:52:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3124:6:29"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2911:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2922:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2934:6:29","type":""}],"src":"2876:327:29"},{"body":{"nodeType":"YulBlock","src":"3251:48:29","statements":[{"nodeType":"YulAssignment","src":"3261:32:29","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3286:5:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3279:6:29"},"nodeType":"YulFunctionCall","src":"3279:13:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3272:6:29"},"nodeType":"YulFunctionCall","src":"3272:21:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3261:7:29"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3233:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3243:7:29","type":""}],"src":"3209:90:29"},{"body":{"nodeType":"YulBlock","src":"3364:50:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3381:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3401:5:29"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3386:14:29"},"nodeType":"YulFunctionCall","src":"3386:21:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3374:6:29"},"nodeType":"YulFunctionCall","src":"3374:34:29"},"nodeType":"YulExpressionStatement","src":"3374:34:29"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3352:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3359:3:29","type":""}],"src":"3305:109:29"},{"body":{"nodeType":"YulBlock","src":"3512:118:29","statements":[{"nodeType":"YulAssignment","src":"3522:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3534:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3545:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3530:3:29"},"nodeType":"YulFunctionCall","src":"3530:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3522:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3596:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3609:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"3620:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3605:3:29"},"nodeType":"YulFunctionCall","src":"3605:17:29"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3558:37:29"},"nodeType":"YulFunctionCall","src":"3558:65:29"},"nodeType":"YulExpressionStatement","src":"3558:65:29"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3484:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3496:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3507:4:29","type":""}],"src":"3420:210:29"},{"body":{"nodeType":"YulBlock","src":"3681:32:29","statements":[{"nodeType":"YulAssignment","src":"3691:16:29","value":{"name":"value","nodeType":"YulIdentifier","src":"3702:5:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3691:7:29"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3663:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3673:7:29","type":""}],"src":"3636:77:29"},{"body":{"nodeType":"YulBlock","src":"3762:79:29","statements":[{"body":{"nodeType":"YulBlock","src":"3819:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3828:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3831:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3821:6:29"},"nodeType":"YulFunctionCall","src":"3821:12:29"},"nodeType":"YulExpressionStatement","src":"3821:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3785:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3810:5:29"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"3792:17:29"},"nodeType":"YulFunctionCall","src":"3792:24:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3782:2:29"},"nodeType":"YulFunctionCall","src":"3782:35:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3775:6:29"},"nodeType":"YulFunctionCall","src":"3775:43:29"},"nodeType":"YulIf","src":"3772:63:29"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3755:5:29","type":""}],"src":"3719:122:29"},{"body":{"nodeType":"YulBlock","src":"3899:87:29","statements":[{"nodeType":"YulAssignment","src":"3909:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3931:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3918:12:29"},"nodeType":"YulFunctionCall","src":"3918:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3909:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3974:5:29"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"3947:26:29"},"nodeType":"YulFunctionCall","src":"3947:33:29"},"nodeType":"YulExpressionStatement","src":"3947:33:29"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3877:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"3885:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3893:5:29","type":""}],"src":"3847:139:29"},{"body":{"nodeType":"YulBlock","src":"4075:391:29","statements":[{"body":{"nodeType":"YulBlock","src":"4121:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4123:77:29"},"nodeType":"YulFunctionCall","src":"4123:79:29"},"nodeType":"YulExpressionStatement","src":"4123:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4096:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"4105:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4092:3:29"},"nodeType":"YulFunctionCall","src":"4092:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"4117:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4088:3:29"},"nodeType":"YulFunctionCall","src":"4088:32:29"},"nodeType":"YulIf","src":"4085:119:29"},{"nodeType":"YulBlock","src":"4214:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"4229:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"4243:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4233:6:29","type":""}]},{"nodeType":"YulAssignment","src":"4258:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4293:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"4304:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4289:3:29"},"nodeType":"YulFunctionCall","src":"4289:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4313:7:29"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"4268:20:29"},"nodeType":"YulFunctionCall","src":"4268:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4258:6:29"}]}]},{"nodeType":"YulBlock","src":"4341:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"4356:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"4370:2:29","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4360:6:29","type":""}]},{"nodeType":"YulAssignment","src":"4386:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4421:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"4432:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4417:3:29"},"nodeType":"YulFunctionCall","src":"4417:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4441:7:29"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"4396:20:29"},"nodeType":"YulFunctionCall","src":"4396:53:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4386:6:29"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4037:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4048:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4060:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4068:6:29","type":""}],"src":"3992:474:29"},{"body":{"nodeType":"YulBlock","src":"4530:40:29","statements":[{"nodeType":"YulAssignment","src":"4541:22:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4557:5:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4551:5:29"},"nodeType":"YulFunctionCall","src":"4551:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4541:6:29"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4513:5:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4523:6:29","type":""}],"src":"4472:98:29"},{"body":{"nodeType":"YulBlock","src":"4625:258:29","statements":[{"nodeType":"YulVariableDeclaration","src":"4635:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"4644:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4639:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"4704:63:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4729:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"4734:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4725:3:29"},"nodeType":"YulFunctionCall","src":"4725:11:29"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4748:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"4753:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4744:3:29"},"nodeType":"YulFunctionCall","src":"4744:11:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4738:5:29"},"nodeType":"YulFunctionCall","src":"4738:18:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4718:6:29"},"nodeType":"YulFunctionCall","src":"4718:39:29"},"nodeType":"YulExpressionStatement","src":"4718:39:29"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4665:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"4668:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4662:2:29"},"nodeType":"YulFunctionCall","src":"4662:13:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4676:19:29","statements":[{"nodeType":"YulAssignment","src":"4678:15:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4687:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"4690:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4683:3:29"},"nodeType":"YulFunctionCall","src":"4683:10:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4678:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"4658:3:29","statements":[]},"src":"4654:113:29"},{"body":{"nodeType":"YulBlock","src":"4801:76:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4851:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"4856:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4847:3:29"},"nodeType":"YulFunctionCall","src":"4847:16:29"},{"kind":"number","nodeType":"YulLiteral","src":"4865:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4840:6:29"},"nodeType":"YulFunctionCall","src":"4840:27:29"},"nodeType":"YulExpressionStatement","src":"4840:27:29"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4782:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"4785:6:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4779:2:29"},"nodeType":"YulFunctionCall","src":"4779:13:29"},"nodeType":"YulIf","src":"4776:101:29"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4607:3:29","type":""},{"name":"dst","nodeType":"YulTypedName","src":"4612:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"4617:6:29","type":""}],"src":"4576:307:29"},{"body":{"nodeType":"YulBlock","src":"4979:270:29","statements":[{"nodeType":"YulVariableDeclaration","src":"4989:52:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5035:5:29"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"5003:31:29"},"nodeType":"YulFunctionCall","src":"5003:38:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4993:6:29","type":""}]},{"nodeType":"YulAssignment","src":"5050:77:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5115:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"5120:6:29"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5057:57:29"},"nodeType":"YulFunctionCall","src":"5057:70:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5050:3:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5162:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"5169:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5158:3:29"},"nodeType":"YulFunctionCall","src":"5158:16:29"},{"name":"pos","nodeType":"YulIdentifier","src":"5176:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"5181:6:29"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"5136:21:29"},"nodeType":"YulFunctionCall","src":"5136:52:29"},"nodeType":"YulExpressionStatement","src":"5136:52:29"},{"nodeType":"YulAssignment","src":"5197:46:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5208:3:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5235:6:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5213:21:29"},"nodeType":"YulFunctionCall","src":"5213:29:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5204:3:29"},"nodeType":"YulFunctionCall","src":"5204:39:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5197:3:29"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4960:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4967:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4975:3:29","type":""}],"src":"4889:360:29"},{"body":{"nodeType":"YulBlock","src":"5371:193:29","statements":[{"nodeType":"YulAssignment","src":"5381:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5393:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5404:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5389:3:29"},"nodeType":"YulFunctionCall","src":"5389:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5381:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5428:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5439:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5424:3:29"},"nodeType":"YulFunctionCall","src":"5424:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5447:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"5453:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5443:3:29"},"nodeType":"YulFunctionCall","src":"5443:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5417:6:29"},"nodeType":"YulFunctionCall","src":"5417:47:29"},"nodeType":"YulExpressionStatement","src":"5417:47:29"},{"nodeType":"YulAssignment","src":"5473:84:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5543:6:29"},{"name":"tail","nodeType":"YulIdentifier","src":"5552:4:29"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5481:61:29"},"nodeType":"YulFunctionCall","src":"5481:76:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5473:4:29"}]}]},"name":"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5343:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5355:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5366:4:29","type":""}],"src":"5255:309:29"},{"body":{"nodeType":"YulBlock","src":"5615:32:29","statements":[{"nodeType":"YulAssignment","src":"5625:16:29","value":{"name":"value","nodeType":"YulIdentifier","src":"5636:5:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5625:7:29"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5597:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5607:7:29","type":""}],"src":"5570:77:29"},{"body":{"nodeType":"YulBlock","src":"5718:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5735:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5758:5:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5740:17:29"},"nodeType":"YulFunctionCall","src":"5740:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5728:6:29"},"nodeType":"YulFunctionCall","src":"5728:37:29"},"nodeType":"YulExpressionStatement","src":"5728:37:29"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5706:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5713:3:29","type":""}],"src":"5653:118:29"},{"body":{"nodeType":"YulBlock","src":"5875:124:29","statements":[{"nodeType":"YulAssignment","src":"5885:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5897:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5908:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5893:3:29"},"nodeType":"YulFunctionCall","src":"5893:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5885:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5965:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5978:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5989:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5974:3:29"},"nodeType":"YulFunctionCall","src":"5974:17:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5921:43:29"},"nodeType":"YulFunctionCall","src":"5921:71:29"},"nodeType":"YulExpressionStatement","src":"5921:71:29"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5847:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5859:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5870:4:29","type":""}],"src":"5777:222:29"},{"body":{"nodeType":"YulBlock","src":"6094:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6111:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6114:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6104:6:29"},"nodeType":"YulFunctionCall","src":"6104:12:29"},"nodeType":"YulExpressionStatement","src":"6104:12:29"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"6005:117:29"},{"body":{"nodeType":"YulBlock","src":"6156:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6173:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6176:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6166:6:29"},"nodeType":"YulFunctionCall","src":"6166:88:29"},"nodeType":"YulExpressionStatement","src":"6166:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6270:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6273:4:29","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6263:6:29"},"nodeType":"YulFunctionCall","src":"6263:15:29"},"nodeType":"YulExpressionStatement","src":"6263:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6294:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6297:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6287:6:29"},"nodeType":"YulFunctionCall","src":"6287:15:29"},"nodeType":"YulExpressionStatement","src":"6287:15:29"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"6128:180:29"},{"body":{"nodeType":"YulBlock","src":"6357:238:29","statements":[{"nodeType":"YulVariableDeclaration","src":"6367:58:29","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6389:6:29"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"6419:4:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6397:21:29"},"nodeType":"YulFunctionCall","src":"6397:27:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6385:3:29"},"nodeType":"YulFunctionCall","src":"6385:40:29"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"6371:10:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"6536:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6538:16:29"},"nodeType":"YulFunctionCall","src":"6538:18:29"},"nodeType":"YulExpressionStatement","src":"6538:18:29"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6479:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"6491:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6476:2:29"},"nodeType":"YulFunctionCall","src":"6476:34:29"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6515:10:29"},{"name":"memPtr","nodeType":"YulIdentifier","src":"6527:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6512:2:29"},"nodeType":"YulFunctionCall","src":"6512:22:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6473:2:29"},"nodeType":"YulFunctionCall","src":"6473:62:29"},"nodeType":"YulIf","src":"6470:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6574:2:29","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6578:10:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6567:6:29"},"nodeType":"YulFunctionCall","src":"6567:22:29"},"nodeType":"YulExpressionStatement","src":"6567:22:29"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6343:6:29","type":""},{"name":"size","nodeType":"YulTypedName","src":"6351:4:29","type":""}],"src":"6314:281:29"},{"body":{"nodeType":"YulBlock","src":"6642:88:29","statements":[{"nodeType":"YulAssignment","src":"6652:30:29","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"6662:18:29"},"nodeType":"YulFunctionCall","src":"6662:20:29"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6652:6:29"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6711:6:29"},{"name":"size","nodeType":"YulIdentifier","src":"6719:4:29"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"6691:19:29"},"nodeType":"YulFunctionCall","src":"6691:33:29"},"nodeType":"YulExpressionStatement","src":"6691:33:29"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"6626:4:29","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"6635:6:29","type":""}],"src":"6601:129:29"},{"body":{"nodeType":"YulBlock","src":"6818:229:29","statements":[{"body":{"nodeType":"YulBlock","src":"6923:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6925:16:29"},"nodeType":"YulFunctionCall","src":"6925:18:29"},"nodeType":"YulExpressionStatement","src":"6925:18:29"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6895:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"6903:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6892:2:29"},"nodeType":"YulFunctionCall","src":"6892:30:29"},"nodeType":"YulIf","src":"6889:56:29"},{"nodeType":"YulAssignment","src":"6955:25:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6967:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"6975:4:29","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6963:3:29"},"nodeType":"YulFunctionCall","src":"6963:17:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6955:4:29"}]},{"nodeType":"YulAssignment","src":"7017:23:29","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7029:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"7035:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7025:3:29"},"nodeType":"YulFunctionCall","src":"7025:15:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"7017:4:29"}]}]},"name":"array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"6802:6:29","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"6813:4:29","type":""}],"src":"6736:311:29"},{"body":{"nodeType":"YulBlock","src":"7142:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7159:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7162:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7152:6:29"},"nodeType":"YulFunctionCall","src":"7152:12:29"},"nodeType":"YulExpressionStatement","src":"7152:12:29"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"7053:117:29"},{"body":{"nodeType":"YulBlock","src":"7295:608:29","statements":[{"nodeType":"YulAssignment","src":"7305:90:29","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7387:6:29"}],"functionName":{"name":"array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7330:56:29"},"nodeType":"YulFunctionCall","src":"7330:64:29"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"7314:15:29"},"nodeType":"YulFunctionCall","src":"7314:81:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7305:5:29"}]},{"nodeType":"YulVariableDeclaration","src":"7404:16:29","value":{"name":"array","nodeType":"YulIdentifier","src":"7415:5:29"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"7408:3:29","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7437:5:29"},{"name":"length","nodeType":"YulIdentifier","src":"7444:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7430:6:29"},"nodeType":"YulFunctionCall","src":"7430:21:29"},"nodeType":"YulExpressionStatement","src":"7430:21:29"},{"nodeType":"YulAssignment","src":"7460:23:29","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7471:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"7478:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7467:3:29"},"nodeType":"YulFunctionCall","src":"7467:16:29"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"7460:3:29"}]},{"nodeType":"YulVariableDeclaration","src":"7493:44:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7511:6:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7523:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"7531:4:29","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7519:3:29"},"nodeType":"YulFunctionCall","src":"7519:17:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7507:3:29"},"nodeType":"YulFunctionCall","src":"7507:30:29"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"7497:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"7565:103:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"7579:77:29"},"nodeType":"YulFunctionCall","src":"7579:79:29"},"nodeType":"YulExpressionStatement","src":"7579:79:29"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"7552:6:29"},{"name":"end","nodeType":"YulIdentifier","src":"7560:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7549:2:29"},"nodeType":"YulFunctionCall","src":"7549:15:29"},"nodeType":"YulIf","src":"7546:122:29"},{"body":{"nodeType":"YulBlock","src":"7753:144:29","statements":[{"nodeType":"YulVariableDeclaration","src":"7768:21:29","value":{"name":"src","nodeType":"YulIdentifier","src":"7786:3:29"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"7772:10:29","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7810:3:29"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"7836:10:29"},{"name":"end","nodeType":"YulIdentifier","src":"7848:3:29"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"7815:20:29"},"nodeType":"YulFunctionCall","src":"7815:37:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7803:6:29"},"nodeType":"YulFunctionCall","src":"7803:50:29"},"nodeType":"YulExpressionStatement","src":"7803:50:29"},{"nodeType":"YulAssignment","src":"7866:21:29","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7877:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"7882:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7873:3:29"},"nodeType":"YulFunctionCall","src":"7873:14:29"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"7866:3:29"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7706:3:29"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"7711:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7703:2:29"},"nodeType":"YulFunctionCall","src":"7703:15:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7719:25:29","statements":[{"nodeType":"YulAssignment","src":"7721:21:29","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7732:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"7737:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7728:3:29"},"nodeType":"YulFunctionCall","src":"7728:14:29"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"7721:3:29"}]}]},"pre":{"nodeType":"YulBlock","src":"7681:21:29","statements":[{"nodeType":"YulVariableDeclaration","src":"7683:17:29","value":{"name":"offset","nodeType":"YulIdentifier","src":"7694:6:29"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"7687:3:29","type":""}]}]},"src":"7677:220:29"}]},"name":"abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7265:6:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"7273:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"7281:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7289:5:29","type":""}],"src":"7193:710:29"},{"body":{"nodeType":"YulBlock","src":"8003:293:29","statements":[{"body":{"nodeType":"YulBlock","src":"8052:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8054:77:29"},"nodeType":"YulFunctionCall","src":"8054:79:29"},"nodeType":"YulExpressionStatement","src":"8054:79:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8031:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"8039:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8027:3:29"},"nodeType":"YulFunctionCall","src":"8027:17:29"},{"name":"end","nodeType":"YulIdentifier","src":"8046:3:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8023:3:29"},"nodeType":"YulFunctionCall","src":"8023:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8016:6:29"},"nodeType":"YulFunctionCall","src":"8016:35:29"},"nodeType":"YulIf","src":"8013:122:29"},{"nodeType":"YulVariableDeclaration","src":"8144:34:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8171:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8158:12:29"},"nodeType":"YulFunctionCall","src":"8158:20:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8148:6:29","type":""}]},{"nodeType":"YulAssignment","src":"8187:103:29","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8263:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"8271:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8259:3:29"},"nodeType":"YulFunctionCall","src":"8259:17:29"},{"name":"length","nodeType":"YulIdentifier","src":"8278:6:29"},{"name":"end","nodeType":"YulIdentifier","src":"8286:3:29"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8196:62:29"},"nodeType":"YulFunctionCall","src":"8196:94:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8187:5:29"}]}]},"name":"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7981:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"7989:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7997:5:29","type":""}],"src":"7926:370:29"},{"body":{"nodeType":"YulBlock","src":"8435:761:29","statements":[{"body":{"nodeType":"YulBlock","src":"8481:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8483:77:29"},"nodeType":"YulFunctionCall","src":"8483:79:29"},"nodeType":"YulExpressionStatement","src":"8483:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8456:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"8465:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8452:3:29"},"nodeType":"YulFunctionCall","src":"8452:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"8477:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8448:3:29"},"nodeType":"YulFunctionCall","src":"8448:32:29"},"nodeType":"YulIf","src":"8445:119:29"},{"nodeType":"YulBlock","src":"8574:302:29","statements":[{"nodeType":"YulVariableDeclaration","src":"8589:45:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8620:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8631:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8616:3:29"},"nodeType":"YulFunctionCall","src":"8616:17:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8603:12:29"},"nodeType":"YulFunctionCall","src":"8603:31:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8593:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"8681:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"8683:77:29"},"nodeType":"YulFunctionCall","src":"8683:79:29"},"nodeType":"YulExpressionStatement","src":"8683:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8653:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"8661:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8650:2:29"},"nodeType":"YulFunctionCall","src":"8650:30:29"},"nodeType":"YulIf","src":"8647:117:29"},{"nodeType":"YulAssignment","src":"8778:88:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8838:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"8849:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8834:3:29"},"nodeType":"YulFunctionCall","src":"8834:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8858:7:29"}],"functionName":{"name":"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8788:45:29"},"nodeType":"YulFunctionCall","src":"8788:78:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8778:6:29"}]}]},{"nodeType":"YulBlock","src":"8886:303:29","statements":[{"nodeType":"YulVariableDeclaration","src":"8901:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8932:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8943:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8928:3:29"},"nodeType":"YulFunctionCall","src":"8928:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8915:12:29"},"nodeType":"YulFunctionCall","src":"8915:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8905:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"8994:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"8996:77:29"},"nodeType":"YulFunctionCall","src":"8996:79:29"},"nodeType":"YulExpressionStatement","src":"8996:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8966:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"8974:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8963:2:29"},"nodeType":"YulFunctionCall","src":"8963:30:29"},"nodeType":"YulIf","src":"8960:117:29"},{"nodeType":"YulAssignment","src":"9091:88:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9151:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"9162:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9147:3:29"},"nodeType":"YulFunctionCall","src":"9147:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9171:7:29"}],"functionName":{"name":"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"9101:45:29"},"nodeType":"YulFunctionCall","src":"9101:78:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9091:6:29"}]}]}]},"name":"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8397:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8408:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8420:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8428:6:29","type":""}],"src":"8302:894:29"},{"body":{"nodeType":"YulBlock","src":"9285:40:29","statements":[{"nodeType":"YulAssignment","src":"9296:22:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9312:5:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9306:5:29"},"nodeType":"YulFunctionCall","src":"9306:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"9296:6:29"}]}]},"name":"array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9268:5:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"9278:6:29","type":""}],"src":"9202:123:29"},{"body":{"nodeType":"YulBlock","src":"9451:73:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9468:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"9473:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9461:6:29"},"nodeType":"YulFunctionCall","src":"9461:19:29"},"nodeType":"YulExpressionStatement","src":"9461:19:29"},{"nodeType":"YulAssignment","src":"9489:29:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9508:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"9513:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9504:3:29"},"nodeType":"YulFunctionCall","src":"9504:14:29"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"9489:11:29"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9423:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"9428:6:29","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"9439:11:29","type":""}],"src":"9331:193:29"},{"body":{"nodeType":"YulBlock","src":"9611:60:29","statements":[{"nodeType":"YulAssignment","src":"9621:11:29","value":{"name":"ptr","nodeType":"YulIdentifier","src":"9629:3:29"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"9621:4:29"}]},{"nodeType":"YulAssignment","src":"9642:22:29","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"9654:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"9659:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9650:3:29"},"nodeType":"YulFunctionCall","src":"9650:14:29"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"9642:4:29"}]}]},"name":"array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"9598:3:29","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"9606:4:29","type":""}],"src":"9530:141:29"},{"body":{"nodeType":"YulBlock","src":"9762:73:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9779:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"9784:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9772:6:29"},"nodeType":"YulFunctionCall","src":"9772:19:29"},"nodeType":"YulExpressionStatement","src":"9772:19:29"},{"nodeType":"YulAssignment","src":"9800:29:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9819:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"9824:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9815:3:29"},"nodeType":"YulFunctionCall","src":"9815:14:29"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"9800:11:29"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9734:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"9739:6:29","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"9750:11:29","type":""}],"src":"9677:158:29"},{"body":{"nodeType":"YulBlock","src":"9921:260:29","statements":[{"nodeType":"YulVariableDeclaration","src":"9931:52:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9977:5:29"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9945:31:29"},"nodeType":"YulFunctionCall","src":"9945:38:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9935:6:29","type":""}]},{"nodeType":"YulAssignment","src":"9992:67:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10047:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"10052:6:29"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9999:47:29"},"nodeType":"YulFunctionCall","src":"9999:60:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9992:3:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10094:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"10101:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10090:3:29"},"nodeType":"YulFunctionCall","src":"10090:16:29"},{"name":"pos","nodeType":"YulIdentifier","src":"10108:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"10113:6:29"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"10068:21:29"},"nodeType":"YulFunctionCall","src":"10068:52:29"},"nodeType":"YulExpressionStatement","src":"10068:52:29"},{"nodeType":"YulAssignment","src":"10129:46:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10140:3:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10167:6:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"10145:21:29"},"nodeType":"YulFunctionCall","src":"10145:29:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10136:3:29"},"nodeType":"YulFunctionCall","src":"10136:39:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10129:3:29"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9902:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9909:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9917:3:29","type":""}],"src":"9841:340:29"},{"body":{"nodeType":"YulBlock","src":"10285:94:29","statements":[{"nodeType":"YulAssignment","src":"10295:78:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10361:6:29"},{"name":"pos","nodeType":"YulIdentifier","src":"10369:3:29"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"10309:51:29"},"nodeType":"YulFunctionCall","src":"10309:64:29"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"10295:10:29"}]}]},"name":"abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"10258:6:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10266:3:29","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"10274:10:29","type":""}],"src":"10187:192:29"},{"body":{"nodeType":"YulBlock","src":"10469:38:29","statements":[{"nodeType":"YulAssignment","src":"10479:22:29","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"10491:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"10496:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10487:3:29"},"nodeType":"YulFunctionCall","src":"10487:14:29"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"10479:4:29"}]}]},"name":"array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"10456:3:29","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"10464:4:29","type":""}],"src":"10385:122:29"},{"body":{"nodeType":"YulBlock","src":"10681:841:29","statements":[{"nodeType":"YulVariableDeclaration","src":"10691:77:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10762:5:29"}],"functionName":{"name":"array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10705:56:29"},"nodeType":"YulFunctionCall","src":"10705:63:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"10695:6:29","type":""}]},{"nodeType":"YulAssignment","src":"10777:102:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10867:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"10872:6:29"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10784:82:29"},"nodeType":"YulFunctionCall","src":"10784:95:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10777:3:29"}]},{"nodeType":"YulVariableDeclaration","src":"10888:20:29","value":{"name":"pos","nodeType":"YulIdentifier","src":"10905:3:29"},"variables":[{"name":"headStart","nodeType":"YulTypedName","src":"10892:9:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10917:39:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10933:3:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10942:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"10950:4:29","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"10938:3:29"},"nodeType":"YulFunctionCall","src":"10938:17:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10929:3:29"},"nodeType":"YulFunctionCall","src":"10929:27:29"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"10921:4:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10965:80:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11039:5:29"}],"functionName":{"name":"array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10980:58:29"},"nodeType":"YulFunctionCall","src":"10980:65:29"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"10969:7:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11054:21:29","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"11068:7:29"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"11058:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"11144:333:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11165:3:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11174:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"11180:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11170:3:29"},"nodeType":"YulFunctionCall","src":"11170:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11158:6:29"},"nodeType":"YulFunctionCall","src":"11158:33:29"},"nodeType":"YulExpressionStatement","src":"11158:33:29"},{"nodeType":"YulVariableDeclaration","src":"11204:34:29","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"11231:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11225:5:29"},"nodeType":"YulFunctionCall","src":"11225:13:29"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"11208:13:29","type":""}]},{"nodeType":"YulAssignment","src":"11251:90:29","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"11321:13:29"},{"name":"tail","nodeType":"YulIdentifier","src":"11336:4:29"}],"functionName":{"name":"abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"11259:61:29"},"nodeType":"YulFunctionCall","src":"11259:82:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11251:4:29"}]},{"nodeType":"YulAssignment","src":"11354:79:29","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"11426:6:29"}],"functionName":{"name":"array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"11364:61:29"},"nodeType":"YulFunctionCall","src":"11364:69:29"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"11354:6:29"}]},{"nodeType":"YulAssignment","src":"11446:21:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11457:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"11462:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11453:3:29"},"nodeType":"YulFunctionCall","src":"11453:14:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11446:3:29"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11106:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"11109:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11103:2:29"},"nodeType":"YulFunctionCall","src":"11103:13:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11117:18:29","statements":[{"nodeType":"YulAssignment","src":"11119:14:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11128:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"11131:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11124:3:29"},"nodeType":"YulFunctionCall","src":"11124:9:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"11119:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"11088:14:29","statements":[{"nodeType":"YulVariableDeclaration","src":"11090:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"11099:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"11094:1:29","type":""}]}]},"src":"11084:393:29"},{"nodeType":"YulAssignment","src":"11486:11:29","value":{"name":"tail","nodeType":"YulIdentifier","src":"11493:4:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11486:3:29"}]},{"nodeType":"YulAssignment","src":"11506:10:29","value":{"name":"pos","nodeType":"YulIdentifier","src":"11513:3:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11506:3:29"}]}]},"name":"abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10660:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10667:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10676:3:29","type":""}],"src":"10539:983:29"},{"body":{"nodeType":"YulBlock","src":"11694:243:29","statements":[{"nodeType":"YulAssignment","src":"11704:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11716:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"11727:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11712:3:29"},"nodeType":"YulFunctionCall","src":"11712:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11704:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11751:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"11762:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11747:3:29"},"nodeType":"YulFunctionCall","src":"11747:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11770:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"11776:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11766:3:29"},"nodeType":"YulFunctionCall","src":"11766:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11740:6:29"},"nodeType":"YulFunctionCall","src":"11740:47:29"},"nodeType":"YulExpressionStatement","src":"11740:47:29"},{"nodeType":"YulAssignment","src":"11796:134:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11916:6:29"},{"name":"tail","nodeType":"YulIdentifier","src":"11925:4:29"}],"functionName":{"name":"abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11804:111:29"},"nodeType":"YulFunctionCall","src":"11804:126:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11796:4:29"}]}]},"name":"abi_encode_tuple_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11666:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11678:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11689:4:29","type":""}],"src":"11528:409:29"},{"body":{"nodeType":"YulBlock","src":"12009:263:29","statements":[{"body":{"nodeType":"YulBlock","src":"12055:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12057:77:29"},"nodeType":"YulFunctionCall","src":"12057:79:29"},"nodeType":"YulExpressionStatement","src":"12057:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12030:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"12039:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12026:3:29"},"nodeType":"YulFunctionCall","src":"12026:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"12051:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12022:3:29"},"nodeType":"YulFunctionCall","src":"12022:32:29"},"nodeType":"YulIf","src":"12019:119:29"},{"nodeType":"YulBlock","src":"12148:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"12163:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"12177:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12167:6:29","type":""}]},{"nodeType":"YulAssignment","src":"12192:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12227:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"12238:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12223:3:29"},"nodeType":"YulFunctionCall","src":"12223:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12247:7:29"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"12202:20:29"},"nodeType":"YulFunctionCall","src":"12202:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12192:6:29"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11979:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11990:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12002:6:29","type":""}],"src":"11943:329:29"},{"body":{"nodeType":"YulBlock","src":"12323:81:29","statements":[{"nodeType":"YulAssignment","src":"12333:65:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12348:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"12355:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12344:3:29"},"nodeType":"YulFunctionCall","src":"12344:54:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"12333:7:29"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12305:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"12315:7:29","type":""}],"src":"12278:126:29"},{"body":{"nodeType":"YulBlock","src":"12455:51:29","statements":[{"nodeType":"YulAssignment","src":"12465:35:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12494:5:29"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"12476:17:29"},"nodeType":"YulFunctionCall","src":"12476:24:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"12465:7:29"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12437:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"12447:7:29","type":""}],"src":"12410:96:29"},{"body":{"nodeType":"YulBlock","src":"12577:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12594:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12617:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"12599:17:29"},"nodeType":"YulFunctionCall","src":"12599:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12587:6:29"},"nodeType":"YulFunctionCall","src":"12587:37:29"},"nodeType":"YulExpressionStatement","src":"12587:37:29"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12565:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12572:3:29","type":""}],"src":"12512:118:29"},{"body":{"nodeType":"YulBlock","src":"12734:124:29","statements":[{"nodeType":"YulAssignment","src":"12744:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12756:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"12767:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12752:3:29"},"nodeType":"YulFunctionCall","src":"12752:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12744:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12824:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12837:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"12848:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12833:3:29"},"nodeType":"YulFunctionCall","src":"12833:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12780:43:29"},"nodeType":"YulFunctionCall","src":"12780:71:29"},"nodeType":"YulExpressionStatement","src":"12780:71:29"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12706:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12718:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12729:4:29","type":""}],"src":"12636:222:29"},{"body":{"nodeType":"YulBlock","src":"12907:79:29","statements":[{"body":{"nodeType":"YulBlock","src":"12964:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12973:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12976:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12966:6:29"},"nodeType":"YulFunctionCall","src":"12966:12:29"},"nodeType":"YulExpressionStatement","src":"12966:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12930:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12955:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"12937:17:29"},"nodeType":"YulFunctionCall","src":"12937:24:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12927:2:29"},"nodeType":"YulFunctionCall","src":"12927:35:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12920:6:29"},"nodeType":"YulFunctionCall","src":"12920:43:29"},"nodeType":"YulIf","src":"12917:63:29"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12900:5:29","type":""}],"src":"12864:122:29"},{"body":{"nodeType":"YulBlock","src":"13044:87:29","statements":[{"nodeType":"YulAssignment","src":"13054:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13076:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13063:12:29"},"nodeType":"YulFunctionCall","src":"13063:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"13054:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13119:5:29"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"13092:26:29"},"nodeType":"YulFunctionCall","src":"13092:33:29"},"nodeType":"YulExpressionStatement","src":"13092:33:29"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"13022:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"13030:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"13038:5:29","type":""}],"src":"12992:139:29"},{"body":{"nodeType":"YulBlock","src":"13220:391:29","statements":[{"body":{"nodeType":"YulBlock","src":"13266:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13268:77:29"},"nodeType":"YulFunctionCall","src":"13268:79:29"},"nodeType":"YulExpressionStatement","src":"13268:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13241:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"13250:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13237:3:29"},"nodeType":"YulFunctionCall","src":"13237:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"13262:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13233:3:29"},"nodeType":"YulFunctionCall","src":"13233:32:29"},"nodeType":"YulIf","src":"13230:119:29"},{"nodeType":"YulBlock","src":"13359:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"13374:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"13388:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13378:6:29","type":""}]},{"nodeType":"YulAssignment","src":"13403:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13438:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"13449:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13434:3:29"},"nodeType":"YulFunctionCall","src":"13434:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13458:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"13413:20:29"},"nodeType":"YulFunctionCall","src":"13413:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13403:6:29"}]}]},{"nodeType":"YulBlock","src":"13486:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"13501:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"13515:2:29","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13505:6:29","type":""}]},{"nodeType":"YulAssignment","src":"13531:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13566:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"13577:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13562:3:29"},"nodeType":"YulFunctionCall","src":"13562:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13586:7:29"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"13541:20:29"},"nodeType":"YulFunctionCall","src":"13541:53:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13531:6:29"}]}]}]},"name":"abi_decode_tuple_t_addresst_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13182:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13193:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13205:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13213:6:29","type":""}],"src":"13137:474:29"},{"body":{"nodeType":"YulBlock","src":"13691:40:29","statements":[{"nodeType":"YulAssignment","src":"13702:22:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13718:5:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13712:5:29"},"nodeType":"YulFunctionCall","src":"13712:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"13702:6:29"}]}]},"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13674:5:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"13684:6:29","type":""}],"src":"13617:114:29"},{"body":{"nodeType":"YulBlock","src":"13848:73:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13865:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"13870:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13858:6:29"},"nodeType":"YulFunctionCall","src":"13858:19:29"},"nodeType":"YulExpressionStatement","src":"13858:19:29"},{"nodeType":"YulAssignment","src":"13886:29:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13905:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"13910:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13901:3:29"},"nodeType":"YulFunctionCall","src":"13901:14:29"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"13886:11:29"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13820:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"13825:6:29","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"13836:11:29","type":""}],"src":"13737:184:29"},{"body":{"nodeType":"YulBlock","src":"13999:60:29","statements":[{"nodeType":"YulAssignment","src":"14009:11:29","value":{"name":"ptr","nodeType":"YulIdentifier","src":"14017:3:29"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"14009:4:29"}]},{"nodeType":"YulAssignment","src":"14030:22:29","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"14042:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"14047:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14038:3:29"},"nodeType":"YulFunctionCall","src":"14038:14:29"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"14030:4:29"}]}]},"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"13986:3:29","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"13994:4:29","type":""}],"src":"13927:132:29"},{"body":{"nodeType":"YulBlock","src":"14120:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14137:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14160:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"14142:17:29"},"nodeType":"YulFunctionCall","src":"14142:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14130:6:29"},"nodeType":"YulFunctionCall","src":"14130:37:29"},"nodeType":"YulExpressionStatement","src":"14130:37:29"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14108:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14115:3:29","type":""}],"src":"14065:108:29"},{"body":{"nodeType":"YulBlock","src":"14259:99:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14303:6:29"},{"name":"pos","nodeType":"YulIdentifier","src":"14311:3:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"14269:33:29"},"nodeType":"YulFunctionCall","src":"14269:46:29"},"nodeType":"YulExpressionStatement","src":"14269:46:29"},{"nodeType":"YulAssignment","src":"14324:28:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14342:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"14347:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14338:3:29"},"nodeType":"YulFunctionCall","src":"14338:14:29"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"14324:10:29"}]}]},"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"14232:6:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14240:3:29","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"14248:10:29","type":""}],"src":"14179:179:29"},{"body":{"nodeType":"YulBlock","src":"14439:38:29","statements":[{"nodeType":"YulAssignment","src":"14449:22:29","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"14461:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"14466:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14457:3:29"},"nodeType":"YulFunctionCall","src":"14457:14:29"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"14449:4:29"}]}]},"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"14426:3:29","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"14434:4:29","type":""}],"src":"14364:113:29"},{"body":{"nodeType":"YulBlock","src":"14637:608:29","statements":[{"nodeType":"YulVariableDeclaration","src":"14647:68:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14709:5:29"}],"functionName":{"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"14661:47:29"},"nodeType":"YulFunctionCall","src":"14661:54:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"14651:6:29","type":""}]},{"nodeType":"YulAssignment","src":"14724:93:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14805:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"14810:6:29"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14731:73:29"},"nodeType":"YulFunctionCall","src":"14731:86:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14724:3:29"}]},{"nodeType":"YulVariableDeclaration","src":"14826:71:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14891:5:29"}],"functionName":{"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"14841:49:29"},"nodeType":"YulFunctionCall","src":"14841:56:29"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"14830:7:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14906:21:29","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"14920:7:29"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"14910:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"14996:224:29","statements":[{"nodeType":"YulVariableDeclaration","src":"15010:34:29","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"15037:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15031:5:29"},"nodeType":"YulFunctionCall","src":"15031:13:29"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"15014:13:29","type":""}]},{"nodeType":"YulAssignment","src":"15057:70:29","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"15108:13:29"},{"name":"pos","nodeType":"YulIdentifier","src":"15123:3:29"}],"functionName":{"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulIdentifier","src":"15064:43:29"},"nodeType":"YulFunctionCall","src":"15064:63:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15057:3:29"}]},{"nodeType":"YulAssignment","src":"15140:70:29","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"15203:6:29"}],"functionName":{"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"15150:52:29"},"nodeType":"YulFunctionCall","src":"15150:60:29"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"15140:6:29"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"14958:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"14961:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14955:2:29"},"nodeType":"YulFunctionCall","src":"14955:13:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"14969:18:29","statements":[{"nodeType":"YulAssignment","src":"14971:14:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"14980:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"14983:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14976:3:29"},"nodeType":"YulFunctionCall","src":"14976:9:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"14971:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"14940:14:29","statements":[{"nodeType":"YulVariableDeclaration","src":"14942:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"14951:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"14946:1:29","type":""}]}]},"src":"14936:284:29"},{"nodeType":"YulAssignment","src":"15229:10:29","value":{"name":"pos","nodeType":"YulIdentifier","src":"15236:3:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15229:3:29"}]}]},"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14616:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14623:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14632:3:29","type":""}],"src":"14513:732:29"},{"body":{"nodeType":"YulBlock","src":"15399:225:29","statements":[{"nodeType":"YulAssignment","src":"15409:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15421:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"15432:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15417:3:29"},"nodeType":"YulFunctionCall","src":"15417:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15409:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15456:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"15467:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15452:3:29"},"nodeType":"YulFunctionCall","src":"15452:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15475:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"15481:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15471:3:29"},"nodeType":"YulFunctionCall","src":"15471:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15445:6:29"},"nodeType":"YulFunctionCall","src":"15445:47:29"},"nodeType":"YulExpressionStatement","src":"15445:47:29"},{"nodeType":"YulAssignment","src":"15501:116:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15603:6:29"},{"name":"tail","nodeType":"YulIdentifier","src":"15612:4:29"}],"functionName":{"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15509:93:29"},"nodeType":"YulFunctionCall","src":"15509:108:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15501:4:29"}]}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15371:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15383:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15394:4:29","type":""}],"src":"15251:373:29"},{"body":{"nodeType":"YulBlock","src":"15670:76:29","statements":[{"body":{"nodeType":"YulBlock","src":"15724:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15733:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15736:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15726:6:29"},"nodeType":"YulFunctionCall","src":"15726:12:29"},"nodeType":"YulExpressionStatement","src":"15726:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15693:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15715:5:29"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"15700:14:29"},"nodeType":"YulFunctionCall","src":"15700:21:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15690:2:29"},"nodeType":"YulFunctionCall","src":"15690:32:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15683:6:29"},"nodeType":"YulFunctionCall","src":"15683:40:29"},"nodeType":"YulIf","src":"15680:60:29"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15663:5:29","type":""}],"src":"15630:116:29"},{"body":{"nodeType":"YulBlock","src":"15801:84:29","statements":[{"nodeType":"YulAssignment","src":"15811:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15833:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15820:12:29"},"nodeType":"YulFunctionCall","src":"15820:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"15811:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15873:5:29"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"15849:23:29"},"nodeType":"YulFunctionCall","src":"15849:30:29"},"nodeType":"YulExpressionStatement","src":"15849:30:29"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"15779:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"15787:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"15795:5:29","type":""}],"src":"15752:133:29"},{"body":{"nodeType":"YulBlock","src":"15980:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15997:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16000:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15990:6:29"},"nodeType":"YulFunctionCall","src":"15990:12:29"},"nodeType":"YulExpressionStatement","src":"15990:12:29"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"15891:117:29"},{"body":{"nodeType":"YulBlock","src":"16080:241:29","statements":[{"body":{"nodeType":"YulBlock","src":"16185:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"16187:16:29"},"nodeType":"YulFunctionCall","src":"16187:18:29"},"nodeType":"YulExpressionStatement","src":"16187:18:29"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16157:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"16165:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16154:2:29"},"nodeType":"YulFunctionCall","src":"16154:30:29"},"nodeType":"YulIf","src":"16151:56:29"},{"nodeType":"YulAssignment","src":"16217:37:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16247:6:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"16225:21:29"},"nodeType":"YulFunctionCall","src":"16225:29:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"16217:4:29"}]},{"nodeType":"YulAssignment","src":"16291:23:29","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"16303:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"16309:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16299:3:29"},"nodeType":"YulFunctionCall","src":"16299:15:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"16291:4:29"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"16064:6:29","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"16075:4:29","type":""}],"src":"16014:307:29"},{"body":{"nodeType":"YulBlock","src":"16410:327:29","statements":[{"nodeType":"YulAssignment","src":"16420:74:29","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16486:6:29"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"16445:40:29"},"nodeType":"YulFunctionCall","src":"16445:48:29"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"16429:15:29"},"nodeType":"YulFunctionCall","src":"16429:65:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"16420:5:29"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"16510:5:29"},{"name":"length","nodeType":"YulIdentifier","src":"16517:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16503:6:29"},"nodeType":"YulFunctionCall","src":"16503:21:29"},"nodeType":"YulExpressionStatement","src":"16503:21:29"},{"nodeType":"YulVariableDeclaration","src":"16533:27:29","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"16548:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"16555:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16544:3:29"},"nodeType":"YulFunctionCall","src":"16544:16:29"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"16537:3:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"16598:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"16600:77:29"},"nodeType":"YulFunctionCall","src":"16600:79:29"},"nodeType":"YulExpressionStatement","src":"16600:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"16579:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"16584:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16575:3:29"},"nodeType":"YulFunctionCall","src":"16575:16:29"},{"name":"end","nodeType":"YulIdentifier","src":"16593:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16572:2:29"},"nodeType":"YulFunctionCall","src":"16572:25:29"},"nodeType":"YulIf","src":"16569:112:29"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"16714:3:29"},{"name":"dst","nodeType":"YulIdentifier","src":"16719:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"16724:6:29"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"16690:23:29"},"nodeType":"YulFunctionCall","src":"16690:41:29"},"nodeType":"YulExpressionStatement","src":"16690:41:29"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"16383:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"16388:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"16396:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"16404:5:29","type":""}],"src":"16327:410:29"},{"body":{"nodeType":"YulBlock","src":"16817:277:29","statements":[{"body":{"nodeType":"YulBlock","src":"16866:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"16868:77:29"},"nodeType":"YulFunctionCall","src":"16868:79:29"},"nodeType":"YulExpressionStatement","src":"16868:79:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"16845:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"16853:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16841:3:29"},"nodeType":"YulFunctionCall","src":"16841:17:29"},{"name":"end","nodeType":"YulIdentifier","src":"16860:3:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"16837:3:29"},"nodeType":"YulFunctionCall","src":"16837:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16830:6:29"},"nodeType":"YulFunctionCall","src":"16830:35:29"},"nodeType":"YulIf","src":"16827:122:29"},{"nodeType":"YulVariableDeclaration","src":"16958:34:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"16985:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"16972:12:29"},"nodeType":"YulFunctionCall","src":"16972:20:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"16962:6:29","type":""}]},{"nodeType":"YulAssignment","src":"17001:87:29","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"17061:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"17069:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17057:3:29"},"nodeType":"YulFunctionCall","src":"17057:17:29"},{"name":"length","nodeType":"YulIdentifier","src":"17076:6:29"},{"name":"end","nodeType":"YulIdentifier","src":"17084:3:29"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"17010:46:29"},"nodeType":"YulFunctionCall","src":"17010:78:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"17001:5:29"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"16795:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"16803:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"16811:5:29","type":""}],"src":"16756:338:29"},{"body":{"nodeType":"YulBlock","src":"17240:943:29","statements":[{"body":{"nodeType":"YulBlock","src":"17287:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"17289:77:29"},"nodeType":"YulFunctionCall","src":"17289:79:29"},"nodeType":"YulExpressionStatement","src":"17289:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"17261:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"17270:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17257:3:29"},"nodeType":"YulFunctionCall","src":"17257:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"17282:3:29","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"17253:3:29"},"nodeType":"YulFunctionCall","src":"17253:33:29"},"nodeType":"YulIf","src":"17250:120:29"},{"nodeType":"YulBlock","src":"17380:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"17395:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"17409:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17399:6:29","type":""}]},{"nodeType":"YulAssignment","src":"17424:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17459:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"17470:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17455:3:29"},"nodeType":"YulFunctionCall","src":"17455:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17479:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"17434:20:29"},"nodeType":"YulFunctionCall","src":"17434:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"17424:6:29"}]}]},{"nodeType":"YulBlock","src":"17507:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"17522:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"17536:2:29","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17526:6:29","type":""}]},{"nodeType":"YulAssignment","src":"17552:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17587:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"17598:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17583:3:29"},"nodeType":"YulFunctionCall","src":"17583:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17607:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"17562:20:29"},"nodeType":"YulFunctionCall","src":"17562:53:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"17552:6:29"}]}]},{"nodeType":"YulBlock","src":"17635:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"17650:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"17664:2:29","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17654:6:29","type":""}]},{"nodeType":"YulAssignment","src":"17680:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17715:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"17726:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17711:3:29"},"nodeType":"YulFunctionCall","src":"17711:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17735:7:29"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"17690:20:29"},"nodeType":"YulFunctionCall","src":"17690:53:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"17680:6:29"}]}]},{"nodeType":"YulBlock","src":"17763:115:29","statements":[{"nodeType":"YulVariableDeclaration","src":"17778:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"17792:2:29","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17782:6:29","type":""}]},{"nodeType":"YulAssignment","src":"17808:60:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17840:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"17851:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17836:3:29"},"nodeType":"YulFunctionCall","src":"17836:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17860:7:29"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"17818:17:29"},"nodeType":"YulFunctionCall","src":"17818:50:29"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"17808:6:29"}]}]},{"nodeType":"YulBlock","src":"17888:288:29","statements":[{"nodeType":"YulVariableDeclaration","src":"17903:47:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17934:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"17945:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17930:3:29"},"nodeType":"YulFunctionCall","src":"17930:19:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17917:12:29"},"nodeType":"YulFunctionCall","src":"17917:33:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17907:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"17997:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"17999:77:29"},"nodeType":"YulFunctionCall","src":"17999:79:29"},"nodeType":"YulExpressionStatement","src":"17999:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"17969:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"17977:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17966:2:29"},"nodeType":"YulFunctionCall","src":"17966:30:29"},"nodeType":"YulIf","src":"17963:117:29"},{"nodeType":"YulAssignment","src":"18094:72:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18138:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"18149:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18134:3:29"},"nodeType":"YulFunctionCall","src":"18134:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18158:7:29"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"18104:29:29"},"nodeType":"YulFunctionCall","src":"18104:62:29"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"18094:6:29"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_bytes32t_boolt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17178:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"17189:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"17201:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17209:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17217:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"17225:6:29","type":""},{"name":"value4","nodeType":"YulTypedName","src":"17233:6:29","type":""}],"src":"17100:1083:29"},{"body":{"nodeType":"YulBlock","src":"18278:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18295:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18298:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18288:6:29"},"nodeType":"YulFunctionCall","src":"18288:12:29"},"nodeType":"YulExpressionStatement","src":"18288:12:29"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"18189:117:29"},{"body":{"nodeType":"YulBlock","src":"18428:478:29","statements":[{"body":{"nodeType":"YulBlock","src":"18477:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"18479:77:29"},"nodeType":"YulFunctionCall","src":"18479:79:29"},"nodeType":"YulExpressionStatement","src":"18479:79:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18456:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"18464:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18452:3:29"},"nodeType":"YulFunctionCall","src":"18452:17:29"},{"name":"end","nodeType":"YulIdentifier","src":"18471:3:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"18448:3:29"},"nodeType":"YulFunctionCall","src":"18448:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18441:6:29"},"nodeType":"YulFunctionCall","src":"18441:35:29"},"nodeType":"YulIf","src":"18438:122:29"},{"nodeType":"YulAssignment","src":"18569:30:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18592:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"18579:12:29"},"nodeType":"YulFunctionCall","src":"18579:20:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"18569:6:29"}]},{"body":{"nodeType":"YulBlock","src":"18642:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"18644:77:29"},"nodeType":"YulFunctionCall","src":"18644:79:29"},"nodeType":"YulExpressionStatement","src":"18644:79:29"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18614:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"18622:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18611:2:29"},"nodeType":"YulFunctionCall","src":"18611:30:29"},"nodeType":"YulIf","src":"18608:117:29"},{"nodeType":"YulAssignment","src":"18734:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18750:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"18758:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18746:3:29"},"nodeType":"YulFunctionCall","src":"18746:17:29"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"18734:8:29"}]},{"body":{"nodeType":"YulBlock","src":"18817:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"18819:77:29"},"nodeType":"YulFunctionCall","src":"18819:79:29"},"nodeType":"YulExpressionStatement","src":"18819:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"18782:8:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18796:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"18804:4:29","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"18792:3:29"},"nodeType":"YulFunctionCall","src":"18792:17:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18778:3:29"},"nodeType":"YulFunctionCall","src":"18778:32:29"},{"name":"end","nodeType":"YulIdentifier","src":"18812:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18775:2:29"},"nodeType":"YulFunctionCall","src":"18775:41:29"},"nodeType":"YulIf","src":"18772:128:29"}]},"name":"abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"18395:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"18403:3:29","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"18411:8:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"18421:6:29","type":""}],"src":"18327:579:29"},{"body":{"nodeType":"YulBlock","src":"19024:469:29","statements":[{"body":{"nodeType":"YulBlock","src":"19070:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"19072:77:29"},"nodeType":"YulFunctionCall","src":"19072:79:29"},"nodeType":"YulExpressionStatement","src":"19072:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"19045:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"19054:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19041:3:29"},"nodeType":"YulFunctionCall","src":"19041:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"19066:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19037:3:29"},"nodeType":"YulFunctionCall","src":"19037:32:29"},"nodeType":"YulIf","src":"19034:119:29"},{"nodeType":"YulBlock","src":"19163:323:29","statements":[{"nodeType":"YulVariableDeclaration","src":"19178:45:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19209:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"19220:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19205:3:29"},"nodeType":"YulFunctionCall","src":"19205:17:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"19192:12:29"},"nodeType":"YulFunctionCall","src":"19192:31:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19182:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"19270:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"19272:77:29"},"nodeType":"YulFunctionCall","src":"19272:79:29"},"nodeType":"YulExpressionStatement","src":"19272:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19242:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"19250:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19239:2:29"},"nodeType":"YulFunctionCall","src":"19239:30:29"},"nodeType":"YulIf","src":"19236:117:29"},{"nodeType":"YulAssignment","src":"19367:109:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19448:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"19459:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19444:3:29"},"nodeType":"YulFunctionCall","src":"19444:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19468:7:29"}],"functionName":{"name":"abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"19385:58:29"},"nodeType":"YulFunctionCall","src":"19385:91:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"19367:6:29"},{"name":"value1","nodeType":"YulIdentifier","src":"19375:6:29"}]}]}]},"name":"abi_decode_tuple_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18986:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"18997:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"19009:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19017:6:29","type":""}],"src":"18912:581:29"},{"body":{"nodeType":"YulBlock","src":"19565:263:29","statements":[{"body":{"nodeType":"YulBlock","src":"19611:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"19613:77:29"},"nodeType":"YulFunctionCall","src":"19613:79:29"},"nodeType":"YulExpressionStatement","src":"19613:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"19586:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"19595:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19582:3:29"},"nodeType":"YulFunctionCall","src":"19582:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"19607:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19578:3:29"},"nodeType":"YulFunctionCall","src":"19578:32:29"},"nodeType":"YulIf","src":"19575:119:29"},{"nodeType":"YulBlock","src":"19704:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"19719:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"19733:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19723:6:29","type":""}]},{"nodeType":"YulAssignment","src":"19748:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19783:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"19794:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19779:3:29"},"nodeType":"YulFunctionCall","src":"19779:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19803:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"19758:20:29"},"nodeType":"YulFunctionCall","src":"19758:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"19748:6:29"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19535:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"19546:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"19558:6:29","type":""}],"src":"19499:329:29"},{"body":{"nodeType":"YulBlock","src":"19916:229:29","statements":[{"body":{"nodeType":"YulBlock","src":"20021:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"20023:16:29"},"nodeType":"YulFunctionCall","src":"20023:18:29"},"nodeType":"YulExpressionStatement","src":"20023:18:29"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"19993:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"20001:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19990:2:29"},"nodeType":"YulFunctionCall","src":"19990:30:29"},"nodeType":"YulIf","src":"19987:56:29"},{"nodeType":"YulAssignment","src":"20053:25:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"20065:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"20073:4:29","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"20061:3:29"},"nodeType":"YulFunctionCall","src":"20061:17:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"20053:4:29"}]},{"nodeType":"YulAssignment","src":"20115:23:29","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"20127:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"20133:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20123:3:29"},"nodeType":"YulFunctionCall","src":"20123:15:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"20115:4:29"}]}]},"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"19900:6:29","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"19911:4:29","type":""}],"src":"19834:311:29"},{"body":{"nodeType":"YulBlock","src":"20270:608:29","statements":[{"nodeType":"YulAssignment","src":"20280:90:29","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"20362:6:29"}],"functionName":{"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"20305:56:29"},"nodeType":"YulFunctionCall","src":"20305:64:29"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"20289:15:29"},"nodeType":"YulFunctionCall","src":"20289:81:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"20280:5:29"}]},{"nodeType":"YulVariableDeclaration","src":"20379:16:29","value":{"name":"array","nodeType":"YulIdentifier","src":"20390:5:29"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"20383:3:29","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"20412:5:29"},{"name":"length","nodeType":"YulIdentifier","src":"20419:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20405:6:29"},"nodeType":"YulFunctionCall","src":"20405:21:29"},"nodeType":"YulExpressionStatement","src":"20405:21:29"},{"nodeType":"YulAssignment","src":"20435:23:29","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"20446:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"20453:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20442:3:29"},"nodeType":"YulFunctionCall","src":"20442:16:29"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"20435:3:29"}]},{"nodeType":"YulVariableDeclaration","src":"20468:44:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"20486:6:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"20498:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"20506:4:29","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"20494:3:29"},"nodeType":"YulFunctionCall","src":"20494:17:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20482:3:29"},"nodeType":"YulFunctionCall","src":"20482:30:29"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"20472:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"20540:103:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"20554:77:29"},"nodeType":"YulFunctionCall","src":"20554:79:29"},"nodeType":"YulExpressionStatement","src":"20554:79:29"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"20527:6:29"},{"name":"end","nodeType":"YulIdentifier","src":"20535:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20524:2:29"},"nodeType":"YulFunctionCall","src":"20524:15:29"},"nodeType":"YulIf","src":"20521:122:29"},{"body":{"nodeType":"YulBlock","src":"20728:144:29","statements":[{"nodeType":"YulVariableDeclaration","src":"20743:21:29","value":{"name":"src","nodeType":"YulIdentifier","src":"20761:3:29"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"20747:10:29","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"20785:3:29"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"20811:10:29"},{"name":"end","nodeType":"YulIdentifier","src":"20823:3:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"20790:20:29"},"nodeType":"YulFunctionCall","src":"20790:37:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20778:6:29"},"nodeType":"YulFunctionCall","src":"20778:50:29"},"nodeType":"YulExpressionStatement","src":"20778:50:29"},{"nodeType":"YulAssignment","src":"20841:21:29","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"20852:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"20857:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20848:3:29"},"nodeType":"YulFunctionCall","src":"20848:14:29"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"20841:3:29"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"20681:3:29"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"20686:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"20678:2:29"},"nodeType":"YulFunctionCall","src":"20678:15:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"20694:25:29","statements":[{"nodeType":"YulAssignment","src":"20696:21:29","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"20707:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"20712:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20703:3:29"},"nodeType":"YulFunctionCall","src":"20703:14:29"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"20696:3:29"}]}]},"pre":{"nodeType":"YulBlock","src":"20656:21:29","statements":[{"nodeType":"YulVariableDeclaration","src":"20658:17:29","value":{"name":"offset","nodeType":"YulIdentifier","src":"20669:6:29"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"20662:3:29","type":""}]}]},"src":"20652:220:29"}]},"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"20240:6:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"20248:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"20256:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"20264:5:29","type":""}],"src":"20168:710:29"},{"body":{"nodeType":"YulBlock","src":"20978:293:29","statements":[{"body":{"nodeType":"YulBlock","src":"21027:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"21029:77:29"},"nodeType":"YulFunctionCall","src":"21029:79:29"},"nodeType":"YulExpressionStatement","src":"21029:79:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"21006:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"21014:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21002:3:29"},"nodeType":"YulFunctionCall","src":"21002:17:29"},{"name":"end","nodeType":"YulIdentifier","src":"21021:3:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20998:3:29"},"nodeType":"YulFunctionCall","src":"20998:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20991:6:29"},"nodeType":"YulFunctionCall","src":"20991:35:29"},"nodeType":"YulIf","src":"20988:122:29"},{"nodeType":"YulVariableDeclaration","src":"21119:34:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"21146:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"21133:12:29"},"nodeType":"YulFunctionCall","src":"21133:20:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"21123:6:29","type":""}]},{"nodeType":"YulAssignment","src":"21162:103:29","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"21238:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"21246:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21234:3:29"},"nodeType":"YulFunctionCall","src":"21234:17:29"},{"name":"length","nodeType":"YulIdentifier","src":"21253:6:29"},{"name":"end","nodeType":"YulIdentifier","src":"21261:3:29"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"21171:62:29"},"nodeType":"YulFunctionCall","src":"21171:94:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"21162:5:29"}]}]},"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"20956:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"20964:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"20972:5:29","type":""}],"src":"20901:370:29"},{"body":{"nodeType":"YulBlock","src":"21356:229:29","statements":[{"body":{"nodeType":"YulBlock","src":"21461:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"21463:16:29"},"nodeType":"YulFunctionCall","src":"21463:18:29"},"nodeType":"YulExpressionStatement","src":"21463:18:29"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"21433:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"21441:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21430:2:29"},"nodeType":"YulFunctionCall","src":"21430:30:29"},"nodeType":"YulIf","src":"21427:56:29"},{"nodeType":"YulAssignment","src":"21493:25:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"21505:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"21513:4:29","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"21501:3:29"},"nodeType":"YulFunctionCall","src":"21501:17:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"21493:4:29"}]},{"nodeType":"YulAssignment","src":"21555:23:29","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"21567:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"21573:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21563:3:29"},"nodeType":"YulFunctionCall","src":"21563:15:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"21555:4:29"}]}]},"name":"array_allocation_size_t_array$_t_bool_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"21340:6:29","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"21351:4:29","type":""}],"src":"21277:308:29"},{"body":{"nodeType":"YulBlock","src":"21704:602:29","statements":[{"nodeType":"YulAssignment","src":"21714:87:29","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"21793:6:29"}],"functionName":{"name":"array_allocation_size_t_array$_t_bool_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"21739:53:29"},"nodeType":"YulFunctionCall","src":"21739:61:29"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"21723:15:29"},"nodeType":"YulFunctionCall","src":"21723:78:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"21714:5:29"}]},{"nodeType":"YulVariableDeclaration","src":"21810:16:29","value":{"name":"array","nodeType":"YulIdentifier","src":"21821:5:29"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"21814:3:29","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"21843:5:29"},{"name":"length","nodeType":"YulIdentifier","src":"21850:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21836:6:29"},"nodeType":"YulFunctionCall","src":"21836:21:29"},"nodeType":"YulExpressionStatement","src":"21836:21:29"},{"nodeType":"YulAssignment","src":"21866:23:29","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"21877:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"21884:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21873:3:29"},"nodeType":"YulFunctionCall","src":"21873:16:29"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"21866:3:29"}]},{"nodeType":"YulVariableDeclaration","src":"21899:44:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"21917:6:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"21929:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"21937:4:29","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"21925:3:29"},"nodeType":"YulFunctionCall","src":"21925:17:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21913:3:29"},"nodeType":"YulFunctionCall","src":"21913:30:29"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"21903:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"21971:103:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"21985:77:29"},"nodeType":"YulFunctionCall","src":"21985:79:29"},"nodeType":"YulExpressionStatement","src":"21985:79:29"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"21958:6:29"},{"name":"end","nodeType":"YulIdentifier","src":"21966:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21955:2:29"},"nodeType":"YulFunctionCall","src":"21955:15:29"},"nodeType":"YulIf","src":"21952:122:29"},{"body":{"nodeType":"YulBlock","src":"22159:141:29","statements":[{"nodeType":"YulVariableDeclaration","src":"22174:21:29","value":{"name":"src","nodeType":"YulIdentifier","src":"22192:3:29"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"22178:10:29","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"22216:3:29"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"22239:10:29"},{"name":"end","nodeType":"YulIdentifier","src":"22251:3:29"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"22221:17:29"},"nodeType":"YulFunctionCall","src":"22221:34:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22209:6:29"},"nodeType":"YulFunctionCall","src":"22209:47:29"},"nodeType":"YulExpressionStatement","src":"22209:47:29"},{"nodeType":"YulAssignment","src":"22269:21:29","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"22280:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"22285:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22276:3:29"},"nodeType":"YulFunctionCall","src":"22276:14:29"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"22269:3:29"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"22112:3:29"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"22117:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"22109:2:29"},"nodeType":"YulFunctionCall","src":"22109:15:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"22125:25:29","statements":[{"nodeType":"YulAssignment","src":"22127:21:29","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"22138:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"22143:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22134:3:29"},"nodeType":"YulFunctionCall","src":"22134:14:29"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"22127:3:29"}]}]},"pre":{"nodeType":"YulBlock","src":"22087:21:29","statements":[{"nodeType":"YulVariableDeclaration","src":"22089:17:29","value":{"name":"offset","nodeType":"YulIdentifier","src":"22100:6:29"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"22093:3:29","type":""}]}]},"src":"22083:217:29"}]},"name":"abi_decode_available_length_t_array$_t_bool_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"21674:6:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"21682:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"21690:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"21698:5:29","type":""}],"src":"21605:701:29"},{"body":{"nodeType":"YulBlock","src":"22400:290:29","statements":[{"body":{"nodeType":"YulBlock","src":"22449:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"22451:77:29"},"nodeType":"YulFunctionCall","src":"22451:79:29"},"nodeType":"YulExpressionStatement","src":"22451:79:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22428:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"22436:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22424:3:29"},"nodeType":"YulFunctionCall","src":"22424:17:29"},{"name":"end","nodeType":"YulIdentifier","src":"22443:3:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"22420:3:29"},"nodeType":"YulFunctionCall","src":"22420:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22413:6:29"},"nodeType":"YulFunctionCall","src":"22413:35:29"},"nodeType":"YulIf","src":"22410:122:29"},{"nodeType":"YulVariableDeclaration","src":"22541:34:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22568:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"22555:12:29"},"nodeType":"YulFunctionCall","src":"22555:20:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"22545:6:29","type":""}]},{"nodeType":"YulAssignment","src":"22584:100:29","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22657:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"22665:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22653:3:29"},"nodeType":"YulFunctionCall","src":"22653:17:29"},{"name":"length","nodeType":"YulIdentifier","src":"22672:6:29"},{"name":"end","nodeType":"YulIdentifier","src":"22680:3:29"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_bool_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"22593:59:29"},"nodeType":"YulFunctionCall","src":"22593:91:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"22584:5:29"}]}]},"name":"abi_decode_t_array$_t_bool_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"22378:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"22386:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"22394:5:29","type":""}],"src":"22326:364:29"},{"body":{"nodeType":"YulBlock","src":"22787:229:29","statements":[{"body":{"nodeType":"YulBlock","src":"22892:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"22894:16:29"},"nodeType":"YulFunctionCall","src":"22894:18:29"},"nodeType":"YulExpressionStatement","src":"22894:18:29"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"22864:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"22872:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22861:2:29"},"nodeType":"YulFunctionCall","src":"22861:30:29"},"nodeType":"YulIf","src":"22858:56:29"},{"nodeType":"YulAssignment","src":"22924:25:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"22936:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"22944:4:29","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"22932:3:29"},"nodeType":"YulFunctionCall","src":"22932:17:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"22924:4:29"}]},{"nodeType":"YulAssignment","src":"22986:23:29","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"22998:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"23004:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22994:3:29"},"nodeType":"YulFunctionCall","src":"22994:15:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"22986:4:29"}]}]},"name":"array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"22771:6:29","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"22782:4:29","type":""}],"src":"22696:320:29"},{"body":{"nodeType":"YulBlock","src":"23148:831:29","statements":[{"nodeType":"YulAssignment","src":"23158:99:29","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"23249:6:29"}],"functionName":{"name":"array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"23183:65:29"},"nodeType":"YulFunctionCall","src":"23183:73:29"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"23167:15:29"},"nodeType":"YulFunctionCall","src":"23167:90:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"23158:5:29"}]},{"nodeType":"YulVariableDeclaration","src":"23266:16:29","value":{"name":"array","nodeType":"YulIdentifier","src":"23277:5:29"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"23270:3:29","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"23299:5:29"},{"name":"length","nodeType":"YulIdentifier","src":"23306:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23292:6:29"},"nodeType":"YulFunctionCall","src":"23292:21:29"},"nodeType":"YulExpressionStatement","src":"23292:21:29"},{"nodeType":"YulAssignment","src":"23322:23:29","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"23333:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"23340:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23329:3:29"},"nodeType":"YulFunctionCall","src":"23329:16:29"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"23322:3:29"}]},{"nodeType":"YulVariableDeclaration","src":"23355:44:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"23373:6:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"23385:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"23393:4:29","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"23381:3:29"},"nodeType":"YulFunctionCall","src":"23381:17:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23369:3:29"},"nodeType":"YulFunctionCall","src":"23369:30:29"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"23359:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"23427:103:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"23441:77:29"},"nodeType":"YulFunctionCall","src":"23441:79:29"},"nodeType":"YulExpressionStatement","src":"23441:79:29"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"23414:6:29"},{"name":"end","nodeType":"YulIdentifier","src":"23422:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23411:2:29"},"nodeType":"YulFunctionCall","src":"23411:15:29"},"nodeType":"YulIf","src":"23408:122:29"},{"body":{"nodeType":"YulBlock","src":"23615:358:29","statements":[{"nodeType":"YulVariableDeclaration","src":"23630:36:29","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"23662:3:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"23649:12:29"},"nodeType":"YulFunctionCall","src":"23649:17:29"},"variables":[{"name":"innerOffset","nodeType":"YulTypedName","src":"23634:11:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"23718:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"23720:77:29"},"nodeType":"YulFunctionCall","src":"23720:79:29"},"nodeType":"YulExpressionStatement","src":"23720:79:29"}]},"condition":{"arguments":[{"name":"innerOffset","nodeType":"YulIdentifier","src":"23685:11:29"},{"kind":"number","nodeType":"YulLiteral","src":"23698:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23682:2:29"},"nodeType":"YulFunctionCall","src":"23682:35:29"},"nodeType":"YulIf","src":"23679:122:29"},{"nodeType":"YulVariableDeclaration","src":"23814:42:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"23836:6:29"},{"name":"innerOffset","nodeType":"YulIdentifier","src":"23844:11:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23832:3:29"},"nodeType":"YulFunctionCall","src":"23832:24:29"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"23818:10:29","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"23877:3:29"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"23912:10:29"},{"name":"end","nodeType":"YulIdentifier","src":"23924:3:29"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"23882:29:29"},"nodeType":"YulFunctionCall","src":"23882:46:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23870:6:29"},"nodeType":"YulFunctionCall","src":"23870:59:29"},"nodeType":"YulExpressionStatement","src":"23870:59:29"},{"nodeType":"YulAssignment","src":"23942:21:29","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"23953:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"23958:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23949:3:29"},"nodeType":"YulFunctionCall","src":"23949:14:29"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"23942:3:29"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"23568:3:29"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"23573:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"23565:2:29"},"nodeType":"YulFunctionCall","src":"23565:15:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"23581:25:29","statements":[{"nodeType":"YulAssignment","src":"23583:21:29","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"23594:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"23599:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23590:3:29"},"nodeType":"YulFunctionCall","src":"23590:14:29"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"23583:3:29"}]}]},"pre":{"nodeType":"YulBlock","src":"23543:21:29","statements":[{"nodeType":"YulVariableDeclaration","src":"23545:17:29","value":{"name":"offset","nodeType":"YulIdentifier","src":"23556:6:29"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"23549:3:29","type":""}]}]},"src":"23539:434:29"}]},"name":"abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"23118:6:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"23126:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"23134:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"23142:5:29","type":""}],"src":"23037:942:29"},{"body":{"nodeType":"YulBlock","src":"24086:302:29","statements":[{"body":{"nodeType":"YulBlock","src":"24135:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"24137:77:29"},"nodeType":"YulFunctionCall","src":"24137:79:29"},"nodeType":"YulExpressionStatement","src":"24137:79:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"24114:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"24122:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24110:3:29"},"nodeType":"YulFunctionCall","src":"24110:17:29"},{"name":"end","nodeType":"YulIdentifier","src":"24129:3:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"24106:3:29"},"nodeType":"YulFunctionCall","src":"24106:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24099:6:29"},"nodeType":"YulFunctionCall","src":"24099:35:29"},"nodeType":"YulIf","src":"24096:122:29"},{"nodeType":"YulVariableDeclaration","src":"24227:34:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"24254:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"24241:12:29"},"nodeType":"YulFunctionCall","src":"24241:20:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"24231:6:29","type":""}]},{"nodeType":"YulAssignment","src":"24270:112:29","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"24355:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"24363:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24351:3:29"},"nodeType":"YulFunctionCall","src":"24351:17:29"},{"name":"length","nodeType":"YulIdentifier","src":"24370:6:29"},{"name":"end","nodeType":"YulIdentifier","src":"24378:3:29"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"24279:71:29"},"nodeType":"YulFunctionCall","src":"24279:103:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"24270:5:29"}]}]},"name":"abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"24064:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"24072:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"24080:5:29","type":""}],"src":"24000:388:29"},{"body":{"nodeType":"YulBlock","src":"24659:1708:29","statements":[{"body":{"nodeType":"YulBlock","src":"24706:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"24708:77:29"},"nodeType":"YulFunctionCall","src":"24708:79:29"},"nodeType":"YulExpressionStatement","src":"24708:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"24680:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"24689:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24676:3:29"},"nodeType":"YulFunctionCall","src":"24676:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"24701:3:29","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"24672:3:29"},"nodeType":"YulFunctionCall","src":"24672:33:29"},"nodeType":"YulIf","src":"24669:120:29"},{"nodeType":"YulBlock","src":"24799:302:29","statements":[{"nodeType":"YulVariableDeclaration","src":"24814:45:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24845:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"24856:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24841:3:29"},"nodeType":"YulFunctionCall","src":"24841:17:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"24828:12:29"},"nodeType":"YulFunctionCall","src":"24828:31:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"24818:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"24906:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"24908:77:29"},"nodeType":"YulFunctionCall","src":"24908:79:29"},"nodeType":"YulExpressionStatement","src":"24908:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"24878:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"24886:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24875:2:29"},"nodeType":"YulFunctionCall","src":"24875:30:29"},"nodeType":"YulIf","src":"24872:117:29"},{"nodeType":"YulAssignment","src":"25003:88:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25063:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"25074:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25059:3:29"},"nodeType":"YulFunctionCall","src":"25059:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"25083:7:29"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"25013:45:29"},"nodeType":"YulFunctionCall","src":"25013:78:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"25003:6:29"}]}]},{"nodeType":"YulBlock","src":"25111:303:29","statements":[{"nodeType":"YulVariableDeclaration","src":"25126:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25157:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"25168:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25153:3:29"},"nodeType":"YulFunctionCall","src":"25153:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"25140:12:29"},"nodeType":"YulFunctionCall","src":"25140:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"25130:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"25219:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"25221:77:29"},"nodeType":"YulFunctionCall","src":"25221:79:29"},"nodeType":"YulExpressionStatement","src":"25221:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"25191:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"25199:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25188:2:29"},"nodeType":"YulFunctionCall","src":"25188:30:29"},"nodeType":"YulIf","src":"25185:117:29"},{"nodeType":"YulAssignment","src":"25316:88:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25376:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"25387:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25372:3:29"},"nodeType":"YulFunctionCall","src":"25372:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"25396:7:29"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"25326:45:29"},"nodeType":"YulFunctionCall","src":"25326:78:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"25316:6:29"}]}]},{"nodeType":"YulBlock","src":"25424:303:29","statements":[{"nodeType":"YulVariableDeclaration","src":"25439:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25470:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"25481:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25466:3:29"},"nodeType":"YulFunctionCall","src":"25466:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"25453:12:29"},"nodeType":"YulFunctionCall","src":"25453:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"25443:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"25532:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"25534:77:29"},"nodeType":"YulFunctionCall","src":"25534:79:29"},"nodeType":"YulExpressionStatement","src":"25534:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"25504:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"25512:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25501:2:29"},"nodeType":"YulFunctionCall","src":"25501:30:29"},"nodeType":"YulIf","src":"25498:117:29"},{"nodeType":"YulAssignment","src":"25629:88:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25689:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"25700:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25685:3:29"},"nodeType":"YulFunctionCall","src":"25685:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"25709:7:29"}],"functionName":{"name":"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"25639:45:29"},"nodeType":"YulFunctionCall","src":"25639:78:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"25629:6:29"}]}]},{"nodeType":"YulBlock","src":"25737:300:29","statements":[{"nodeType":"YulVariableDeclaration","src":"25752:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25783:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"25794:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25779:3:29"},"nodeType":"YulFunctionCall","src":"25779:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"25766:12:29"},"nodeType":"YulFunctionCall","src":"25766:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"25756:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"25845:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"25847:77:29"},"nodeType":"YulFunctionCall","src":"25847:79:29"},"nodeType":"YulExpressionStatement","src":"25847:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"25817:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"25825:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25814:2:29"},"nodeType":"YulFunctionCall","src":"25814:30:29"},"nodeType":"YulIf","src":"25811:117:29"},{"nodeType":"YulAssignment","src":"25942:85:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25999:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"26010:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25995:3:29"},"nodeType":"YulFunctionCall","src":"25995:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"26019:7:29"}],"functionName":{"name":"abi_decode_t_array$_t_bool_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"25952:42:29"},"nodeType":"YulFunctionCall","src":"25952:75:29"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"25942:6:29"}]}]},{"nodeType":"YulBlock","src":"26047:313:29","statements":[{"nodeType":"YulVariableDeclaration","src":"26062:47:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26093:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"26104:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26089:3:29"},"nodeType":"YulFunctionCall","src":"26089:19:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"26076:12:29"},"nodeType":"YulFunctionCall","src":"26076:33:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"26066:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"26156:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"26158:77:29"},"nodeType":"YulFunctionCall","src":"26158:79:29"},"nodeType":"YulExpressionStatement","src":"26158:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"26128:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"26136:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"26125:2:29"},"nodeType":"YulFunctionCall","src":"26125:30:29"},"nodeType":"YulIf","src":"26122:117:29"},{"nodeType":"YulAssignment","src":"26253:97:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26322:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"26333:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26318:3:29"},"nodeType":"YulFunctionCall","src":"26318:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"26342:7:29"}],"functionName":{"name":"abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"26263:54:29"},"nodeType":"YulFunctionCall","src":"26263:87:29"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"26253:6:29"}]}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bool_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24597:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"24608:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"24620:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24628:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"24636:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"24644:6:29","type":""},{"name":"value4","nodeType":"YulTypedName","src":"24652:6:29","type":""}],"src":"24394:1973:29"},{"body":{"nodeType":"YulBlock","src":"26465:560:29","statements":[{"body":{"nodeType":"YulBlock","src":"26511:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"26513:77:29"},"nodeType":"YulFunctionCall","src":"26513:79:29"},"nodeType":"YulExpressionStatement","src":"26513:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"26486:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"26495:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26482:3:29"},"nodeType":"YulFunctionCall","src":"26482:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"26507:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"26478:3:29"},"nodeType":"YulFunctionCall","src":"26478:32:29"},"nodeType":"YulIf","src":"26475:119:29"},{"nodeType":"YulBlock","src":"26604:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"26619:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"26633:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"26623:6:29","type":""}]},{"nodeType":"YulAssignment","src":"26648:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26683:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"26694:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26679:3:29"},"nodeType":"YulFunctionCall","src":"26679:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"26703:7:29"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"26658:20:29"},"nodeType":"YulFunctionCall","src":"26658:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"26648:6:29"}]}]},{"nodeType":"YulBlock","src":"26731:287:29","statements":[{"nodeType":"YulVariableDeclaration","src":"26746:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26777:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"26788:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26773:3:29"},"nodeType":"YulFunctionCall","src":"26773:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"26760:12:29"},"nodeType":"YulFunctionCall","src":"26760:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"26750:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"26839:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"26841:77:29"},"nodeType":"YulFunctionCall","src":"26841:79:29"},"nodeType":"YulExpressionStatement","src":"26841:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"26811:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"26819:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"26808:2:29"},"nodeType":"YulFunctionCall","src":"26808:30:29"},"nodeType":"YulIf","src":"26805:117:29"},{"nodeType":"YulAssignment","src":"26936:72:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26980:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"26991:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26976:3:29"},"nodeType":"YulFunctionCall","src":"26976:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"27000:7:29"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"26946:29:29"},"nodeType":"YulFunctionCall","src":"26946:62:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"26936:6:29"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26427:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"26438:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"26450:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26458:6:29","type":""}],"src":"26373:652:29"},{"body":{"nodeType":"YulBlock","src":"27140:688:29","statements":[{"body":{"nodeType":"YulBlock","src":"27186:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"27188:77:29"},"nodeType":"YulFunctionCall","src":"27188:79:29"},"nodeType":"YulExpressionStatement","src":"27188:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"27161:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"27170:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27157:3:29"},"nodeType":"YulFunctionCall","src":"27157:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"27182:2:29","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"27153:3:29"},"nodeType":"YulFunctionCall","src":"27153:32:29"},"nodeType":"YulIf","src":"27150:119:29"},{"nodeType":"YulBlock","src":"27279:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"27294:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"27308:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"27298:6:29","type":""}]},{"nodeType":"YulAssignment","src":"27323:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27358:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"27369:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27354:3:29"},"nodeType":"YulFunctionCall","src":"27354:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"27378:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"27333:20:29"},"nodeType":"YulFunctionCall","src":"27333:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"27323:6:29"}]}]},{"nodeType":"YulBlock","src":"27406:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"27421:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"27435:2:29","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"27425:6:29","type":""}]},{"nodeType":"YulAssignment","src":"27451:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27486:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"27497:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27482:3:29"},"nodeType":"YulFunctionCall","src":"27482:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"27506:7:29"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"27461:20:29"},"nodeType":"YulFunctionCall","src":"27461:53:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"27451:6:29"}]}]},{"nodeType":"YulBlock","src":"27534:287:29","statements":[{"nodeType":"YulVariableDeclaration","src":"27549:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27580:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"27591:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27576:3:29"},"nodeType":"YulFunctionCall","src":"27576:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"27563:12:29"},"nodeType":"YulFunctionCall","src":"27563:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"27553:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"27642:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"27644:77:29"},"nodeType":"YulFunctionCall","src":"27644:79:29"},"nodeType":"YulExpressionStatement","src":"27644:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"27614:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"27622:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"27611:2:29"},"nodeType":"YulFunctionCall","src":"27611:30:29"},"nodeType":"YulIf","src":"27608:117:29"},{"nodeType":"YulAssignment","src":"27739:72:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27783:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"27794:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27779:3:29"},"nodeType":"YulFunctionCall","src":"27779:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"27803:7:29"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"27749:29:29"},"nodeType":"YulFunctionCall","src":"27749:62:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"27739:6:29"}]}]}]},"name":"abi_decode_tuple_t_addresst_bytes32t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27094:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"27105:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"27117:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"27125:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"27133:6:29","type":""}],"src":"27031:797:29"},{"body":{"nodeType":"YulBlock","src":"27976:770:29","statements":[{"body":{"nodeType":"YulBlock","src":"28022:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"28024:77:29"},"nodeType":"YulFunctionCall","src":"28024:79:29"},"nodeType":"YulExpressionStatement","src":"28024:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"27997:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"28006:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27993:3:29"},"nodeType":"YulFunctionCall","src":"27993:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"28018:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"27989:3:29"},"nodeType":"YulFunctionCall","src":"27989:32:29"},"nodeType":"YulIf","src":"27986:119:29"},{"nodeType":"YulBlock","src":"28115:302:29","statements":[{"nodeType":"YulVariableDeclaration","src":"28130:45:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28161:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"28172:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28157:3:29"},"nodeType":"YulFunctionCall","src":"28157:17:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"28144:12:29"},"nodeType":"YulFunctionCall","src":"28144:31:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"28134:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"28222:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"28224:77:29"},"nodeType":"YulFunctionCall","src":"28224:79:29"},"nodeType":"YulExpressionStatement","src":"28224:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"28194:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"28202:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"28191:2:29"},"nodeType":"YulFunctionCall","src":"28191:30:29"},"nodeType":"YulIf","src":"28188:117:29"},{"nodeType":"YulAssignment","src":"28319:88:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28379:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"28390:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28375:3:29"},"nodeType":"YulFunctionCall","src":"28375:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"28399:7:29"}],"functionName":{"name":"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"28329:45:29"},"nodeType":"YulFunctionCall","src":"28329:78:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"28319:6:29"}]}]},{"nodeType":"YulBlock","src":"28427:312:29","statements":[{"nodeType":"YulVariableDeclaration","src":"28442:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28473:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"28484:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28469:3:29"},"nodeType":"YulFunctionCall","src":"28469:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"28456:12:29"},"nodeType":"YulFunctionCall","src":"28456:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"28446:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"28535:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"28537:77:29"},"nodeType":"YulFunctionCall","src":"28537:79:29"},"nodeType":"YulExpressionStatement","src":"28537:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"28507:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"28515:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"28504:2:29"},"nodeType":"YulFunctionCall","src":"28504:30:29"},"nodeType":"YulIf","src":"28501:117:29"},{"nodeType":"YulAssignment","src":"28632:97:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28701:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"28712:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28697:3:29"},"nodeType":"YulFunctionCall","src":"28697:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"28721:7:29"}],"functionName":{"name":"abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"28642:54:29"},"nodeType":"YulFunctionCall","src":"28642:87:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"28632:6:29"}]}]}]},"name":"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27938:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"27949:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"27961:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"27969:6:29","type":""}],"src":"27834:912:29"},{"body":{"nodeType":"YulBlock","src":"28826:40:29","statements":[{"nodeType":"YulAssignment","src":"28837:22:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28853:5:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"28847:5:29"},"nodeType":"YulFunctionCall","src":"28847:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"28837:6:29"}]}]},"name":"array_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28809:5:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"28819:6:29","type":""}],"src":"28752:114:29"},{"body":{"nodeType":"YulBlock","src":"28983:73:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29000:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"29005:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28993:6:29"},"nodeType":"YulFunctionCall","src":"28993:19:29"},"nodeType":"YulExpressionStatement","src":"28993:19:29"},{"nodeType":"YulAssignment","src":"29021:29:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29040:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"29045:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29036:3:29"},"nodeType":"YulFunctionCall","src":"29036:14:29"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"29021:11:29"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28955:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"28960:6:29","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"28971:11:29","type":""}],"src":"28872:184:29"},{"body":{"nodeType":"YulBlock","src":"29134:60:29","statements":[{"nodeType":"YulAssignment","src":"29144:11:29","value":{"name":"ptr","nodeType":"YulIdentifier","src":"29152:3:29"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"29144:4:29"}]},{"nodeType":"YulAssignment","src":"29165:22:29","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"29177:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"29182:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29173:3:29"},"nodeType":"YulFunctionCall","src":"29173:14:29"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"29165:4:29"}]}]},"name":"array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"29121:3:29","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"29129:4:29","type":""}],"src":"29062:132:29"},{"body":{"nodeType":"YulBlock","src":"29255:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29272:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29295:5:29"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"29277:17:29"},"nodeType":"YulFunctionCall","src":"29277:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29265:6:29"},"nodeType":"YulFunctionCall","src":"29265:37:29"},"nodeType":"YulExpressionStatement","src":"29265:37:29"}]},"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29243:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"29250:3:29","type":""}],"src":"29200:108:29"},{"body":{"nodeType":"YulBlock","src":"29394:99:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"29438:6:29"},{"name":"pos","nodeType":"YulIdentifier","src":"29446:3:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulIdentifier","src":"29404:33:29"},"nodeType":"YulFunctionCall","src":"29404:46:29"},"nodeType":"YulExpressionStatement","src":"29404:46:29"},{"nodeType":"YulAssignment","src":"29459:28:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29477:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"29482:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29473:3:29"},"nodeType":"YulFunctionCall","src":"29473:14:29"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"29459:10:29"}]}]},"name":"abi_encodeUpdatedPos_t_bytes32_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"29367:6:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"29375:3:29","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"29383:10:29","type":""}],"src":"29314:179:29"},{"body":{"nodeType":"YulBlock","src":"29574:38:29","statements":[{"nodeType":"YulAssignment","src":"29584:22:29","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"29596:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"29601:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29592:3:29"},"nodeType":"YulFunctionCall","src":"29592:14:29"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"29584:4:29"}]}]},"name":"array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"29561:3:29","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"29569:4:29","type":""}],"src":"29499:113:29"},{"body":{"nodeType":"YulBlock","src":"29772:608:29","statements":[{"nodeType":"YulVariableDeclaration","src":"29782:68:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29844:5:29"}],"functionName":{"name":"array_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"29796:47:29"},"nodeType":"YulFunctionCall","src":"29796:54:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"29786:6:29","type":""}]},{"nodeType":"YulAssignment","src":"29859:93:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29940:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"29945:6:29"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29866:73:29"},"nodeType":"YulFunctionCall","src":"29866:86:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29859:3:29"}]},{"nodeType":"YulVariableDeclaration","src":"29961:71:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30026:5:29"}],"functionName":{"name":"array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"29976:49:29"},"nodeType":"YulFunctionCall","src":"29976:56:29"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"29965:7:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"30041:21:29","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"30055:7:29"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"30045:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"30131:224:29","statements":[{"nodeType":"YulVariableDeclaration","src":"30145:34:29","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"30172:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"30166:5:29"},"nodeType":"YulFunctionCall","src":"30166:13:29"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"30149:13:29","type":""}]},{"nodeType":"YulAssignment","src":"30192:70:29","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"30243:13:29"},{"name":"pos","nodeType":"YulIdentifier","src":"30258:3:29"}],"functionName":{"name":"abi_encodeUpdatedPos_t_bytes32_to_t_bytes32","nodeType":"YulIdentifier","src":"30199:43:29"},"nodeType":"YulFunctionCall","src":"30199:63:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30192:3:29"}]},{"nodeType":"YulAssignment","src":"30275:70:29","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"30338:6:29"}],"functionName":{"name":"array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"30285:52:29"},"nodeType":"YulFunctionCall","src":"30285:60:29"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"30275:6:29"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"30093:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"30096:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"30090:2:29"},"nodeType":"YulFunctionCall","src":"30090:13:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"30104:18:29","statements":[{"nodeType":"YulAssignment","src":"30106:14:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"30115:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"30118:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30111:3:29"},"nodeType":"YulFunctionCall","src":"30111:9:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"30106:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"30075:14:29","statements":[{"nodeType":"YulVariableDeclaration","src":"30077:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"30086:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"30081:1:29","type":""}]}]},"src":"30071:284:29"},{"nodeType":"YulAssignment","src":"30364:10:29","value":{"name":"pos","nodeType":"YulIdentifier","src":"30371:3:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30364:3:29"}]}]},"name":"abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29751:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"29758:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29767:3:29","type":""}],"src":"29648:732:29"},{"body":{"nodeType":"YulBlock","src":"30534:225:29","statements":[{"nodeType":"YulAssignment","src":"30544:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30556:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"30567:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30552:3:29"},"nodeType":"YulFunctionCall","src":"30552:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30544:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30591:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"30602:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30587:3:29"},"nodeType":"YulFunctionCall","src":"30587:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30610:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"30616:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30606:3:29"},"nodeType":"YulFunctionCall","src":"30606:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30580:6:29"},"nodeType":"YulFunctionCall","src":"30580:47:29"},"nodeType":"YulExpressionStatement","src":"30580:47:29"},{"nodeType":"YulAssignment","src":"30636:116:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"30738:6:29"},{"name":"tail","nodeType":"YulIdentifier","src":"30747:4:29"}],"functionName":{"name":"abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30644:93:29"},"nodeType":"YulFunctionCall","src":"30644:108:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30636:4:29"}]}]},"name":"abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30506:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"30518:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30529:4:29","type":""}],"src":"30386:373:29"},{"body":{"nodeType":"YulBlock","src":"30888:814:29","statements":[{"body":{"nodeType":"YulBlock","src":"30935:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"30937:77:29"},"nodeType":"YulFunctionCall","src":"30937:79:29"},"nodeType":"YulExpressionStatement","src":"30937:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"30909:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"30918:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30905:3:29"},"nodeType":"YulFunctionCall","src":"30905:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"30930:3:29","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"30901:3:29"},"nodeType":"YulFunctionCall","src":"30901:33:29"},"nodeType":"YulIf","src":"30898:120:29"},{"nodeType":"YulBlock","src":"31028:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"31043:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"31057:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"31047:6:29","type":""}]},{"nodeType":"YulAssignment","src":"31072:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31107:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"31118:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31103:3:29"},"nodeType":"YulFunctionCall","src":"31103:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"31127:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"31082:20:29"},"nodeType":"YulFunctionCall","src":"31082:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"31072:6:29"}]}]},{"nodeType":"YulBlock","src":"31155:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"31170:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"31184:2:29","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"31174:6:29","type":""}]},{"nodeType":"YulAssignment","src":"31200:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31235:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"31246:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31231:3:29"},"nodeType":"YulFunctionCall","src":"31231:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"31255:7:29"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"31210:20:29"},"nodeType":"YulFunctionCall","src":"31210:53:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"31200:6:29"}]}]},{"nodeType":"YulBlock","src":"31283:115:29","statements":[{"nodeType":"YulVariableDeclaration","src":"31298:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"31312:2:29","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"31302:6:29","type":""}]},{"nodeType":"YulAssignment","src":"31328:60:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31360:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"31371:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31356:3:29"},"nodeType":"YulFunctionCall","src":"31356:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"31380:7:29"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"31338:17:29"},"nodeType":"YulFunctionCall","src":"31338:50:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"31328:6:29"}]}]},{"nodeType":"YulBlock","src":"31408:287:29","statements":[{"nodeType":"YulVariableDeclaration","src":"31423:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31454:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"31465:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31450:3:29"},"nodeType":"YulFunctionCall","src":"31450:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"31437:12:29"},"nodeType":"YulFunctionCall","src":"31437:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"31427:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"31516:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"31518:77:29"},"nodeType":"YulFunctionCall","src":"31518:79:29"},"nodeType":"YulExpressionStatement","src":"31518:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"31488:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"31496:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"31485:2:29"},"nodeType":"YulFunctionCall","src":"31485:30:29"},"nodeType":"YulIf","src":"31482:117:29"},{"nodeType":"YulAssignment","src":"31613:72:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31657:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"31668:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31653:3:29"},"nodeType":"YulFunctionCall","src":"31653:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"31677:7:29"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"31623:29:29"},"nodeType":"YulFunctionCall","src":"31623:62:29"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"31613:6:29"}]}]}]},"name":"abi_decode_tuple_t_addresst_bytes32t_boolt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30834:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"30845:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"30857:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"30865:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"30873:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"30881:6:29","type":""}],"src":"30765:937:29"},{"body":{"nodeType":"YulBlock","src":"31892:1083:29","statements":[{"body":{"nodeType":"YulBlock","src":"31938:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"31940:77:29"},"nodeType":"YulFunctionCall","src":"31940:79:29"},"nodeType":"YulExpressionStatement","src":"31940:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"31913:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"31922:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31909:3:29"},"nodeType":"YulFunctionCall","src":"31909:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"31934:2:29","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"31905:3:29"},"nodeType":"YulFunctionCall","src":"31905:32:29"},"nodeType":"YulIf","src":"31902:119:29"},{"nodeType":"YulBlock","src":"32031:302:29","statements":[{"nodeType":"YulVariableDeclaration","src":"32046:45:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32077:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"32088:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32073:3:29"},"nodeType":"YulFunctionCall","src":"32073:17:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"32060:12:29"},"nodeType":"YulFunctionCall","src":"32060:31:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"32050:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"32138:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"32140:77:29"},"nodeType":"YulFunctionCall","src":"32140:79:29"},"nodeType":"YulExpressionStatement","src":"32140:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"32110:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"32118:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"32107:2:29"},"nodeType":"YulFunctionCall","src":"32107:30:29"},"nodeType":"YulIf","src":"32104:117:29"},{"nodeType":"YulAssignment","src":"32235:88:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32295:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"32306:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32291:3:29"},"nodeType":"YulFunctionCall","src":"32291:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"32315:7:29"}],"functionName":{"name":"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"32245:45:29"},"nodeType":"YulFunctionCall","src":"32245:78:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"32235:6:29"}]}]},{"nodeType":"YulBlock","src":"32343:303:29","statements":[{"nodeType":"YulVariableDeclaration","src":"32358:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32389:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"32400:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32385:3:29"},"nodeType":"YulFunctionCall","src":"32385:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"32372:12:29"},"nodeType":"YulFunctionCall","src":"32372:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"32362:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"32451:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"32453:77:29"},"nodeType":"YulFunctionCall","src":"32453:79:29"},"nodeType":"YulExpressionStatement","src":"32453:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"32423:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"32431:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"32420:2:29"},"nodeType":"YulFunctionCall","src":"32420:30:29"},"nodeType":"YulIf","src":"32417:117:29"},{"nodeType":"YulAssignment","src":"32548:88:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32608:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"32619:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32604:3:29"},"nodeType":"YulFunctionCall","src":"32604:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"32628:7:29"}],"functionName":{"name":"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"32558:45:29"},"nodeType":"YulFunctionCall","src":"32558:78:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"32548:6:29"}]}]},{"nodeType":"YulBlock","src":"32656:312:29","statements":[{"nodeType":"YulVariableDeclaration","src":"32671:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32702:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"32713:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32698:3:29"},"nodeType":"YulFunctionCall","src":"32698:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"32685:12:29"},"nodeType":"YulFunctionCall","src":"32685:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"32675:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"32764:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"32766:77:29"},"nodeType":"YulFunctionCall","src":"32766:79:29"},"nodeType":"YulExpressionStatement","src":"32766:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"32736:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"32744:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"32733:2:29"},"nodeType":"YulFunctionCall","src":"32733:30:29"},"nodeType":"YulIf","src":"32730:117:29"},{"nodeType":"YulAssignment","src":"32861:97:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32930:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"32941:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32926:3:29"},"nodeType":"YulFunctionCall","src":"32926:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"32950:7:29"}],"functionName":{"name":"abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"32871:54:29"},"nodeType":"YulFunctionCall","src":"32871:87:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"32861:6:29"}]}]}]},"name":"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31846:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"31857:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"31869:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"31877:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"31885:6:29","type":""}],"src":"31708:1267:29"},{"body":{"nodeType":"YulBlock","src":"33090:688:29","statements":[{"body":{"nodeType":"YulBlock","src":"33136:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"33138:77:29"},"nodeType":"YulFunctionCall","src":"33138:79:29"},"nodeType":"YulExpressionStatement","src":"33138:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"33111:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"33120:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33107:3:29"},"nodeType":"YulFunctionCall","src":"33107:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"33132:2:29","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"33103:3:29"},"nodeType":"YulFunctionCall","src":"33103:32:29"},"nodeType":"YulIf","src":"33100:119:29"},{"nodeType":"YulBlock","src":"33229:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"33244:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"33258:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"33248:6:29","type":""}]},{"nodeType":"YulAssignment","src":"33273:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33308:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"33319:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33304:3:29"},"nodeType":"YulFunctionCall","src":"33304:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"33328:7:29"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"33283:20:29"},"nodeType":"YulFunctionCall","src":"33283:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"33273:6:29"}]}]},{"nodeType":"YulBlock","src":"33356:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"33371:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"33385:2:29","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"33375:6:29","type":""}]},{"nodeType":"YulAssignment","src":"33401:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33436:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"33447:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33432:3:29"},"nodeType":"YulFunctionCall","src":"33432:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"33456:7:29"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"33411:20:29"},"nodeType":"YulFunctionCall","src":"33411:53:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"33401:6:29"}]}]},{"nodeType":"YulBlock","src":"33484:287:29","statements":[{"nodeType":"YulVariableDeclaration","src":"33499:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33530:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"33541:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33526:3:29"},"nodeType":"YulFunctionCall","src":"33526:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"33513:12:29"},"nodeType":"YulFunctionCall","src":"33513:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"33503:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"33592:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"33594:77:29"},"nodeType":"YulFunctionCall","src":"33594:79:29"},"nodeType":"YulExpressionStatement","src":"33594:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"33564:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"33572:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"33561:2:29"},"nodeType":"YulFunctionCall","src":"33561:30:29"},"nodeType":"YulIf","src":"33558:117:29"},{"nodeType":"YulAssignment","src":"33689:72:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33733:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"33744:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33729:3:29"},"nodeType":"YulFunctionCall","src":"33729:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"33753:7:29"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"33699:29:29"},"nodeType":"YulFunctionCall","src":"33699:62:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"33689:6:29"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_bytes32t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33044:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"33055:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"33067:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"33075:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"33083:6:29","type":""}],"src":"32981:797:29"},{"body":{"nodeType":"YulBlock","src":"33875:448:29","statements":[{"body":{"nodeType":"YulBlock","src":"33921:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"33923:77:29"},"nodeType":"YulFunctionCall","src":"33923:79:29"},"nodeType":"YulExpressionStatement","src":"33923:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"33896:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"33905:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33892:3:29"},"nodeType":"YulFunctionCall","src":"33892:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"33917:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"33888:3:29"},"nodeType":"YulFunctionCall","src":"33888:32:29"},"nodeType":"YulIf","src":"33885:119:29"},{"nodeType":"YulBlock","src":"34014:302:29","statements":[{"nodeType":"YulVariableDeclaration","src":"34029:45:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34060:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"34071:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34056:3:29"},"nodeType":"YulFunctionCall","src":"34056:17:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"34043:12:29"},"nodeType":"YulFunctionCall","src":"34043:31:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"34033:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"34121:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"34123:77:29"},"nodeType":"YulFunctionCall","src":"34123:79:29"},"nodeType":"YulExpressionStatement","src":"34123:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"34093:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"34101:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"34090:2:29"},"nodeType":"YulFunctionCall","src":"34090:30:29"},"nodeType":"YulIf","src":"34087:117:29"},{"nodeType":"YulAssignment","src":"34218:88:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34278:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"34289:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34274:3:29"},"nodeType":"YulFunctionCall","src":"34274:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"34298:7:29"}],"functionName":{"name":"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"34228:45:29"},"nodeType":"YulFunctionCall","src":"34228:78:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"34218:6:29"}]}]}]},"name":"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33845:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"33856:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"33868:6:29","type":""}],"src":"33784:539:29"},{"body":{"nodeType":"YulBlock","src":"34392:52:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34409:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34431:5:29"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"34414:16:29"},"nodeType":"YulFunctionCall","src":"34414:23:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34402:6:29"},"nodeType":"YulFunctionCall","src":"34402:36:29"},"nodeType":"YulExpressionStatement","src":"34402:36:29"}]},"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34380:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"34387:3:29","type":""}],"src":"34329:115:29"},{"body":{"nodeType":"YulBlock","src":"34546:122:29","statements":[{"nodeType":"YulAssignment","src":"34556:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34568:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"34579:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34564:3:29"},"nodeType":"YulFunctionCall","src":"34564:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34556:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"34634:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34647:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"34658:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34643:3:29"},"nodeType":"YulFunctionCall","src":"34643:17:29"}],"functionName":{"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nodeType":"YulIdentifier","src":"34592:41:29"},"nodeType":"YulFunctionCall","src":"34592:69:29"},"nodeType":"YulExpressionStatement","src":"34592:69:29"}]},"name":"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34518:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"34530:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34541:4:29","type":""}],"src":"34450:218:29"},{"body":{"nodeType":"YulBlock","src":"34787:34:29","statements":[{"nodeType":"YulAssignment","src":"34797:18:29","value":{"name":"pos","nodeType":"YulIdentifier","src":"34812:3:29"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"34797:11:29"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"34759:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"34764:6:29","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"34775:11:29","type":""}],"src":"34674:147:29"},{"body":{"nodeType":"YulBlock","src":"34967:196:29","statements":[{"nodeType":"YulAssignment","src":"34977:95:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35060:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"35065:6:29"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"34984:75:29"},"nodeType":"YulFunctionCall","src":"34984:88:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"34977:3:29"}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"35106:5:29"},{"name":"pos","nodeType":"YulIdentifier","src":"35113:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"35118:6:29"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"35082:23:29"},"nodeType":"YulFunctionCall","src":"35082:43:29"},"nodeType":"YulExpressionStatement","src":"35082:43:29"},{"nodeType":"YulAssignment","src":"35134:23:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35145:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"35150:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35141:3:29"},"nodeType":"YulFunctionCall","src":"35141:16:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"35134:3:29"}]}]},"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"34940:5:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"34947:6:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"34955:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"34963:3:29","type":""}],"src":"34849:314:29"},{"body":{"nodeType":"YulBlock","src":"35211:52:29","statements":[{"nodeType":"YulAssignment","src":"35221:35:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"35246:2:29","type":"","value":"96"},{"name":"value","nodeType":"YulIdentifier","src":"35250:5:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"35242:3:29"},"nodeType":"YulFunctionCall","src":"35242:14:29"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"35221:8:29"}]}]},"name":"shift_left_96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35192:5:29","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"35202:8:29","type":""}],"src":"35169:94:29"},{"body":{"nodeType":"YulBlock","src":"35316:47:29","statements":[{"nodeType":"YulAssignment","src":"35326:31:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35351:5:29"}],"functionName":{"name":"shift_left_96","nodeType":"YulIdentifier","src":"35337:13:29"},"nodeType":"YulFunctionCall","src":"35337:20:29"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"35326:7:29"}]}]},"name":"leftAlign_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35298:5:29","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"35308:7:29","type":""}],"src":"35269:94:29"},{"body":{"nodeType":"YulBlock","src":"35416:53:29","statements":[{"nodeType":"YulAssignment","src":"35426:37:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35457:5:29"}],"functionName":{"name":"leftAlign_t_uint160","nodeType":"YulIdentifier","src":"35437:19:29"},"nodeType":"YulFunctionCall","src":"35437:26:29"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"35426:7:29"}]}]},"name":"leftAlign_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35398:5:29","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"35408:7:29","type":""}],"src":"35369:100:29"},{"body":{"nodeType":"YulBlock","src":"35558:74:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35575:3:29"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35618:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"35600:17:29"},"nodeType":"YulFunctionCall","src":"35600:24:29"}],"functionName":{"name":"leftAlign_t_address","nodeType":"YulIdentifier","src":"35580:19:29"},"nodeType":"YulFunctionCall","src":"35580:45:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35568:6:29"},"nodeType":"YulFunctionCall","src":"35568:58:29"},"nodeType":"YulExpressionStatement","src":"35568:58:29"}]},"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35546:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"35553:3:29","type":""}],"src":"35475:157:29"},{"body":{"nodeType":"YulBlock","src":"35685:32:29","statements":[{"nodeType":"YulAssignment","src":"35695:16:29","value":{"name":"value","nodeType":"YulIdentifier","src":"35706:5:29"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"35695:7:29"}]}]},"name":"leftAlign_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35667:5:29","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"35677:7:29","type":""}],"src":"35638:79:29"},{"body":{"nodeType":"YulBlock","src":"35806:74:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35823:3:29"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35866:5:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"35848:17:29"},"nodeType":"YulFunctionCall","src":"35848:24:29"}],"functionName":{"name":"leftAlign_t_uint256","nodeType":"YulIdentifier","src":"35828:19:29"},"nodeType":"YulFunctionCall","src":"35828:45:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35816:6:29"},"nodeType":"YulFunctionCall","src":"35816:58:29"},"nodeType":"YulExpressionStatement","src":"35816:58:29"}]},"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35794:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"35801:3:29","type":""}],"src":"35723:157:29"},{"body":{"nodeType":"YulBlock","src":"36086:373:29","statements":[{"nodeType":"YulAssignment","src":"36097:110:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"36186:6:29"},{"name":"value1","nodeType":"YulIdentifier","src":"36194:6:29"},{"name":"pos","nodeType":"YulIdentifier","src":"36203:3:29"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"36104:81:29"},"nodeType":"YulFunctionCall","src":"36104:103:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36097:3:29"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"36279:6:29"},{"name":"pos","nodeType":"YulIdentifier","src":"36288:3:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"36217:61:29"},"nodeType":"YulFunctionCall","src":"36217:75:29"},"nodeType":"YulExpressionStatement","src":"36217:75:29"},{"nodeType":"YulAssignment","src":"36301:19:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36312:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"36317:2:29","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36308:3:29"},"nodeType":"YulFunctionCall","src":"36308:12:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36301:3:29"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"36392:6:29"},{"name":"pos","nodeType":"YulIdentifier","src":"36401:3:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"36330:61:29"},"nodeType":"YulFunctionCall","src":"36330:75:29"},"nodeType":"YulExpressionStatement","src":"36330:75:29"},{"nodeType":"YulAssignment","src":"36414:19:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36425:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"36430:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36421:3:29"},"nodeType":"YulFunctionCall","src":"36421:12:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36414:3:29"}]},{"nodeType":"YulAssignment","src":"36443:10:29","value":{"name":"pos","nodeType":"YulIdentifier","src":"36450:3:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"36443:3:29"}]}]},"name":"abi_encode_tuple_packed_t_bytes_calldata_ptr_t_address_t_uint256__to_t_bytes_memory_ptr_t_address_t_uint256__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"36041:3:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"36047:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"36055:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"36063:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"36071:6:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"36082:3:29","type":""}],"src":"35886:573:29"},{"body":{"nodeType":"YulBlock","src":"36573:265:29","statements":[{"nodeType":"YulVariableDeclaration","src":"36583:52:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36629:5:29"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"36597:31:29"},"nodeType":"YulFunctionCall","src":"36597:38:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"36587:6:29","type":""}]},{"nodeType":"YulAssignment","src":"36644:95:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36727:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"36732:6:29"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"36651:75:29"},"nodeType":"YulFunctionCall","src":"36651:88:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36644:3:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36774:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"36781:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36770:3:29"},"nodeType":"YulFunctionCall","src":"36770:16:29"},{"name":"pos","nodeType":"YulIdentifier","src":"36788:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"36793:6:29"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"36748:21:29"},"nodeType":"YulFunctionCall","src":"36748:52:29"},"nodeType":"YulExpressionStatement","src":"36748:52:29"},{"nodeType":"YulAssignment","src":"36809:23:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36820:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"36825:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36816:3:29"},"nodeType":"YulFunctionCall","src":"36816:16:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"36809:3:29"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"36554:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"36561:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"36569:3:29","type":""}],"src":"36465:373:29"},{"body":{"nodeType":"YulBlock","src":"36978:137:29","statements":[{"nodeType":"YulAssignment","src":"36989:100:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"37076:6:29"},{"name":"pos","nodeType":"YulIdentifier","src":"37085:3:29"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"36996:79:29"},"nodeType":"YulFunctionCall","src":"36996:93:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36989:3:29"}]},{"nodeType":"YulAssignment","src":"37099:10:29","value":{"name":"pos","nodeType":"YulIdentifier","src":"37106:3:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"37099:3:29"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"36957:3:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"36963:6:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"36974:3:29","type":""}],"src":"36844:271:29"},{"body":{"nodeType":"YulBlock","src":"37149:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37166:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"37169:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37159:6:29"},"nodeType":"YulFunctionCall","src":"37159:88:29"},"nodeType":"YulExpressionStatement","src":"37159:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37263:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"37266:4:29","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37256:6:29"},"nodeType":"YulFunctionCall","src":"37256:15:29"},"nodeType":"YulExpressionStatement","src":"37256:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37287:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"37290:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"37280:6:29"},"nodeType":"YulFunctionCall","src":"37280:15:29"},"nodeType":"YulExpressionStatement","src":"37280:15:29"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"37121:180:29"},{"body":{"nodeType":"YulBlock","src":"37372:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37389:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37412:5:29"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"37394:17:29"},"nodeType":"YulFunctionCall","src":"37394:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37382:6:29"},"nodeType":"YulFunctionCall","src":"37382:37:29"},"nodeType":"YulExpressionStatement","src":"37382:37:29"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"37360:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"37367:3:29","type":""}],"src":"37307:118:29"},{"body":{"nodeType":"YulBlock","src":"37529:124:29","statements":[{"nodeType":"YulAssignment","src":"37539:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37551:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"37562:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37547:3:29"},"nodeType":"YulFunctionCall","src":"37547:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37539:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"37619:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37632:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"37643:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37628:3:29"},"nodeType":"YulFunctionCall","src":"37628:17:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"37575:43:29"},"nodeType":"YulFunctionCall","src":"37575:71:29"},"nodeType":"YulExpressionStatement","src":"37575:71:29"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37501:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"37513:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37524:4:29","type":""}],"src":"37431:222:29"},{"body":{"nodeType":"YulBlock","src":"37785:206:29","statements":[{"nodeType":"YulAssignment","src":"37795:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37807:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"37818:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37803:3:29"},"nodeType":"YulFunctionCall","src":"37803:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37795:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"37875:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37888:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"37899:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37884:3:29"},"nodeType":"YulFunctionCall","src":"37884:17:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"37831:43:29"},"nodeType":"YulFunctionCall","src":"37831:71:29"},"nodeType":"YulExpressionStatement","src":"37831:71:29"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"37956:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37969:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"37980:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37965:3:29"},"nodeType":"YulFunctionCall","src":"37965:18:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"37912:43:29"},"nodeType":"YulFunctionCall","src":"37912:72:29"},"nodeType":"YulExpressionStatement","src":"37912:72:29"}]},"name":"abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37749:9:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"37761:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"37769:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37780:4:29","type":""}],"src":"37659:332:29"},{"body":{"nodeType":"YulBlock","src":"38086:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38103:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"38106:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"38096:6:29"},"nodeType":"YulFunctionCall","src":"38096:12:29"},"nodeType":"YulExpressionStatement","src":"38096:12:29"}]},"name":"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad","nodeType":"YulFunctionDefinition","src":"37997:117:29"},{"body":{"nodeType":"YulBlock","src":"38209:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38226:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"38229:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"38219:6:29"},"nodeType":"YulFunctionCall","src":"38219:12:29"},"nodeType":"YulExpressionStatement","src":"38219:12:29"}]},"name":"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a","nodeType":"YulFunctionDefinition","src":"38120:117:29"},{"body":{"nodeType":"YulBlock","src":"38332:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38349:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"38352:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"38342:6:29"},"nodeType":"YulFunctionCall","src":"38342:12:29"},"nodeType":"YulExpressionStatement","src":"38342:12:29"}]},"name":"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e","nodeType":"YulFunctionDefinition","src":"38243:117:29"},{"body":{"nodeType":"YulBlock","src":"38456:634:29","statements":[{"nodeType":"YulVariableDeclaration","src":"38466:51:29","value":{"arguments":[{"name":"ptr_to_tail","nodeType":"YulIdentifier","src":"38505:11:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"38492:12:29"},"nodeType":"YulFunctionCall","src":"38492:25:29"},"variables":[{"name":"rel_offset_of_tail","nodeType":"YulTypedName","src":"38470:18:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"38611:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad","nodeType":"YulIdentifier","src":"38613:77:29"},"nodeType":"YulFunctionCall","src":"38613:79:29"},"nodeType":"YulExpressionStatement","src":"38613:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"38540:18:29"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"38568:12:29"},"nodeType":"YulFunctionCall","src":"38568:14:29"},{"name":"base_ref","nodeType":"YulIdentifier","src":"38584:8:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38564:3:29"},"nodeType":"YulFunctionCall","src":"38564:29:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38599:4:29","type":"","value":"0x20"},{"kind":"number","nodeType":"YulLiteral","src":"38605:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38595:3:29"},"nodeType":"YulFunctionCall","src":"38595:12:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38560:3:29"},"nodeType":"YulFunctionCall","src":"38560:48:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"38536:3:29"},"nodeType":"YulFunctionCall","src":"38536:73:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"38529:6:29"},"nodeType":"YulFunctionCall","src":"38529:81:29"},"nodeType":"YulIf","src":"38526:168:29"},{"nodeType":"YulAssignment","src":"38703:41:29","value":{"arguments":[{"name":"base_ref","nodeType":"YulIdentifier","src":"38715:8:29"},{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"38725:18:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38711:3:29"},"nodeType":"YulFunctionCall","src":"38711:33:29"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"38703:4:29"}]},{"nodeType":"YulAssignment","src":"38754:28:29","value":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"38777:4:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"38764:12:29"},"nodeType":"YulFunctionCall","src":"38764:18:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"38754:6:29"}]},{"body":{"nodeType":"YulBlock","src":"38825:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a","nodeType":"YulIdentifier","src":"38827:77:29"},"nodeType":"YulFunctionCall","src":"38827:79:29"},"nodeType":"YulExpressionStatement","src":"38827:79:29"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"38797:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"38805:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"38794:2:29"},"nodeType":"YulFunctionCall","src":"38794:30:29"},"nodeType":"YulIf","src":"38791:117:29"},{"nodeType":"YulAssignment","src":"38917:21:29","value":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"38929:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"38935:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38925:3:29"},"nodeType":"YulFunctionCall","src":"38925:13:29"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"38917:4:29"}]},{"body":{"nodeType":"YulBlock","src":"39000:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e","nodeType":"YulIdentifier","src":"39002:77:29"},"nodeType":"YulFunctionCall","src":"39002:79:29"},"nodeType":"YulExpressionStatement","src":"39002:79:29"}]},"condition":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"38954:4:29"},{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"38964:12:29"},"nodeType":"YulFunctionCall","src":"38964:14:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"38984:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"38992:4:29","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"38980:3:29"},"nodeType":"YulFunctionCall","src":"38980:17:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38960:3:29"},"nodeType":"YulFunctionCall","src":"38960:38:29"}],"functionName":{"name":"sgt","nodeType":"YulIdentifier","src":"38950:3:29"},"nodeType":"YulFunctionCall","src":"38950:49:29"},"nodeType":"YulIf","src":"38947:136:29"}]},"name":"access_calldata_tail_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nodeType":"YulTypedName","src":"38417:8:29","type":""},{"name":"ptr_to_tail","nodeType":"YulTypedName","src":"38427:11:29","type":""}],"returnVariables":[{"name":"addr","nodeType":"YulTypedName","src":"38443:4:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"38449:6:29","type":""}],"src":"38366:724:29"},{"body":{"nodeType":"YulBlock","src":"39240:147:29","statements":[{"nodeType":"YulAssignment","src":"39251:110:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"39340:6:29"},{"name":"value1","nodeType":"YulIdentifier","src":"39348:6:29"},{"name":"pos","nodeType":"YulIdentifier","src":"39357:3:29"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"39258:81:29"},"nodeType":"YulFunctionCall","src":"39258:103:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"39251:3:29"}]},{"nodeType":"YulAssignment","src":"39371:10:29","value":{"name":"pos","nodeType":"YulIdentifier","src":"39378:3:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"39371:3:29"}]}]},"name":"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"39211:3:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"39217:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"39225:6:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"39236:3:29","type":""}],"src":"39096:291:29"},{"body":{"nodeType":"YulBlock","src":"39547:288:29","statements":[{"nodeType":"YulAssignment","src":"39557:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39569:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"39580:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39565:3:29"},"nodeType":"YulFunctionCall","src":"39565:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39557:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"39637:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39650:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"39661:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39646:3:29"},"nodeType":"YulFunctionCall","src":"39646:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"39593:43:29"},"nodeType":"YulFunctionCall","src":"39593:71:29"},"nodeType":"YulExpressionStatement","src":"39593:71:29"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"39718:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39731:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"39742:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39727:3:29"},"nodeType":"YulFunctionCall","src":"39727:18:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"39674:43:29"},"nodeType":"YulFunctionCall","src":"39674:72:29"},"nodeType":"YulExpressionStatement","src":"39674:72:29"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"39800:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39813:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"39824:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39809:3:29"},"nodeType":"YulFunctionCall","src":"39809:18:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"39756:43:29"},"nodeType":"YulFunctionCall","src":"39756:72:29"},"nodeType":"YulExpressionStatement","src":"39756:72:29"}]},"name":"abi_encode_tuple_t_address_t_bytes32_t_address__to_t_address_t_bytes32_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39503:9:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"39515:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"39523:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"39531:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39542:4:29","type":""}],"src":"39393:442:29"},{"body":{"nodeType":"YulBlock","src":"39967:206:29","statements":[{"nodeType":"YulAssignment","src":"39977:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39989:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"40000:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39985:3:29"},"nodeType":"YulFunctionCall","src":"39985:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39977:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"40057:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40070:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"40081:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40066:3:29"},"nodeType":"YulFunctionCall","src":"40066:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"40013:43:29"},"nodeType":"YulFunctionCall","src":"40013:71:29"},"nodeType":"YulExpressionStatement","src":"40013:71:29"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"40138:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40151:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"40162:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40147:3:29"},"nodeType":"YulFunctionCall","src":"40147:18:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"40094:43:29"},"nodeType":"YulFunctionCall","src":"40094:72:29"},"nodeType":"YulExpressionStatement","src":"40094:72:29"}]},"name":"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39931:9:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"39943:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"39951:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39962:4:29","type":""}],"src":"39841:332:29"},{"body":{"nodeType":"YulBlock","src":"40373:434:29","statements":[{"nodeType":"YulAssignment","src":"40383:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40395:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"40406:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40391:3:29"},"nodeType":"YulFunctionCall","src":"40391:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40383:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"40464:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40477:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"40488:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40473:3:29"},"nodeType":"YulFunctionCall","src":"40473:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"40420:43:29"},"nodeType":"YulFunctionCall","src":"40420:71:29"},"nodeType":"YulExpressionStatement","src":"40420:71:29"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"40545:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40558:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"40569:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40554:3:29"},"nodeType":"YulFunctionCall","src":"40554:18:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"40501:43:29"},"nodeType":"YulFunctionCall","src":"40501:72:29"},"nodeType":"YulExpressionStatement","src":"40501:72:29"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"40621:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40634:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"40645:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40630:3:29"},"nodeType":"YulFunctionCall","src":"40630:18:29"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"40583:37:29"},"nodeType":"YulFunctionCall","src":"40583:66:29"},"nodeType":"YulExpressionStatement","src":"40583:66:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40670:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"40681:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40666:3:29"},"nodeType":"YulFunctionCall","src":"40666:18:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"40690:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"40696:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"40686:3:29"},"nodeType":"YulFunctionCall","src":"40686:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40659:6:29"},"nodeType":"YulFunctionCall","src":"40659:48:29"},"nodeType":"YulExpressionStatement","src":"40659:48:29"},{"nodeType":"YulAssignment","src":"40716:84:29","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"40786:6:29"},{"name":"tail","nodeType":"YulIdentifier","src":"40795:4:29"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40724:61:29"},"nodeType":"YulFunctionCall","src":"40724:76:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40716:4:29"}]}]},"name":"abi_encode_tuple_t_address_t_bytes32_t_bool_t_bytes_memory_ptr__to_t_address_t_bytes32_t_bool_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40321:9:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"40333:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"40341:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"40349:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"40357:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"40368:4:29","type":""}],"src":"40179:628:29"},{"body":{"nodeType":"YulBlock","src":"40869:60:29","statements":[{"nodeType":"YulAssignment","src":"40879:11:29","value":{"name":"ptr","nodeType":"YulIdentifier","src":"40887:3:29"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"40879:4:29"}]},{"nodeType":"YulAssignment","src":"40900:22:29","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"40912:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"40917:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40908:3:29"},"nodeType":"YulFunctionCall","src":"40908:14:29"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"40900:4:29"}]}]},"name":"array_dataslot_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"40856:3:29","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"40864:4:29","type":""}],"src":"40813:116:29"},{"body":{"nodeType":"YulBlock","src":"40980:105:29","statements":[{"nodeType":"YulAssignment","src":"40990:89:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"41005:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"41012:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"41001:3:29"},"nodeType":"YulFunctionCall","src":"41001:78:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"40990:7:29"}]}]},"name":"cleanup_t_bytes20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"40962:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"40972:7:29","type":""}],"src":"40935:150:29"},{"body":{"nodeType":"YulBlock","src":"41146:99:29","statements":[{"nodeType":"YulVariableDeclaration","src":"41157:42:29","value":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"41194:3:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"41188:5:29"},"nodeType":"YulFunctionCall","src":"41188:10:29"}],"functionName":{"name":"cleanup_t_bytes20","nodeType":"YulIdentifier","src":"41170:17:29"},"nodeType":"YulFunctionCall","src":"41170:29:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"41161:5:29","type":""}]},{"nodeType":"YulAssignment","src":"41209:29:29","value":{"name":"value","nodeType":"YulIdentifier","src":"41233:5:29"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"41209:11:29"}]}]},"name":"read_from_memoryt_bytes20","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"41126:3:29","type":""}],"returnVariables":[{"name":"returnValue","nodeType":"YulTypedName","src":"41134:11:29","type":""}],"src":"41091:154:29"},{"body":{"nodeType":"YulBlock","src":"41304:54:29","statements":[{"nodeType":"YulAssignment","src":"41314:37:29","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"41339:4:29"},{"name":"value","nodeType":"YulIdentifier","src":"41345:5:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"41335:3:29"},"nodeType":"YulFunctionCall","src":"41335:16:29"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"41314:8:29"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"41279:4:29","type":""},{"name":"value","nodeType":"YulTypedName","src":"41285:5:29","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"41295:8:29","type":""}],"src":"41251:107:29"},{"body":{"nodeType":"YulBlock","src":"41454:504:29","statements":[{"nodeType":"YulVariableDeclaration","src":"41465:52:29","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"41511:5:29"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"41479:31:29"},"nodeType":"YulFunctionCall","src":"41479:38:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"41469:6:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"41526:21:29","value":{"name":"array","nodeType":"YulIdentifier","src":"41542:5:29"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"41530:8:29","type":""}]},{"nodeType":"YulAssignment","src":"41557:52:29","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"41603:5:29"}],"functionName":{"name":"array_dataslot_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"41569:33:29"},"nodeType":"YulFunctionCall","src":"41569:40:29"},"variableNames":[{"name":"dataArea","nodeType":"YulIdentifier","src":"41557:8:29"}]},{"nodeType":"YulAssignment","src":"41619:44:29","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"41654:8:29"}],"functionName":{"name":"read_from_memoryt_bytes20","nodeType":"YulIdentifier","src":"41628:25:29"},"nodeType":"YulFunctionCall","src":"41628:35:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"41619:5:29"}]},{"body":{"nodeType":"YulBlock","src":"41691:260:29","statements":[{"nodeType":"YulAssignment","src":"41705:236:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"41735:5:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"41802:1:29","type":"","value":"8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"41809:2:29","type":"","value":"20"},{"name":"length","nodeType":"YulIdentifier","src":"41813:6:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"41805:3:29"},"nodeType":"YulFunctionCall","src":"41805:15:29"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"41798:3:29"},"nodeType":"YulFunctionCall","src":"41798:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"41843:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"41758:18:29"},"nodeType":"YulFunctionCall","src":"41758:169:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"41714:3:29"},"nodeType":"YulFunctionCall","src":"41714:227:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"41705:5:29"}]}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"41679:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"41687:2:29","type":"","value":"20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"41676:2:29"},"nodeType":"YulFunctionCall","src":"41676:14:29"},"nodeType":"YulIf","src":"41673:278:29"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes20","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"41438:5:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"41448:5:29","type":""}],"src":"41364:594:29"},{"body":{"nodeType":"YulBlock","src":"42011:32:29","statements":[{"nodeType":"YulAssignment","src":"42021:16:29","value":{"name":"value","nodeType":"YulIdentifier","src":"42032:5:29"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"42021:7:29"}]}]},"name":"leftAlign_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"41993:5:29","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"42003:7:29","type":""}],"src":"41964:79:29"},{"body":{"nodeType":"YulBlock","src":"42132:74:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42149:3:29"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"42192:5:29"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"42174:17:29"},"nodeType":"YulFunctionCall","src":"42174:24:29"}],"functionName":{"name":"leftAlign_t_bytes32","nodeType":"YulIdentifier","src":"42154:19:29"},"nodeType":"YulFunctionCall","src":"42154:45:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42142:6:29"},"nodeType":"YulFunctionCall","src":"42142:58:29"},"nodeType":"YulExpressionStatement","src":"42142:58:29"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"42120:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"42127:3:29","type":""}],"src":"42049:157:29"},{"body":{"nodeType":"YulBlock","src":"42356:253:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"42429:6:29"},{"name":"pos","nodeType":"YulIdentifier","src":"42438:3:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"42367:61:29"},"nodeType":"YulFunctionCall","src":"42367:75:29"},"nodeType":"YulExpressionStatement","src":"42367:75:29"},{"nodeType":"YulAssignment","src":"42451:19:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42462:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"42467:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42458:3:29"},"nodeType":"YulFunctionCall","src":"42458:12:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"42451:3:29"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"42542:6:29"},{"name":"pos","nodeType":"YulIdentifier","src":"42551:3:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"42480:61:29"},"nodeType":"YulFunctionCall","src":"42480:75:29"},"nodeType":"YulExpressionStatement","src":"42480:75:29"},{"nodeType":"YulAssignment","src":"42564:19:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42575:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"42580:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42571:3:29"},"nodeType":"YulFunctionCall","src":"42571:12:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"42564:3:29"}]},{"nodeType":"YulAssignment","src":"42593:10:29","value":{"name":"pos","nodeType":"YulIdentifier","src":"42600:3:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"42593:3:29"}]}]},"name":"abi_encode_tuple_packed_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"42327:3:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"42333:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"42341:6:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"42352:3:29","type":""}],"src":"42212:397:29"},{"body":{"nodeType":"YulBlock","src":"42643:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"42660:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"42663:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42653:6:29"},"nodeType":"YulFunctionCall","src":"42653:88:29"},"nodeType":"YulExpressionStatement","src":"42653:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"42757:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"42760:4:29","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42750:6:29"},"nodeType":"YulFunctionCall","src":"42750:15:29"},"nodeType":"YulExpressionStatement","src":"42750:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"42781:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"42784:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"42774:6:29"},"nodeType":"YulFunctionCall","src":"42774:15:29"},"nodeType":"YulExpressionStatement","src":"42774:15:29"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"42615:180:29"},{"body":{"nodeType":"YulBlock","src":"42852:269:29","statements":[{"nodeType":"YulAssignment","src":"42862:22:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"42876:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"42882:1:29","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"42872:3:29"},"nodeType":"YulFunctionCall","src":"42872:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"42862:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"42893:38:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"42923:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"42929:1:29","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"42919:3:29"},"nodeType":"YulFunctionCall","src":"42919:12:29"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"42897:18:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"42970:51:29","statements":[{"nodeType":"YulAssignment","src":"42984:27:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"42998:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"43006:4:29","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"42994:3:29"},"nodeType":"YulFunctionCall","src":"42994:17:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"42984:6:29"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"42950:18:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"42943:6:29"},"nodeType":"YulFunctionCall","src":"42943:26:29"},"nodeType":"YulIf","src":"42940:81:29"},{"body":{"nodeType":"YulBlock","src":"43073:42:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"43087:16:29"},"nodeType":"YulFunctionCall","src":"43087:18:29"},"nodeType":"YulExpressionStatement","src":"43087:18:29"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"43037:18:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"43060:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"43068:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"43057:2:29"},"nodeType":"YulFunctionCall","src":"43057:14:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"43034:2:29"},"nodeType":"YulFunctionCall","src":"43034:38:29"},"nodeType":"YulIf","src":"43031:84:29"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"42836:4:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"42845:6:29","type":""}],"src":"42801:320:29"},{"body":{"nodeType":"YulBlock","src":"43293:351:29","statements":[{"nodeType":"YulAssignment","src":"43303:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43315:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"43326:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43311:3:29"},"nodeType":"YulFunctionCall","src":"43311:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43303:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"43383:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43396:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"43407:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43392:3:29"},"nodeType":"YulFunctionCall","src":"43392:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"43339:43:29"},"nodeType":"YulFunctionCall","src":"43339:71:29"},"nodeType":"YulExpressionStatement","src":"43339:71:29"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"43458:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43471:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"43482:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43467:3:29"},"nodeType":"YulFunctionCall","src":"43467:18:29"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"43420:37:29"},"nodeType":"YulFunctionCall","src":"43420:66:29"},"nodeType":"YulExpressionStatement","src":"43420:66:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43507:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"43518:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43503:3:29"},"nodeType":"YulFunctionCall","src":"43503:18:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"43527:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"43533:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"43523:3:29"},"nodeType":"YulFunctionCall","src":"43523:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43496:6:29"},"nodeType":"YulFunctionCall","src":"43496:48:29"},"nodeType":"YulExpressionStatement","src":"43496:48:29"},{"nodeType":"YulAssignment","src":"43553:84:29","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"43623:6:29"},{"name":"tail","nodeType":"YulIdentifier","src":"43632:4:29"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"43561:61:29"},"nodeType":"YulFunctionCall","src":"43561:76:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43553:4:29"}]}]},"name":"abi_encode_tuple_t_address_t_bool_t_bytes_memory_ptr__to_t_address_t_bool_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"43249:9:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"43261:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"43269:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"43277:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"43288:4:29","type":""}],"src":"43127:517:29"},{"body":{"nodeType":"YulBlock","src":"43878:523:29","statements":[{"nodeType":"YulAssignment","src":"43888:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43900:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"43911:3:29","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43896:3:29"},"nodeType":"YulFunctionCall","src":"43896:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43888:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"43969:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43982:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"43993:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43978:3:29"},"nodeType":"YulFunctionCall","src":"43978:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"43925:43:29"},"nodeType":"YulFunctionCall","src":"43925:71:29"},"nodeType":"YulExpressionStatement","src":"43925:71:29"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"44050:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44063:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"44074:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44059:3:29"},"nodeType":"YulFunctionCall","src":"44059:18:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"44006:43:29"},"nodeType":"YulFunctionCall","src":"44006:72:29"},"nodeType":"YulExpressionStatement","src":"44006:72:29"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"44132:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44145:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"44156:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44141:3:29"},"nodeType":"YulFunctionCall","src":"44141:18:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"44088:43:29"},"nodeType":"YulFunctionCall","src":"44088:72:29"},"nodeType":"YulExpressionStatement","src":"44088:72:29"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"44214:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44227:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"44238:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44223:3:29"},"nodeType":"YulFunctionCall","src":"44223:18:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"44170:43:29"},"nodeType":"YulFunctionCall","src":"44170:72:29"},"nodeType":"YulExpressionStatement","src":"44170:72:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44263:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"44274:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44259:3:29"},"nodeType":"YulFunctionCall","src":"44259:19:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"44284:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"44290:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"44280:3:29"},"nodeType":"YulFunctionCall","src":"44280:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44252:6:29"},"nodeType":"YulFunctionCall","src":"44252:49:29"},"nodeType":"YulExpressionStatement","src":"44252:49:29"},{"nodeType":"YulAssignment","src":"44310:84:29","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"44380:6:29"},{"name":"tail","nodeType":"YulIdentifier","src":"44389:4:29"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"44318:61:29"},"nodeType":"YulFunctionCall","src":"44318:76:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"44310:4:29"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_address_t_bytes32_t_bytes_memory_ptr__to_t_address_t_address_t_address_t_bytes32_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"43818:9:29","type":""},{"name":"value4","nodeType":"YulTypedName","src":"43830:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"43838:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"43846:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"43854:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"43862:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"43873:4:29","type":""}],"src":"43650:751:29"},{"body":{"nodeType":"YulBlock","src":"44435:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44452:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"44455:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44445:6:29"},"nodeType":"YulFunctionCall","src":"44445:88:29"},"nodeType":"YulExpressionStatement","src":"44445:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44549:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"44552:4:29","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44542:6:29"},"nodeType":"YulFunctionCall","src":"44542:15:29"},"nodeType":"YulExpressionStatement","src":"44542:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44573:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"44576:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"44566:6:29"},"nodeType":"YulFunctionCall","src":"44566:15:29"},"nodeType":"YulExpressionStatement","src":"44566:15:29"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"44407:180:29"},{"body":{"nodeType":"YulBlock","src":"44636:190:29","statements":[{"nodeType":"YulAssignment","src":"44646:33:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"44673:5:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"44655:17:29"},"nodeType":"YulFunctionCall","src":"44655:24:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"44646:5:29"}]},{"body":{"nodeType":"YulBlock","src":"44769:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"44771:16:29"},"nodeType":"YulFunctionCall","src":"44771:18:29"},"nodeType":"YulExpressionStatement","src":"44771:18:29"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"44694:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"44701:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"44691:2:29"},"nodeType":"YulFunctionCall","src":"44691:77:29"},"nodeType":"YulIf","src":"44688:103:29"},{"nodeType":"YulAssignment","src":"44800:20:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"44811:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"44818:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44807:3:29"},"nodeType":"YulFunctionCall","src":"44807:13:29"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"44800:3:29"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"44622:5:29","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"44632:3:29","type":""}],"src":"44593:233:29"},{"body":{"nodeType":"YulBlock","src":"44970:269:29","statements":[{"nodeType":"YulAssignment","src":"44980:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44992:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"45003:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44988:3:29"},"nodeType":"YulFunctionCall","src":"44988:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"44980:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"45054:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45067:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"45078:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45063:3:29"},"nodeType":"YulFunctionCall","src":"45063:17:29"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"45016:37:29"},"nodeType":"YulFunctionCall","src":"45016:65:29"},"nodeType":"YulExpressionStatement","src":"45016:65:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45102:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"45113:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45098:3:29"},"nodeType":"YulFunctionCall","src":"45098:18:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"45122:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"45128:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"45118:3:29"},"nodeType":"YulFunctionCall","src":"45118:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45091:6:29"},"nodeType":"YulFunctionCall","src":"45091:48:29"},"nodeType":"YulExpressionStatement","src":"45091:48:29"},{"nodeType":"YulAssignment","src":"45148:84:29","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"45218:6:29"},{"name":"tail","nodeType":"YulIdentifier","src":"45227:4:29"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"45156:61:29"},"nodeType":"YulFunctionCall","src":"45156:76:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"45148:4:29"}]}]},"name":"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"44934:9:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"44946:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"44954:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"44965:4:29","type":""}],"src":"44832:407:29"},{"body":{"nodeType":"YulBlock","src":"45290:105:29","statements":[{"nodeType":"YulAssignment","src":"45300:89:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"45315:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"45322:66:29","type":"","value":"0xffffffffffffffffffff00000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"45311:3:29"},"nodeType":"YulFunctionCall","src":"45311:78:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"45300:7:29"}]}]},"name":"cleanup_t_bytes10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"45272:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"45282:7:29","type":""}],"src":"45245:150:29"},{"body":{"nodeType":"YulBlock","src":"45448:32:29","statements":[{"nodeType":"YulAssignment","src":"45458:16:29","value":{"name":"value","nodeType":"YulIdentifier","src":"45469:5:29"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"45458:7:29"}]}]},"name":"leftAlign_t_bytes10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"45430:5:29","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"45440:7:29","type":""}],"src":"45401:79:29"},{"body":{"nodeType":"YulBlock","src":"45569:74:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45586:3:29"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"45629:5:29"}],"functionName":{"name":"cleanup_t_bytes10","nodeType":"YulIdentifier","src":"45611:17:29"},"nodeType":"YulFunctionCall","src":"45611:24:29"}],"functionName":{"name":"leftAlign_t_bytes10","nodeType":"YulIdentifier","src":"45591:19:29"},"nodeType":"YulFunctionCall","src":"45591:45:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45579:6:29"},"nodeType":"YulFunctionCall","src":"45579:58:29"},"nodeType":"YulExpressionStatement","src":"45579:58:29"}]},"name":"abi_encode_t_bytes10_to_t_bytes10_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"45557:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"45564:3:29","type":""}],"src":"45486:157:29"},{"body":{"nodeType":"YulBlock","src":"45693:105:29","statements":[{"nodeType":"YulAssignment","src":"45703:89:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"45718:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"45725:66:29","type":"","value":"0xffff000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"45714:3:29"},"nodeType":"YulFunctionCall","src":"45714:78:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"45703:7:29"}]}]},"name":"cleanup_t_bytes2","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"45675:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"45685:7:29","type":""}],"src":"45649:149:29"},{"body":{"nodeType":"YulBlock","src":"45850:32:29","statements":[{"nodeType":"YulAssignment","src":"45860:16:29","value":{"name":"value","nodeType":"YulIdentifier","src":"45871:5:29"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"45860:7:29"}]}]},"name":"leftAlign_t_bytes2","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"45832:5:29","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"45842:7:29","type":""}],"src":"45804:78:29"},{"body":{"nodeType":"YulBlock","src":"45969:72:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45986:3:29"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"46027:5:29"}],"functionName":{"name":"cleanup_t_bytes2","nodeType":"YulIdentifier","src":"46010:16:29"},"nodeType":"YulFunctionCall","src":"46010:23:29"}],"functionName":{"name":"leftAlign_t_bytes2","nodeType":"YulIdentifier","src":"45991:18:29"},"nodeType":"YulFunctionCall","src":"45991:43:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45979:6:29"},"nodeType":"YulFunctionCall","src":"45979:56:29"},"nodeType":"YulExpressionStatement","src":"45979:56:29"}]},"name":"abi_encode_t_bytes2_to_t_bytes2_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"45957:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"45964:3:29","type":""}],"src":"45888:153:29"},{"body":{"nodeType":"YulBlock","src":"46094:32:29","statements":[{"nodeType":"YulAssignment","src":"46104:16:29","value":{"name":"value","nodeType":"YulIdentifier","src":"46115:5:29"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"46104:7:29"}]}]},"name":"leftAlign_t_bytes20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"46076:5:29","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"46086:7:29","type":""}],"src":"46047:79:29"},{"body":{"nodeType":"YulBlock","src":"46215:74:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46232:3:29"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"46275:5:29"}],"functionName":{"name":"cleanup_t_bytes20","nodeType":"YulIdentifier","src":"46257:17:29"},"nodeType":"YulFunctionCall","src":"46257:24:29"}],"functionName":{"name":"leftAlign_t_bytes20","nodeType":"YulIdentifier","src":"46237:19:29"},"nodeType":"YulFunctionCall","src":"46237:45:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46225:6:29"},"nodeType":"YulFunctionCall","src":"46225:58:29"},"nodeType":"YulExpressionStatement","src":"46225:58:29"}]},"name":"abi_encode_t_bytes20_to_t_bytes20_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"46203:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"46210:3:29","type":""}],"src":"46132:157:29"},{"body":{"nodeType":"YulBlock","src":"46465:363:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"46538:6:29"},{"name":"pos","nodeType":"YulIdentifier","src":"46547:3:29"}],"functionName":{"name":"abi_encode_t_bytes10_to_t_bytes10_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"46476:61:29"},"nodeType":"YulFunctionCall","src":"46476:75:29"},"nodeType":"YulExpressionStatement","src":"46476:75:29"},{"nodeType":"YulAssignment","src":"46560:19:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46571:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"46576:2:29","type":"","value":"10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46567:3:29"},"nodeType":"YulFunctionCall","src":"46567:12:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"46560:3:29"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"46649:6:29"},{"name":"pos","nodeType":"YulIdentifier","src":"46658:3:29"}],"functionName":{"name":"abi_encode_t_bytes2_to_t_bytes2_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"46589:59:29"},"nodeType":"YulFunctionCall","src":"46589:73:29"},"nodeType":"YulExpressionStatement","src":"46589:73:29"},{"nodeType":"YulAssignment","src":"46671:18:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46682:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"46687:1:29","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46678:3:29"},"nodeType":"YulFunctionCall","src":"46678:11:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"46671:3:29"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"46761:6:29"},{"name":"pos","nodeType":"YulIdentifier","src":"46770:3:29"}],"functionName":{"name":"abi_encode_t_bytes20_to_t_bytes20_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"46699:61:29"},"nodeType":"YulFunctionCall","src":"46699:75:29"},"nodeType":"YulExpressionStatement","src":"46699:75:29"},{"nodeType":"YulAssignment","src":"46783:19:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46794:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"46799:2:29","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46790:3:29"},"nodeType":"YulFunctionCall","src":"46790:12:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"46783:3:29"}]},{"nodeType":"YulAssignment","src":"46812:10:29","value":{"name":"pos","nodeType":"YulIdentifier","src":"46819:3:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"46812:3:29"}]}]},"name":"abi_encode_tuple_packed_t_bytes10_t_bytes2_t_bytes20__to_t_bytes10_t_bytes2_t_bytes20__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"46428:3:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"46434:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"46442:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"46450:6:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"46461:3:29","type":""}],"src":"46295:533:29"},{"body":{"nodeType":"YulBlock","src":"46889:99:29","statements":[{"nodeType":"YulVariableDeclaration","src":"46900:42:29","value":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"46937:3:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"46931:5:29"},"nodeType":"YulFunctionCall","src":"46931:10:29"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"46913:17:29"},"nodeType":"YulFunctionCall","src":"46913:29:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"46904:5:29","type":""}]},{"nodeType":"YulAssignment","src":"46952:29:29","value":{"name":"value","nodeType":"YulIdentifier","src":"46976:5:29"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"46952:11:29"}]}]},"name":"read_from_memoryt_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"46869:3:29","type":""}],"returnVariables":[{"name":"returnValue","nodeType":"YulTypedName","src":"46877:11:29","type":""}],"src":"46834:154:29"},{"body":{"nodeType":"YulBlock","src":"47084:504:29","statements":[{"nodeType":"YulVariableDeclaration","src":"47095:52:29","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"47141:5:29"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"47109:31:29"},"nodeType":"YulFunctionCall","src":"47109:38:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"47099:6:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"47156:21:29","value":{"name":"array","nodeType":"YulIdentifier","src":"47172:5:29"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"47160:8:29","type":""}]},{"nodeType":"YulAssignment","src":"47187:52:29","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"47233:5:29"}],"functionName":{"name":"array_dataslot_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"47199:33:29"},"nodeType":"YulFunctionCall","src":"47199:40:29"},"variableNames":[{"name":"dataArea","nodeType":"YulIdentifier","src":"47187:8:29"}]},{"nodeType":"YulAssignment","src":"47249:44:29","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"47284:8:29"}],"functionName":{"name":"read_from_memoryt_bytes32","nodeType":"YulIdentifier","src":"47258:25:29"},"nodeType":"YulFunctionCall","src":"47258:35:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"47249:5:29"}]},{"body":{"nodeType":"YulBlock","src":"47321:260:29","statements":[{"nodeType":"YulAssignment","src":"47335:236:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"47365:5:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"47432:1:29","type":"","value":"8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"47439:2:29","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"47443:6:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"47435:3:29"},"nodeType":"YulFunctionCall","src":"47435:15:29"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"47428:3:29"},"nodeType":"YulFunctionCall","src":"47428:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"47473:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"47388:18:29"},"nodeType":"YulFunctionCall","src":"47388:169:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"47344:3:29"},"nodeType":"YulFunctionCall","src":"47344:227:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"47335:5:29"}]}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"47309:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"47317:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"47306:2:29"},"nodeType":"YulFunctionCall","src":"47306:14:29"},"nodeType":"YulIf","src":"47303:278:29"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"47068:5:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"47078:5:29","type":""}],"src":"46994:594:29"},{"body":{"nodeType":"YulBlock","src":"47738:275:29","statements":[{"nodeType":"YulAssignment","src":"47748:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47760:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"47771:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47756:3:29"},"nodeType":"YulFunctionCall","src":"47756:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"47748:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"47828:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47841:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"47852:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47837:3:29"},"nodeType":"YulFunctionCall","src":"47837:17:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"47784:43:29"},"nodeType":"YulFunctionCall","src":"47784:71:29"},"nodeType":"YulExpressionStatement","src":"47784:71:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47876:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"47887:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47872:3:29"},"nodeType":"YulFunctionCall","src":"47872:18:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"47896:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"47902:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"47892:3:29"},"nodeType":"YulFunctionCall","src":"47892:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47865:6:29"},"nodeType":"YulFunctionCall","src":"47865:48:29"},"nodeType":"YulExpressionStatement","src":"47865:48:29"},{"nodeType":"YulAssignment","src":"47922:84:29","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"47992:6:29"},{"name":"tail","nodeType":"YulIdentifier","src":"48001:4:29"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"47930:61:29"},"nodeType":"YulFunctionCall","src":"47930:76:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"47922:4:29"}]}]},"name":"abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"47702:9:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"47714:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"47722:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"47733:4:29","type":""}],"src":"47594:419:29"},{"body":{"nodeType":"YulBlock","src":"48113:325:29","statements":[{"nodeType":"YulAssignment","src":"48123:74:29","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"48189:6:29"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"48148:40:29"},"nodeType":"YulFunctionCall","src":"48148:48:29"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"48132:15:29"},"nodeType":"YulFunctionCall","src":"48132:65:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"48123:5:29"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"48213:5:29"},{"name":"length","nodeType":"YulIdentifier","src":"48220:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48206:6:29"},"nodeType":"YulFunctionCall","src":"48206:21:29"},"nodeType":"YulExpressionStatement","src":"48206:21:29"},{"nodeType":"YulVariableDeclaration","src":"48236:27:29","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"48251:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"48258:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48247:3:29"},"nodeType":"YulFunctionCall","src":"48247:16:29"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"48240:3:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"48301:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"48303:77:29"},"nodeType":"YulFunctionCall","src":"48303:79:29"},"nodeType":"YulExpressionStatement","src":"48303:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"48282:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"48287:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48278:3:29"},"nodeType":"YulFunctionCall","src":"48278:16:29"},{"name":"end","nodeType":"YulIdentifier","src":"48296:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"48275:2:29"},"nodeType":"YulFunctionCall","src":"48275:25:29"},"nodeType":"YulIf","src":"48272:112:29"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"48415:3:29"},{"name":"dst","nodeType":"YulIdentifier","src":"48420:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"48425:6:29"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"48393:21:29"},"nodeType":"YulFunctionCall","src":"48393:39:29"},"nodeType":"YulExpressionStatement","src":"48393:39:29"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"48086:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"48091:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"48099:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"48107:5:29","type":""}],"src":"48019:419:29"},{"body":{"nodeType":"YulBlock","src":"48529:281:29","statements":[{"body":{"nodeType":"YulBlock","src":"48578:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"48580:77:29"},"nodeType":"YulFunctionCall","src":"48580:79:29"},"nodeType":"YulExpressionStatement","src":"48580:79:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"48557:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"48565:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48553:3:29"},"nodeType":"YulFunctionCall","src":"48553:17:29"},{"name":"end","nodeType":"YulIdentifier","src":"48572:3:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"48549:3:29"},"nodeType":"YulFunctionCall","src":"48549:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"48542:6:29"},"nodeType":"YulFunctionCall","src":"48542:35:29"},"nodeType":"YulIf","src":"48539:122:29"},{"nodeType":"YulVariableDeclaration","src":"48670:27:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"48690:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"48684:5:29"},"nodeType":"YulFunctionCall","src":"48684:13:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"48674:6:29","type":""}]},{"nodeType":"YulAssignment","src":"48706:98:29","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"48777:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"48785:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48773:3:29"},"nodeType":"YulFunctionCall","src":"48773:17:29"},{"name":"length","nodeType":"YulIdentifier","src":"48792:6:29"},{"name":"end","nodeType":"YulIdentifier","src":"48800:3:29"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"48715:57:29"},"nodeType":"YulFunctionCall","src":"48715:89:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"48706:5:29"}]}]},"name":"abi_decode_t_bytes_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"48507:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"48515:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"48523:5:29","type":""}],"src":"48457:353:29"},{"body":{"nodeType":"YulBlock","src":"48902:436:29","statements":[{"body":{"nodeType":"YulBlock","src":"48948:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"48950:77:29"},"nodeType":"YulFunctionCall","src":"48950:79:29"},"nodeType":"YulExpressionStatement","src":"48950:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"48923:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"48932:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"48919:3:29"},"nodeType":"YulFunctionCall","src":"48919:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"48944:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"48915:3:29"},"nodeType":"YulFunctionCall","src":"48915:32:29"},"nodeType":"YulIf","src":"48912:119:29"},{"nodeType":"YulBlock","src":"49041:290:29","statements":[{"nodeType":"YulVariableDeclaration","src":"49056:38:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49080:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"49091:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49076:3:29"},"nodeType":"YulFunctionCall","src":"49076:17:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"49070:5:29"},"nodeType":"YulFunctionCall","src":"49070:24:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"49060:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"49141:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"49143:77:29"},"nodeType":"YulFunctionCall","src":"49143:79:29"},"nodeType":"YulExpressionStatement","src":"49143:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"49113:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"49121:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"49110:2:29"},"nodeType":"YulFunctionCall","src":"49110:30:29"},"nodeType":"YulIf","src":"49107:117:29"},{"nodeType":"YulAssignment","src":"49238:83:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49293:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"49304:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49289:3:29"},"nodeType":"YulFunctionCall","src":"49289:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"49313:7:29"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"49248:40:29"},"nodeType":"YulFunctionCall","src":"49248:73:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"49238:6:29"}]}]}]},"name":"abi_decode_tuple_t_bytes_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"48872:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"48883:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"48895:6:29","type":""}],"src":"48816:522:29"},{"body":{"nodeType":"YulBlock","src":"49389:146:29","statements":[{"nodeType":"YulAssignment","src":"49399:25:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"49422:1:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"49404:17:29"},"nodeType":"YulFunctionCall","src":"49404:20:29"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"49399:1:29"}]},{"nodeType":"YulAssignment","src":"49433:25:29","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"49456:1:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"49438:17:29"},"nodeType":"YulFunctionCall","src":"49438:20:29"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"49433:1:29"}]},{"body":{"nodeType":"YulBlock","src":"49480:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"49482:16:29"},"nodeType":"YulFunctionCall","src":"49482:18:29"},"nodeType":"YulExpressionStatement","src":"49482:18:29"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"49474:1:29"},{"name":"y","nodeType":"YulIdentifier","src":"49477:1:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"49471:2:29"},"nodeType":"YulFunctionCall","src":"49471:8:29"},"nodeType":"YulIf","src":"49468:34:29"},{"nodeType":"YulAssignment","src":"49512:17:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"49524:1:29"},{"name":"y","nodeType":"YulIdentifier","src":"49527:1:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"49520:3:29"},"nodeType":"YulFunctionCall","src":"49520:9:29"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"49512:4:29"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"49375:1:29","type":""},{"name":"y","nodeType":"YulTypedName","src":"49378:1:29","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"49384:4:29","type":""}],"src":"49344:191:29"},{"body":{"nodeType":"YulBlock","src":"49569:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"49586:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"49589:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49579:6:29"},"nodeType":"YulFunctionCall","src":"49579:88:29"},"nodeType":"YulExpressionStatement","src":"49579:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"49683:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"49686:4:29","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49676:6:29"},"nodeType":"YulFunctionCall","src":"49676:15:29"},"nodeType":"YulExpressionStatement","src":"49676:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"49707:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"49710:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"49700:6:29"},"nodeType":"YulFunctionCall","src":"49700:15:29"},"nodeType":"YulExpressionStatement","src":"49700:15:29"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"49541:180:29"}]},"contents":"{\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c(memPtr) {\n\n        mstore(add(memPtr, 0), 0x0000000000000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c_to_t_bytes_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, 4)\n        store_literal_in_memory_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c__to_t_bytes_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c_to_t_bytes_memory_ptr_fromStack( tail)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(value0, value1,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes32[]\n    function abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_bytes32(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // bytes32[]\n    function abi_decode_t_array$_t_bytes32_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_bytes32_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_bytes32_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // bytes[] -> bytes[]\n    function abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_bytes32t_boolt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    // bytes[]\n    function abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function array_allocation_size_t_array$_t_bool_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // bool[]\n    function abi_decode_available_length_t_array$_t_bool_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_bool_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_bool(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // bool[]\n    function abi_decode_t_array$_t_bool_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_bool_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // bytes[]\n    function abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let innerOffset := calldataload(src)\n            if gt(innerOffset, 0xffffffffffffffff) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n            let elementPos := add(offset, innerOffset)\n\n            mstore(dst, abi_decode_t_bytes_memory_ptr(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // bytes[]\n    function abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bool_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_bytes32_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_bool_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bytes32t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_bytes32_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_bytes32_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encodeUpdatedPos_t_bytes32_to_t_bytes32(value0, pos) -> updatedPos {\n        abi_encode_t_bytes32_to_t_bytes32(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // bytes32[] -> bytes32[]\n    function abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_bytes32_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_bytes32_to_t_bytes32(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_bytes32t_boolt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_bytes32_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_bytes32_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_bytes32t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_bytes32_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n\n        copy_calldata_to_memory(start, pos, length)\n        end := add(pos, length)\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr_t_address_t_uint256__to_t_bytes_memory_ptr_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value3, value2, value1, value0) -> end {\n\n        pos := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0, value1,  pos)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value3,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() {\n        revert(0, 0)\n    }\n\n    function revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() {\n        revert(0, 0)\n    }\n\n    function revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() {\n        revert(0, 0)\n    }\n\n    function access_calldata_tail_t_bytes_calldata_ptr(base_ref, ptr_to_tail) -> addr, length {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0x20, 1)))) { revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() }\n        addr := add(base_ref, rel_offset_of_tail)\n\n        length := calldataload(addr)\n        if gt(length, 0xffffffffffffffff) { revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() }\n        addr := add(addr, 32)\n        if sgt(addr, sub(calldatasize(), mul(length, 0x01))) { revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() }\n\n    }\n\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0, value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32_t_address__to_t_address_t_bytes32_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32_t_bool_t_bytes_memory_ptr__to_t_address_t_bytes32_t_bool_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function cleanup_t_bytes20(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000)\n    }\n\n    function read_from_memoryt_bytes20(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes20(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes20(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes20(dataArea)\n\n        if lt(length, 20) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(20, length)),\n                    0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000\n                )\n            )\n        }\n\n    }\n\n    function leftAlign_t_bytes32(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes32(cleanup_t_bytes32(value)))\n    }\n\n    function abi_encode_tuple_packed_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_bool_t_bytes_memory_ptr__to_t_address_t_bool_t_bytes_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_address_t_bytes32_t_bytes_memory_ptr__to_t_address_t_address_t_address_t_bytes32_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function cleanup_t_bytes10(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff00000000000000000000000000000000000000000000)\n    }\n\n    function leftAlign_t_bytes10(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes10_to_t_bytes10_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes10(cleanup_t_bytes10(value)))\n    }\n\n    function cleanup_t_bytes2(value) -> cleaned {\n        cleaned := and(value, 0xffff000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function leftAlign_t_bytes2(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes2_to_t_bytes2_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes2(cleanup_t_bytes2(value)))\n    }\n\n    function leftAlign_t_bytes20(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes20_to_t_bytes20_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes20(cleanup_t_bytes20(value)))\n    }\n\n    function abi_encode_tuple_packed_t_bytes10_t_bytes2_t_bytes20__to_t_bytes10_t_bytes2_t_bytes20__nonPadded_inplace_fromStack_reversed(pos , value2, value1, value0) -> end {\n\n        abi_encode_t_bytes10_to_t_bytes10_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 10)\n\n        abi_encode_t_bytes2_to_t_bytes2_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 2)\n\n        abi_encode_t_bytes20_to_t_bytes20_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 20)\n\n        end := pos\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_bytes_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n}\n","id":29,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"60806040526004361061014f5760003560e01c80637e87632c116100b6578063af255b611161006f578063af255b61146105b4578063be9f0e6f146105dd578063d6c1407c14610606578063db8c96631461062f578063dedff9c614610658578063f2fde38b14610695576101ca565b80637e87632c146104c25780637f23690c146104eb57806386a10ddd146105075780638da5cb5b14610530578063979024211461055b578063a3b261f214610577576101ca565b806349a6078d1161010857806349a6078d1461038e578063511b6952146103cb57806354f6127f146103f45780636963d4381461043157806370a082311461046e578063715018a6146104ab576101ca565b806301ffc9a71461023257806316e023b31461026f57806318160ddd146102ac5780631d26fce6146102d7578063217b2270146103145780632a3654a414610351576101ca565b366101ca576000341415610198576040517fe5099ee300000000000000000000000000000000000000000000000000000000815260040161018f90612e16565b60405180910390fd5b6040517f61f4944200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600036606060046000369050101561021b5782826040517fe5099ee3000000000000000000000000000000000000000000000000000000008152600401610212929190612e83565b60405180910390fd5b61022583836106be565b9050915050805190602001f35b34801561023e57600080fd5b5061025960048036038101906102549190612f13565b61083d565b6040516102669190612f5b565b60405180910390f35b34801561027b57600080fd5b5061029660048036038101906102919190612fac565b6108ae565b6040516102a39190613063565b60405180910390f35b3480156102b857600080fd5b506102c16108c2565b6040516102ce919061309e565b60405180910390f35b3480156102e357600080fd5b506102fe60048036038101906102f99190613201565b6108cc565b60405161030b9190613385565b60405180910390f35b34801561032057600080fd5b5061033b600480360381019061033691906133a7565b610999565b6040516103489190613415565b60405180910390f35b34801561035d57600080fd5b506103786004803603810190610373919061345c565b610a4d565b6040516103859190612f5b565b60405180910390f35b34801561039a57600080fd5b506103b560048036038101906103b091906133a7565b610a6a565b6040516103c2919061355a565b60405180910390f35b3480156103d757600080fd5b506103f260048036038101906103ed919061364e565b610a97565b005b34801561040057600080fd5b5061041b600480360381019061041691906133a7565b610af8565b6040516104289190613063565b60405180910390f35b34801561043d57600080fd5b5061045860048036038101906104539190613740565b610b0a565b6040516104659190613385565b60405180910390f35b34801561047a57600080fd5b506104956004803603810190610490919061378d565b610c86565b6040516104a2919061309e565b60405180910390f35b3480156104b757600080fd5b506104c0610cd6565b005b3480156104ce57600080fd5b506104e960048036038101906104e49190613a21565b610cea565b005b61050560048036038101906105009190613b28565b610dfe565b005b34801561051357600080fd5b5061052e60048036038101906105299190613b84565b610e4e565b005b34801561053c57600080fd5b506105456110ac565b6040516105529190613415565b60405180910390f35b61057560048036038101906105709190613bf3565b6110d5565b005b34801561058357600080fd5b5061059e6004803603810190610599919061378d565b6111e8565b6040516105ab9190613d29565b60405180910390f35b3480156105c057600080fd5b506105db60048036038101906105d69190613d4b565b611238565b005b3480156105e957600080fd5b5061060460048036038101906105ff9190613dce565b611252565b005b34801561061257600080fd5b5061062d60048036038101906106289190613e75565b611356565b005b34801561063b57600080fd5b5061065660048036038101906106519190613d4b565b61136e565b005b34801561066457600080fd5b5061067f600480360381019061067a9190613ee4565b61150d565b60405161068c9190613385565b60405180910390f35b3480156106a157600080fd5b506106bc60048036038101906106b7919061378d565b6115be565b005b606060006106ef6000357fffffffff000000000000000000000000000000000000000000000000000000001661191e565b509050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610788576000357fffffffff00000000000000000000000000000000000000000000000000000000166040517fbb370b2b00000000000000000000000000000000000000000000000000000000815260040161077f9190613f3c565b60405180910390fd5b6000808273ffffffffffffffffffffffffffffffffffffffff1634878733346040516020016107ba9493929190613ff0565b6040516020818303038152906040526040516107d6919061405c565b60006040518083038185875af1925050503d8060008114610813576040519150601f19603f3d011682016040523d82523d6000602084013e610818565b606091505b5091509150811561082e57809350505050610837565b80518060208301fd5b92915050565b6000633a27170660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806108975750610896826119d8565b5b806108a757506108a682611a39565b5b9050919050565b60606108ba8383611aa1565b905092915050565b6000600254905090565b6060825167ffffffffffffffff8111156108e9576108e86130be565b5b60405190808252806020026020018201604052801561091c57816020015b60608152602001906001900390816109075790505b50905060005b83518110156109925761096984828151811061094157610940614073565b5b602002602001015184838151811061095c5761095b614073565b5b6020026020010151611aa1565b82828151811061097c5761097b614073565b5b6020026020010181905250806001019050610922565b5092915050565b6000806003600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a4457826040517fae8f9a36000000000000000000000000000000000000000000000000000000008152600401610a3b91906140b1565b60405180910390fd5b80915050919050565b6000610a5882611b6f565b610a628383611bbc565b905092915050565b6060610a7582611b6f565b610a9060056000848152602001908152602001600020611c29565b9050919050565b610aa13384611bbc565b610ae45782336040517f1294d2a9000000000000000000000000000000000000000000000000000000008152600401610adb9291906140cc565b60405180910390fd5b610af18585858585611c4a565b5050505050565b6060610b0382611f6f565b9050919050565b60608282905067ffffffffffffffff811115610b2957610b286130be565b5b604051908082528060200260200182016040528015610b5c57816020015b6060815260200190600190039081610b475790505b50905060005b83839050811015610c7f576000803073ffffffffffffffffffffffffffffffffffffffff16868685818110610b9a57610b99614073565b5b9050602002810190610bac9190614104565b604051610bba929190614167565b600060405180830381855af49150503d8060008114610bf5576040519150601f19603f3d011682016040523d82523d6000602084013e610bfa565b606091505b509150915081610c53576000815114610c165780518082602001fd5b826040517f234eb819000000000000000000000000000000000000000000000000000000008152600401610c4a919061309e565b60405180910390fd5b80848481518110610c6757610c66614073565b5b60200260200101819052508260010192505050610b62565b5092915050565b6000610ccf600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612014565b9050919050565b610cde612029565b610ce86000611639565b565b600085519050845181141580610d01575083518114155b80610d0d575082518114155b80610d19575081518114155b15610d50576040517f93a8311900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b81811015610df557610dea878281518110610d7157610d70614073565b5b6020026020010151878381518110610d8c57610d8b614073565b5b6020026020010151878481518110610da757610da6614073565b5b6020026020010151878581518110610dc257610dc1614073565b5b6020026020010151878681518110610ddd57610ddc614073565b5b6020026020010151610a97565b806001019050610d53565b50505050505050565b610e06612029565b60003414610e40576040517ff36ba73700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e4a82826120a2565b5050565b6000610e5983610999565b90503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610ecf578083336040517f5b271ea2000000000000000000000000000000000000000000000000000000008152600401610ec693929190614180565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610f36576040517f9577b8b300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610f9c576040517f89fdad6200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610fc3856005600087815260200190815260200160002061210d90919063ffffffff16565b9050806110095784846040517fa7626b680000000000000000000000000000000000000000000000000000000081526004016110009291906141b7565b60405180910390fd5b838273ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167f1b1b58aa2ec0cec2228b2d37124556d41f5a1f7b12f089171f896cc236671215866040516110679190613063565b60405180910390a46000338560018660405160200161108994939291906141e0565b60405160208183030381529060405290506110a4868261213d565b505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6110dd612029565b60003414611117576040517ff36ba73700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8051825114611152576040517f3bcc897900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008251141561118e576040517f97da5f9500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b82518110156111e3576111d88382815181106111b0576111af614073565b5b60200260200101518383815181106111cb576111ca614073565b5b60200260200101516120a2565b806001019050611191565b505050565b6060611231600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061216f565b9050919050565b611240612029565b61124c84848484612190565b50505050565b61125a612029565b8151835114158061126d57508051825114155b156112a4576040517f2fa71dfe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000835114156112e0576040517f80c9830500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b83518110156113505761134584828151811061130257611301614073565b5b602002602001015184838151811061131d5761131c614073565b5b602002602001015184848151811061133857611337614073565b5b60200260200101516123c0565b8060010190506112e3565b50505050565b61135e612029565b6113698383836123c0565b505050565b600061137984610999565b90503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146113ef578084336040517f5b271ea20000000000000000000000000000000000000000000000000000000081526004016113e693929190614180565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415611456576040517f9577b8b300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156114bc576040517f89fdad6200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6114c9858286868661244e565b821561150657600033856000856040516020016114e994939291906141e0565b6040516020818303038152906040529050611504868261213d565b505b5050505050565b6060815167ffffffffffffffff81111561152a576115296130be565b5b60405190808252806020026020018201604052801561155d57816020015b60608152602001906001900390816115485790505b50905060005b82518110156115b85761158f83828151811061158257611581614073565b5b6020026020010151611f6f565b8282815181106115a2576115a1614073565b5b6020026020010181905250806001019050611563565b50919050565b6115c6612029565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561162d576040517f1ad8836c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61163681611639565b50565b6116416110ac565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461172e578073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b80600160008481526020019081526020016000209080519060200190611758929190612d36565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b2826040516117899190613063565b60405180910390a25050565b61179f82826117a3565b5050565b7fdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af160001b821415611800576040517f85c169bd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db93275660001b82141561185d576040517f76755b3800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fe0261fa95db2eb3b5439bd033cda66d56b96f92f243a8228fd87550ed7bdfdb360001b8214156118ba576040517f4ef6d7fb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806001600084815260200190815260200160002090805190602001906118e1929190612d36565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b2826040516119129190613063565b60405180910390a25050565b600080600061195969cee78b4094da8601109660b01b857bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191661252b565b9050600061196682611f6f565b9050601481511415801561197c57506000815114155b156119be57806040517f42bfe79f0000000000000000000000000000000000000000000000000000000081526004016119b59190613063565b60405180910390fd5b806119c89061428a565b60601c6001935093505050915091565b600063a918fa6b60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480611a325750611a318261256b565b5b9050919050565b600080611a4c6301ffc9a760e01b61191e565b509050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611a8e576000915050611a9c565b611a9881846125cc565b9150505b919050565b6060600160008484604051602001611aba929190614312565b6040516020818303038152906040528051906020012081526020019081526020016000208054611ae99061436d565b80601f0160208091040260200160405190810160405280929190818152602001828054611b159061436d565b8015611b625780601f10611b3757610100808354040283529160200191611b62565b820191906000526020600020905b815481529060010190602001808311611b4557829003601f168201915b5050505050905092915050565b611b788161268b565b611bb957806040517fae8f9a36000000000000000000000000000000000000000000000000000000008152600401611bb091906140b1565b60405180910390fd5b50565b6000611bc782610999565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161480611c215750611c2083600560008581526020019081526020016000206126f790919063ffffffff16565b5b905092915050565b60606000611c3983600001612727565b905060608190508092505050919050565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415611cb0576040517f5d67d6c100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611cbb84610999565b90508573ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611d31578084876040517f5b271ea2000000000000000000000000000000000000000000000000000000008152600401611d2893929190614180565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415611d98576040517f24ecef4d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611da486868685612783565b611dad84610999565b9050611db98685612789565b611e0a84600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206127ff90919063ffffffff16565b50611e5c84600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061281690919063ffffffff16565b50846003600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf338787604051611f119392919061439f565b60405180910390a4611f258686868561282d565b60003387878786604051602001611f409594939291906143dd565b6040516020818303038152906040529050611f5b8782612833565b611f66868583612865565b50505050505050565b6060600160008381526020019081526020016000208054611f8f9061436d565b80601f0160208091040260200160405190810160405280929190818152602001828054611fbb9061436d565b80156120085780601f10611fdd57610100808354040283529160200191612008565b820191906000526020600020905b815481529060010190602001808311611feb57829003601f168201915b50505050509050919050565b6000612022826000016129cb565b9050919050565b3373ffffffffffffffffffffffffffffffffffffffff166120486110ac565b73ffffffffffffffffffffffffffffffffffffffff16146120a057336040517fbf1169c50000000000000000000000000000000000000000000000000000000081526004016120979190613415565b60405180910390fd5b565b7ff675e9361af1c1664c1868cfa3eb97672d6b1a513aa5b81dec34c9ee330e818d60001b8214156120ff576040517f3664800a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6121098282611795565b5050565b6000612135836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6129dc565b905092915050565b61216b827f8a1c15a8799f71b547e08e2bcb2e85257e81b0a07eee2ce6712549eef1f0097060001b83612a4c565b5050565b6060600061217f83600001612727565b905060608190508092505050919050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156121f7576040517f24ecef4d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6122046000858584612783565b61220d8361268b565b1561224f57826040517f34c7b51100000000000000000000000000000000000000000000000000000000815260040161224691906140b1565b60405180910390fd5b60026000815461225e90614466565b919050819055506122b683600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061281690919063ffffffff16565b50836003600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828473ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf33868660405161236c9392919061439f565b60405180910390a4612381600085858461282d565b600033600086868560405160200161239d9594939291906143dd565b60405160208183030381529060405290506123b9858483612865565b5050505050565b806001600085856040516020016123d8929190614312565b604051602081830303815290604052805190602001208152602001908152602001600020908051906020019061240f929190612d36565b5081837fa6e4251f855f750545fe414f120db91c76b88def14d120969e5bb2d3f05debbb836040516124419190613063565b60405180910390a3505050565b60006124758660056000878152602001908152602001600020612b0b90919063ffffffff16565b9050806124bb5785846040517f4aa31a8c0000000000000000000000000000000000000000000000000000000081526004016124b29291906141b7565b60405180910390fd5b838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fc78cd419d6136f9f1c1c6aec1d3fae098cffaf8bc86314a8f2685e32fe574e3c868660405161251b9291906144af565b60405180910390a4505050505050565b60008083600060f01b846040516020016125479392919061459a565b604051602081830303815290604052905080612562906145ec565b91505092915050565b600063629aa69460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806125c557506125c482612b3b565b5b9050919050565b6000806301ffc9a760e01b836040516024016125e89190613f3c565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506000806000602060008551602087018a617530fa92503d91506000519050828015612673575060208210155b801561267f5750600081115b94505050505092915050565b60008073ffffffffffffffffffffffffffffffffffffffff166003600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600061271f836000018373ffffffffffffffffffffffffffffffffffffffff1660001b612ba5565b905092915050565b60608160000180548060200260200160405190810160405280929190818152602001828054801561277757602002820191906000526020600020905b815481526020019060010190808311612763575b50505050509050919050565b50505050565b600060056000838152602001908152602001600020905060006127ab82612bc8565b90506000805b828110156127f7576127cd600085612bdd90919063ffffffff16565b91506127ec82878760006040518060200160405280600081525061244e565b8060010190506127b1565b505050505050565b600061280e8360000183612bf7565b905092915050565b600061282583600001836129dc565b905092915050565b50505050565b612861827fb23eae7e6d1564b295b4c3e3be402d9a2f0776c57bdf365903496f6fa481ab0060001b83612a4c565b5050565b61287683636bb56a1460e01b6125cc565b15612927578273ffffffffffffffffffffffffffffffffffffffff16636bb56a147f0b084a55ebf70fd3c06fd755269dac2212c4d3f0f4d09079780bfa50c1b2984d60001b836040518363ffffffff1660e01b81526004016128d9929190614653565b6000604051808303816000875af11580156128f8573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061292191906146f3565b506129c6565b816129c55760008373ffffffffffffffffffffffffffffffffffffffff163b1461298857826040517f4349776d00000000000000000000000000000000000000000000000000000000815260040161297f9190613415565b60405180910390fd5b826040517f031731370000000000000000000000000000000000000000000000000000000081526004016129bc9190613415565b60405180910390fd5b5b505050565b600081600001805490509050919050565b60006129e88383612ba5565b612a41578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050612a46565b600090505b92915050565b612a7c636bb56a1460e01b8473ffffffffffffffffffffffffffffffffffffffff166125cc90919063ffffffff16565b15612b06578273ffffffffffffffffffffffffffffffffffffffff16636bb56a1483836040518363ffffffff1660e01b8152600401612abc929190614653565b6000604051808303816000875af1158015612adb573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190612b0491906146f3565b505b505050565b6000612b33836000018373ffffffffffffffffffffffffffffffffffffffff1660001b612bf7565b905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600080836001016000848152602001908152602001600020541415905092915050565b6000612bd6826000016129cb565b9050919050565b6000612bec8360000183612d0b565b60001c905092915050565b60008083600101600084815260200190815260200160002054905060008114612cff576000600182612c29919061473c565b9050600060018660000180549050612c41919061473c565b9050818114612cb0576000866000018281548110612c6257612c61614073565b5b9060005260206000200154905080876000018481548110612c8657612c85614073565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b85600001805480612cc457612cc3614770565b5b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050612d05565b60009150505b92915050565b6000826000018281548110612d2357612d22614073565b5b9060005260206000200154905092915050565b828054612d429061436d565b90600052602060002090601f016020900481019282612d645760008555612dab565b82601f10612d7d57805160ff1916838001178555612dab565b82800160010185558215612dab579182015b82811115612daa578251825591602001919060010190612d8f565b5b509050612db89190612dbc565b5090565b5b80821115612dd5576000816000905550600101612dbd565b5090565b600082825260208201905092915050565b60008082015250565b6000612e00600483612dd9565b9150612e0b82612dea565b602082019050919050565b60006020820190508181036000830152612e2f81612df3565b9050919050565b82818337600083830152505050565b6000601f19601f8301169050919050565b6000612e628385612dd9565b9350612e6f838584612e36565b612e7883612e45565b840190509392505050565b60006020820190508181036000830152612e9e818486612e56565b90509392505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b612ef081612ebb565b8114612efb57600080fd5b50565b600081359050612f0d81612ee7565b92915050565b600060208284031215612f2957612f28612eb1565b5b6000612f3784828501612efe565b91505092915050565b60008115159050919050565b612f5581612f40565b82525050565b6000602082019050612f706000830184612f4c565b92915050565b6000819050919050565b612f8981612f76565b8114612f9457600080fd5b50565b600081359050612fa681612f80565b92915050565b60008060408385031215612fc357612fc2612eb1565b5b6000612fd185828601612f97565b9250506020612fe285828601612f97565b9150509250929050565b600081519050919050565b60005b83811015613015578082015181840152602081019050612ffa565b83811115613024576000848401525b50505050565b600061303582612fec565b61303f8185612dd9565b935061304f818560208601612ff7565b61305881612e45565b840191505092915050565b6000602082019050818103600083015261307d818461302a565b905092915050565b6000819050919050565b61309881613085565b82525050565b60006020820190506130b3600083018461308f565b92915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6130f682612e45565b810181811067ffffffffffffffff82111715613115576131146130be565b5b80604052505050565b6000613128612ea7565b905061313482826130ed565b919050565b600067ffffffffffffffff821115613154576131536130be565b5b602082029050602081019050919050565b600080fd5b600061317d61317884613139565b61311e565b905080838252602082019050602084028301858111156131a05761319f613165565b5b835b818110156131c957806131b58882612f97565b8452602084019350506020810190506131a2565b5050509392505050565b600082601f8301126131e8576131e76130b9565b5b81356131f884826020860161316a565b91505092915050565b6000806040838503121561321857613217612eb1565b5b600083013567ffffffffffffffff81111561323657613235612eb6565b5b613242858286016131d3565b925050602083013567ffffffffffffffff81111561326357613262612eb6565b5b61326f858286016131d3565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b60006132c182612fec565b6132cb81856132a5565b93506132db818560208601612ff7565b6132e481612e45565b840191505092915050565b60006132fb83836132b6565b905092915050565b6000602082019050919050565b600061331b82613279565b6133258185613284565b93508360208202850161333785613295565b8060005b85811015613373578484038952815161335485826132ef565b945061335f83613303565b925060208a0199505060018101905061333b565b50829750879550505050505092915050565b6000602082019050818103600083015261339f8184613310565b905092915050565b6000602082840312156133bd576133bc612eb1565b5b60006133cb84828501612f97565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006133ff826133d4565b9050919050565b61340f816133f4565b82525050565b600060208201905061342a6000830184613406565b92915050565b613439816133f4565b811461344457600080fd5b50565b60008135905061345681613430565b92915050565b6000806040838503121561347357613472612eb1565b5b600061348185828601613447565b925050602061349285828601612f97565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6134d1816133f4565b82525050565b60006134e383836134c8565b60208301905092915050565b6000602082019050919050565b60006135078261349c565b61351181856134a7565b935061351c836134b8565b8060005b8381101561354d57815161353488826134d7565b975061353f836134ef565b925050600181019050613520565b5085935050505092915050565b6000602082019050818103600083015261357481846134fc565b905092915050565b61358581612f40565b811461359057600080fd5b50565b6000813590506135a28161357c565b92915050565b600080fd5b600067ffffffffffffffff8211156135c8576135c76130be565b5b6135d182612e45565b9050602081019050919050565b60006135f16135ec846135ad565b61311e565b90508281526020810184848401111561360d5761360c6135a8565b5b613618848285612e36565b509392505050565b600082601f830112613635576136346130b9565b5b81356136458482602086016135de565b91505092915050565b600080600080600060a0868803121561366a57613669612eb1565b5b600061367888828901613447565b955050602061368988828901613447565b945050604061369a88828901612f97565b93505060606136ab88828901613593565b925050608086013567ffffffffffffffff8111156136cc576136cb612eb6565b5b6136d888828901613620565b9150509295509295909350565b600080fd5b60008083601f840112613700576136ff6130b9565b5b8235905067ffffffffffffffff81111561371d5761371c6136e5565b5b60208301915083602082028301111561373957613738613165565b5b9250929050565b6000806020838503121561375757613756612eb1565b5b600083013567ffffffffffffffff81111561377557613774612eb6565b5b613781858286016136ea565b92509250509250929050565b6000602082840312156137a3576137a2612eb1565b5b60006137b184828501613447565b91505092915050565b600067ffffffffffffffff8211156137d5576137d46130be565b5b602082029050602081019050919050565b60006137f96137f4846137ba565b61311e565b9050808382526020820190506020840283018581111561381c5761381b613165565b5b835b8181101561384557806138318882613447565b84526020840193505060208101905061381e565b5050509392505050565b600082601f830112613864576138636130b9565b5b81356138748482602086016137e6565b91505092915050565b600067ffffffffffffffff821115613898576138976130be565b5b602082029050602081019050919050565b60006138bc6138b78461387d565b61311e565b905080838252602082019050602084028301858111156138df576138de613165565b5b835b8181101561390857806138f48882613593565b8452602084019350506020810190506138e1565b5050509392505050565b600082601f830112613927576139266130b9565b5b81356139378482602086016138a9565b91505092915050565b600067ffffffffffffffff82111561395b5761395a6130be565b5b602082029050602081019050919050565b600061397f61397a84613940565b61311e565b905080838252602082019050602084028301858111156139a2576139a1613165565b5b835b818110156139e957803567ffffffffffffffff8111156139c7576139c66130b9565b5b8086016139d48982613620565b855260208501945050506020810190506139a4565b5050509392505050565b600082601f830112613a0857613a076130b9565b5b8135613a1884826020860161396c565b91505092915050565b600080600080600060a08688031215613a3d57613a3c612eb1565b5b600086013567ffffffffffffffff811115613a5b57613a5a612eb6565b5b613a678882890161384f565b955050602086013567ffffffffffffffff811115613a8857613a87612eb6565b5b613a948882890161384f565b945050604086013567ffffffffffffffff811115613ab557613ab4612eb6565b5b613ac1888289016131d3565b935050606086013567ffffffffffffffff811115613ae257613ae1612eb6565b5b613aee88828901613912565b925050608086013567ffffffffffffffff811115613b0f57613b0e612eb6565b5b613b1b888289016139f3565b9150509295509295909350565b60008060408385031215613b3f57613b3e612eb1565b5b6000613b4d85828601612f97565b925050602083013567ffffffffffffffff811115613b6e57613b6d612eb6565b5b613b7a85828601613620565b9150509250929050565b600080600060608486031215613b9d57613b9c612eb1565b5b6000613bab86828701613447565b9350506020613bbc86828701612f97565b925050604084013567ffffffffffffffff811115613bdd57613bdc612eb6565b5b613be986828701613620565b9150509250925092565b60008060408385031215613c0a57613c09612eb1565b5b600083013567ffffffffffffffff811115613c2857613c27612eb6565b5b613c34858286016131d3565b925050602083013567ffffffffffffffff811115613c5557613c54612eb6565b5b613c61858286016139f3565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b613ca081612f76565b82525050565b6000613cb28383613c97565b60208301905092915050565b6000602082019050919050565b6000613cd682613c6b565b613ce08185613c76565b9350613ceb83613c87565b8060005b83811015613d1c578151613d038882613ca6565b9750613d0e83613cbe565b925050600181019050613cef565b5085935050505092915050565b60006020820190508181036000830152613d438184613ccb565b905092915050565b60008060008060808587031215613d6557613d64612eb1565b5b6000613d7387828801613447565b9450506020613d8487828801612f97565b9350506040613d9587828801613593565b925050606085013567ffffffffffffffff811115613db657613db5612eb6565b5b613dc287828801613620565b91505092959194509250565b600080600060608486031215613de757613de6612eb1565b5b600084013567ffffffffffffffff811115613e0557613e04612eb6565b5b613e11868287016131d3565b935050602084013567ffffffffffffffff811115613e3257613e31612eb6565b5b613e3e868287016131d3565b925050604084013567ffffffffffffffff811115613e5f57613e5e612eb6565b5b613e6b868287016139f3565b9150509250925092565b600080600060608486031215613e8e57613e8d612eb1565b5b6000613e9c86828701612f97565b9350506020613ead86828701612f97565b925050604084013567ffffffffffffffff811115613ece57613ecd612eb6565b5b613eda86828701613620565b9150509250925092565b600060208284031215613efa57613ef9612eb1565b5b600082013567ffffffffffffffff811115613f1857613f17612eb6565b5b613f24848285016131d3565b91505092915050565b613f3681612ebb565b82525050565b6000602082019050613f516000830184613f2d565b92915050565b600081905092915050565b6000613f6e8385613f57565b9350613f7b838584612e36565b82840190509392505050565b60008160601b9050919050565b6000613f9f82613f87565b9050919050565b6000613fb182613f94565b9050919050565b613fc9613fc4826133f4565b613fa6565b82525050565b6000819050919050565b613fea613fe582613085565b613fcf565b82525050565b6000613ffd828688613f62565b91506140098285613fb8565b6014820191506140198284613fd9565b60208201915081905095945050505050565b600061403682612fec565b6140408185613f57565b9350614050818560208601612ff7565b80840191505092915050565b6000614068828461402b565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6140ab81612f76565b82525050565b60006020820190506140c660008301846140a2565b92915050565b60006040820190506140e160008301856140a2565b6140ee6020830184613406565b9392505050565b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112614121576141206140f5565b5b80840192508235915067ffffffffffffffff821115614143576141426140fa565b5b60208301925060018202360383131561415f5761415e6140ff565b5b509250929050565b6000614174828486613f62565b91508190509392505050565b60006060820190506141956000830186613406565b6141a260208301856140a2565b6141af6040830184613406565b949350505050565b60006040820190506141cc6000830185613406565b6141d960208301846140a2565b9392505050565b60006080820190506141f56000830187613406565b61420260208301866140a2565b61420f6040830185612f4c565b8181036060830152614221818461302a565b905095945050505050565b6000819050602082019050919050565b60007fffffffffffffffffffffffffffffffffffffffff00000000000000000000000082169050919050565b6000614274825161423c565b80915050919050565b600082821b905092915050565b600061429582612fec565b8261429f8461422c565b90506142aa81614268565b925060148210156142ea576142e57fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008360140360080261427d565b831692505b5050919050565b6000819050919050565b61430c61430782612f76565b6142f1565b82525050565b600061431e82856142fb565b60208201915061432e82846142fb565b6020820191508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061438557607f821691505b602082108114156143995761439861433e565b5b50919050565b60006060820190506143b46000830186613406565b6143c16020830185612f4c565b81810360408301526143d3818461302a565b9050949350505050565b600060a0820190506143f26000830188613406565b6143ff6020830187613406565b61440c6040830186613406565b61441960608301856140a2565b818103608083015261442b818461302a565b90509695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061447182613085565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156144a4576144a3614437565b5b600182019050919050565b60006040820190506144c46000830185612f4c565b81810360208301526144d6818461302a565b90509392505050565b60007fffffffffffffffffffff0000000000000000000000000000000000000000000082169050919050565b6000819050919050565b614526614521826144df565b61450b565b82525050565b60007fffff00000000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b61457361456e8261452c565b614558565b82525050565b6000819050919050565b61459461458f8261423c565b614579565b82525050565b60006145a68286614515565b600a820191506145b68285614562565b6002820191506145c68284614583565b601482019150819050949350505050565b60006145e38251612f76565b80915050919050565b60006145f782612fec565b826146018461422c565b905061460c816145d7565b9250602082101561464c576146477fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8360200360080261427d565b831692505b5050919050565b600060408201905061466860008301856140a2565b818103602083015261467a818461302a565b90509392505050565b6000614696614691846135ad565b61311e565b9050828152602081018484840111156146b2576146b16135a8565b5b6146bd848285612ff7565b509392505050565b600082601f8301126146da576146d96130b9565b5b81516146ea848260208601614683565b91505092915050565b60006020828403121561470957614708612eb1565b5b600082015167ffffffffffffffff81111561472757614726612eb6565b5b614733848285016146c5565b91505092915050565b600061474782613085565b915061475283613085565b92508282101561476557614764614437565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea264697066735822122019b4741c1b86ce45d7afc206f1d134cbe9093da1f0722c5c71870cac77dc10b764736f6c634300080c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7E87632C GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xAF255B61 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xAF255B61 EQ PUSH2 0x5B4 JUMPI DUP1 PUSH4 0xBE9F0E6F EQ PUSH2 0x5DD JUMPI DUP1 PUSH4 0xD6C1407C EQ PUSH2 0x606 JUMPI DUP1 PUSH4 0xDB8C9663 EQ PUSH2 0x62F JUMPI DUP1 PUSH4 0xDEDFF9C6 EQ PUSH2 0x658 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x695 JUMPI PUSH2 0x1CA JUMP JUMPDEST DUP1 PUSH4 0x7E87632C EQ PUSH2 0x4C2 JUMPI DUP1 PUSH4 0x7F23690C EQ PUSH2 0x4EB JUMPI DUP1 PUSH4 0x86A10DDD EQ PUSH2 0x507 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x530 JUMPI DUP1 PUSH4 0x97902421 EQ PUSH2 0x55B JUMPI DUP1 PUSH4 0xA3B261F2 EQ PUSH2 0x577 JUMPI PUSH2 0x1CA JUMP JUMPDEST DUP1 PUSH4 0x49A6078D GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x49A6078D EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0x511B6952 EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0x54F6127F EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0x6963D438 EQ PUSH2 0x431 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x46E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4AB JUMPI PUSH2 0x1CA JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x16E023B3 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x1D26FCE6 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x217B2270 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x2A3654A4 EQ PUSH2 0x351 JUMPI PUSH2 0x1CA JUMP JUMPDEST CALLDATASIZE PUSH2 0x1CA JUMPI PUSH1 0x0 CALLVALUE EQ ISZERO PUSH2 0x198 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE5099EE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18F SWAP1 PUSH2 0x2E16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x61F4944200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLDATASIZE PUSH1 0x60 PUSH1 0x4 PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO PUSH2 0x21B JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE5099EE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x212 SWAP3 SWAP2 SWAP1 PUSH2 0x2E83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x225 DUP4 DUP4 PUSH2 0x6BE JUMP JUMPDEST SWAP1 POP SWAP2 POP POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x259 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x2F13 JUMP JUMPDEST PUSH2 0x83D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x2F5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x296 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x2FAC JUMP JUMPDEST PUSH2 0x8AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x3063 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x8C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0x309E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x3201 JUMP JUMPDEST PUSH2 0x8CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x3385 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x336 SWAP2 SWAP1 PUSH2 0x33A7 JUMP JUMPDEST PUSH2 0x999 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x3415 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x378 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x373 SWAP2 SWAP1 PUSH2 0x345C JUMP JUMPDEST PUSH2 0xA4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x385 SWAP2 SWAP1 PUSH2 0x2F5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x33A7 JUMP JUMPDEST PUSH2 0xA6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C2 SWAP2 SWAP1 PUSH2 0x355A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3ED SWAP2 SWAP1 PUSH2 0x364E JUMP JUMPDEST PUSH2 0xA97 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x400 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x416 SWAP2 SWAP1 PUSH2 0x33A7 JUMP JUMPDEST PUSH2 0xAF8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x428 SWAP2 SWAP1 PUSH2 0x3063 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x458 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x453 SWAP2 SWAP1 PUSH2 0x3740 JUMP JUMPDEST PUSH2 0xB0A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x465 SWAP2 SWAP1 PUSH2 0x3385 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x495 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x490 SWAP2 SWAP1 PUSH2 0x378D JUMP JUMPDEST PUSH2 0xC86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A2 SWAP2 SWAP1 PUSH2 0x309E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C0 PUSH2 0xCD6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E4 SWAP2 SWAP1 PUSH2 0x3A21 JUMP JUMPDEST PUSH2 0xCEA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x505 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x500 SWAP2 SWAP1 PUSH2 0x3B28 JUMP JUMPDEST PUSH2 0xDFE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x513 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x52E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x529 SWAP2 SWAP1 PUSH2 0x3B84 JUMP JUMPDEST PUSH2 0xE4E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x545 PUSH2 0x10AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x552 SWAP2 SWAP1 PUSH2 0x3415 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x575 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x570 SWAP2 SWAP1 PUSH2 0x3BF3 JUMP JUMPDEST PUSH2 0x10D5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x599 SWAP2 SWAP1 PUSH2 0x378D JUMP JUMPDEST PUSH2 0x11E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5AB SWAP2 SWAP1 PUSH2 0x3D29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D6 SWAP2 SWAP1 PUSH2 0x3D4B JUMP JUMPDEST PUSH2 0x1238 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x604 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5FF SWAP2 SWAP1 PUSH2 0x3DCE JUMP JUMPDEST PUSH2 0x1252 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x612 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x62D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x628 SWAP2 SWAP1 PUSH2 0x3E75 JUMP JUMPDEST PUSH2 0x1356 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x656 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x651 SWAP2 SWAP1 PUSH2 0x3D4B JUMP JUMPDEST PUSH2 0x136E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x664 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x67F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x67A SWAP2 SWAP1 PUSH2 0x3EE4 JUMP JUMPDEST PUSH2 0x150D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x68C SWAP2 SWAP1 PUSH2 0x3385 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6B7 SWAP2 SWAP1 PUSH2 0x378D JUMP JUMPDEST PUSH2 0x15BE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x6EF PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x191E JUMP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x788 JUMPI PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH1 0x40 MLOAD PUSH32 0xBB370B2B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77F SWAP2 SWAP1 PUSH2 0x3F3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLVALUE DUP8 DUP8 CALLER CALLVALUE PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7BA SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3FF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x7D6 SWAP2 SWAP1 PUSH2 0x405C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x813 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x818 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x82E JUMPI DUP1 SWAP4 POP POP POP POP PUSH2 0x837 JUMP JUMPDEST DUP1 MLOAD DUP1 PUSH1 0x20 DUP4 ADD REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x3A271706 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x897 JUMPI POP PUSH2 0x896 DUP3 PUSH2 0x19D8 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x8A7 JUMPI POP PUSH2 0x8A6 DUP3 PUSH2 0x1A39 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x8BA DUP4 DUP4 PUSH2 0x1AA1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8E9 JUMPI PUSH2 0x8E8 PUSH2 0x30BE JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x91C JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x907 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x992 JUMPI PUSH2 0x969 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x941 JUMPI PUSH2 0x940 PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x95C JUMPI PUSH2 0x95B PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1AA1 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x97C JUMPI PUSH2 0x97B PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x922 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA44 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xAE8F9A3600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3B SWAP2 SWAP1 PUSH2 0x40B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA58 DUP3 PUSH2 0x1B6F JUMP JUMPDEST PUSH2 0xA62 DUP4 DUP4 PUSH2 0x1BBC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA75 DUP3 PUSH2 0x1B6F JUMP JUMPDEST PUSH2 0xA90 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1C29 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAA1 CALLER DUP5 PUSH2 0x1BBC JUMP JUMPDEST PUSH2 0xAE4 JUMPI DUP3 CALLER PUSH1 0x40 MLOAD PUSH32 0x1294D2A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xADB SWAP3 SWAP2 SWAP1 PUSH2 0x40CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAF1 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1C4A JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB03 DUP3 PUSH2 0x1F6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP3 DUP3 SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB29 JUMPI PUSH2 0xB28 PUSH2 0x30BE JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB5C JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xB47 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0xC7F JUMPI PUSH1 0x0 DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0xB9A JUMPI PUSH2 0xB99 PUSH2 0x4073 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0xBAC SWAP2 SWAP1 PUSH2 0x4104 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBBA SWAP3 SWAP2 SWAP1 PUSH2 0x4167 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xBF5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBFA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0xC53 JUMPI PUSH1 0x0 DUP2 MLOAD EQ PUSH2 0xC16 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH32 0x234EB81900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC4A SWAP2 SWAP1 PUSH2 0x309E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xC67 JUMPI PUSH2 0xC66 PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP3 PUSH1 0x1 ADD SWAP3 POP POP POP PUSH2 0xB62 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCCF PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2014 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCDE PUSH2 0x2029 JUMP JUMPDEST PUSH2 0xCE8 PUSH1 0x0 PUSH2 0x1639 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP6 MLOAD SWAP1 POP DUP5 MLOAD DUP2 EQ ISZERO DUP1 PUSH2 0xD01 JUMPI POP DUP4 MLOAD DUP2 EQ ISZERO JUMPDEST DUP1 PUSH2 0xD0D JUMPI POP DUP3 MLOAD DUP2 EQ ISZERO JUMPDEST DUP1 PUSH2 0xD19 JUMPI POP DUP2 MLOAD DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0xD50 JUMPI PUSH1 0x40 MLOAD PUSH32 0x93A8311900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xDF5 JUMPI PUSH2 0xDEA DUP8 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD71 JUMPI PUSH2 0xD70 PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xD8C JUMPI PUSH2 0xD8B PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xDA7 JUMPI PUSH2 0xDA6 PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xDC2 JUMPI PUSH2 0xDC1 PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0xDDD JUMPI PUSH2 0xDDC PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xA97 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0xD53 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE06 PUSH2 0x2029 JUMP JUMPDEST PUSH1 0x0 CALLVALUE EQ PUSH2 0xE40 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF36BA73700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE4A DUP3 DUP3 PUSH2 0x20A2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE59 DUP4 PUSH2 0x999 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xECF JUMPI DUP1 DUP4 CALLER PUSH1 0x40 MLOAD PUSH32 0x5B271EA200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEC6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4180 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF36 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9577B8B300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF9C JUMPI PUSH1 0x40 MLOAD PUSH32 0x89FDAD6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFC3 DUP6 PUSH1 0x5 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x210D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1009 JUMPI DUP5 DUP5 PUSH1 0x40 MLOAD PUSH32 0xA7626B6800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1000 SWAP3 SWAP2 SWAP1 PUSH2 0x41B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1B1B58AA2EC0CEC2228B2D37124556D41F5A1F7B12F089171F896CC236671215 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1067 SWAP2 SWAP1 PUSH2 0x3063 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x0 CALLER DUP6 PUSH1 0x1 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1089 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x41E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x10A4 DUP7 DUP3 PUSH2 0x213D JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x10DD PUSH2 0x2029 JUMP JUMPDEST PUSH1 0x0 CALLVALUE EQ PUSH2 0x1117 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF36BA73700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x1152 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3BCC897900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ ISZERO PUSH2 0x118E JUMPI PUSH1 0x40 MLOAD PUSH32 0x97DA5F9500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x11E3 JUMPI PUSH2 0x11D8 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x11B0 JUMPI PUSH2 0x11AF PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x11CB JUMPI PUSH2 0x11CA PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x20A2 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1191 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1231 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x216F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1240 PUSH2 0x2029 JUMP JUMPDEST PUSH2 0x124C DUP5 DUP5 DUP5 DUP5 PUSH2 0x2190 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x125A PUSH2 0x2029 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ ISZERO DUP1 PUSH2 0x126D JUMPI POP DUP1 MLOAD DUP3 MLOAD EQ ISZERO JUMPDEST ISZERO PUSH2 0x12A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2FA71DFE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD EQ ISZERO PUSH2 0x12E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x80C9830500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1350 JUMPI PUSH2 0x1345 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1302 JUMPI PUSH2 0x1301 PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x131D JUMPI PUSH2 0x131C PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1338 JUMPI PUSH2 0x1337 PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x23C0 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x12E3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x135E PUSH2 0x2029 JUMP JUMPDEST PUSH2 0x1369 DUP4 DUP4 DUP4 PUSH2 0x23C0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1379 DUP5 PUSH2 0x999 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13EF JUMPI DUP1 DUP5 CALLER PUSH1 0x40 MLOAD PUSH32 0x5B271EA200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4180 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1456 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9577B8B300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x14BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x89FDAD6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14C9 DUP6 DUP3 DUP7 DUP7 DUP7 PUSH2 0x244E JUMP JUMPDEST DUP3 ISZERO PUSH2 0x1506 JUMPI PUSH1 0x0 CALLER DUP6 PUSH1 0x0 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x14E9 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x41E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x1504 DUP7 DUP3 PUSH2 0x213D JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x152A JUMPI PUSH2 0x1529 PUSH2 0x30BE JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x155D JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1548 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x15B8 JUMPI PUSH2 0x158F DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1582 JUMPI PUSH2 0x1581 PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1F6F JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x15A2 JUMPI PUSH2 0x15A1 PUSH2 0x4073 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1563 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15C6 PUSH2 0x2029 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x162D JUMPI PUSH1 0x40 MLOAD PUSH32 0x1AD8836C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1636 DUP2 PUSH2 0x1639 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1641 PUSH2 0x10AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x172E JUMPI DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1758 SWAP3 SWAP2 SWAP1 PUSH2 0x2D36 JUMP JUMPDEST POP DUP2 PUSH32 0xECE574603820D07BC9B91F2A932BAADF4628AABCB8AFBA49776529C14A6104B2 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1789 SWAP2 SWAP1 PUSH2 0x3063 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x179F DUP3 DUP3 PUSH2 0x17A3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0xDEBA1E292F8BA88238E10AB3C7F88BD4BE4FAC56CAD5194B6ECCEAF653468AF1 PUSH1 0x0 SHL DUP3 EQ ISZERO PUSH2 0x1800 JUMPI PUSH1 0x40 MLOAD PUSH32 0x85C169BD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x2F0A68AB07768E01943A599E73362A0E17A63A72E94DD2E384D2C1D4DB932756 PUSH1 0x0 SHL DUP3 EQ ISZERO PUSH2 0x185D JUMPI PUSH1 0x40 MLOAD PUSH32 0x76755B3800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xE0261FA95DB2EB3B5439BD033CDA66D56B96F92F243A8228FD87550ED7BDFDB3 PUSH1 0x0 SHL DUP3 EQ ISZERO PUSH2 0x18BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x4EF6D7FB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x18E1 SWAP3 SWAP2 SWAP1 PUSH2 0x2D36 JUMP JUMPDEST POP DUP2 PUSH32 0xECE574603820D07BC9B91F2A932BAADF4628AABCB8AFBA49776529C14A6104B2 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1912 SWAP2 SWAP1 PUSH2 0x3063 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1959 PUSH10 0xCEE78B4094DA86011096 PUSH1 0xB0 SHL DUP6 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH2 0x252B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1966 DUP3 PUSH2 0x1F6F JUMP JUMPDEST SWAP1 POP PUSH1 0x14 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x197C JUMPI POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO JUMPDEST ISZERO PUSH2 0x19BE JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x42BFE79F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19B5 SWAP2 SWAP1 PUSH2 0x3063 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x19C8 SWAP1 PUSH2 0x428A JUMP JUMPDEST PUSH1 0x60 SHR PUSH1 0x1 SWAP4 POP SWAP4 POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xA918FA6B PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x1A32 JUMPI POP PUSH2 0x1A31 DUP3 PUSH2 0x256B JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1A4C PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH2 0x191E JUMP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1A8E JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x1A9C JUMP JUMPDEST PUSH2 0x1A98 DUP2 DUP5 PUSH2 0x25CC JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x0 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1ABA SWAP3 SWAP2 SWAP1 PUSH2 0x4312 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x1AE9 SWAP1 PUSH2 0x436D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1B15 SWAP1 PUSH2 0x436D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B62 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1B37 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B62 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B45 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B78 DUP2 PUSH2 0x268B JUMP JUMPDEST PUSH2 0x1BB9 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAE8F9A3600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BB0 SWAP2 SWAP1 PUSH2 0x40B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BC7 DUP3 PUSH2 0x999 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1C21 JUMPI POP PUSH2 0x1C20 DUP4 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x26F7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1C39 DUP4 PUSH1 0x0 ADD PUSH2 0x2727 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 DUP2 SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1CB0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5D67D6C100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1CBB DUP5 PUSH2 0x999 JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D31 JUMPI DUP1 DUP5 DUP8 PUSH1 0x40 MLOAD PUSH32 0x5B271EA200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D28 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4180 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1D98 JUMPI PUSH1 0x40 MLOAD PUSH32 0x24ECEF4D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1DA4 DUP7 DUP7 DUP7 DUP6 PUSH2 0x2783 JUMP JUMPDEST PUSH2 0x1DAD DUP5 PUSH2 0x999 JUMP JUMPDEST SWAP1 POP PUSH2 0x1DB9 DUP7 DUP6 PUSH2 0x2789 JUMP JUMPDEST PUSH2 0x1E0A DUP5 PUSH1 0x4 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x27FF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x1E5C DUP5 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2816 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP DUP5 PUSH1 0x3 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB333C813A7426A7A11E2B190CAD52C44119421594B47F6F32ACE6D8C7207B2BF CALLER DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1F11 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x439F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1F25 DUP7 DUP7 DUP7 DUP6 PUSH2 0x282D JUMP JUMPDEST PUSH1 0x0 CALLER DUP8 DUP8 DUP8 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1F40 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x43DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x1F5B DUP8 DUP3 PUSH2 0x2833 JUMP JUMPDEST PUSH2 0x1F66 DUP7 DUP6 DUP4 PUSH2 0x2865 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x1F8F SWAP1 PUSH2 0x436D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1FBB SWAP1 PUSH2 0x436D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2008 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FDD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2008 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1FEB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2022 DUP3 PUSH1 0x0 ADD PUSH2 0x29CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2048 PUSH2 0x10AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x20A0 JUMPI CALLER PUSH1 0x40 MLOAD PUSH32 0xBF1169C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2097 SWAP2 SWAP1 PUSH2 0x3415 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH32 0xF675E9361AF1C1664C1868CFA3EB97672D6B1A513AA5B81DEC34C9EE330E818D PUSH1 0x0 SHL DUP3 EQ ISZERO PUSH2 0x20FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x3664800A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2109 DUP3 DUP3 PUSH2 0x1795 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2135 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x29DC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x216B DUP3 PUSH32 0x8A1C15A8799F71B547E08E2BCB2E85257E81B0A07EEE2CE6712549EEF1F00970 PUSH1 0x0 SHL DUP4 PUSH2 0x2A4C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x217F DUP4 PUSH1 0x0 ADD PUSH2 0x2727 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 DUP2 SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x21F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x24ECEF4D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2204 PUSH1 0x0 DUP6 DUP6 DUP5 PUSH2 0x2783 JUMP JUMPDEST PUSH2 0x220D DUP4 PUSH2 0x268B JUMP JUMPDEST ISZERO PUSH2 0x224F JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x34C7B51100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2246 SWAP2 SWAP1 PUSH2 0x40B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD PUSH2 0x225E SWAP1 PUSH2 0x4466 JUMP JUMPDEST SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH2 0x22B6 DUP4 PUSH1 0x4 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2816 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP DUP4 PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB333C813A7426A7A11E2B190CAD52C44119421594B47F6F32ACE6D8C7207B2BF CALLER DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x236C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x439F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x2381 PUSH1 0x0 DUP6 DUP6 DUP5 PUSH2 0x282D JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x0 DUP7 DUP7 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x239D SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x43DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x23B9 DUP6 DUP5 DUP4 PUSH2 0x2865 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x23D8 SWAP3 SWAP2 SWAP1 PUSH2 0x4312 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x240F SWAP3 SWAP2 SWAP1 PUSH2 0x2D36 JUMP JUMPDEST POP DUP2 DUP4 PUSH32 0xA6E4251F855F750545FE414F120DB91C76B88DEF14D120969E5BB2D3F05DEBBB DUP4 PUSH1 0x40 MLOAD PUSH2 0x2441 SWAP2 SWAP1 PUSH2 0x3063 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2475 DUP7 PUSH1 0x5 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2B0B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x24BB JUMPI DUP6 DUP5 PUSH1 0x40 MLOAD PUSH32 0x4AA31A8C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24B2 SWAP3 SWAP2 SWAP1 PUSH2 0x41B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC78CD419D6136F9F1C1C6AEC1D3FAE098CFFAF8BC86314A8F2685E32FE574E3C DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x251B SWAP3 SWAP2 SWAP1 PUSH2 0x44AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x0 PUSH1 0xF0 SHL DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2547 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x459A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 PUSH2 0x2562 SWAP1 PUSH2 0x45EC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x629AA694 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x25C5 JUMPI POP PUSH2 0x25C4 DUP3 PUSH2 0x2B3B JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP4 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x25E8 SWAP2 SWAP1 PUSH2 0x3F3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 PUSH1 0x0 DUP6 MLOAD PUSH1 0x20 DUP8 ADD DUP11 PUSH2 0x7530 STATICCALL SWAP3 POP RETURNDATASIZE SWAP2 POP PUSH1 0x0 MLOAD SWAP1 POP DUP3 DUP1 ISZERO PUSH2 0x2673 JUMPI POP PUSH1 0x20 DUP3 LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x267F JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x271F DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x2BA5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x2777 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x2763 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x27AB DUP3 PUSH2 0x2BC8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x27F7 JUMPI PUSH2 0x27CD PUSH1 0x0 DUP6 PUSH2 0x2BDD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0x27EC DUP3 DUP8 DUP8 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x244E JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x27B1 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x280E DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x2BF7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2825 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x29DC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2861 DUP3 PUSH32 0xB23EAE7E6D1564B295B4C3E3BE402D9A2F0776C57BDF365903496F6FA481AB00 PUSH1 0x0 SHL DUP4 PUSH2 0x2A4C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x2876 DUP4 PUSH4 0x6BB56A14 PUSH1 0xE0 SHL PUSH2 0x25CC JUMP JUMPDEST ISZERO PUSH2 0x2927 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6BB56A14 PUSH32 0xB084A55EBF70FD3C06FD755269DAC2212C4D3F0F4D09079780BFA50C1B2984D PUSH1 0x0 SHL DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28D9 SWAP3 SWAP2 SWAP1 PUSH2 0x4653 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x28F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2921 SWAP2 SWAP1 PUSH2 0x46F3 JUMP JUMPDEST POP PUSH2 0x29C6 JUMP JUMPDEST DUP2 PUSH2 0x29C5 JUMPI PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ PUSH2 0x2988 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x4349776D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x297F SWAP2 SWAP1 PUSH2 0x3415 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH32 0x317313700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29BC SWAP2 SWAP1 PUSH2 0x3415 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29E8 DUP4 DUP4 PUSH2 0x2BA5 JUMP JUMPDEST PUSH2 0x2A41 JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x2A46 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A7C PUSH4 0x6BB56A14 PUSH1 0xE0 SHL DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x25CC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x2B06 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6BB56A14 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2ABC SWAP3 SWAP2 SWAP1 PUSH2 0x4653 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2ADB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B04 SWAP2 SWAP1 PUSH2 0x46F3 JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B33 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x2BF7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BD6 DUP3 PUSH1 0x0 ADD PUSH2 0x29CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BEC DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x2D0B JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x2CFF JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x2C29 SWAP2 SWAP1 PUSH2 0x473C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x2C41 SWAP2 SWAP1 PUSH2 0x473C JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x2CB0 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2C62 JUMPI PUSH2 0x2C61 PUSH2 0x4073 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2C86 JUMPI PUSH2 0x2C85 PUSH2 0x4073 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x2CC4 JUMPI PUSH2 0x2CC3 PUSH2 0x4770 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x2D05 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2D23 JUMPI PUSH2 0x2D22 PUSH2 0x4073 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x2D42 SWAP1 PUSH2 0x436D JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x2D64 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x2DAB JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x2D7D JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x2DAB JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x2DAB JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2DAA JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2D8F JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x2DB8 SWAP2 SWAP1 PUSH2 0x2DBC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2DD5 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x2DBD JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E00 PUSH1 0x4 DUP4 PUSH2 0x2DD9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E0B DUP3 PUSH2 0x2DEA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E2F DUP2 PUSH2 0x2DF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E62 DUP4 DUP6 PUSH2 0x2DD9 JUMP JUMPDEST SWAP4 POP PUSH2 0x2E6F DUP4 DUP6 DUP5 PUSH2 0x2E36 JUMP JUMPDEST PUSH2 0x2E78 DUP4 PUSH2 0x2E45 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E9E DUP2 DUP5 DUP7 PUSH2 0x2E56 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2EF0 DUP2 PUSH2 0x2EBB JUMP JUMPDEST DUP2 EQ PUSH2 0x2EFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2F0D DUP2 PUSH2 0x2EE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F29 JUMPI PUSH2 0x2F28 PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F37 DUP5 DUP3 DUP6 ADD PUSH2 0x2EFE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F55 DUP2 PUSH2 0x2F40 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2F70 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2F4C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F89 DUP2 PUSH2 0x2F76 JUMP JUMPDEST DUP2 EQ PUSH2 0x2F94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2FA6 DUP2 PUSH2 0x2F80 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2FC3 JUMPI PUSH2 0x2FC2 PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2FD1 DUP6 DUP3 DUP7 ADD PUSH2 0x2F97 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2FE2 DUP6 DUP3 DUP7 ADD PUSH2 0x2F97 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3015 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2FFA JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3024 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3035 DUP3 PUSH2 0x2FEC JUMP JUMPDEST PUSH2 0x303F DUP2 DUP6 PUSH2 0x2DD9 JUMP JUMPDEST SWAP4 POP PUSH2 0x304F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2FF7 JUMP JUMPDEST PUSH2 0x3058 DUP2 PUSH2 0x2E45 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x307D DUP2 DUP5 PUSH2 0x302A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3098 DUP2 PUSH2 0x3085 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x30B3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x308F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x30F6 DUP3 PUSH2 0x2E45 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3115 JUMPI PUSH2 0x3114 PUSH2 0x30BE JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3128 PUSH2 0x2EA7 JUMP JUMPDEST SWAP1 POP PUSH2 0x3134 DUP3 DUP3 PUSH2 0x30ED JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3154 JUMPI PUSH2 0x3153 PUSH2 0x30BE JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x317D PUSH2 0x3178 DUP5 PUSH2 0x3139 JUMP JUMPDEST PUSH2 0x311E JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x31A0 JUMPI PUSH2 0x319F PUSH2 0x3165 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x31C9 JUMPI DUP1 PUSH2 0x31B5 DUP9 DUP3 PUSH2 0x2F97 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x31A2 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x31E8 JUMPI PUSH2 0x31E7 PUSH2 0x30B9 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x31F8 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x316A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3218 JUMPI PUSH2 0x3217 PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3236 JUMPI PUSH2 0x3235 PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3242 DUP6 DUP3 DUP7 ADD PUSH2 0x31D3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3263 JUMPI PUSH2 0x3262 PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x326F DUP6 DUP3 DUP7 ADD PUSH2 0x31D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32C1 DUP3 PUSH2 0x2FEC JUMP JUMPDEST PUSH2 0x32CB DUP2 DUP6 PUSH2 0x32A5 JUMP JUMPDEST SWAP4 POP PUSH2 0x32DB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2FF7 JUMP JUMPDEST PUSH2 0x32E4 DUP2 PUSH2 0x2E45 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32FB DUP4 DUP4 PUSH2 0x32B6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x331B DUP3 PUSH2 0x3279 JUMP JUMPDEST PUSH2 0x3325 DUP2 DUP6 PUSH2 0x3284 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x3337 DUP6 PUSH2 0x3295 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3373 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x3354 DUP6 DUP3 PUSH2 0x32EF JUMP JUMPDEST SWAP5 POP PUSH2 0x335F DUP4 PUSH2 0x3303 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x333B JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x339F DUP2 DUP5 PUSH2 0x3310 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33BD JUMPI PUSH2 0x33BC PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x33CB DUP5 DUP3 DUP6 ADD PUSH2 0x2F97 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33FF DUP3 PUSH2 0x33D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x340F DUP2 PUSH2 0x33F4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x342A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3406 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3439 DUP2 PUSH2 0x33F4 JUMP JUMPDEST DUP2 EQ PUSH2 0x3444 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3456 DUP2 PUSH2 0x3430 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3473 JUMPI PUSH2 0x3472 PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3481 DUP6 DUP3 DUP7 ADD PUSH2 0x3447 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3492 DUP6 DUP3 DUP7 ADD PUSH2 0x2F97 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x34D1 DUP2 PUSH2 0x33F4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34E3 DUP4 DUP4 PUSH2 0x34C8 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3507 DUP3 PUSH2 0x349C JUMP JUMPDEST PUSH2 0x3511 DUP2 DUP6 PUSH2 0x34A7 JUMP JUMPDEST SWAP4 POP PUSH2 0x351C DUP4 PUSH2 0x34B8 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x354D JUMPI DUP2 MLOAD PUSH2 0x3534 DUP9 DUP3 PUSH2 0x34D7 JUMP JUMPDEST SWAP8 POP PUSH2 0x353F DUP4 PUSH2 0x34EF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3520 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3574 DUP2 DUP5 PUSH2 0x34FC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3585 DUP2 PUSH2 0x2F40 JUMP JUMPDEST DUP2 EQ PUSH2 0x3590 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x35A2 DUP2 PUSH2 0x357C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x35C8 JUMPI PUSH2 0x35C7 PUSH2 0x30BE JUMP JUMPDEST JUMPDEST PUSH2 0x35D1 DUP3 PUSH2 0x2E45 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35F1 PUSH2 0x35EC DUP5 PUSH2 0x35AD JUMP JUMPDEST PUSH2 0x311E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x360D JUMPI PUSH2 0x360C PUSH2 0x35A8 JUMP JUMPDEST JUMPDEST PUSH2 0x3618 DUP5 DUP3 DUP6 PUSH2 0x2E36 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3635 JUMPI PUSH2 0x3634 PUSH2 0x30B9 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3645 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x35DE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x366A JUMPI PUSH2 0x3669 PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3678 DUP9 DUP3 DUP10 ADD PUSH2 0x3447 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x3689 DUP9 DUP3 DUP10 ADD PUSH2 0x3447 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x369A DUP9 DUP3 DUP10 ADD PUSH2 0x2F97 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x36AB DUP9 DUP3 DUP10 ADD PUSH2 0x3593 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x36CC JUMPI PUSH2 0x36CB PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x36D8 DUP9 DUP3 DUP10 ADD PUSH2 0x3620 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x3700 JUMPI PUSH2 0x36FF PUSH2 0x30B9 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x371D JUMPI PUSH2 0x371C PUSH2 0x36E5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x3739 JUMPI PUSH2 0x3738 PUSH2 0x3165 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3757 JUMPI PUSH2 0x3756 PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3775 JUMPI PUSH2 0x3774 PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3781 DUP6 DUP3 DUP7 ADD PUSH2 0x36EA JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37A3 JUMPI PUSH2 0x37A2 PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x37B1 DUP5 DUP3 DUP6 ADD PUSH2 0x3447 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x37D5 JUMPI PUSH2 0x37D4 PUSH2 0x30BE JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37F9 PUSH2 0x37F4 DUP5 PUSH2 0x37BA JUMP JUMPDEST PUSH2 0x311E JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x381C JUMPI PUSH2 0x381B PUSH2 0x3165 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3845 JUMPI DUP1 PUSH2 0x3831 DUP9 DUP3 PUSH2 0x3447 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x381E JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3864 JUMPI PUSH2 0x3863 PUSH2 0x30B9 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3874 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x37E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3898 JUMPI PUSH2 0x3897 PUSH2 0x30BE JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38BC PUSH2 0x38B7 DUP5 PUSH2 0x387D JUMP JUMPDEST PUSH2 0x311E JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x38DF JUMPI PUSH2 0x38DE PUSH2 0x3165 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3908 JUMPI DUP1 PUSH2 0x38F4 DUP9 DUP3 PUSH2 0x3593 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x38E1 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3927 JUMPI PUSH2 0x3926 PUSH2 0x30B9 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3937 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x38A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x395B JUMPI PUSH2 0x395A PUSH2 0x30BE JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x397F PUSH2 0x397A DUP5 PUSH2 0x3940 JUMP JUMPDEST PUSH2 0x311E JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x39A2 JUMPI PUSH2 0x39A1 PUSH2 0x3165 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x39E9 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x39C7 JUMPI PUSH2 0x39C6 PUSH2 0x30B9 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x39D4 DUP10 DUP3 PUSH2 0x3620 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x39A4 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3A08 JUMPI PUSH2 0x3A07 PUSH2 0x30B9 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3A18 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x396C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3A3D JUMPI PUSH2 0x3A3C PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3A5B JUMPI PUSH2 0x3A5A PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3A67 DUP9 DUP3 DUP10 ADD PUSH2 0x384F JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3A88 JUMPI PUSH2 0x3A87 PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3A94 DUP9 DUP3 DUP10 ADD PUSH2 0x384F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3AB5 JUMPI PUSH2 0x3AB4 PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3AC1 DUP9 DUP3 DUP10 ADD PUSH2 0x31D3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3AE2 JUMPI PUSH2 0x3AE1 PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3AEE DUP9 DUP3 DUP10 ADD PUSH2 0x3912 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3B0F JUMPI PUSH2 0x3B0E PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3B1B DUP9 DUP3 DUP10 ADD PUSH2 0x39F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3B3F JUMPI PUSH2 0x3B3E PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3B4D DUP6 DUP3 DUP7 ADD PUSH2 0x2F97 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3B6E JUMPI PUSH2 0x3B6D PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3B7A DUP6 DUP3 DUP7 ADD PUSH2 0x3620 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3B9D JUMPI PUSH2 0x3B9C PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3BAB DUP7 DUP3 DUP8 ADD PUSH2 0x3447 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3BBC DUP7 DUP3 DUP8 ADD PUSH2 0x2F97 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3BDD JUMPI PUSH2 0x3BDC PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3BE9 DUP7 DUP3 DUP8 ADD PUSH2 0x3620 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3C0A JUMPI PUSH2 0x3C09 PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3C28 JUMPI PUSH2 0x3C27 PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3C34 DUP6 DUP3 DUP7 ADD PUSH2 0x31D3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3C55 JUMPI PUSH2 0x3C54 PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3C61 DUP6 DUP3 DUP7 ADD PUSH2 0x39F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3CA0 DUP2 PUSH2 0x2F76 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CB2 DUP4 DUP4 PUSH2 0x3C97 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CD6 DUP3 PUSH2 0x3C6B JUMP JUMPDEST PUSH2 0x3CE0 DUP2 DUP6 PUSH2 0x3C76 JUMP JUMPDEST SWAP4 POP PUSH2 0x3CEB DUP4 PUSH2 0x3C87 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3D1C JUMPI DUP2 MLOAD PUSH2 0x3D03 DUP9 DUP3 PUSH2 0x3CA6 JUMP JUMPDEST SWAP8 POP PUSH2 0x3D0E DUP4 PUSH2 0x3CBE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3CEF JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D43 DUP2 DUP5 PUSH2 0x3CCB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3D65 JUMPI PUSH2 0x3D64 PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3D73 DUP8 DUP3 DUP9 ADD PUSH2 0x3447 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3D84 DUP8 DUP3 DUP9 ADD PUSH2 0x2F97 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x3D95 DUP8 DUP3 DUP9 ADD PUSH2 0x3593 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3DB6 JUMPI PUSH2 0x3DB5 PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3DC2 DUP8 DUP3 DUP9 ADD PUSH2 0x3620 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3DE7 JUMPI PUSH2 0x3DE6 PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3E05 JUMPI PUSH2 0x3E04 PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3E11 DUP7 DUP3 DUP8 ADD PUSH2 0x31D3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3E32 JUMPI PUSH2 0x3E31 PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3E3E DUP7 DUP3 DUP8 ADD PUSH2 0x31D3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3E5F JUMPI PUSH2 0x3E5E PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3E6B DUP7 DUP3 DUP8 ADD PUSH2 0x39F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3E8E JUMPI PUSH2 0x3E8D PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3E9C DUP7 DUP3 DUP8 ADD PUSH2 0x2F97 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3EAD DUP7 DUP3 DUP8 ADD PUSH2 0x2F97 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3ECE JUMPI PUSH2 0x3ECD PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3EDA DUP7 DUP3 DUP8 ADD PUSH2 0x3620 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3EFA JUMPI PUSH2 0x3EF9 PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3F18 JUMPI PUSH2 0x3F17 PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x3F24 DUP5 DUP3 DUP6 ADD PUSH2 0x31D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3F36 DUP2 PUSH2 0x2EBB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3F51 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3F2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F6E DUP4 DUP6 PUSH2 0x3F57 JUMP JUMPDEST SWAP4 POP PUSH2 0x3F7B DUP4 DUP6 DUP5 PUSH2 0x2E36 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F9F DUP3 PUSH2 0x3F87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FB1 DUP3 PUSH2 0x3F94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3FC9 PUSH2 0x3FC4 DUP3 PUSH2 0x33F4 JUMP JUMPDEST PUSH2 0x3FA6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3FEA PUSH2 0x3FE5 DUP3 PUSH2 0x3085 JUMP JUMPDEST PUSH2 0x3FCF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FFD DUP3 DUP7 DUP9 PUSH2 0x3F62 JUMP JUMPDEST SWAP2 POP PUSH2 0x4009 DUP3 DUP6 PUSH2 0x3FB8 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x4019 DUP3 DUP5 PUSH2 0x3FD9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4036 DUP3 PUSH2 0x2FEC JUMP JUMPDEST PUSH2 0x4040 DUP2 DUP6 PUSH2 0x3F57 JUMP JUMPDEST SWAP4 POP PUSH2 0x4050 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2FF7 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4068 DUP3 DUP5 PUSH2 0x402B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x40AB DUP2 PUSH2 0x2F76 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x40C6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x40A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x40E1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x40A2 JUMP JUMPDEST PUSH2 0x40EE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3406 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x4121 JUMPI PUSH2 0x4120 PUSH2 0x40F5 JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4143 JUMPI PUSH2 0x4142 PUSH2 0x40FA JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x415F JUMPI PUSH2 0x415E PUSH2 0x40FF JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4174 DUP3 DUP5 DUP7 PUSH2 0x3F62 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x4195 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3406 JUMP JUMPDEST PUSH2 0x41A2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x40A2 JUMP JUMPDEST PUSH2 0x41AF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3406 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x41CC PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3406 JUMP JUMPDEST PUSH2 0x41D9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x40A2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x41F5 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3406 JUMP JUMPDEST PUSH2 0x4202 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x40A2 JUMP JUMPDEST PUSH2 0x420F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2F4C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x4221 DUP2 DUP5 PUSH2 0x302A JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4274 DUP3 MLOAD PUSH2 0x423C JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4295 DUP3 PUSH2 0x2FEC JUMP JUMPDEST DUP3 PUSH2 0x429F DUP5 PUSH2 0x422C JUMP JUMPDEST SWAP1 POP PUSH2 0x42AA DUP2 PUSH2 0x4268 JUMP JUMPDEST SWAP3 POP PUSH1 0x14 DUP3 LT ISZERO PUSH2 0x42EA JUMPI PUSH2 0x42E5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP4 PUSH1 0x14 SUB PUSH1 0x8 MUL PUSH2 0x427D JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x430C PUSH2 0x4307 DUP3 PUSH2 0x2F76 JUMP JUMPDEST PUSH2 0x42F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x431E DUP3 DUP6 PUSH2 0x42FB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x432E DUP3 DUP5 PUSH2 0x42FB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x4385 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x4399 JUMPI PUSH2 0x4398 PUSH2 0x433E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x43B4 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3406 JUMP JUMPDEST PUSH2 0x43C1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2F4C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x43D3 DUP2 DUP5 PUSH2 0x302A JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x43F2 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x3406 JUMP JUMPDEST PUSH2 0x43FF PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x3406 JUMP JUMPDEST PUSH2 0x440C PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x3406 JUMP JUMPDEST PUSH2 0x4419 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x40A2 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x442B DUP2 DUP5 PUSH2 0x302A JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4471 DUP3 PUSH2 0x3085 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x44A4 JUMPI PUSH2 0x44A3 PUSH2 0x4437 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x44C4 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2F4C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x44D6 DUP2 DUP5 PUSH2 0x302A JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4526 PUSH2 0x4521 DUP3 PUSH2 0x44DF JUMP JUMPDEST PUSH2 0x450B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFF000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4573 PUSH2 0x456E DUP3 PUSH2 0x452C JUMP JUMPDEST PUSH2 0x4558 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4594 PUSH2 0x458F DUP3 PUSH2 0x423C JUMP JUMPDEST PUSH2 0x4579 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45A6 DUP3 DUP7 PUSH2 0x4515 JUMP JUMPDEST PUSH1 0xA DUP3 ADD SWAP2 POP PUSH2 0x45B6 DUP3 DUP6 PUSH2 0x4562 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP2 POP PUSH2 0x45C6 DUP3 DUP5 PUSH2 0x4583 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45E3 DUP3 MLOAD PUSH2 0x2F76 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45F7 DUP3 PUSH2 0x2FEC JUMP JUMPDEST DUP3 PUSH2 0x4601 DUP5 PUSH2 0x422C JUMP JUMPDEST SWAP1 POP PUSH2 0x460C DUP2 PUSH2 0x45D7 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH2 0x464C JUMPI PUSH2 0x4647 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH2 0x427D JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4668 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x40A2 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x467A DUP2 DUP5 PUSH2 0x302A JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4696 PUSH2 0x4691 DUP5 PUSH2 0x35AD JUMP JUMPDEST PUSH2 0x311E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x46B2 JUMPI PUSH2 0x46B1 PUSH2 0x35A8 JUMP JUMPDEST JUMPDEST PUSH2 0x46BD DUP5 DUP3 DUP6 PUSH2 0x2FF7 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x46DA JUMPI PUSH2 0x46D9 PUSH2 0x30B9 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x46EA DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4683 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4709 JUMPI PUSH2 0x4708 PUSH2 0x2EB1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4727 JUMPI PUSH2 0x4726 PUSH2 0x2EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x4733 DUP5 DUP3 DUP6 ADD PUSH2 0x46C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4747 DUP3 PUSH2 0x3085 JUMP JUMPDEST SWAP2 POP PUSH2 0x4752 DUP4 PUSH2 0x3085 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x4765 JUMPI PUSH2 0x4764 PUSH2 0x4437 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT 0xB4 PUSH21 0x1C1B86CE45D7AFC206F1D134CBE9093DA1F0722C5C PUSH18 0x870CAC77DC10B764736F6C634300080C0033 ","sourceMap":"191:418:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5513:1:20;5500:9;:14;5496:90;;;5537:38;;;;;;;;;;:::i;:::-;;;;;;;;5496:90;5603:34;;;;;;;;;;;;;;191:418:28;;;5067:12:20;5113:1;5095:8;;:15;;:19;5091:90;;;5161:8;;5137:33;;;;;;;;;;;;:::i;:::-;;;;;;;;5091:90;5197:34;5222:8;;5197:24;:34::i;:::-;5190:41;;4985:253;;;191:418:28;;;;;;8739:388:20;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3515:205:21;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2433:109;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3791:523;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2873:290;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9020:219;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9310:197;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10000:349;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1197:156:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5622:1081:21;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2645:157;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1313:92:3;;;;;;;;;;;;;:::i;:::-;;10420:683:21;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2326:232:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6809:1062:21;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;736:85:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3076:763:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3234:167:21;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1940:194:23;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4669:730:21;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4385:213;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7942:1007;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1403:458:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1554:211:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6639:1031:20;6747:12;6815:17;6838:37;6867:7;;;;6838:28;:37::i;:::-;6814:61;;;6956:1;6935:23;;:9;:23;;;6931:92;;;7015:7;;;;6979:44;;;;;;;;;;;:::i;:::-;;;;;;;;6931:92;7035:12;7049:19;7072:9;:14;;7094:9;7135:8;;7145:10;7157:9;7118:49;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7072:105;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7034:143;;;;7192:7;7188:476;;;7222:6;7215:13;;;;;;;7188:476;7576:6;7570:13;7624:15;7619:2;7611:6;7607:15;7600:40;6639:1031;;;;;:::o;8739:388::-;8917:4;128:10:18;8971:17:20;;8956:32;;;:11;:32;;;;:84;;;;9004:36;9028:11;9004:23;:36::i;:::-;8956:84;:164;;;;9056:64;9108:11;9056:51;:64::i;:::-;8956:164;8937:183;;8739:388;;;:::o;3515:205:21:-;3636:22;3677:36;3696:7;3705;3677:18;:36::i;:::-;3670:43;;3515:205;;;;:::o;2433:109::-;2494:7;2520:15;;2513:22;;2433:109;:::o;3791:523::-;3938:25;4000:8;:15;3988:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3975:41;;4032:9;4027:253;4047:8;:15;4043:1;:19;4027:253;;;4096:44;4115:8;4124:1;4115:11;;;;;;;;:::i;:::-;;;;;;;;4128:8;4137:1;4128:11;;;;;;;;:::i;:::-;;;;;;;;4096:18;:44::i;:::-;4080:10;4091:1;4080:13;;;;;;;;:::i;:::-;;;;;;;:60;;;;4252:3;;;;;4027:253;;;;3791:523;;;;:::o;2873:290::-;2964:7;2983:18;3004:12;:21;3017:7;3004:21;;;;;;;;;;;;;;;;;;;;;2983:42;;3062:1;3040:24;;:10;:24;;;3036:93;;;3110:7;3087:31;;;;;;;;;;;:::i;:::-;;;;;;;;3036:93;3146:10;3139:17;;;2873:290;;;:::o;9020:219::-;9138:4;9154:23;9169:7;9154:14;:23::i;:::-;9195:37;9214:8;9224:7;9195:18;:37::i;:::-;9188:44;;9020:219;;;;:::o;9310:197::-;9403:16;9431:23;9446:7;9431:14;:23::i;:::-;9472:28;:10;:19;9483:7;9472:19;;;;;;;;;;;:26;:28::i;:::-;9465:35;;9310:197;;;:::o;10000:349::-;10177:39;10196:10;10208:7;10177:18;:39::i;:::-;10172:119;;10260:7;10269:10;10239:41;;;;;;;;;;;;:::i;:::-;;;;;;;;10172:119;10301:41;10311:4;10317:2;10321:7;10330:5;10337:4;10301:9;:41::i;:::-;10000:349;;;;;:::o;1197:156:1:-;1283:22;1329:17;1338:7;1329:8;:17::i;:::-;1317:29;;1197:156;;;:::o;5622:1081:21:-;5712:22;5768:4;;:11;;5756:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5746:34;;5795:9;5790:907;5810:4;;:11;;5806:1;:15;5790:907;;;5840:12;5854:19;5885:4;5877:26;;5921:4;;5926:1;5921:7;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;5877:65;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5839:103;;;;5962:7;5957:636;;6080:1;6063:6;:13;:18;6059:520;;6378:6;6372:13;6434:15;6425:6;6421:2;6417:15;6410:40;6059:520;6557:1;6525:35;;;;;;;;;;;:::i;:::-;;;;;;;;5957:636;6620:6;6607:7;6615:1;6607:10;;;;;;;;:::i;:::-;;;;;;;:19;;;;6669:3;;;;;5825:872;;5790:907;;;;5622:1081;;;;:::o;2645:157::-;2736:7;2762:33;:12;:24;2775:10;2762:24;;;;;;;;;;;;;;;:31;:33::i;:::-;2755:40;;2645:157;;;:::o;1313:92:3:-;940:13;:11;:13::i;:::-;1377:21:::1;1395:1;1377:9;:21::i;:::-;1313:92::o:0;10420:683:21:-;10635:18;10656:4;:11;10635:32;;10708:2;:9;10694:10;:23;;:67;;;;10747:7;:14;10733:10;:28;;10694:67;:109;;;;10791:5;:12;10777:10;:26;;10694:109;:150;;;;10833:4;:11;10819:10;:25;;10694:150;10677:236;;;10876:26;;;;;;;;;;;;;;10677:236;10928:9;10923:174;10943:10;10939:1;:14;10923:174;;;10971:55;10980:4;10985:1;10980:7;;;;;;;;:::i;:::-;;;;;;;;10989:2;10992:1;10989:5;;;;;;;;:::i;:::-;;;;;;;;10996:7;11004:1;10996:10;;;;;;;;:::i;:::-;;;;;;;;11008:5;11014:1;11008:8;;;;;;;;:::i;:::-;;;;;;;;11018:4;11023:1;11018:7;;;;;;;;:::i;:::-;;;;;;;;10971:8;:55::i;:::-;11069:3;;;;;10923:174;;;;10625:478;10420:683;;;;;:::o;2326:232:1:-;940:13:3;:11;:13::i;:::-;2475:1:1::1;2462:9;:14;2458:55;;2485:28;;;;;;;;;;;;;;2458:55;2523:28;2532:7;2541:9;2523:8;:28::i;:::-;2326:232:::0;;:::o;6809:1062:21:-;6974:18;6995:21;7008:7;6995:12;:21::i;:::-;6974:42;;7045:10;7031:24;;:10;:24;;;7027:112;;7096:10;7108:7;7117:10;7078:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;7027:112;7173:1;7153:22;;:8;:22;;;7149:96;;;7198:36;;;;;;;;;;;;;;7149:96;7273:8;7259:22;;:10;:22;;;7255:92;;;7304:32;;;;;;;;;;;;;;7255:92;7357:12;7372:33;7396:8;7372:10;:19;7383:7;7372:19;;;;;;;;;;;:23;;:33;;;;:::i;:::-;7357:48;;7420:7;7415:69;;7466:8;7476:7;7436:48;;;;;;;;;;;;:::i;:::-;;;;;;;;7415:69;7588:7;7564:10;7500:143;;7542:8;7500:143;;;7609:24;7500:143;;;;;;:::i;:::-;;;;;;;;7654:21;7702:10;7726:7;7747:4;7779:24;7678:135;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7654:159;;7824:40;7845:8;7855;7824:20;:40::i;:::-;6964:907;;;6809:1062;;;:::o;736:85:3:-;782:7;808:6;;;;;;;;;;;801:13;;736:85;:::o;3076:763:1:-;940:13:3;:11;:13::i;:::-;3327:1:1::1;3314:9;:14;3310:55;;3337:28;;;;;;;;;;;;;;3310:55;3399:10;:17;3380:8;:15;:36;3376:112;;3439:38;;;;;;;;;;;;;;3376:112;3521:1;3502:8;:15;:20;3498:92;;;3545:34;;;;;;;;;;;;;;3498:92;3605:9;3600:233;3624:8;:15;3620:1;:19;3600:233;;;3657:36;3666:8;3675:1;3666:11;;;;;;;;:::i;:::-;;;;;;;;3679:10;3690:1;3679:13;;;;;;;;:::i;:::-;;;;;;;;3657:8;:36::i;:::-;3805:3;;;;;3600:233;;;;3076:763:::0;;:::o;3234:167:21:-;3326:16;3361:33;:12;:24;3374:10;3361:24;;;;;;;;;;;;;;;:31;:33::i;:::-;3354:40;;3234:167;;;:::o;1940:194:23:-;940:13:3;:11;:13::i;:::-;2096:31:23::1;2102:2;2106:7;2115:5;2122:4;2096:5;:31::i;:::-;1940:194:::0;;;;:::o;4669:730:21:-;940:13:3;:11;:13::i;:::-;4893:8:21::1;:15;4874:8;:15;:34;;:86;;;;4943:10;:17;4924:8;:15;:36;;4874:86;4857:178;;;4992:32;;;;;;;;;;;;;;4857:178;5068:1;5049:8;:15;:20;5045:86;;;5092:28;;;;;;;;;;;;;;5045:86;5146:9;5141:252;5161:8;:15;5157:1;:19;5141:252;;;5194:59;5213:8;5222:1;5213:11;;;;;;;;:::i;:::-;;;;;;;;5226:8;5235:1;5226:11;;;;;;;;:::i;:::-;;;;;;;;5239:10;5250:1;5239:13;;;;;;;;:::i;:::-;;;;;;;;5194:18;:59::i;:::-;5365:3;;;;;5141:252;;;;4669:730:::0;;;:::o;4385:213::-;940:13:3;:11;:13::i;:::-;4544:47:21::1;4563:7;4572;4581:9;4544:18;:47::i;:::-;4385:213:::0;;;:::o;7942:1007::-;8125:18;8146:21;8159:7;8146:12;:21::i;:::-;8125:42;;8196:10;8182:24;;:10;:24;;;8178:112;;8247:10;8259:7;8268:10;8229:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;8178:112;8324:1;8304:22;;:8;:22;;;8300:96;;;8349:36;;;;;;;;;;;;;;8300:96;8424:8;8410:22;;:10;:22;;;8406:92;;;8455:32;;;;;;;;;;;;;;8406:92;8508:150;8537:8;8559:10;8583:7;8604:6;8624:24;8508:15;:150::i;:::-;8673:6;8669:274;;;8695:21;8747:10;8775:7;8800:5;8839:24;8719:158;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8695:182;;8892:40;8913:8;8923;8892:20;:40::i;:::-;8681:262;8669:274;8115:834;7942:1007;;;;:::o;1403:458:1:-;1504:25;1566:8;:15;1554:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1541:41;;1598:9;1593:234;1617:8;:15;1613:1;:19;1593:234;;;1666:21;1675:8;1684:1;1675:11;;;;;;;;:::i;:::-;;;;;;;;1666:8;:21::i;:::-;1650:10;1661:1;1650:13;;;;;;;;:::i;:::-;;;;;;;:37;;;;1799:3;;;;;1593:234;;;;1403:458;;;:::o;1554:211:3:-;940:13;:11;:13::i;:::-;1658:1:::1;1638:22;;:8;:22;;;1634:96;;;1683:36;;;;;;;;;;;;;;1634:96;1739:19;1749:8;1739:9;:19::i;:::-;1554:211:::0;:::o;2133:194::-;2213:7;:5;:7::i;:::-;2201:19;;:8;:19;;;2197:124;;2270:8;2241:38;;2262:6;;;;;;;;;;2241:38;;;;;;;;;;;;2302:8;2293:6;;:17;;;;;;;;;;;;;;;;;;2197:124;2133:194;:::o;5032:188:1:-;5158:9;5140:6;:15;5147:7;5140:15;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;5194:7;5182:31;5203:9;5182:31;;;;;;:::i;:::-;;;;;;;;5032:188;;:::o;2008:224:14:-;2168:57;2206:7;2215:9;2168:37;:57::i;:::-;2008:224;;:::o;930:533:15:-;633:66:13;1062:20:15;;1051:7;:31;1047:410;;;1105:26;;;;;;;;;;;;;;1047:410;776:66:13;1163:22:15;;1152:7;:33;1148:309;;;1208:28;;;;;;;;;;;;;;1148:309;915:66:13;1268:20:15;;1257:7;:31;1253:204;;;1311:26;;;;;;;;;;;;;;1253:204;1386:9;1368:6;:15;1375:7;1368:15;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;1427:7;1415:31;1436:9;1415:31;;;;;;:::i;:::-;;;;;;;;930:533;;:::o;7939:751:20:-;8056:7;8065:4;8161:30;8194:105;433:22:6;8236:23:20;;8273:16;8194:105;;;:28;:105::i;:::-;8161:138;;8388:29;8420:66;8454:22;8420:20;:66::i;:::-;8388:98;;8527:2;8500:16;:23;:29;;:61;;;;;8560:1;8533:16;:23;:28;;8500:61;8496:127;;;8606:16;8582:41;;;;;;;;;;;:::i;:::-;;;;;;;;8496:127;8658:16;8650:25;;;:::i;:::-;8642:34;;8678:4;8634:49;;;;;;7939:751;;;:::o;998:237:8:-;1097:4;182:10:6;1147:29:8;;1132:44;;;:11;:44;;;;:96;;;;1192:36;1216:11;1192:23;:36::i;:::-;1132:96;1113:115;;998:237;;;:::o;1658:457::-;1768:4;1785:23;1814:85;1856:33;;;1814:28;:85::i;:::-;1784:115;;;1940:1;1913:29;;:15;:29;;;1909:47;;;1951:5;1944:12;;;;;1909:47;1986:122;2050:15;2083:11;1986:46;:122::i;:::-;1967:141;;;1658:457;;;;:::o;21565:213:21:-;21680:23;21722:6;:49;21752:7;21761;21739:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;21729:41;;;;;;21722:49;;;;;;;;;;;21715:56;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21565:213;;;;:::o;13429:165::-;13507:16;13515:7;13507;:16::i;:::-;13502:86;;13569:7;13546:31;;;;;;;;;;;:::i;:::-;;;;;;;;13502:86;13429:165;:::o;9665:229::-;9779:4;9813:21;9826:7;9813:12;:21::i;:::-;9803:31;;:6;:31;;;:83;;;;9850:36;9879:6;9850:10;:19;9861:7;9850:19;;;;;;;;;;;:28;;:36;;;;:::i;:::-;9803:83;9795:92;;9665:229;;;;:::o;10259:300:27:-;10322:16;10350:22;10375:19;10383:3;:10;;10375:7;:19::i;:::-;10350:44;;10404:23;10514:5;10504:15;;10546:6;10539:13;;;;10259:300;;;:::o;19289:1188:21:-;19467:2;19459:10;;:4;:10;;;19455:70;;;19492:22;;;;;;;;;;;;;;19455:70;19535:18;19556:21;19569:7;19556:12;:21::i;:::-;19535:42;;19605:4;19591:18;;:10;:18;;;19587:100;;19650:10;19662:7;19671:4;19632:44;;;;;;;;;;;;;:::i;:::-;;;;;;;;19587:100;19715:1;19701:16;;:2;:16;;;19697:83;;;19740:29;;;;;;;;;;;;;;19697:83;19790:45;19811:4;19817:2;19821:7;19830:4;19790:20;:45::i;:::-;19987:21;20000:7;19987:12;:21::i;:::-;19974:34;;20019:30;20035:4;20041:7;20019:15;:30::i;:::-;20060:34;20086:7;20060:12;:18;20073:4;20060:18;;;;;;;;;;;;;;;:25;;:34;;;;:::i;:::-;;20104:29;20125:7;20104:12;:16;20117:2;20104:16;;;;;;;;;;;;;;;:20;;:29;;;;:::i;:::-;;20167:2;20143:12;:21;20156:7;20143:21;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;20216:7;20212:2;20185:52;;20206:4;20185:52;;;20194:10;20225:5;20232:4;20185:52;;;;;;;;:::i;:::-;;;;;;;;20248:44;20268:4;20274:2;20278:7;20287:4;20248:19;:44::i;:::-;20303:21;20338:10;20350:4;20356:2;20360:7;20369:4;20327:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;20303:71;;20385:34;20404:4;20410:8;20385:18;:34::i;:::-;20429:41;20450:2;20454:5;20461:8;20429:20;:41::i;:::-;19445:1032;;19289:1188;;;;;:::o;4335:143:1:-;4415:22;4456:6;:15;4463:7;4456:15;;;;;;;;;;;4449:22;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4335:143;;;:::o;6639:115:27:-;6702:7;6728:19;6736:3;:10;;6728:7;:19::i;:::-;6721:26;;6639:115;;;:::o;1838:156:3:-;1908:10;1897:21;;:7;:5;:7::i;:::-;:21;;;1893:95;;1966:10;1941:36;;;;;;;;;;;:::i;:::-;;;;;;;;1893:95;1838:156::o;9342:373:20:-;245:66:18;9558:24:20;;9547:7;:35;9543:103;;;9605:30;;;;;;;;;;;;;;9543:103;9655:53;9689:7;9698:9;9655:33;:53::i;:::-;9342:373;;:::o;8305:150:27:-;8375:4;8398:50;8403:3;:10;;8439:5;8423:23;;8415:32;;8398:4;:50::i;:::-;8391:57;;8305:150;;;;:::o;23817:254:21:-;23937:127;23984:8;1064:66:18;24006:26:21;;24046:8;23937:33;:127::i;:::-;23817:254;;:::o;7765:300:27:-;7828:16;7856:22;7881:19;7889:3;:10;;7881:7;:19::i;:::-;7856:44;;7910:23;8020:5;8010:15;;8052:6;8045:13;;;;7765:300;;;:::o;14618:952:21:-;14776:1;14762:16;;:2;:16;;;14758:83;;;14801:29;;;;;;;;;;;;;;14758:83;14851:51;14880:1;14884:2;14888:7;14897:4;14851:20;:51::i;:::-;15003:16;15011:7;15003;:16::i;:::-;14999:87;;;15067:7;15042:33;;;;;;;;;;;:::i;:::-;;;;;;;;14999:87;15128:15;;15126:17;;;;;:::i;:::-;;;;;;;;15154:29;15175:7;15154:12;:16;15167:2;15154:16;;;;;;;;;;;;;;;:20;;:29;;;;:::i;:::-;;15217:2;15193:12;:21;15206:7;15193:21;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;15272:7;15268:2;15235:58;;15264:1;15235:58;;;15244:10;15281:5;15288:4;15235:58;;;;;;;;:::i;:::-;;;;;;;;15304:50;15332:1;15336:2;15340:7;15349:4;15304:19;:50::i;:::-;15365:21;15413:10;15445:1;15461:2;15477:7;15498:4;15389:123;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;15365:147;;15522:41;15543:2;15547:5;15554:8;15522:20;:41::i;:::-;14748:822;14618:952;;;;:::o;20890:273::-;21085:9;21033:6;:49;21063:7;21072;21050:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;21040:41;;;;;;21033:49;;;;;;;;;;;:61;;;;;;;;;;;;:::i;:::-;;21137:7;21128;21109:47;21146:9;21109:47;;;;;;:::i;:::-;;;;;;;;20890:273;;;:::o;11201:510::-;11408:14;11425:36;11452:8;11425:10;:19;11436:7;11425:19;;;;;;;;;;;:26;;:36;;;;:::i;:::-;11408:53;;11476:9;11471:65;;11518:8;11528:7;11494:42;;;;;;;;;;;;:::i;:::-;;;;;;;;11471:65;11627:7;11603:10;11552:152;;11581:8;11552:152;;;11648:8;11670:24;11552:152;;;;;;;:::i;:::-;;;;;;;;11398:313;11201:510;;;;;:::o;5197:300:12:-;5311:7;5330:25;5384:9;5414:1;5407:9;;5430:12;5358:94;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5330:122;;5477:12;5469:21;;;:::i;:::-;5462:28;;;5197:300;;;;:::o;5268:245:1:-;5384:4;178:10:2;5434:20:1;;5419:35;;;:11;:35;;;;:87;;;;5470:36;5494:11;5470:23;:36::i;:::-;5419:87;5400:106;;5268:245;;;:::o;4421:647:25:-;4523:4;4563:26;4615:34;;;4651:11;4592:71;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4563:100;;4705:12;4727:18;4755:19;4899:4;4893;4877:13;4871:20;4864:4;4849:13;4845:24;4836:7;4829:5;4818:86;4807:97;;4931:16;4917:30;;4981:4;4975:11;4960:26;;5013:7;:29;;;;;5038:4;5024:10;:18;;5013:29;:48;;;;;5060:1;5046:11;:15;5013:48;5006:55;;;;;;4421:647;;;;:::o;13208:130:21:-;13273:4;13329:1;13296:35;;:12;:21;13309:7;13296:21;;;;;;;;;;;;;;;;;;;;;:35;;;;13289:42;;13208:130;;;:::o;8860:165:27:-;8940:4;8963:55;8973:3;:10;;9009:5;8993:23;;8985:32;;8963:9;:55::i;:::-;8956:62;;8860:165;;;;:::o;5570:109::-;5626:16;5661:3;:11;;5654:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5570:109;;;:::o;22196:194:21:-;;;;;:::o;11992:1030::-;12514:52;12569:10;:41;12593:7;12569:41;;;;;;;;;;;12514:96;;12621:26;12650:28;:19;:26;:28::i;:::-;12621:57;;12688:16;12719:9;12714:302;12734:18;12730:1;:22;12714:302;;;12849:25;12872:1;12849:19;:22;;:25;;;;:::i;:::-;12838:36;;12888:57;12904:8;12914:10;12926:7;12935:5;12888:57;;;;;;;;;;;;:15;:57::i;:::-;12988:3;;;;;12714:302;;;;12093:929;;;11992:1030;;:::o;6210:129:27:-;6283:4;6306:26;6314:3;:10;;6326:5;6306:7;:26::i;:::-;6299:33;;6210:129;;;;:::o;5919:123::-;5989:4;6012:23;6017:3;:10;;6029:5;6012:4;:23::i;:::-;6005:30;;5919:123;;;;:::o;22827:193:21:-;;;;;:::o;24852:243::-;24966:122;25013:4;735:66:18;25031:25:21;;25070:8;24966:33;:122::i;:::-;24852:243;;:::o;25985:615::-;26136:115;26200:2;128:10:10;26220:17:21;;26136:46;:115::i;:::-;26119:475;;;26282:2;26276:27;;;901:66:18;26304:28:21;;26334:8;26276:67;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;26119:475;;;26365:5;26360:234;;26408:1;26390:2;:14;;;:19;26386:198;;26488:2;26436:55;;;;;;;;;;;:::i;:::-;;;;;;;;26386:198;26566:2;26537:32;;;;;;;;;;;:::i;:::-;;;;;;;;26360:234;26119:475;25985:615;;;:::o;4463:107:27:-;4519:7;4545:3;:11;;:18;;;;4538:25;;4463:107;;;:::o;2214:404::-;2277:4;2298:21;2308:3;2313:5;2298:9;:21::i;:::-;2293:319;;2335:3;:11;;2352:5;2335:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2515:3;:11;;:18;;;;2493:3;:12;;:19;2506:5;2493:19;;;;;;;;;;;:40;;;;2554:4;2547:11;;;;2293:319;2596:5;2589:12;;2214:404;;;;;:::o;1368:361:11:-;1530:100;128:10:10;1599:17:11;;1530:18;:51;;;;:100;;;;:::i;:::-;1513:210;;;1661:18;1655:43;;;1699:6;1707:4;1655:57;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1513:210;1368:361;;;:::o;8623:156:27:-;8696:4;8719:53;8727:3;:10;;8763:5;8747:23;;8739:32;;8719:7;:53::i;:::-;8712:60;;8623:156;;;;:::o;829:155:24:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;4255:127:27:-;4328:4;4374:1;4351:3;:12;;:19;4364:5;4351:19;;;;;;;;;;;;:24;;4344:31;;4255:127;;;;:::o;9106:115::-;9169:7;9195:19;9203:3;:10;;9195:7;:19::i;:::-;9188:26;;9106:115;;;:::o;9563:156::-;9637:7;9687:22;9691:3;:10;;9703:5;9687:3;:22::i;:::-;9679:31;;9656:56;;9563:156;;;;:::o;2786:1388::-;2852:4;2968:18;2989:3;:12;;:19;3002:5;2989:19;;;;;;;;;;;;2968:40;;3037:1;3023:10;:15;3019:1149;;3392:21;3429:1;3416:10;:14;;;;:::i;:::-;3392:38;;3444:17;3485:1;3464:3;:11;;:18;;;;:22;;;;:::i;:::-;3444:42;;3518:13;3505:9;:26;3501:398;;3551:17;3571:3;:11;;3583:9;3571:22;;;;;;;;:::i;:::-;;;;;;;;;;3551:42;;3722:9;3693:3;:11;;3705:13;3693:26;;;;;;;;:::i;:::-;;;;;;;;;:38;;;;3831:10;3805:3;:12;;:23;3818:9;3805:23;;;;;;;;;;;:36;;;;3533:366;3501:398;3977:3;:11;;:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4069:3;:12;;:19;4082:5;4069:19;;;;;;;;;;;4062:26;;;4110:4;4103:11;;;;;;;3019:1149;4152:5;4145:12;;;2786:1388;;;;;:::o;4912:118::-;4979:7;5005:3;:11;;5017:5;5005:18;;;;;;;;:::i;:::-;;;;;;;;;;4998:25;;4912:118;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:168:29:-;90:11;124:6;119:3;112:19;164:4;159:3;155:14;140:29;;7:168;;;;:::o;181:214::-;321:66;317:1;309:6;305:14;298:90;181:214;:::o;401:363::-;542:3;563:65;626:1;621:3;563:65;:::i;:::-;556:72;;637:93;726:3;637:93;:::i;:::-;755:2;750:3;746:12;739:19;;401:363;;;:::o;770:417::-;935:4;973:2;962:9;958:18;950:26;;1022:9;1016:4;1012:20;1008:1;997:9;993:17;986:47;1050:130;1175:4;1050:130;:::i;:::-;1042:138;;770:417;;;:::o;1193:154::-;1277:6;1272:3;1267;1254:30;1339:1;1330:6;1325:3;1321:16;1314:27;1193:154;;;:::o;1353:102::-;1394:6;1445:2;1441:7;1436:2;1429:5;1425:14;1421:28;1411:38;;1353:102;;;:::o;1483:301::-;1579:3;1600:70;1663:6;1658:3;1600:70;:::i;:::-;1593:77;;1680:43;1716:6;1711:3;1704:5;1680:43;:::i;:::-;1748:29;1770:6;1748:29;:::i;:::-;1743:3;1739:39;1732:46;;1483:301;;;;;:::o;1790:329::-;1911:4;1949:2;1938:9;1934:18;1926:26;;1998:9;1992:4;1988:20;1984:1;1973:9;1969:17;1962:47;2026:86;2107:4;2098:6;2090;2026:86;:::i;:::-;2018:94;;1790:329;;;;;:::o;2125:75::-;2158:6;2191:2;2185:9;2175:19;;2125:75;:::o;2206:117::-;2315:1;2312;2305:12;2329:117;2438:1;2435;2428:12;2452:149;2488:7;2528:66;2521:5;2517:78;2506:89;;2452:149;;;:::o;2607:120::-;2679:23;2696:5;2679:23;:::i;:::-;2672:5;2669:34;2659:62;;2717:1;2714;2707:12;2659:62;2607:120;:::o;2733:137::-;2778:5;2816:6;2803:20;2794:29;;2832:32;2858:5;2832:32;:::i;:::-;2733:137;;;;:::o;2876:327::-;2934:6;2983:2;2971:9;2962:7;2958:23;2954:32;2951:119;;;2989:79;;:::i;:::-;2951:119;3109:1;3134:52;3178:7;3169:6;3158:9;3154:22;3134:52;:::i;:::-;3124:62;;3080:116;2876:327;;;;:::o;3209:90::-;3243:7;3286:5;3279:13;3272:21;3261:32;;3209:90;;;:::o;3305:109::-;3386:21;3401:5;3386:21;:::i;:::-;3381:3;3374:34;3305:109;;:::o;3420:210::-;3507:4;3545:2;3534:9;3530:18;3522:26;;3558:65;3620:1;3609:9;3605:17;3596:6;3558:65;:::i;:::-;3420:210;;;;:::o;3636:77::-;3673:7;3702:5;3691:16;;3636:77;;;:::o;3719:122::-;3792:24;3810:5;3792:24;:::i;:::-;3785:5;3782:35;3772:63;;3831:1;3828;3821:12;3772:63;3719:122;:::o;3847:139::-;3893:5;3931:6;3918:20;3909:29;;3947:33;3974:5;3947:33;:::i;:::-;3847:139;;;;:::o;3992:474::-;4060:6;4068;4117:2;4105:9;4096:7;4092:23;4088:32;4085:119;;;4123:79;;:::i;:::-;4085:119;4243:1;4268:53;4313:7;4304:6;4293:9;4289:22;4268:53;:::i;:::-;4258:63;;4214:117;4370:2;4396:53;4441:7;4432:6;4421:9;4417:22;4396:53;:::i;:::-;4386:63;;4341:118;3992:474;;;;;:::o;4472:98::-;4523:6;4557:5;4551:12;4541:22;;4472:98;;;:::o;4576:307::-;4644:1;4654:113;4668:6;4665:1;4662:13;4654:113;;;4753:1;4748:3;4744:11;4738:18;4734:1;4729:3;4725:11;4718:39;4690:2;4687:1;4683:10;4678:15;;4654:113;;;4785:6;4782:1;4779:13;4776:101;;;4865:1;4856:6;4851:3;4847:16;4840:27;4776:101;4625:258;4576:307;;;:::o;4889:360::-;4975:3;5003:38;5035:5;5003:38;:::i;:::-;5057:70;5120:6;5115:3;5057:70;:::i;:::-;5050:77;;5136:52;5181:6;5176:3;5169:4;5162:5;5158:16;5136:52;:::i;:::-;5213:29;5235:6;5213:29;:::i;:::-;5208:3;5204:39;5197:46;;4979:270;4889:360;;;;:::o;5255:309::-;5366:4;5404:2;5393:9;5389:18;5381:26;;5453:9;5447:4;5443:20;5439:1;5428:9;5424:17;5417:47;5481:76;5552:4;5543:6;5481:76;:::i;:::-;5473:84;;5255:309;;;;:::o;5570:77::-;5607:7;5636:5;5625:16;;5570:77;;;:::o;5653:118::-;5740:24;5758:5;5740:24;:::i;:::-;5735:3;5728:37;5653:118;;:::o;5777:222::-;5870:4;5908:2;5897:9;5893:18;5885:26;;5921:71;5989:1;5978:9;5974:17;5965:6;5921:71;:::i;:::-;5777:222;;;;:::o;6005:117::-;6114:1;6111;6104:12;6128:180;6176:77;6173:1;6166:88;6273:4;6270:1;6263:15;6297:4;6294:1;6287:15;6314:281;6397:27;6419:4;6397:27;:::i;:::-;6389:6;6385:40;6527:6;6515:10;6512:22;6491:18;6479:10;6476:34;6473:62;6470:88;;;6538:18;;:::i;:::-;6470:88;6578:10;6574:2;6567:22;6357:238;6314:281;;:::o;6601:129::-;6635:6;6662:20;;:::i;:::-;6652:30;;6691:33;6719:4;6711:6;6691:33;:::i;:::-;6601:129;;;:::o;6736:311::-;6813:4;6903:18;6895:6;6892:30;6889:56;;;6925:18;;:::i;:::-;6889:56;6975:4;6967:6;6963:17;6955:25;;7035:4;7029;7025:15;7017:23;;6736:311;;;:::o;7053:117::-;7162:1;7159;7152:12;7193:710;7289:5;7314:81;7330:64;7387:6;7330:64;:::i;:::-;7314:81;:::i;:::-;7305:90;;7415:5;7444:6;7437:5;7430:21;7478:4;7471:5;7467:16;7460:23;;7531:4;7523:6;7519:17;7511:6;7507:30;7560:3;7552:6;7549:15;7546:122;;;7579:79;;:::i;:::-;7546:122;7694:6;7677:220;7711:6;7706:3;7703:15;7677:220;;;7786:3;7815:37;7848:3;7836:10;7815:37;:::i;:::-;7810:3;7803:50;7882:4;7877:3;7873:14;7866:21;;7753:144;7737:4;7732:3;7728:14;7721:21;;7677:220;;;7681:21;7295:608;;7193:710;;;;;:::o;7926:370::-;7997:5;8046:3;8039:4;8031:6;8027:17;8023:27;8013:122;;8054:79;;:::i;:::-;8013:122;8171:6;8158:20;8196:94;8286:3;8278:6;8271:4;8263:6;8259:17;8196:94;:::i;:::-;8187:103;;8003:293;7926:370;;;;:::o;8302:894::-;8420:6;8428;8477:2;8465:9;8456:7;8452:23;8448:32;8445:119;;;8483:79;;:::i;:::-;8445:119;8631:1;8620:9;8616:17;8603:31;8661:18;8653:6;8650:30;8647:117;;;8683:79;;:::i;:::-;8647:117;8788:78;8858:7;8849:6;8838:9;8834:22;8788:78;:::i;:::-;8778:88;;8574:302;8943:2;8932:9;8928:18;8915:32;8974:18;8966:6;8963:30;8960:117;;;8996:79;;:::i;:::-;8960:117;9101:78;9171:7;9162:6;9151:9;9147:22;9101:78;:::i;:::-;9091:88;;8886:303;8302:894;;;;;:::o;9202:123::-;9278:6;9312:5;9306:12;9296:22;;9202:123;;;:::o;9331:193::-;9439:11;9473:6;9468:3;9461:19;9513:4;9508:3;9504:14;9489:29;;9331:193;;;;:::o;9530:141::-;9606:4;9629:3;9621:11;;9659:4;9654:3;9650:14;9642:22;;9530:141;;;:::o;9677:158::-;9750:11;9784:6;9779:3;9772:19;9824:4;9819:3;9815:14;9800:29;;9677:158;;;;:::o;9841:340::-;9917:3;9945:38;9977:5;9945:38;:::i;:::-;9999:60;10052:6;10047:3;9999:60;:::i;:::-;9992:67;;10068:52;10113:6;10108:3;10101:4;10094:5;10090:16;10068:52;:::i;:::-;10145:29;10167:6;10145:29;:::i;:::-;10140:3;10136:39;10129:46;;9921:260;9841:340;;;;:::o;10187:192::-;10274:10;10309:64;10369:3;10361:6;10309:64;:::i;:::-;10295:78;;10187:192;;;;:::o;10385:122::-;10464:4;10496;10491:3;10487:14;10479:22;;10385:122;;;:::o;10539:983::-;10676:3;10705:63;10762:5;10705:63;:::i;:::-;10784:95;10872:6;10867:3;10784:95;:::i;:::-;10777:102;;10905:3;10950:4;10942:6;10938:17;10933:3;10929:27;10980:65;11039:5;10980:65;:::i;:::-;11068:7;11099:1;11084:393;11109:6;11106:1;11103:13;11084:393;;;11180:9;11174:4;11170:20;11165:3;11158:33;11231:6;11225:13;11259:82;11336:4;11321:13;11259:82;:::i;:::-;11251:90;;11364:69;11426:6;11364:69;:::i;:::-;11354:79;;11462:4;11457:3;11453:14;11446:21;;11144:333;11131:1;11128;11124:9;11119:14;;11084:393;;;11088:14;11493:4;11486:11;;11513:3;11506:10;;10681:841;;;;;10539:983;;;;:::o;11528:409::-;11689:4;11727:2;11716:9;11712:18;11704:26;;11776:9;11770:4;11766:20;11762:1;11751:9;11747:17;11740:47;11804:126;11925:4;11916:6;11804:126;:::i;:::-;11796:134;;11528:409;;;;:::o;11943:329::-;12002:6;12051:2;12039:9;12030:7;12026:23;12022:32;12019:119;;;12057:79;;:::i;:::-;12019:119;12177:1;12202:53;12247:7;12238:6;12227:9;12223:22;12202:53;:::i;:::-;12192:63;;12148:117;11943:329;;;;:::o;12278:126::-;12315:7;12355:42;12348:5;12344:54;12333:65;;12278:126;;;:::o;12410:96::-;12447:7;12476:24;12494:5;12476:24;:::i;:::-;12465:35;;12410:96;;;:::o;12512:118::-;12599:24;12617:5;12599:24;:::i;:::-;12594:3;12587:37;12512:118;;:::o;12636:222::-;12729:4;12767:2;12756:9;12752:18;12744:26;;12780:71;12848:1;12837:9;12833:17;12824:6;12780:71;:::i;:::-;12636:222;;;;:::o;12864:122::-;12937:24;12955:5;12937:24;:::i;:::-;12930:5;12927:35;12917:63;;12976:1;12973;12966:12;12917:63;12864:122;:::o;12992:139::-;13038:5;13076:6;13063:20;13054:29;;13092:33;13119:5;13092:33;:::i;:::-;12992:139;;;;:::o;13137:474::-;13205:6;13213;13262:2;13250:9;13241:7;13237:23;13233:32;13230:119;;;13268:79;;:::i;:::-;13230:119;13388:1;13413:53;13458:7;13449:6;13438:9;13434:22;13413:53;:::i;:::-;13403:63;;13359:117;13515:2;13541:53;13586:7;13577:6;13566:9;13562:22;13541:53;:::i;:::-;13531:63;;13486:118;13137:474;;;;;:::o;13617:114::-;13684:6;13718:5;13712:12;13702:22;;13617:114;;;:::o;13737:184::-;13836:11;13870:6;13865:3;13858:19;13910:4;13905:3;13901:14;13886:29;;13737:184;;;;:::o;13927:132::-;13994:4;14017:3;14009:11;;14047:4;14042:3;14038:14;14030:22;;13927:132;;;:::o;14065:108::-;14142:24;14160:5;14142:24;:::i;:::-;14137:3;14130:37;14065:108;;:::o;14179:179::-;14248:10;14269:46;14311:3;14303:6;14269:46;:::i;:::-;14347:4;14342:3;14338:14;14324:28;;14179:179;;;;:::o;14364:113::-;14434:4;14466;14461:3;14457:14;14449:22;;14364:113;;;:::o;14513:732::-;14632:3;14661:54;14709:5;14661:54;:::i;:::-;14731:86;14810:6;14805:3;14731:86;:::i;:::-;14724:93;;14841:56;14891:5;14841:56;:::i;:::-;14920:7;14951:1;14936:284;14961:6;14958:1;14955:13;14936:284;;;15037:6;15031:13;15064:63;15123:3;15108:13;15064:63;:::i;:::-;15057:70;;15150:60;15203:6;15150:60;:::i;:::-;15140:70;;14996:224;14983:1;14980;14976:9;14971:14;;14936:284;;;14940:14;15236:3;15229:10;;14637:608;;;14513:732;;;;:::o;15251:373::-;15394:4;15432:2;15421:9;15417:18;15409:26;;15481:9;15475:4;15471:20;15467:1;15456:9;15452:17;15445:47;15509:108;15612:4;15603:6;15509:108;:::i;:::-;15501:116;;15251:373;;;;:::o;15630:116::-;15700:21;15715:5;15700:21;:::i;:::-;15693:5;15690:32;15680:60;;15736:1;15733;15726:12;15680:60;15630:116;:::o;15752:133::-;15795:5;15833:6;15820:20;15811:29;;15849:30;15873:5;15849:30;:::i;:::-;15752:133;;;;:::o;15891:117::-;16000:1;15997;15990:12;16014:307;16075:4;16165:18;16157:6;16154:30;16151:56;;;16187:18;;:::i;:::-;16151:56;16225:29;16247:6;16225:29;:::i;:::-;16217:37;;16309:4;16303;16299:15;16291:23;;16014:307;;;:::o;16327:410::-;16404:5;16429:65;16445:48;16486:6;16445:48;:::i;:::-;16429:65;:::i;:::-;16420:74;;16517:6;16510:5;16503:21;16555:4;16548:5;16544:16;16593:3;16584:6;16579:3;16575:16;16572:25;16569:112;;;16600:79;;:::i;:::-;16569:112;16690:41;16724:6;16719:3;16714;16690:41;:::i;:::-;16410:327;16327:410;;;;;:::o;16756:338::-;16811:5;16860:3;16853:4;16845:6;16841:17;16837:27;16827:122;;16868:79;;:::i;:::-;16827:122;16985:6;16972:20;17010:78;17084:3;17076:6;17069:4;17061:6;17057:17;17010:78;:::i;:::-;17001:87;;16817:277;16756:338;;;;:::o;17100:1083::-;17201:6;17209;17217;17225;17233;17282:3;17270:9;17261:7;17257:23;17253:33;17250:120;;;17289:79;;:::i;:::-;17250:120;17409:1;17434:53;17479:7;17470:6;17459:9;17455:22;17434:53;:::i;:::-;17424:63;;17380:117;17536:2;17562:53;17607:7;17598:6;17587:9;17583:22;17562:53;:::i;:::-;17552:63;;17507:118;17664:2;17690:53;17735:7;17726:6;17715:9;17711:22;17690:53;:::i;:::-;17680:63;;17635:118;17792:2;17818:50;17860:7;17851:6;17840:9;17836:22;17818:50;:::i;:::-;17808:60;;17763:115;17945:3;17934:9;17930:19;17917:33;17977:18;17969:6;17966:30;17963:117;;;17999:79;;:::i;:::-;17963:117;18104:62;18158:7;18149:6;18138:9;18134:22;18104:62;:::i;:::-;18094:72;;17888:288;17100:1083;;;;;;;;:::o;18189:117::-;18298:1;18295;18288:12;18327:579;18411:8;18421:6;18471:3;18464:4;18456:6;18452:17;18448:27;18438:122;;18479:79;;:::i;:::-;18438:122;18592:6;18579:20;18569:30;;18622:18;18614:6;18611:30;18608:117;;;18644:79;;:::i;:::-;18608:117;18758:4;18750:6;18746:17;18734:29;;18812:3;18804:4;18796:6;18792:17;18782:8;18778:32;18775:41;18772:128;;;18819:79;;:::i;:::-;18772:128;18327:579;;;;;:::o;18912:581::-;19009:6;19017;19066:2;19054:9;19045:7;19041:23;19037:32;19034:119;;;19072:79;;:::i;:::-;19034:119;19220:1;19209:9;19205:17;19192:31;19250:18;19242:6;19239:30;19236:117;;;19272:79;;:::i;:::-;19236:117;19385:91;19468:7;19459:6;19448:9;19444:22;19385:91;:::i;:::-;19367:109;;;;19163:323;18912:581;;;;;:::o;19499:329::-;19558:6;19607:2;19595:9;19586:7;19582:23;19578:32;19575:119;;;19613:79;;:::i;:::-;19575:119;19733:1;19758:53;19803:7;19794:6;19783:9;19779:22;19758:53;:::i;:::-;19748:63;;19704:117;19499:329;;;;:::o;19834:311::-;19911:4;20001:18;19993:6;19990:30;19987:56;;;20023:18;;:::i;:::-;19987:56;20073:4;20065:6;20061:17;20053:25;;20133:4;20127;20123:15;20115:23;;19834:311;;;:::o;20168:710::-;20264:5;20289:81;20305:64;20362:6;20305:64;:::i;:::-;20289:81;:::i;:::-;20280:90;;20390:5;20419:6;20412:5;20405:21;20453:4;20446:5;20442:16;20435:23;;20506:4;20498:6;20494:17;20486:6;20482:30;20535:3;20527:6;20524:15;20521:122;;;20554:79;;:::i;:::-;20521:122;20669:6;20652:220;20686:6;20681:3;20678:15;20652:220;;;20761:3;20790:37;20823:3;20811:10;20790:37;:::i;:::-;20785:3;20778:50;20857:4;20852:3;20848:14;20841:21;;20728:144;20712:4;20707:3;20703:14;20696:21;;20652:220;;;20656:21;20270:608;;20168:710;;;;;:::o;20901:370::-;20972:5;21021:3;21014:4;21006:6;21002:17;20998:27;20988:122;;21029:79;;:::i;:::-;20988:122;21146:6;21133:20;21171:94;21261:3;21253:6;21246:4;21238:6;21234:17;21171:94;:::i;:::-;21162:103;;20978:293;20901:370;;;;:::o;21277:308::-;21351:4;21441:18;21433:6;21430:30;21427:56;;;21463:18;;:::i;:::-;21427:56;21513:4;21505:6;21501:17;21493:25;;21573:4;21567;21563:15;21555:23;;21277:308;;;:::o;21605:701::-;21698:5;21723:78;21739:61;21793:6;21739:61;:::i;:::-;21723:78;:::i;:::-;21714:87;;21821:5;21850:6;21843:5;21836:21;21884:4;21877:5;21873:16;21866:23;;21937:4;21929:6;21925:17;21917:6;21913:30;21966:3;21958:6;21955:15;21952:122;;;21985:79;;:::i;:::-;21952:122;22100:6;22083:217;22117:6;22112:3;22109:15;22083:217;;;22192:3;22221:34;22251:3;22239:10;22221:34;:::i;:::-;22216:3;22209:47;22285:4;22280:3;22276:14;22269:21;;22159:141;22143:4;22138:3;22134:14;22127:21;;22083:217;;;22087:21;21704:602;;21605:701;;;;;:::o;22326:364::-;22394:5;22443:3;22436:4;22428:6;22424:17;22420:27;22410:122;;22451:79;;:::i;:::-;22410:122;22568:6;22555:20;22593:91;22680:3;22672:6;22665:4;22657:6;22653:17;22593:91;:::i;:::-;22584:100;;22400:290;22326:364;;;;:::o;22696:320::-;22782:4;22872:18;22864:6;22861:30;22858:56;;;22894:18;;:::i;:::-;22858:56;22944:4;22936:6;22932:17;22924:25;;23004:4;22998;22994:15;22986:23;;22696:320;;;:::o;23037:942::-;23142:5;23167:90;23183:73;23249:6;23183:73;:::i;:::-;23167:90;:::i;:::-;23158:99;;23277:5;23306:6;23299:5;23292:21;23340:4;23333:5;23329:16;23322:23;;23393:4;23385:6;23381:17;23373:6;23369:30;23422:3;23414:6;23411:15;23408:122;;;23441:79;;:::i;:::-;23408:122;23556:6;23539:434;23573:6;23568:3;23565:15;23539:434;;;23662:3;23649:17;23698:18;23685:11;23682:35;23679:122;;;23720:79;;:::i;:::-;23679:122;23844:11;23836:6;23832:24;23882:46;23924:3;23912:10;23882:46;:::i;:::-;23877:3;23870:59;23958:4;23953:3;23949:14;23942:21;;23615:358;;23599:4;23594:3;23590:14;23583:21;;23539:434;;;23543:21;23148:831;;23037:942;;;;;:::o;24000:388::-;24080:5;24129:3;24122:4;24114:6;24110:17;24106:27;24096:122;;24137:79;;:::i;:::-;24096:122;24254:6;24241:20;24279:103;24378:3;24370:6;24363:4;24355:6;24351:17;24279:103;:::i;:::-;24270:112;;24086:302;24000:388;;;;:::o;24394:1973::-;24620:6;24628;24636;24644;24652;24701:3;24689:9;24680:7;24676:23;24672:33;24669:120;;;24708:79;;:::i;:::-;24669:120;24856:1;24845:9;24841:17;24828:31;24886:18;24878:6;24875:30;24872:117;;;24908:79;;:::i;:::-;24872:117;25013:78;25083:7;25074:6;25063:9;25059:22;25013:78;:::i;:::-;25003:88;;24799:302;25168:2;25157:9;25153:18;25140:32;25199:18;25191:6;25188:30;25185:117;;;25221:79;;:::i;:::-;25185:117;25326:78;25396:7;25387:6;25376:9;25372:22;25326:78;:::i;:::-;25316:88;;25111:303;25481:2;25470:9;25466:18;25453:32;25512:18;25504:6;25501:30;25498:117;;;25534:79;;:::i;:::-;25498:117;25639:78;25709:7;25700:6;25689:9;25685:22;25639:78;:::i;:::-;25629:88;;25424:303;25794:2;25783:9;25779:18;25766:32;25825:18;25817:6;25814:30;25811:117;;;25847:79;;:::i;:::-;25811:117;25952:75;26019:7;26010:6;25999:9;25995:22;25952:75;:::i;:::-;25942:85;;25737:300;26104:3;26093:9;26089:19;26076:33;26136:18;26128:6;26125:30;26122:117;;;26158:79;;:::i;:::-;26122:117;26263:87;26342:7;26333:6;26322:9;26318:22;26263:87;:::i;:::-;26253:97;;26047:313;24394:1973;;;;;;;;:::o;26373:652::-;26450:6;26458;26507:2;26495:9;26486:7;26482:23;26478:32;26475:119;;;26513:79;;:::i;:::-;26475:119;26633:1;26658:53;26703:7;26694:6;26683:9;26679:22;26658:53;:::i;:::-;26648:63;;26604:117;26788:2;26777:9;26773:18;26760:32;26819:18;26811:6;26808:30;26805:117;;;26841:79;;:::i;:::-;26805:117;26946:62;27000:7;26991:6;26980:9;26976:22;26946:62;:::i;:::-;26936:72;;26731:287;26373:652;;;;;:::o;27031:797::-;27117:6;27125;27133;27182:2;27170:9;27161:7;27157:23;27153:32;27150:119;;;27188:79;;:::i;:::-;27150:119;27308:1;27333:53;27378:7;27369:6;27358:9;27354:22;27333:53;:::i;:::-;27323:63;;27279:117;27435:2;27461:53;27506:7;27497:6;27486:9;27482:22;27461:53;:::i;:::-;27451:63;;27406:118;27591:2;27580:9;27576:18;27563:32;27622:18;27614:6;27611:30;27608:117;;;27644:79;;:::i;:::-;27608:117;27749:62;27803:7;27794:6;27783:9;27779:22;27749:62;:::i;:::-;27739:72;;27534:287;27031:797;;;;;:::o;27834:912::-;27961:6;27969;28018:2;28006:9;27997:7;27993:23;27989:32;27986:119;;;28024:79;;:::i;:::-;27986:119;28172:1;28161:9;28157:17;28144:31;28202:18;28194:6;28191:30;28188:117;;;28224:79;;:::i;:::-;28188:117;28329:78;28399:7;28390:6;28379:9;28375:22;28329:78;:::i;:::-;28319:88;;28115:302;28484:2;28473:9;28469:18;28456:32;28515:18;28507:6;28504:30;28501:117;;;28537:79;;:::i;:::-;28501:117;28642:87;28721:7;28712:6;28701:9;28697:22;28642:87;:::i;:::-;28632:97;;28427:312;27834:912;;;;;:::o;28752:114::-;28819:6;28853:5;28847:12;28837:22;;28752:114;;;:::o;28872:184::-;28971:11;29005:6;29000:3;28993:19;29045:4;29040:3;29036:14;29021:29;;28872:184;;;;:::o;29062:132::-;29129:4;29152:3;29144:11;;29182:4;29177:3;29173:14;29165:22;;29062:132;;;:::o;29200:108::-;29277:24;29295:5;29277:24;:::i;:::-;29272:3;29265:37;29200:108;;:::o;29314:179::-;29383:10;29404:46;29446:3;29438:6;29404:46;:::i;:::-;29482:4;29477:3;29473:14;29459:28;;29314:179;;;;:::o;29499:113::-;29569:4;29601;29596:3;29592:14;29584:22;;29499:113;;;:::o;29648:732::-;29767:3;29796:54;29844:5;29796:54;:::i;:::-;29866:86;29945:6;29940:3;29866:86;:::i;:::-;29859:93;;29976:56;30026:5;29976:56;:::i;:::-;30055:7;30086:1;30071:284;30096:6;30093:1;30090:13;30071:284;;;30172:6;30166:13;30199:63;30258:3;30243:13;30199:63;:::i;:::-;30192:70;;30285:60;30338:6;30285:60;:::i;:::-;30275:70;;30131:224;30118:1;30115;30111:9;30106:14;;30071:284;;;30075:14;30371:3;30364:10;;29772:608;;;29648:732;;;;:::o;30386:373::-;30529:4;30567:2;30556:9;30552:18;30544:26;;30616:9;30610:4;30606:20;30602:1;30591:9;30587:17;30580:47;30644:108;30747:4;30738:6;30644:108;:::i;:::-;30636:116;;30386:373;;;;:::o;30765:937::-;30857:6;30865;30873;30881;30930:3;30918:9;30909:7;30905:23;30901:33;30898:120;;;30937:79;;:::i;:::-;30898:120;31057:1;31082:53;31127:7;31118:6;31107:9;31103:22;31082:53;:::i;:::-;31072:63;;31028:117;31184:2;31210:53;31255:7;31246:6;31235:9;31231:22;31210:53;:::i;:::-;31200:63;;31155:118;31312:2;31338:50;31380:7;31371:6;31360:9;31356:22;31338:50;:::i;:::-;31328:60;;31283:115;31465:2;31454:9;31450:18;31437:32;31496:18;31488:6;31485:30;31482:117;;;31518:79;;:::i;:::-;31482:117;31623:62;31677:7;31668:6;31657:9;31653:22;31623:62;:::i;:::-;31613:72;;31408:287;30765:937;;;;;;;:::o;31708:1267::-;31869:6;31877;31885;31934:2;31922:9;31913:7;31909:23;31905:32;31902:119;;;31940:79;;:::i;:::-;31902:119;32088:1;32077:9;32073:17;32060:31;32118:18;32110:6;32107:30;32104:117;;;32140:79;;:::i;:::-;32104:117;32245:78;32315:7;32306:6;32295:9;32291:22;32245:78;:::i;:::-;32235:88;;32031:302;32400:2;32389:9;32385:18;32372:32;32431:18;32423:6;32420:30;32417:117;;;32453:79;;:::i;:::-;32417:117;32558:78;32628:7;32619:6;32608:9;32604:22;32558:78;:::i;:::-;32548:88;;32343:303;32713:2;32702:9;32698:18;32685:32;32744:18;32736:6;32733:30;32730:117;;;32766:79;;:::i;:::-;32730:117;32871:87;32950:7;32941:6;32930:9;32926:22;32871:87;:::i;:::-;32861:97;;32656:312;31708:1267;;;;;:::o;32981:797::-;33067:6;33075;33083;33132:2;33120:9;33111:7;33107:23;33103:32;33100:119;;;33138:79;;:::i;:::-;33100:119;33258:1;33283:53;33328:7;33319:6;33308:9;33304:22;33283:53;:::i;:::-;33273:63;;33229:117;33385:2;33411:53;33456:7;33447:6;33436:9;33432:22;33411:53;:::i;:::-;33401:63;;33356:118;33541:2;33530:9;33526:18;33513:32;33572:18;33564:6;33561:30;33558:117;;;33594:79;;:::i;:::-;33558:117;33699:62;33753:7;33744:6;33733:9;33729:22;33699:62;:::i;:::-;33689:72;;33484:287;32981:797;;;;;:::o;33784:539::-;33868:6;33917:2;33905:9;33896:7;33892:23;33888:32;33885:119;;;33923:79;;:::i;:::-;33885:119;34071:1;34060:9;34056:17;34043:31;34101:18;34093:6;34090:30;34087:117;;;34123:79;;:::i;:::-;34087:117;34228:78;34298:7;34289:6;34278:9;34274:22;34228:78;:::i;:::-;34218:88;;34014:302;33784:539;;;;:::o;34329:115::-;34414:23;34431:5;34414:23;:::i;:::-;34409:3;34402:36;34329:115;;:::o;34450:218::-;34541:4;34579:2;34568:9;34564:18;34556:26;;34592:69;34658:1;34647:9;34643:17;34634:6;34592:69;:::i;:::-;34450:218;;;;:::o;34674:147::-;34775:11;34812:3;34797:18;;34674:147;;;;:::o;34849:314::-;34963:3;34984:88;35065:6;35060:3;34984:88;:::i;:::-;34977:95;;35082:43;35118:6;35113:3;35106:5;35082:43;:::i;:::-;35150:6;35145:3;35141:16;35134:23;;34849:314;;;;;:::o;35169:94::-;35202:8;35250:5;35246:2;35242:14;35221:35;;35169:94;;;:::o;35269:::-;35308:7;35337:20;35351:5;35337:20;:::i;:::-;35326:31;;35269:94;;;:::o;35369:100::-;35408:7;35437:26;35457:5;35437:26;:::i;:::-;35426:37;;35369:100;;;:::o;35475:157::-;35580:45;35600:24;35618:5;35600:24;:::i;:::-;35580:45;:::i;:::-;35575:3;35568:58;35475:157;;:::o;35638:79::-;35677:7;35706:5;35695:16;;35638:79;;;:::o;35723:157::-;35828:45;35848:24;35866:5;35848:24;:::i;:::-;35828:45;:::i;:::-;35823:3;35816:58;35723:157;;:::o;35886:573::-;36082:3;36104:103;36203:3;36194:6;36186;36104:103;:::i;:::-;36097:110;;36217:75;36288:3;36279:6;36217:75;:::i;:::-;36317:2;36312:3;36308:12;36301:19;;36330:75;36401:3;36392:6;36330:75;:::i;:::-;36430:2;36425:3;36421:12;36414:19;;36450:3;36443:10;;35886:573;;;;;;;:::o;36465:373::-;36569:3;36597:38;36629:5;36597:38;:::i;:::-;36651:88;36732:6;36727:3;36651:88;:::i;:::-;36644:95;;36748:52;36793:6;36788:3;36781:4;36774:5;36770:16;36748:52;:::i;:::-;36825:6;36820:3;36816:16;36809:23;;36573:265;36465:373;;;;:::o;36844:271::-;36974:3;36996:93;37085:3;37076:6;36996:93;:::i;:::-;36989:100;;37106:3;37099:10;;36844:271;;;;:::o;37121:180::-;37169:77;37166:1;37159:88;37266:4;37263:1;37256:15;37290:4;37287:1;37280:15;37307:118;37394:24;37412:5;37394:24;:::i;:::-;37389:3;37382:37;37307:118;;:::o;37431:222::-;37524:4;37562:2;37551:9;37547:18;37539:26;;37575:71;37643:1;37632:9;37628:17;37619:6;37575:71;:::i;:::-;37431:222;;;;:::o;37659:332::-;37780:4;37818:2;37807:9;37803:18;37795:26;;37831:71;37899:1;37888:9;37884:17;37875:6;37831:71;:::i;:::-;37912:72;37980:2;37969:9;37965:18;37956:6;37912:72;:::i;:::-;37659:332;;;;;:::o;37997:117::-;38106:1;38103;38096:12;38120:117;38229:1;38226;38219:12;38243:117;38352:1;38349;38342:12;38366:724;38443:4;38449:6;38505:11;38492:25;38605:1;38599:4;38595:12;38584:8;38568:14;38564:29;38560:48;38540:18;38536:73;38526:168;;38613:79;;:::i;:::-;38526:168;38725:18;38715:8;38711:33;38703:41;;38777:4;38764:18;38754:28;;38805:18;38797:6;38794:30;38791:117;;;38827:79;;:::i;:::-;38791:117;38935:2;38929:4;38925:13;38917:21;;38992:4;38984:6;38980:17;38964:14;38960:38;38954:4;38950:49;38947:136;;;39002:79;;:::i;:::-;38947:136;38456:634;38366:724;;;;;:::o;39096:291::-;39236:3;39258:103;39357:3;39348:6;39340;39258:103;:::i;:::-;39251:110;;39378:3;39371:10;;39096:291;;;;;:::o;39393:442::-;39542:4;39580:2;39569:9;39565:18;39557:26;;39593:71;39661:1;39650:9;39646:17;39637:6;39593:71;:::i;:::-;39674:72;39742:2;39731:9;39727:18;39718:6;39674:72;:::i;:::-;39756;39824:2;39813:9;39809:18;39800:6;39756:72;:::i;:::-;39393:442;;;;;;:::o;39841:332::-;39962:4;40000:2;39989:9;39985:18;39977:26;;40013:71;40081:1;40070:9;40066:17;40057:6;40013:71;:::i;:::-;40094:72;40162:2;40151:9;40147:18;40138:6;40094:72;:::i;:::-;39841:332;;;;;:::o;40179:628::-;40368:4;40406:3;40395:9;40391:19;40383:27;;40420:71;40488:1;40477:9;40473:17;40464:6;40420:71;:::i;:::-;40501:72;40569:2;40558:9;40554:18;40545:6;40501:72;:::i;:::-;40583:66;40645:2;40634:9;40630:18;40621:6;40583:66;:::i;:::-;40696:9;40690:4;40686:20;40681:2;40670:9;40666:18;40659:48;40724:76;40795:4;40786:6;40724:76;:::i;:::-;40716:84;;40179:628;;;;;;;:::o;40813:116::-;40864:4;40887:3;40879:11;;40917:4;40912:3;40908:14;40900:22;;40813:116;;;:::o;40935:150::-;40972:7;41012:66;41005:5;41001:78;40990:89;;40935:150;;;:::o;41091:154::-;41134:11;41170:29;41194:3;41188:10;41170:29;:::i;:::-;41233:5;41209:29;;41146:99;41091:154;;;:::o;41251:107::-;41295:8;41345:5;41339:4;41335:16;41314:37;;41251:107;;;;:::o;41364:594::-;41448:5;41479:38;41511:5;41479:38;:::i;:::-;41542:5;41569:40;41603:5;41569:40;:::i;:::-;41557:52;;41628:35;41654:8;41628:35;:::i;:::-;41619:44;;41687:2;41679:6;41676:14;41673:278;;;41758:169;41843:66;41813:6;41809:2;41805:15;41802:1;41798:23;41758:169;:::i;:::-;41735:5;41714:227;41705:236;;41673:278;41454:504;;41364:594;;;:::o;41964:79::-;42003:7;42032:5;42021:16;;41964:79;;;:::o;42049:157::-;42154:45;42174:24;42192:5;42174:24;:::i;:::-;42154:45;:::i;:::-;42149:3;42142:58;42049:157;;:::o;42212:397::-;42352:3;42367:75;42438:3;42429:6;42367:75;:::i;:::-;42467:2;42462:3;42458:12;42451:19;;42480:75;42551:3;42542:6;42480:75;:::i;:::-;42580:2;42575:3;42571:12;42564:19;;42600:3;42593:10;;42212:397;;;;;:::o;42615:180::-;42663:77;42660:1;42653:88;42760:4;42757:1;42750:15;42784:4;42781:1;42774:15;42801:320;42845:6;42882:1;42876:4;42872:12;42862:22;;42929:1;42923:4;42919:12;42950:18;42940:81;;43006:4;42998:6;42994:17;42984:27;;42940:81;43068:2;43060:6;43057:14;43037:18;43034:38;43031:84;;;43087:18;;:::i;:::-;43031:84;42852:269;42801:320;;;:::o;43127:517::-;43288:4;43326:2;43315:9;43311:18;43303:26;;43339:71;43407:1;43396:9;43392:17;43383:6;43339:71;:::i;:::-;43420:66;43482:2;43471:9;43467:18;43458:6;43420:66;:::i;:::-;43533:9;43527:4;43523:20;43518:2;43507:9;43503:18;43496:48;43561:76;43632:4;43623:6;43561:76;:::i;:::-;43553:84;;43127:517;;;;;;:::o;43650:751::-;43873:4;43911:3;43900:9;43896:19;43888:27;;43925:71;43993:1;43982:9;43978:17;43969:6;43925:71;:::i;:::-;44006:72;44074:2;44063:9;44059:18;44050:6;44006:72;:::i;:::-;44088;44156:2;44145:9;44141:18;44132:6;44088:72;:::i;:::-;44170;44238:2;44227:9;44223:18;44214:6;44170:72;:::i;:::-;44290:9;44284:4;44280:20;44274:3;44263:9;44259:19;44252:49;44318:76;44389:4;44380:6;44318:76;:::i;:::-;44310:84;;43650:751;;;;;;;;:::o;44407:180::-;44455:77;44452:1;44445:88;44552:4;44549:1;44542:15;44576:4;44573:1;44566:15;44593:233;44632:3;44655:24;44673:5;44655:24;:::i;:::-;44646:33;;44701:66;44694:5;44691:77;44688:103;;;44771:18;;:::i;:::-;44688:103;44818:1;44811:5;44807:13;44800:20;;44593:233;;;:::o;44832:407::-;44965:4;45003:2;44992:9;44988:18;44980:26;;45016:65;45078:1;45067:9;45063:17;45054:6;45016:65;:::i;:::-;45128:9;45122:4;45118:20;45113:2;45102:9;45098:18;45091:48;45156:76;45227:4;45218:6;45156:76;:::i;:::-;45148:84;;44832:407;;;;;:::o;45245:150::-;45282:7;45322:66;45315:5;45311:78;45300:89;;45245:150;;;:::o;45401:79::-;45440:7;45469:5;45458:16;;45401:79;;;:::o;45486:157::-;45591:45;45611:24;45629:5;45611:24;:::i;:::-;45591:45;:::i;:::-;45586:3;45579:58;45486:157;;:::o;45649:149::-;45685:7;45725:66;45718:5;45714:78;45703:89;;45649:149;;;:::o;45804:78::-;45842:7;45871:5;45860:16;;45804:78;;;:::o;45888:153::-;45991:43;46010:23;46027:5;46010:23;:::i;:::-;45991:43;:::i;:::-;45986:3;45979:56;45888:153;;:::o;46047:79::-;46086:7;46115:5;46104:16;;46047:79;;;:::o;46132:157::-;46237:45;46257:24;46275:5;46257:24;:::i;:::-;46237:45;:::i;:::-;46232:3;46225:58;46132:157;;:::o;46295:533::-;46461:3;46476:75;46547:3;46538:6;46476:75;:::i;:::-;46576:2;46571:3;46567:12;46560:19;;46589:73;46658:3;46649:6;46589:73;:::i;:::-;46687:1;46682:3;46678:11;46671:18;;46699:75;46770:3;46761:6;46699:75;:::i;:::-;46799:2;46794:3;46790:12;46783:19;;46819:3;46812:10;;46295:533;;;;;;:::o;46834:154::-;46877:11;46913:29;46937:3;46931:10;46913:29;:::i;:::-;46976:5;46952:29;;46889:99;46834:154;;;:::o;46994:594::-;47078:5;47109:38;47141:5;47109:38;:::i;:::-;47172:5;47199:40;47233:5;47199:40;:::i;:::-;47187:52;;47258:35;47284:8;47258:35;:::i;:::-;47249:44;;47317:2;47309:6;47306:14;47303:278;;;47388:169;47473:66;47443:6;47439:2;47435:15;47432:1;47428:23;47388:169;:::i;:::-;47365:5;47344:227;47335:236;;47303:278;47084:504;;46994:594;;;:::o;47594:419::-;47733:4;47771:2;47760:9;47756:18;47748:26;;47784:71;47852:1;47841:9;47837:17;47828:6;47784:71;:::i;:::-;47902:9;47896:4;47892:20;47887:2;47876:9;47872:18;47865:48;47930:76;48001:4;47992:6;47930:76;:::i;:::-;47922:84;;47594:419;;;;;:::o;48019:::-;48107:5;48132:65;48148:48;48189:6;48148:48;:::i;:::-;48132:65;:::i;:::-;48123:74;;48220:6;48213:5;48206:21;48258:4;48251:5;48247:16;48296:3;48287:6;48282:3;48278:16;48275:25;48272:112;;;48303:79;;:::i;:::-;48272:112;48393:39;48425:6;48420:3;48415;48393:39;:::i;:::-;48113:325;48019:419;;;;;:::o;48457:353::-;48523:5;48572:3;48565:4;48557:6;48553:17;48549:27;48539:122;;48580:79;;:::i;:::-;48539:122;48690:6;48684:13;48715:89;48800:3;48792:6;48785:4;48777:6;48773:17;48715:89;:::i;:::-;48706:98;;48529:281;48457:353;;;;:::o;48816:522::-;48895:6;48944:2;48932:9;48923:7;48919:23;48915:32;48912:119;;;48950:79;;:::i;:::-;48912:119;49091:1;49080:9;49076:17;49070:24;49121:18;49113:6;49110:30;49107:117;;;49143:79;;:::i;:::-;49107:117;49248:73;49313:7;49304:6;49293:9;49289:22;49248:73;:::i;:::-;49238:83;;49041:290;48816:522;;;;:::o;49344:191::-;49384:4;49404:20;49422:1;49404:20;:::i;:::-;49399:25;;49438:20;49456:1;49438:20;:::i;:::-;49433:25;;49477:1;49474;49471:8;49468:34;;;49482:18;;:::i;:::-;49468:34;49527:1;49524;49520:9;49512:17;;49344:191;;;;:::o;49541:180::-;49589:77;49586:1;49579:88;49686:4;49683:1;49676:15;49710:4;49707:1;49700:15"},"methodIdentifiers":{"authorizeOperator(address,bytes32,bytes)":"86a10ddd","balanceOf(address)":"70a08231","batchCalls(bytes[])":"6963d438","getData(bytes32)":"54f6127f","getDataBatch(bytes32[])":"dedff9c6","getDataBatchForTokenIds(bytes32[],bytes32[])":"1d26fce6","getDataForTokenId(bytes32,bytes32)":"16e023b3","getOperatorsOf(bytes32)":"49a6078d","isOperatorFor(address,bytes32)":"2a3654a4","mint(address,bytes32,bool,bytes)":"af255b61","owner()":"8da5cb5b","renounceOwnership()":"715018a6","revokeOperator(address,bytes32,bool,bytes)":"db8c9663","setData(bytes32,bytes)":"7f23690c","setDataBatch(bytes32[],bytes[])":"97902421","setDataBatchForTokenIds(bytes32[],bytes32[],bytes[])":"be9f0e6f","setDataForTokenId(bytes32,bytes32,bytes)":"d6c1407c","supportsInterface(bytes4)":"01ffc9a7","tokenIdsOf(address)":"a3b261f2","tokenOwnerOf(bytes32)":"217b2270","totalSupply()":"18160ddd","transfer(address,address,bytes32,bool,bytes)":"511b6952","transferBatch(address[],address[],bytes32[],bool[],bytes[])":"7e87632c","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"nftCollectionName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"nftCollectionSymbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"contractOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lsp4Type\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lsp8TokenIdFormat\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesEmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_MsgValueDisallowed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"storedData\",\"type\":\"bytes\"}],\"name\":\"InvalidExtensionAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"InvalidFunctionSelector\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenNameNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenSymbolNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenTypeNotEditable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"callIndex\",\"type\":\"uint256\"}],\"name\":\"LSP8BatchCallFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotSendToAddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotSendToSelf\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotUseAddressZeroAsOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8InvalidTransferBatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8NonExistentTokenId\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8NonExistingOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"LSP8NotTokenOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"LSP8NotTokenOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"LSP8NotifyTokenReceiverContractMissingLSP1Interface\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"LSP8NotifyTokenReceiverIsEOA\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8OperatorAlreadyAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenContractCannotHoldValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8TokenIdAlreadyMinted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenIdFormatNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenIdsDataEmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenIdsDataLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenOwnerCannotBeOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"functionSelector\",\"type\":\"bytes4\"}],\"name\":\"NoExtensionFoundForFunctionSelector\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callerAddress\",\"type\":\"address\"}],\"name\":\"OwnableCallerNotTheOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnableCannotSetZeroAddressAsOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"OperatorAuthorizationChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"notified\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"OperatorRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"TokenIdDataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"batchCalls\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"tokenIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatchForTokenIds\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getDataForTokenId\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"getOperatorsOf\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"notify\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"tokenIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatchForTokenIds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setDataForTokenId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"tokenIdsOf\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"tokenOwnerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"from\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"tokenId\",\"type\":\"bytes32[]\"},{\"internalType\":\"bool[]\",\"name\":\"force\",\"type\":\"bool[]\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"transferBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ERC725Y_DataKeysValuesEmptyArray()\":[{\"details\":\"Reverts when one of the array parameter provided to {setDataBatch} function is an empty array.\"}],\"ERC725Y_DataKeysValuesLengthMismatch()\":[{\"details\":\"Reverts when there is not the same number of elements in the `datakeys` and `dataValues` array parameters provided when calling the {setDataBatch} function.\"}],\"ERC725Y_MsgValueDisallowed()\":[{\"details\":\"Reverts when sending value to the {setData} or {setDataBatch} function.\"}],\"InvalidExtensionAddress(bytes)\":[{\"details\":\"reverts when the bytes retrieved from the LSP17 data key is not a valid address (not 20 bytes)\"}],\"InvalidFunctionSelector(bytes)\":[{\"details\":\"reverts when the contract is called with a function selector not valid (less than 4 bytes of data)\"}],\"LSP4TokenNameNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenName` after the digital asset contract has been deployed / initialized. The `LSP4TokenName` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP4TokenSymbolNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenSymbol` after the digital asset contract has been deployed / initialized. The `LSP4TokenSymbol` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP4TokenTypeNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenType` after the digital asset contract has been deployed / initialized. The `LSP4TokenType` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor / initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP8BatchCallFailed(uint256)\":[{\"details\":\"Reverts when a batch call failed.\"}],\"LSP8CannotSendToAddressZero()\":[{\"details\":\"Reverts when trying to send token to the zero address.\"}],\"LSP8CannotSendToSelf()\":[{\"details\":\"Reverts when specifying the same address for `from` and `to` in a token transfer.\"}],\"LSP8CannotUseAddressZeroAsOperator()\":[{\"details\":\"Reverts when trying to set the zero address as an operator.\"}],\"LSP8InvalidTransferBatch()\":[{\"details\":\"Reverts when the parameters used for `transferBatch` have different lengths.\"}],\"LSP8NonExistentTokenId(bytes32)\":[{\"details\":\"Reverts when `tokenId` has not been minted.\"}],\"LSP8NonExistingOperator(address,bytes32)\":[{\"details\":\"Reverts when `operator` is not an operator for the `tokenId`.\"}],\"LSP8NotTokenOperator(bytes32,address)\":[{\"details\":\"Reverts when `caller` is not an allowed operator for `tokenId`.\"}],\"LSP8NotTokenOwner(address,bytes32,address)\":[{\"details\":\"Reverts when `caller` is not the `tokenOwner` of the `tokenId`.\"}],\"LSP8NotifyTokenReceiverContractMissingLSP1Interface(address)\":[{\"details\":\"Reverts if the `tokenReceiver` does not implement LSP1 when minting or transferring tokens with `bool force` set as `false`.\"}],\"LSP8NotifyTokenReceiverIsEOA(address)\":[{\"details\":\"Reverts if the `tokenReceiver` is an EOA when minting or transferring tokens with `bool force` set as `false`.\"}],\"LSP8OperatorAlreadyAuthorized(address,bytes32)\":[{\"details\":\"Reverts when `operator` is already authorized for the `tokenId`.\"}],\"LSP8TokenContractCannotHoldValue()\":[{\"details\":\"Error occurs when sending native tokens to the LSP8 contract without sending any data. E.g. Sending value without passing a bytes4 function selector to call a LSP17 Extension.\"}],\"LSP8TokenIdAlreadyMinted(bytes32)\":[{\"details\":\"Reverts when `tokenId` has already been minted.\"}],\"LSP8TokenIdFormatNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP8TokenIdFormat` after the identifiable digital asset contract has been deployed. The `LSP8TokenIdFormat` data key is located inside the ERC725Y Data key-value store of the identifiable digital asset contract. It can be set only once inside the constructor/initializer when the identifiable digital asset contract is being deployed.\"}],\"LSP8TokenIdsDataEmptyArray()\":[{\"details\":\"Reverts when empty arrays is passed to the function\"}],\"LSP8TokenIdsDataLengthMismatch()\":[{\"details\":\"Reverts when the length of the token IDs data arrays is not equal\"}],\"LSP8TokenOwnerCannotBeOperator()\":[{\"details\":\"Reverts when trying to authorize or revoke the token's owner as an operator.\"}],\"NoExtensionFoundForFunctionSelector(bytes4)\":[{\"details\":\"reverts when there is no extension for the function selector being called with\"}],\"OwnableCallerNotTheOwner(address)\":[{\"details\":\"Reverts when only the owner is allowed to call the function.\",\"params\":{\"callerAddress\":\"The address that tried to make the call.\"}}],\"OwnableCannotSetZeroAddressAsOwner()\":[{\"details\":\"Reverts when trying to set `address(0)` as the contract owner when deploying the contract, initializing it or transferring ownership of the contract.\"}]},\"kind\":\"dev\",\"methods\":{\"authorizeOperator(address,bytes32,bytes)\":{\"details\":\"Allow an `operator` address to transfer or burn a specific `tokenId` on behalf of its token owner. See {isOperatorFor}. Notify the operator based on the LSP1-UniversalReceiver standard\",\"params\":{\"operator\":\"The address to authorize as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The token ID operator has access to.\"}},\"balanceOf(address)\":{\"details\":\"Get the number of token IDs owned by `tokenOwner`.\",\"params\":{\"tokenOwner\":\"The address to query     *\"},\"returns\":{\"_0\":\"The total number of token IDs that `tokenOwner` owns.\"}},\"batchCalls(bytes[])\":{\"custom:info\":\"It's not possible to send value along the functions call due to the use of `delegatecall`.\",\"details\":\"Allows a caller to batch different function calls in one call. Perform a `delegatecall` on self, to call different functions with preserving the context.\",\"params\":{\"data\":\"An array of ABI encoded function calls to be called on the contract.\"},\"returns\":{\"results\":\"An array of abi-encoded data returned by the functions executed.\"}},\"getData(bytes32)\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\",\"params\":{\"dataKey\":\"The data key for which to retrieve the value.\"},\"returns\":{\"dataValue\":\"The bytes value stored under the specified data key.\"}},\"getDataBatch(bytes32[])\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\",\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"getDataBatchForTokenIds(bytes32[],bytes32[])\":{\"params\":{\"dataKeys\":\"An array of data keys corresponding to the token IDs.\",\"tokenIds\":\"An array of token IDs.\"},\"returns\":{\"dataValues\":\"An array of data values for each pair of `tokenId` and `dataKey`.\"}},\"getDataForTokenId(bytes32,bytes32)\":{\"params\":{\"dataKey\":\"The key for the data to retrieve.\",\"tokenId\":\"The unique identifier for a token.\"},\"returns\":{\"dataValue\":\"The data value associated with the given `tokenId` and `dataKey`.\"}},\"getOperatorsOf(bytes32)\":{\"details\":\"Returns all `operator` addresses that are allowed to transfer or burn a specific `tokenId` on behalf of its owner.\",\"params\":{\"tokenId\":\"The token ID to get the operators for.\"},\"returns\":{\"_0\":\"An array of operators allowed to transfer or burn a specific `tokenId`. Requirements - `tokenId` must exist.\"}},\"isOperatorFor(address,bytes32)\":{\"details\":\"Returns whether `operator` address is an operator for a given `tokenId`.\",\"params\":{\"operator\":\"The address to query operator status for.\",\"tokenId\":\"The token ID to check if `operator` is allowed to operate on.\"},\"returns\":{\"_0\":\"`true` if `operator` is an operator for `tokenId`, `false` otherwise.\"}},\"mint(address,bytes32,bool,bytes)\":{\"details\":\"Public {_mint} function only callable by the {owner}.\",\"params\":{\"data\":\"Any addition data to be sent alongside the minting.\",\"force\":\"Set to `false` to ensure that you are minting for a recipient that implements LSP1, `false` otherwise for forcing the minting.\",\"to\":\"The address that will receive the minted `tokenId`.\",\"tokenId\":\"The tokenId to mint.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"revokeOperator(address,bytes32,bool,bytes)\":{\"details\":\"Remove access of `operator` for a given `tokenId`, disallowing it to transfer `tokenId` on behalf of its owner. See also {isOperatorFor}.\",\"params\":{\"notify\":\"Boolean indicating whether to notify the operator or not\",\"operator\":\"The address to revoke as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The tokenId `operator` is revoked from operating on.\"}},\"setData(bytes32,bytes)\":{\"custom:events\":\"{DataChanged} event.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner}.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, if the function is not intended to receive value (= native tokens), **an additional check should be implemented to ensure that `msg.value` sent was equal to 0**.\",\"details\":\"Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`. The function is marked as payable to enable flexibility on child contracts. For instance to implement a fee mechanism for setting specific data.\",\"params\":{\"dataKey\":\"The data key for which to set a new value.\",\"dataValue\":\"The new bytes value to set.\"}},\"setDataBatch(bytes32[],bytes[])\":{\"custom:events\":\"{DataChanged} event **for each data key/value pair set**.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner} of the contract.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, if the function is not intended to receive value (= native tokens), **an additional check should be implemented to ensure that `msg.value` sent was equal to 0**.\",\"details\":\"Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\",\"params\":{\"dataKeys\":\"An array of data keys to set bytes values for.\",\"dataValues\":\"An array of bytes values to set for each `dataKeys`.\"}},\"setDataBatchForTokenIds(bytes32[],bytes32[],bytes[])\":{\"params\":{\"dataKeys\":\"An array of data keys corresponding to the token IDs.\",\"dataValues\":\"An array of values to set for the given data keys.\",\"tokenIds\":\"An array of token IDs.\"}},\"setDataForTokenId(bytes32,bytes32,bytes)\":{\"params\":{\"dataKey\":\"The key for the data to set.\",\"dataValue\":\"The value to set for the given data key.\",\"tokenId\":\"The unique identifier for a token.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenIdsOf(address)\":{\"details\":\"Returns the list of token IDs that the `tokenOwner` address owns.\",\"params\":{\"tokenOwner\":\"The address that we want to get the list of token IDs for.\"},\"returns\":{\"_0\":\"An array of `bytes32[] tokenIds` owned by `tokenOwner`.\"}},\"tokenOwnerOf(bytes32)\":{\"details\":\"Returns the list of `tokenIds` for the `tokenOwner` address.\",\"params\":{\"tokenId\":\"tokenOwner The address to query owned tokens\"},\"returns\":{\"_0\":\"The owner address of the given `tokenId`.\"}},\"totalSupply()\":{\"details\":\"Returns the number of existing tokens that have been minted in this contract.\",\"returns\":{\"_0\":\"The number of existing tokens.\"}},\"transfer(address,address,bytes32,bool,bytes)\":{\"details\":\"Transfer a given `tokenId` token from the `from` address to the `to` address. If operators are set for a specific `tokenId`, all the operators are revoked after the tokenId have been transferred. The `force` parameter MUST be set to `true` when transferring tokens to Externally Owned Accounts (EOAs) or contracts that do not implement the LSP1 standard.\",\"params\":{\"data\":\"Any additional data the caller wants included in the emitted event, and sent in the hooks of the `from` and `to` addresses.\",\"force\":\"When set to `true`, the `to` address CAN be any addres. When set to `false`, the `to` address MUST be a contract that supports the LSP1 UniversalReceiver standard.\",\"from\":\"The address that owns the given `tokenId`.\",\"to\":\"The address that will receive the `tokenId`.\",\"tokenId\":\"The token ID to transfer.\"}},\"transferBatch(address[],address[],bytes32[],bool[],bytes[])\":{\"details\":\"Transfers multiple tokens at once based on the arrays of `from`, `to` and `tokenId`. If any transfer fails, the whole call will revert.\",\"params\":{\"data\":\"Any additional data the caller wants included in the emitted event, and sent in the hooks to the `from` and `to` addresses.\",\"force\":\"When set to `true`, `to` may be any address. When set to `false`, `to` must be a contract that supports the LSP1 standard and not revert.\",\"from\":\"An array of sending addresses.\",\"to\":\"An array of recipient addresses.\",\"tokenId\":\"An array of token IDs to transfer.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"LSP8BatchCallFailed(uint256)\":[{\"notice\":\"Batch call failed.\"}],\"LSP8TokenContractCannotHoldValue()\":[{\"notice\":\"LSP8 contract cannot receive native tokens.\"}]},\"events\":{\"DataChanged(bytes32,bytes)\":{\"notice\":\"The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\"}},\"kind\":\"user\",\"methods\":{\"batchCalls(bytes[])\":{\"notice\":\"Executing the following batch of abi-encoded function calls on the contract: `data`.\"},\"getData(bytes32)\":{\"notice\":\"Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\"},\"getDataBatch(bytes32[])\":{\"notice\":\"Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\"},\"getDataBatchForTokenIds(bytes32[],bytes32[])\":{\"notice\":\"Retrieves data in batch for multiple `tokenId` and `dataKey` pairs.\"},\"getDataForTokenId(bytes32,bytes32)\":{\"notice\":\"Retrieves data for a specific `tokenId` and `dataKey`.\"},\"mint(address,bytes32,bool,bytes)\":{\"notice\":\"Minting tokenId `tokenId` for address `to` with the additional data `data` (Note: allow non-LSP1 recipient is set to `force`).\"},\"setData(bytes32,bytes)\":{\"notice\":\"Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\"},\"setDataBatch(bytes32[],bytes[])\":{\"notice\":\"Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\"},\"setDataBatchForTokenIds(bytes32[],bytes32[],bytes[])\":{\"notice\":\"Sets data in batch for multiple `tokenId` and `dataKey` pairs.\"},\"setDataForTokenId(bytes32,bytes32,bytes)\":{\"notice\":\"Sets data for a specific `tokenId` and `dataKey`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BasicLSP8.sol\":\"BasicLSP8\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts/contracts/ERC725Y.sol\":{\"keccak256\":\"0x4cb23ef9c2c93d881737c47cd0eebd63dcb39828484fda1fd3a5ce9971df3ef7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ff707e4552e8e442ff88d8b961583912664eaee373b49f03b1e6c4cd28213938\",\"dweb:/ipfs/QmVELUkQr3TikdEZoG9cxhwUCknuvSYVGKwpeDF76XiZpb\"]},\"@erc725/smart-contracts/contracts/ERC725YCore.sol\":{\"keccak256\":\"0x90670a99b91307ed47851fcc72cee06f246f49a1810307c9e2f978116bbabfc4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://06a94fdd05c104d4d1368398ed4b00926d27c1485a5130aeb257bc904671bcc0\",\"dweb:/ipfs/Qmdsph9AnSiAvYpmgVXfy3Do5dCWKBVL3xWMeGaT7qjte2\"]},\"@erc725/smart-contracts/contracts/constants.sol\":{\"keccak256\":\"0x37da1619e580b6af6a68e91b4784f7945ee2344fad3a96b6dfb2592e35fedb60\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fb9436bd587d7b38c532f317dbd4bc5f178b50906b1a5e29adf24908f27b2c47\",\"dweb:/ipfs/QmW2vTCNM7Mr4vW5t9yBK7Zmh1FtaVjPwdAbyFcPNBSZYL\"]},\"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol\":{\"keccak256\":\"0xa9c83adb0239b86c0ff6251a03bc70115470c7ae10eb99276d6dd33636054b36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95a0109837bdffe887b6568b7f9bbde2b20cfd0c4db638805cf61ada5743b24d\",\"dweb:/ipfs/QmYH2erMtqiEYjRznWnc6NbBbwxvy6ArE45jtXYEyWi3Bc\"]},\"@erc725/smart-contracts/contracts/errors.sol\":{\"keccak256\":\"0xaafdb4370450b8874224b3c0b2b712149da97a50c9a47f56e4b654aa57eb87c5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a4e40b0f64613e5bbd62575facc72d2bcad249595e9397b5bff063dc5a81e757\",\"dweb:/ipfs/QmXx5yDvPxWzKXFYK7HDAbSNDBKRskYLoDwgrThmAimzDL\"]},\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Constants.sol\":{\"keccak256\":\"0x6d4bb208587872ad563fef31655c44f7de03baa5b4a513910c0003aea0c04036\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://880c3b21e2090a14e7bba94ac5c8d4633e8a81d93c6f619454167a01dcc866d8\",\"dweb:/ipfs/QmZp6YVM4Eor5XtuXXqGRaPAJ3u5KCmLwuNRAGf4JY7sK1\"]},\"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Errors.sol\":{\"keccak256\":\"0x75a0159f76a3c5bf26b13aa404aca2f588ea41928eb1483683e29d2031fe5abf\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f1b93e7eb5a88a2f42a9dfa061ca5e93e7650cd9114010faa18faf0a5508f579\",\"dweb:/ipfs/QmXmLhf1ejsF7G1FZnvpTBRS9oQ9ZTuqCBRT1im3vAuUYW\"]},\"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Extendable.sol\":{\"keccak256\":\"0x5983e916a4cb604a45b585d7f745f5ac8bf69ef51fbc78cf8e70408e29e008c2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e1e9a7b8dc210030d35b4e2c3dbb7107f51c063256f7e6120997ed638f033db1\",\"dweb:/ipfs/QmRQgkaDnC9sAb9mZJtVgBsAR1xfmcTA2erCVUiyszy15o\"]},\"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/ILSP1UniversalReceiver.sol\":{\"keccak256\":\"0x5b8764a678dc9d6673eafa8ad0ee6053cdea30acb58015bdf9c93f9f1788b49b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0e26dcf5d66120b7a0895ddcaec92207e17c63344fca885d2b7e3fe953ec027c\",\"dweb:/ipfs/QmetAuz9etfz9BG9oPJCwMthnhfd8XvZYLBmMfrPNUm3qV\"]},\"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/LSP1Constants.sol\":{\"keccak256\":\"0x0f87fc38243fc70316e22814f5a79d9c0770a39f64077cbc6fb5fddfa1d4c23c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c7d83f054b71dfa5ca48a9a811e6a985ff6b38a9e5f4c220ea2ec3a322cce7cf\",\"dweb:/ipfs/QmaehpHpqc5dtRCm9BoU8vCY59AeEnmGvmmwPirVr47oGp\"]},\"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/LSP1Utils.sol\":{\"keccak256\":\"0x15fca4c3d6bfaec5d1a144762f1e160c6b82e7abb5e5c0ca8fcc5f4301b0c45e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ceb307c243e6439d5be18263f75c2ada73d70c5b0480dfd8b12315cacc81fa62\",\"dweb:/ipfs/QmVPwVhL6NAvUgAWQmV964tEHNWbXY6uej5VLpDorqBVhd\"]},\"@lukso/lsp-smart-contracts/contracts/LSP2ERC725YJSONSchema/LSP2Utils.sol\":{\"keccak256\":\"0x86ce8a85d12c79b76db5413b05b9bff16cd865b395efdc0e85b06b3b5e17219b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7ebb6d1152f88b459b9e8fc3ef6361a9fb9d03bfa994148e6b125a2ee4025487\",\"dweb:/ipfs/QmX18bCecAtrjqKTyCPqRrUuvVYSW1XZZJUgvjfYnqfmEH\"]},\"@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4Constants.sol\":{\"keccak256\":\"0xdf9b7c688d39a92cb3238136a9f56554245d5ae9b6568dcd6164d0e15c6f56c7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bb36a427cdfa0f394d2d78014f85152ab383499fc3c3d6285d4b801c656e7c3f\",\"dweb:/ipfs/QmZJehfeWKfHLyZLufhs9u4ZyVztGCUNWXzFgfZSU837vU\"]},\"@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadata.sol\":{\"keccak256\":\"0xd120529845267176d7658eb3b610fd9412012ce58cfde05a42f7fcee1c371dce\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4e2919d97ff39ae203dc57f53a7ae6a4f1dfe9354e564744ee3752771687b796\",\"dweb:/ipfs/QmbNwNCDnLcD4jrboPJhAMXVEiVGbagBteXM5sVByZ8A1h\"]},\"@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4DigitalAssetMetadataCore.sol\":{\"keccak256\":\"0xc442e52d34bb98acc1494675856b1f1d124af1375d8e23a9bfcc3b6c1865e1fc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://84254359ed929c1991136f9c3e934ddfa74cd85684de6c44cb70afa70d12f837\",\"dweb:/ipfs/QmWfmionUJJYyYDoeSQLGUHhou2sWxhWzwtU5GVjpumiSS\"]},\"@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4Errors.sol\":{\"keccak256\":\"0x3db7fd252ed02ce27686141125c3d65d3ff682a32601e1e8611becd9357a57b5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5aded62a160ed7f9860996004d1656e8592b3f97d478d8597f8ad6afbe4f34b7\",\"dweb:/ipfs/QmcnmLVt8cmz1iRNaX5c6iNYckRgUXGz8YkjHW9T1KNB5A\"]},\"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/ILSP8IdentifiableDigitalAsset.sol\":{\"keccak256\":\"0x8fc467010034709cda26f5b4c82a8297a3d3b70e53f76c15f17169196748671f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ae752bf829815fa6a31afc29ad5c392835172cf9ad13ad33f50a382ac65a9302\",\"dweb:/ipfs/QmZc3ojmFoVX5nGtRG3JNMoRsM7AAE12iFy9XCJT2a2iBC\"]},\"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8Constants.sol\":{\"keccak256\":\"0x2372e7ec422a13ce3e7968e5fbb081b67816b5de974bd76ec61cfed787abbe1b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6d147e2f290ed60e36e9187dc7cce7d7ee1a62eee1c25c761e6090d88e3fa383\",\"dweb:/ipfs/Qmf9HEYCCjx2xBopvq7WhhtjvL9AEihvNcZ512751Wg6LN\"]},\"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8Errors.sol\":{\"keccak256\":\"0x0dfadefc7641592a03a9ab346c3b994e467add0905849d921a2587f8044d7539\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://eaab1079fb0779921eb8abff8c811adc838c3a0bf82e6d1536dc2211cf8e197c\",\"dweb:/ipfs/QmaPYBRREJmru8iTVTw2mnEePyV8heUFGE7sVx41r5EzNb\"]},\"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAsset.sol\":{\"keccak256\":\"0x952bfb5f946c62f0f9e0b2b3e606434fdb4ee3b9e101ab0de6d7cda1315825a8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b1cd070d5f069d579ae4f4bd8f17af70646beb5d0773fa273e671f2c75e0e605\",\"dweb:/ipfs/QmSqMK4QcEJNfGxbx42w7B3hCWifzGygvYGpMto8yh9aPM\"]},\"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8IdentifiableDigitalAssetCore.sol\":{\"keccak256\":\"0x3a735a26db14a7b51a064558df64b140d0a781a6534b3dca1609b01099cccb51\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3e8900d7844a1e249b7cac32036c5fe3ce0eed90af249705ef9dd4027f17849c\",\"dweb:/ipfs/QmaiDJaFjocmG99yJyXj3kX1kj9Rh2YaMM9WfsL1Hmz9QH\"]},\"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/presets/ILSP8Mintable.sol\":{\"keccak256\":\"0x499210945e303045882e430a5dcc5d3c7b11b19c8ebc7669e60f1c596dfd6aee\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a8c51df853d003fbf7d5018fe664238ce8435720ec278f7a0ff8c44eb6071409\",\"dweb:/ipfs/QmVEcwpgCzvecaYqbaYVpK8xT4HbTGQwpYvnSn3WnMSc7K\"]},\"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/presets/LSP8Mintable.sol\":{\"keccak256\":\"0x01876a91326cab63ff4d69e6d2b2122b4d4a339fa9d309d8f3c459862e19064f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fcb9dad88dfa7e052d769968d416e37e41be39eb62e6392cf730537bc3f5a461\",\"dweb:/ipfs/QmdLsY5X1zpAHNmRAX4Tf2jVdf8kG3c5u4oBQHLEa8tiSW\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0x5a08ad61f4e82b8a3323562661a86fb10b10190848073fdc13d4ac43710ffba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f7bb74cf88fd88daa34e118bc6e363381d05044f34f391d39a10c0c9dac3ebd\",\"dweb:/ipfs/QmNbQ3v8v4zuDtg7VeLAbdhAm3tCzUodNoDZZ8ekmCHWZX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]},\"contracts/BasicLSP8.sol\":{\"keccak256\":\"0x9c0215008bc0773ae90c84441abea10fda5a9b4c544aa10d814a93ce5d52dbaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d8ffc0b6d5ddb7322a8cd333068e74073af932f4f5bda44e44d0866aefc3ba8\",\"dweb:/ipfs/QmSkAdPdYf8sfMVFBJab92vDuUK3zr8xUhmtDoaJEPV3VY\"]}},\"version\":1}"}}}}}