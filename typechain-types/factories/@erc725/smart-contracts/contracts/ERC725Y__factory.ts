/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { PayableOverrides } from "../../../../common";
import type {
  ERC725Y,
  ERC725YInterface,
} from "../../../../@erc725/smart-contracts/contracts/ERC725Y";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ERC725Y_DataKeysValuesEmptyArray",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC725Y_DataKeysValuesLengthMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC725Y_MsgValueDisallowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "callerAddress",
        type: "address",
      },
    ],
    name: "OwnableCallerNotTheOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnableCannotSetZeroAddressAsOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "dataKey",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "dataValue",
        type: "bytes",
      },
    ],
    name: "DataChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dataKey",
        type: "bytes32",
      },
    ],
    name: "getData",
    outputs: [
      {
        internalType: "bytes",
        name: "dataValue",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "dataKeys",
        type: "bytes32[]",
      },
    ],
    name: "getDataBatch",
    outputs: [
      {
        internalType: "bytes[]",
        name: "dataValues",
        type: "bytes[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dataKey",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "dataValue",
        type: "bytes",
      },
    ],
    name: "setData",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "dataKeys",
        type: "bytes32[]",
      },
      {
        internalType: "bytes[]",
        name: "dataValues",
        type: "bytes[]",
      },
    ],
    name: "setDataBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052604051610b76380380610b76833981016040819052610022916100cf565b6001600160a01b038116610049576040516306b620db60e21b815260040160405180910390fd5b61005c8161006260201b6103ba1760201c565b506100ff565b6000546001600160a01b038281169116146100cc57600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0383161790555b50565b6000602082840312156100e157600080fd5b81516001600160a01b03811681146100f857600080fd5b9392505050565b610a688061010e6000396000f3fe60806040526004361061006b5760003560e01c806301ffc9a71461007057806354f6127f146100a5578063715018a6146100d25780637f23690c146100e95780638da5cb5b146100fc578063979024211461011e578063dedff9c614610131578063f2fde38b1461015e575b600080fd5b34801561007c57600080fd5b5061009061008b366004610605565b61017e565b60405190151581526020015b60405180910390f35b3480156100b157600080fd5b506100c56100c0366004610636565b6101b5565b60405161009c919061069c565b3480156100de57600080fd5b506100e76101c0565b005b6100e76100f7366004610764565b6101d4565b34801561010857600080fd5b50610111610209565b60405161009c91906107aa565b6100e761012c36600461084c565b610218565b34801561013d57600080fd5b5061015161014c366004610920565b6102d5565b60405161009c919061095c565b34801561016a57600080fd5b506100e76101793660046109be565b61037f565b60006001600160e01b031982166318a6a9a560e21b14806101af57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606101af82610433565b6101c86104d5565b6101d260006103ba565b565b6101dc6104d5565b34156101fb5760405163f36ba73760e01b815260040160405180910390fd5b6102058282610510565b5050565b6000546001600160a01b031690565b6102206104d5565b341561023f5760405163f36ba73760e01b815260040160405180910390fd5b805182511461026157604051633bcc897960e01b815260040160405180910390fd5b8151610280576040516397da5f9560e01b815260040160405180910390fd5b60005b82518110156102d0576102c88382815181106102a1576102a16109e7565b60200260200101518383815181106102bb576102bb6109e7565b6020026020010151610510565b600101610283565b505050565b606081516001600160401b038111156102f0576102f06106af565b60405190808252806020026020018201604052801561032357816020015b606081526020019060019003908161030e5790505b50905060005b825181101561037957610354838281518110610347576103476109e7565b6020026020010151610433565b828281518110610366576103666109e7565b6020908102919091010152600101610329565b50919050565b6103876104d5565b6001600160a01b0381166103ae576040516306b620db60e21b815260040160405180910390fd5b6103b7816103ba565b50565b6103c2610209565b6001600160a01b0316816001600160a01b0316146103b757600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0383166001600160a01b031990911617905550565b6000818152600160205260409020805460609190610450906109fd565b80601f016020809104026020016040519081016040528092919081815260200182805461047c906109fd565b80156104c95780601f1061049e576101008083540402835291602001916104c9565b820191906000526020600020905b8154815290600101906020018083116104ac57829003601f168201915b50505050509050919050565b336104de610209565b6001600160a01b0316146101d2573360405163bf1169c560e01b815260040161050791906107aa565b60405180910390fd5b6000828152600160209081526040909120825161052f9284019061056c565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b282604051610560919061069c565b60405180910390a25050565b828054610578906109fd565b90600052602060002090601f01602090048101928261059a57600085556105e0565b82601f106105b357805160ff19168380011785556105e0565b828001600101855582156105e0579182015b828111156105e05782518255916020019190600101906105c5565b506105ec9291506105f0565b5090565b5b808211156105ec57600081556001016105f1565b60006020828403121561061757600080fd5b81356001600160e01b03198116811461062f57600080fd5b9392505050565b60006020828403121561064857600080fd5b5035919050565b6000815180845260005b8181101561067557602081850181015186830182015201610659565b81811115610687576000602083870101525b50601f01601f19169290920160200192915050565b60208152600061062f602083018461064f565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156106ed576106ed6106af565b604052919050565b600082601f83011261070657600080fd5b81356001600160401b0381111561071f5761071f6106af565b610732601f8201601f19166020016106c5565b81815284602083860101111561074757600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561077757600080fd5b8235915060208301356001600160401b0381111561079457600080fd5b6107a0858286016106f5565b9150509250929050565b6001600160a01b0391909116815260200190565b60006001600160401b038211156107d7576107d76106af565b5060051b60200190565b600082601f8301126107f257600080fd5b81356020610807610802836107be565b6106c5565b82815260059290921b8401810191818101908684111561082657600080fd5b8286015b84811015610841578035835291830191830161082a565b509695505050505050565b6000806040838503121561085f57600080fd5b82356001600160401b038082111561087657600080fd5b610882868387016107e1565b935060209150818501358181111561089957600080fd5b8501601f810187136108aa57600080fd5b80356108b8610802826107be565b81815260059190911b820184019084810190898311156108d757600080fd5b8584015b8381101561090f578035868111156108f35760008081fd5b6109018c89838901016106f5565b8452509186019186016108db565b508096505050505050509250929050565b60006020828403121561093257600080fd5b81356001600160401b0381111561094857600080fd5b610954848285016107e1565b949350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156109b157603f1988860301845261099f85835161064f565b94509285019290850190600101610983565b5092979650505050505050565b6000602082840312156109d057600080fd5b81356001600160a01b038116811461062f57600080fd5b634e487b7160e01b600052603260045260246000fd5b600181811c90821680610a1157607f821691505b6020821081141561037957634e487b7160e01b600052602260045260246000fdfea26469706673582212205330ffb47ad98d512aba68ec0d1e2c0cb1e01c89510e896cb3a76db3972391ae64736f6c634300080c0033";

type ERC725YConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC725YConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC725Y__factory extends ContractFactory {
  constructor(...args: ERC725YConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initialOwner, overrides || {});
  }
  override deploy(
    initialOwner: AddressLike,
    overrides?: PayableOverrides & { from?: string }
  ) {
    return super.deploy(initialOwner, overrides || {}) as Promise<
      ERC725Y & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC725Y__factory {
    return super.connect(runner) as ERC725Y__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC725YInterface {
    return new Interface(_abi) as ERC725YInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ERC725Y {
    return new Contract(address, _abi, runner) as unknown as ERC725Y;
  }
}
