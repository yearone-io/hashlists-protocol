/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../../../common";
import type {
  LSP8Mintable,
  LSP8MintableInterface,
} from "../../../../../../@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/presets/LSP8Mintable";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "newOwner_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "lsp4TokenType_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lsp8TokenIdFormat_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ERC725Y_DataKeysValuesEmptyArray",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC725Y_DataKeysValuesLengthMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC725Y_MsgValueDisallowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "storedData",
        type: "bytes",
      },
    ],
    name: "InvalidExtensionAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "InvalidFunctionSelector",
    type: "error",
  },
  {
    inputs: [],
    name: "LSP4TokenNameNotEditable",
    type: "error",
  },
  {
    inputs: [],
    name: "LSP4TokenSymbolNotEditable",
    type: "error",
  },
  {
    inputs: [],
    name: "LSP4TokenTypeNotEditable",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "callIndex",
        type: "uint256",
      },
    ],
    name: "LSP8BatchCallFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "LSP8CannotSendToAddressZero",
    type: "error",
  },
  {
    inputs: [],
    name: "LSP8CannotSendToSelf",
    type: "error",
  },
  {
    inputs: [],
    name: "LSP8CannotUseAddressZeroAsOperator",
    type: "error",
  },
  {
    inputs: [],
    name: "LSP8InvalidTransferBatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
    ],
    name: "LSP8NonExistentTokenId",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
    ],
    name: "LSP8NonExistingOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "LSP8NotTokenOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "LSP8NotTokenOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenReceiver",
        type: "address",
      },
    ],
    name: "LSP8NotifyTokenReceiverContractMissingLSP1Interface",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenReceiver",
        type: "address",
      },
    ],
    name: "LSP8NotifyTokenReceiverIsEOA",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
    ],
    name: "LSP8OperatorAlreadyAuthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "LSP8TokenContractCannotHoldValue",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
    ],
    name: "LSP8TokenIdAlreadyMinted",
    type: "error",
  },
  {
    inputs: [],
    name: "LSP8TokenIdFormatNotEditable",
    type: "error",
  },
  {
    inputs: [],
    name: "LSP8TokenIdsDataEmptyArray",
    type: "error",
  },
  {
    inputs: [],
    name: "LSP8TokenIdsDataLengthMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "LSP8TokenOwnerCannotBeOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "functionSelector",
        type: "bytes4",
      },
    ],
    name: "NoExtensionFoundForFunctionSelector",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "callerAddress",
        type: "address",
      },
    ],
    name: "OwnableCallerNotTheOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnableCannotSetZeroAddressAsOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "dataKey",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "dataValue",
        type: "bytes",
      },
    ],
    name: "DataChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "operatorNotificationData",
        type: "bytes",
      },
    ],
    name: "OperatorAuthorizationChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "notified",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "operatorNotificationData",
        type: "bytes",
      },
    ],
    name: "OperatorRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "dataKey",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "dataValue",
        type: "bytes",
      },
    ],
    name: "TokenIdDataChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "force",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "operatorNotificationData",
        type: "bytes",
      },
    ],
    name: "authorizeOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "batchCalls",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dataKey",
        type: "bytes32",
      },
    ],
    name: "getData",
    outputs: [
      {
        internalType: "bytes",
        name: "dataValue",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "dataKeys",
        type: "bytes32[]",
      },
    ],
    name: "getDataBatch",
    outputs: [
      {
        internalType: "bytes[]",
        name: "dataValues",
        type: "bytes[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "tokenIds",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32[]",
        name: "dataKeys",
        type: "bytes32[]",
      },
    ],
    name: "getDataBatchForTokenIds",
    outputs: [
      {
        internalType: "bytes[]",
        name: "dataValues",
        type: "bytes[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "dataKey",
        type: "bytes32",
      },
    ],
    name: "getDataForTokenId",
    outputs: [
      {
        internalType: "bytes",
        name: "dataValue",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
    ],
    name: "getOperatorsOf",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
    ],
    name: "isOperatorFor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "force",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "notify",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "operatorNotificationData",
        type: "bytes",
      },
    ],
    name: "revokeOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dataKey",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "dataValue",
        type: "bytes",
      },
    ],
    name: "setData",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "dataKeys",
        type: "bytes32[]",
      },
      {
        internalType: "bytes[]",
        name: "dataValues",
        type: "bytes[]",
      },
    ],
    name: "setDataBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "tokenIds",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32[]",
        name: "dataKeys",
        type: "bytes32[]",
      },
      {
        internalType: "bytes[]",
        name: "dataValues",
        type: "bytes[]",
      },
    ],
    name: "setDataBatchForTokenIds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "dataKey",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "dataValue",
        type: "bytes",
      },
    ],
    name: "setDataForTokenId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
    ],
    name: "tokenIdsOf",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
    ],
    name: "tokenOwnerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "force",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "from",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "to",
        type: "address[]",
      },
      {
        internalType: "bytes32[]",
        name: "tokenId",
        type: "bytes32[]",
      },
      {
        internalType: "bool[]",
        name: "force",
        type: "bool[]",
      },
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "transferBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620030f8380380620030f88339810160408190526200003491620004ca565b848484848484848484816001600160a01b03811662000066576040516306b620db60e21b815260040160405180910390fd5b6200007c81620001ce60201b62000f0a1760201c565b50620000d37feafec4d89fa9619884b60000a4d96624a38f7ac2d8d9a604ecf07c12c77e480c60001b604051806040016040528060048152602001632936598960e21b8152506200023c60201b62000f831760201c565b620000fc6000805160206200309883398151915260001b856200023c60201b62000f831760201c565b62000125600080516020620030d883398151915260001b846200023c60201b62000f831760201c565b60408051602081018390526200016791600080516020620030b883398151915291016040516020818303038152906040526200023c60201b62000f831760201c565b50506040805160208101859052620001be93507ff675e9361af1c1664c1868cfa3eb97672d6b1a513aa5b81dec34c9ee330e818d9250016040516020818303038152906040526200029c60201b62000fdf1760201c565b50505050505050505050620005da565b6000546001600160a01b038281169116146200023957600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0383161790555b50565b600082815260016020908152604090912082516200025d928401906200034a565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b28260405162000290919062000568565b60405180910390a25050565b620002b38282620002b760201b62000fe51760201c565b5050565b60008051602062003098833981519152821415620002e8576040516385c169bd60e01b815260040160405180910390fd5b600080516020620030d88339815191528214156200031957604051630eceab6760e31b815260040160405180910390fd5b600080516020620030b88339815191528214156200023c57604051634ef6d7fb60e01b815260040160405180910390fd5b82805462000358906200059d565b90600052602060002090601f0160209004810192826200037c5760008555620003c7565b82601f106200039757805160ff1916838001178555620003c7565b82800160010185558215620003c7579182015b82811115620003c7578251825591602001919060010190620003aa565b50620003d5929150620003d9565b5090565b5b80821115620003d55760008155600101620003da565b634e487b7160e01b600052604160045260246000fd5b60005b838110156200042357818101518382015260200162000409565b8381111562000433576000848401525b50505050565b600082601f8301126200044b57600080fd5b81516001600160401b0380821115620004685762000468620003f0565b604051601f8301601f19908116603f01168101908282118183101715620004935762000493620003f0565b81604052838152866020858801011115620004ad57600080fd5b620004c084602083016020890162000406565b9695505050505050565b600080600080600060a08688031215620004e357600080fd5b85516001600160401b0380821115620004fb57600080fd5b6200050989838a0162000439565b965060208801519150808211156200052057600080fd5b506200052f8882890162000439565b604088015190955090506001600160a01b03811681146200054f57600080fd5b6060870151608090970151959894975095949392505050565b60208152600082518060208401526200058981604085016020870162000406565b601f01601f19169190910160400192915050565b600181811c90821680620005b257607f821691505b60208210811415620005d457634e487b7160e01b600052602260045260246000fd5b50919050565b612aae80620005ea6000396000f3fe60806040526004361061011f5760003560e01c806301ffc9a7146101b857806316e023b3146101ed57806318160ddd1461021a5780631d26fce614610239578063217b2270146102665780632a3654a41461029357806349a6078d146102b3578063511b6952146102e057806354f6127f146103025780636963d4381461032257806370a0823114610342578063715018a6146103625780637e87632c146103775780637f23690c1461039757806386a10ddd146103aa5780638da5cb5b146103ca57806397902421146103df578063a3b261f2146103f2578063af255b611461041f578063be9f0e6f1461043f578063d6c1407c1461045f578063db8c96631461047f578063dedff9c61461049f578063f2fde38b146104bf57610177565b36610177573461015e5760405163e5099ee360e01b81526004016101559060208082526004908201526000604082015260600190565b60405180910390fd5b6040516330fa4a2160e11b815260040160405180910390fd5b600036606060048210156101a257828260405163e5099ee360e01b8152600401610155929190611dcc565b6101ac83836104df565b80519350602001915050f35b3480156101c457600080fd5b506101d86101d3366004611dfb565b6105d5565b60405190151581526020015b60405180910390f35b3480156101f957600080fd5b5061020d610208366004611e25565b610609565b6040516101e49190611e9f565b34801561022657600080fd5b506002545b6040519081526020016101e4565b34801561024557600080fd5b50610259610254366004611f86565b61061c565b6040516101e49190611fe9565b34801561027257600080fd5b5061028661028136600461204b565b6106e1565b6040516101e49190612064565b34801561029f57600080fd5b506101d86102ae366004612094565b61071a565b3480156102bf57600080fd5b506102d36102ce36600461204b565b61072f565b6040516101e491906120be565b3480156102ec57600080fd5b506103006102fb366004612193565b610751565b005b34801561030e57600080fd5b5061020d61031d36600461204b565b610795565b34801561032e57600080fd5b5061025961033d36600461220b565b6107a0565b34801561034e57600080fd5b5061022b61035d36600461227f565b6108cf565b34801561036e57600080fd5b506103006108f0565b34801561038357600080fd5b506103006103923660046123dd565b610904565b6103006103a53660046124a1565b6109f3565b3480156103b657600080fd5b506103006103c53660046124dd565b610a28565b3480156103d657600080fd5b50610286610b83565b6103006103ed366004612533565b610b92565b3480156103fe57600080fd5b5061041261040d36600461227f565b610c4f565b6040516101e4919061258c565b34801561042b57600080fd5b5061030061043a3660046125c4565b610c73565b34801561044b57600080fd5b5061030061045a36600461262b565b610c8d565b34801561046b57600080fd5b5061030061047a3660046126a8565b610d4f565b34801561048b57600080fd5b5061030061049a3660046125c4565b610d62565b3480156104ab57600080fd5b506102596104ba3660046126e1565b610e25565b3480156104cb57600080fd5b506103006104da36600461227f565b610ecf565b606060006104f86000356001600160e01b0319166110a8565b5090506001600160a01b038116610530576000356001600160e01b03191660405163bb370b2b60e01b81526004016101559190612715565b600080826001600160a01b03163487873334604051602001610555949392919061272a565b60408051601f198184030181529082905261056f91612755565b60006040518083038185875af1925050503d80600081146105ac576040519150601f19603f3d011682016040523d82523d6000602084013e6105b1565b606091505b509150915081156105c65792506105cf915050565b80518060208301fd5b92915050565b60006001600160e01b03198216631d138b8360e11b14806105fa57506105fa82611126565b806105cf57506105cf8261114b565b60606106158383611182565b9392505050565b606082516001600160401b0381111561063757610637611eb2565b60405190808252806020026020018201604052801561066a57816020015b60608152602001906001900390816106555790505b50905060005b83518110156106da576106b584828151811061068e5761068e612771565b60200260200101518483815181106106a8576106a8612771565b6020026020010151611182565b8282815181106106c7576106c7612771565b6020908102919091010152600101610670565b5092915050565b6000818152600360205260408120546001600160a01b0316806105cf57604051635747cd1b60e11b815260048101849052602401610155565b600061072582611259565b6106158383611282565b606061073a82611259565b60008281526005602052604090206105cf906112bf565b61075b3384611282565b61078157604051631294d2a960e01b815260048101849052336024820152604401610155565b61078e85858585856112cc565b5050505050565b60606105cf82611463565b6060816001600160401b038111156107ba576107ba611eb2565b6040519080825280602002602001820160405280156107ed57816020015b60608152602001906001900390816107d85790505b50905060005b828110156106da576000803086868581811061081157610811612771565b90506020028101906108239190612787565b6040516108319291906127d4565b600060405180830381855af49150503d806000811461086c576040519150601f19603f3d011682016040523d82523d6000602084013e610871565b606091505b5091509150816108a75780511561088b5780518082602001fd5b60405163234eb81960e01b815260048101849052602401610155565b808484815181106108ba576108ba612771565b602090810291909101015250506001016107f3565b6001600160a01b03811660009081526004602052604081206105cf90611505565b6108f861150f565b6109026000610f0a565b565b8451845181141580610917575083518114155b80610923575082518114155b8061092f575081518114155b1561094d576040516393a8311960e01b815260040160405180910390fd5b60005b818110156109ea576109e287828151811061096d5761096d612771565b602002602001015187838151811061098757610987612771565b60200260200101518784815181106109a1576109a1612771565b60200260200101518785815181106109bb576109bb612771565b60200260200101518786815181106109d5576109d5612771565b6020026020010151610751565b600101610950565b50505050505050565b6109fb61150f565b3415610a1a5760405163f36ba73760e01b815260040160405180910390fd5b610a248282611541565b5050565b6000610a33836106e1565b90506001600160a01b0381163314610a6457808333604051632d938f5160e11b8152600401610155939291906127e4565b6001600160a01b038416610a8b57604051639577b8b360e01b815260040160405180910390fd5b836001600160a01b0316816001600160a01b03161415610abe576040516344fed6b160e11b815260040160405180910390fd5b6000838152600560205260408120610ad6908661158c565b905080610afa5784846040516314ec4d6d60e31b8152600401610155929190612807565b83826001600160a01b0316866001600160a01b03167f1b1b58aa2ec0cec2228b2d37124556d41f5a1f7b12f089171f896cc23667121586604051610b3e9190611e9f565b60405180910390a460003385600186604051602001610b609493929190612820565b6040516020818303038152906040529050610b7b86826115a1565b505050505050565b6000546001600160a01b031690565b610b9a61150f565b3415610bb95760405163f36ba73760e01b815260040160405180910390fd5b8051825114610bdb57604051633bcc897960e01b815260040160405180910390fd5b8151610bfa576040516397da5f9560e01b815260040160405180910390fd5b60005b8251811015610c4a57610c42838281518110610c1b57610c1b612771565b6020026020010151838381518110610c3557610c35612771565b6020026020010151611541565b600101610bfd565b505050565b6001600160a01b03811660009081526004602052604090206060906105cf906112bf565b610c7b61150f565b610c87848484846115cc565b50505050565b610c9561150f565b81518351141580610ca857508051825114155b15610cc6576040516317d38eff60e11b815260040160405180910390fd5b8251610ce5576040516380c9830560e01b815260040160405180910390fd5b60005b8351811015610c8757610d47848281518110610d0657610d06612771565b6020026020010151848381518110610d2057610d20612771565b6020026020010151848481518110610d3a57610d3a612771565b60200260200101516116e2565b600101610ce8565b610d5761150f565b610c4a8383836116e2565b6000610d6d846106e1565b90506001600160a01b0381163314610d9e57808433604051632d938f5160e11b8152600401610155939291906127e4565b6001600160a01b038516610dc557604051639577b8b360e01b815260040160405180910390fd5b846001600160a01b0316816001600160a01b03161415610df8576040516344fed6b160e11b815260040160405180910390fd5b610e058582868686611779565b821561078e5760003385600085604051602001610b609493929190612820565b606081516001600160401b03811115610e4057610e40611eb2565b604051908082528060200260200182016040528015610e7357816020015b6060815260200190600190039081610e5e5790505b50905060005b8251811015610ec957610ea4838281518110610e9757610e97612771565b6020026020010151611463565b828281518110610eb657610eb6612771565b6020908102919091010152600101610e79565b50919050565b610ed761150f565b6001600160a01b038116610efe576040516306b620db60e21b815260040160405180910390fd5b610f0781610f0a565b50565b610f12610b83565b6001600160a01b0316816001600160a01b031614610f0757600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0383166001600160a01b031990911617905550565b60008281526001602090815260409091208251610fa292840190611d33565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b282604051610fd39190611e9f565b60405180910390a25050565b610a2482825b7fdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af1821415611026576040516385c169bd60e01b815260040160405180910390fd5b7f2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db93275682141561106757604051630eceab6760e31b815260040160405180910390fd5b7fe0261fa95db2eb3b5439bd033cda66d56b96f92f243a8228fd87550ed7bdfdb3821415610f8357604051634ef6d7fb60e01b815260040160405180910390fd5b600080806110cd696773c5a04a6d4300884b60b11b6001600160e01b0319861661180b565b905060006110da82611463565b905080516014141580156110ee5750805115155b1561110e57806040516342bfe79f60e01b81526004016101559190611e9f565b61111781612859565b60601c95600195509350505050565b60006001600160e01b0319821663a918fa6b60e01b14806105cf57506105cf8261185f565b60008061115e6301ffc9a760e01b6110a8565b5090506001600160a01b0381166111785750600092915050565b6106158184611894565b60606001600084846040516020016111a4929190918252602082015260400190565b60405160208183030381529060405280519060200120815260200190815260200160002080546111d390612890565b80601f01602080910402602001604051908101604052809291908181526020018280546111ff90612890565b801561124c5780601f106112215761010080835404028352916020019161124c565b820191906000526020600020905b81548152906001019060200180831161122f57829003601f168201915b5050505050905092915050565b61126281611928565b610f0757604051635747cd1b60e11b815260048101829052602401610155565b600061128d826106e1565b6001600160a01b0316836001600160a01b03161480610615575060008281526005602052604090206106159084611945565b606060006106158361195a565b836001600160a01b0316856001600160a01b031614156112ff57604051635d67d6c160e01b815260040160405180910390fd5b600061130a846106e1565b9050856001600160a01b0316816001600160a01b03161461134457808487604051632d938f5160e11b8152600401610155939291906127e4565b6001600160a01b03851661136b576040516324ecef4d60e01b815260040160405180910390fd5b611374846106e1565b905061138086856119b5565b6001600160a01b03861660009081526004602052604090206113a29085611a0d565b506001600160a01b03851660009081526004602052604090206113c59085611a19565b506000848152600360205260409081902080546001600160a01b0319166001600160a01b038881169182179092559151869291891690600080516020612a598339815191529061141a903390899089906128c5565b60405180910390a46000338787878660405160200161143d9594939291906128fa565b60405160208183030381529060405290506114588782611a25565b6109ea868583611a50565b600081815260016020526040902080546060919061148090612890565b80601f01602080910402602001604051908101604052809291908181526020018280546114ac90612890565b80156114f95780601f106114ce576101008083540402835291602001916114f9565b820191906000526020600020905b8154815290600101906020018083116114dc57829003601f168201915b50505050509050919050565b60006105cf825490565b33611518610b83565b6001600160a01b031614610902573360405163bf1169c560e01b81526004016101559190612064565b7ff675e9361af1c1664c1868cfa3eb97672d6b1a513aa5b81dec34c9ee330e818d82141561158257604051631b32400560e11b815260040160405180910390fd5b610a248282610fdf565b6000610615836001600160a01b038416611b46565b610a24827f8a1c15a8799f71b547e08e2bcb2e85257e81b0a07eee2ce6712549eef1f0097083611b90565b6001600160a01b0384166115f3576040516324ecef4d60e01b815260040160405180910390fd5b6115fc83611928565b1561161d576040516334c7b51160e01b815260048101849052602401610155565b60026000815461162c9061294b565b909155506001600160a01b03841660009081526004602052604090206116529084611a19565b5060008381526003602052604080822080546001600160a01b0319166001600160a01b0388169081179091559051859290600080516020612a59833981519152906116a2903390889088906128c5565b60405180910390a460003360008686856040516020016116c69594939291906128fa565b604051602081830303815290604052905061078e858483611a50565b80600160008585604051602001611703929190918252602082015260400190565b604051602081830303815290604052805190602001208152602001908152602001600020908051906020019061173a929190611d33565b5081837fa6e4251f855f750545fe414f120db91c76b88def14d120969e5bb2d3f05debbb8360405161176c9190611e9f565b60405180910390a3505050565b60008381526005602052604081206117919087611bdd565b9050806117b55785846040516312a8c6a360e21b8152600401610155929190612807565b83856001600160a01b0316876001600160a01b03167fc78cd419d6136f9f1c1c6aec1d3fae098cffaf8bc86314a8f2685e32fe574e3c86866040516117fb929190612966565b60405180910390a4505050505050565b604080516001600160b01b0319841660208201526000602a82018190526001600160601b03198416602c8301529182910160405160208183030381529060405290508061185790612981565b949350505050565b60006001600160e01b031982166318a6a9a560e21b14806105cf57506301ffc9a760e01b6001600160e01b03198316146105cf565b6000806301ffc9a760e01b836040516024016118b09190612715565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b03838183161783525050505090506000806000602060008551602087018a617530fa92503d91506000519050828015611911575060208210155b801561191d5750600081115b979650505050505050565b6000908152600360205260409020546001600160a01b0316151590565b6000610615836001600160a01b038416611bf2565b6060816000018054806020026020016040519081016040528092919081815260200182805480156114f957602002820191906000526020600020905b8154815260200190600101908083116119965750505050509050919050565b6000818152600560205260408120906119cd82611505565b90506000805b82811015610b7b576119e6846000611c0a565b9150611a05828787600060405180602001604052806000815250611779565b6001016119d3565b60006106158383611c16565b60006106158383611b46565b610a24827fb23eae7e6d1564b295b4c3e3be402d9a2f0776c57bdf365903496f6fa481ab0083611b90565b611a6183631aed5a8560e21b611894565b15611afb57604051631aed5a8560e21b81526001600160a01b03841690636bb56a1490611ab4907f0b084a55ebf70fd3c06fd755269dac2212c4d3f0f4d09079780bfa50c1b2984d9085906004016129a5565b6000604051808303816000875af1158015611ad3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c8791908101906129be565b81610c4a576001600160a01b0383163b15611b2b5782604051634349776d60e01b81526004016101559190612064565b82604051630317313760e01b81526004016101559190612064565b6000611b528383611bf2565b611b88575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556105cf565b5060006105cf565b611baa6001600160a01b038416631aed5a8560e21b611894565b15610c4a57604051631aed5a8560e21b81526001600160a01b03841690636bb56a1490611ab490859085906004016129a5565b6000610615836001600160a01b038416611c16565b60009081526001919091016020526040902054151590565b60006106158383611d09565b60008181526001830160205260408120548015611cff576000611c3a600183612a2b565b8554909150600090611c4e90600190612a2b565b9050818114611cb3576000866000018281548110611c6e57611c6e612771565b9060005260206000200154905080876000018481548110611c9157611c91612771565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611cc457611cc4612a42565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506105cf565b60009150506105cf565b6000826000018281548110611d2057611d20612771565b9060005260206000200154905092915050565b828054611d3f90612890565b90600052602060002090601f016020900481019282611d615760008555611da7565b82601f10611d7a57805160ff1916838001178555611da7565b82800160010185558215611da7579182015b82811115611da7578251825591602001919060010190611d8c565b50611db3929150611db7565b5090565b5b80821115611db35760008155600101611db8565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b600060208284031215611e0d57600080fd5b81356001600160e01b03198116811461061557600080fd5b60008060408385031215611e3857600080fd5b50508035926020909101359150565b60005b83811015611e62578181015183820152602001611e4a565b83811115610c875750506000910152565b60008151808452611e8b816020860160208601611e47565b601f01601f19169290920160200192915050565b6020815260006106156020830184611e73565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715611ef057611ef0611eb2565b604052919050565b60006001600160401b03821115611f1157611f11611eb2565b5060051b60200190565b600082601f830112611f2c57600080fd5b81356020611f41611f3c83611ef8565b611ec8565b82815260059290921b84018101918181019086841115611f6057600080fd5b8286015b84811015611f7b5780358352918301918301611f64565b509695505050505050565b60008060408385031215611f9957600080fd5b82356001600160401b0380821115611fb057600080fd5b611fbc86838701611f1b565b93506020850135915080821115611fd257600080fd5b50611fdf85828601611f1b565b9150509250929050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561203e57603f1988860301845261202c858351611e73565b94509285019290850190600101612010565b5092979650505050505050565b60006020828403121561205d57600080fd5b5035919050565b6001600160a01b0391909116815260200190565b80356001600160a01b038116811461208f57600080fd5b919050565b600080604083850312156120a757600080fd5b6120b083612078565b946020939093013593505050565b6020808252825182820181905260009190848201906040850190845b818110156120ff5783516001600160a01b0316835292840192918401916001016120da565b50909695505050505050565b8035801515811461208f57600080fd5b60006001600160401b0382111561213457612134611eb2565b50601f01601f191660200190565b600082601f83011261215357600080fd5b8135612161611f3c8261211b565b81815284602083860101111561217657600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a086880312156121ab57600080fd5b6121b486612078565b94506121c260208701612078565b9350604086013592506121d76060870161210b565b915060808601356001600160401b038111156121f257600080fd5b6121fe88828901612142565b9150509295509295909350565b6000806020838503121561221e57600080fd5b82356001600160401b038082111561223557600080fd5b818501915085601f83011261224957600080fd5b81358181111561225857600080fd5b8660208260051b850101111561226d57600080fd5b60209290920196919550909350505050565b60006020828403121561229157600080fd5b61061582612078565b600082601f8301126122ab57600080fd5b813560206122bb611f3c83611ef8565b82815260059290921b840181019181810190868411156122da57600080fd5b8286015b84811015611f7b576122ef81612078565b83529183019183016122de565b600082601f83011261230d57600080fd5b8135602061231d611f3c83611ef8565b82815260059290921b8401810191818101908684111561233c57600080fd5b8286015b84811015611f7b576123518161210b565b8352918301918301612340565b600082601f83011261236f57600080fd5b8135602061237f611f3c83611ef8565b82815260059290921b8401810191818101908684111561239e57600080fd5b8286015b84811015611f7b5780356001600160401b038111156123c15760008081fd5b6123cf8986838b0101612142565b8452509183019183016123a2565b600080600080600060a086880312156123f557600080fd5b85356001600160401b038082111561240c57600080fd5b61241889838a0161229a565b9650602088013591508082111561242e57600080fd5b61243a89838a0161229a565b9550604088013591508082111561245057600080fd5b61245c89838a01611f1b565b9450606088013591508082111561247257600080fd5b61247e89838a016122fc565b9350608088013591508082111561249457600080fd5b506121fe8882890161235e565b600080604083850312156124b457600080fd5b8235915060208301356001600160401b038111156124d157600080fd5b611fdf85828601612142565b6000806000606084860312156124f257600080fd5b6124fb84612078565b92506020840135915060408401356001600160401b0381111561251d57600080fd5b61252986828701612142565b9150509250925092565b6000806040838503121561254657600080fd5b82356001600160401b038082111561255d57600080fd5b61256986838701611f1b565b9350602085013591508082111561257f57600080fd5b50611fdf8582860161235e565b6020808252825182820181905260009190848201906040850190845b818110156120ff578351835292840192918401916001016125a8565b600080600080608085870312156125da57600080fd5b6125e385612078565b9350602085013592506125f86040860161210b565b915060608501356001600160401b0381111561261357600080fd5b61261f87828801612142565b91505092959194509250565b60008060006060848603121561264057600080fd5b83356001600160401b038082111561265757600080fd5b61266387838801611f1b565b9450602086013591508082111561267957600080fd5b61268587838801611f1b565b9350604086013591508082111561269b57600080fd5b506125298682870161235e565b6000806000606084860312156126bd57600080fd5b833592506020840135915060408401356001600160401b0381111561251d57600080fd5b6000602082840312156126f357600080fd5b81356001600160401b0381111561270957600080fd5b61185784828501611f1b565b6001600160e01b031991909116815260200190565b8385823760609290921b6001600160601b031916919092019081526014810191909152603401919050565b60008251612767818460208701611e47565b9190910192915050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261279e57600080fd5b8301803591506001600160401b038211156127b857600080fd5b6020019150368190038213156127cd57600080fd5b9250929050565b8183823760009101908152919050565b6001600160a01b0393841681526020810192909252909116604082015260600190565b6001600160a01b03929092168252602082015260400190565b60018060a01b0385168152836020820152821515604082015260806060820152600061284f6080830184611e73565b9695505050505050565b805160208201516001600160601b031980821692919060148310156128885780818460140360031b1b83161693505b505050919050565b600181811c908216806128a457607f821691505b60208210811415610ec957634e487b7160e01b600052602260045260246000fd5b6001600160a01b038416815282151560208201526060604082018190526000906128f190830184611e73565b95945050505050565b6001600160a01b0386811682528581166020830152841660408201526060810183905260a06080820181905260009061191d90830184611e73565b634e487b7160e01b600052601160045260246000fd5b600060001982141561295f5761295f612935565b5060010190565b82151581526040602082015260006118576040830184611e73565b80516020808301519190811015610ec95760001960209190910360031b1b16919050565b8281526040602082015260006118576040830184611e73565b6000602082840312156129d057600080fd5b81516001600160401b038111156129e657600080fd5b8201601f810184136129f757600080fd5b8051612a05611f3c8261211b565b818152856020838501011115612a1a57600080fd5b6128f1826020830160208601611e47565b600082821015612a3d57612a3d612935565b500390565b634e487b7160e01b600052603160045260246000fdfeb333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bfa26469706673582212203ec12b5d3968edb51c7ccd8e7417891839fdd26d3701546d89f0b02b6228c95264736f6c634300080c0033deba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af1e0261fa95db2eb3b5439bd033cda66d56b96f92f243a8228fd87550ed7bdfdb32f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db932756";

type LSP8MintableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LSP8MintableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LSP8Mintable__factory extends ContractFactory {
  constructor(...args: LSP8MintableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name_: string,
    symbol_: string,
    newOwner_: AddressLike,
    lsp4TokenType_: BigNumberish,
    lsp8TokenIdFormat_: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      name_,
      symbol_,
      newOwner_,
      lsp4TokenType_,
      lsp8TokenIdFormat_,
      overrides || {}
    );
  }
  override deploy(
    name_: string,
    symbol_: string,
    newOwner_: AddressLike,
    lsp4TokenType_: BigNumberish,
    lsp8TokenIdFormat_: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      name_,
      symbol_,
      newOwner_,
      lsp4TokenType_,
      lsp8TokenIdFormat_,
      overrides || {}
    ) as Promise<
      LSP8Mintable & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LSP8Mintable__factory {
    return super.connect(runner) as LSP8Mintable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LSP8MintableInterface {
    return new Interface(_abi) as LSP8MintableInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): LSP8Mintable {
    return new Contract(address, _abi, runner) as unknown as LSP8Mintable;
  }
}
